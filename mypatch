diff --git a/floppy/Makefile b/floppy/Makefile
index 3d53855..a4a1af8 100644
--- a/floppy/Makefile
+++ b/floppy/Makefile
@@ -1,7 +1,7 @@
 all: test
 
 test: test.c
-	gcc -static -o test test.c
+	gcc -Wall -static -o test test.c
 
 clean:
 	rm -f test
diff --git a/floppy/prinfo.h b/floppy/prinfo.h
new file mode 100644
index 0000000..ca38bf2
--- /dev/null
+++ b/floppy/prinfo.h
@@ -0,0 +1,22 @@
+#ifndef _PRINFO_H
+#define _PRINFO_H
+
+struct prinfo {
+	long state;                  /* current state of process */
+	pid_t pid;                   /* process id (input) */
+	pid_t parent_pid;            /* process id of parent */
+	pid_t youngest_child_pid;    /* process id of youngest child */
+	pid_t younger_sibling_pid;   /* pid of the oldest among younger siblings */
+	pid_t older_sibling_pid;     /* pid of the youngest among older siblings */
+	unsigned long start_time;    /* process start time */
+	unsigned long user_time;     /* CPU time spent in user mode */
+	unsigned long sys_time;      /* CPU time spent in system mode */
+	unsigned long cutime;        /* total user time of children */
+	unsigned long cstime;        /* total system time of children */
+	long uid;                    /* user id of process owner */
+	char comm[16];               /* name of program executed */
+	unsigned long signal;        /* The set of pending signals */
+	unsigned long num_open_fds;  /* Number of open file descriptors */
+};
+
+#endif /* _PRINFO_H */
diff --git a/floppy/test b/floppy/test
new file mode 100755
index 0000000..68e18ca
Binary files /dev/null and b/floppy/test differ
diff --git a/floppy/test.c b/floppy/test.c
index 39c8a5c..e854e29 100644
--- a/floppy/test.c
+++ b/floppy/test.c
@@ -1,30 +1,429 @@
+/*
+ * Authors: Wolf Honore (whonore), Peter Finn (pfinn2)
+ * Assignment: MP 2 CSC 456 Fall 2015
+ *
+ * Description:
+ *   This program tests the prinfo system call by checking values in the prinfo
+ *   struct against expected values.
+ */
+
+#include <fcntl.h>
+#include <signal.h>
 #include <stdio.h>
 #include <stdlib.h>
+#include <unistd.h>
 
 #include <linux/unistd.h>
+#include <sys/stat.h>
 #include <sys/syscall.h>
+#include <sys/types.h>
+#include <sys/wait.h>
+
+#include "prinfo.h"
+
+int test1();
+int test2();
+int test3();
+int test4();
+int test5();
+void print_info(struct prinfo *info);
 
 /*
  * Function: main()
  *
  * Description:
- *   Entry point for this program.
+ *   This function is the entry point for the test program. It calls each of
+ *   the test functions and prints the results. It then calls the prinfo
+ *   system call and prints all of the fields.
  *
  * Inputs:
- *   argc - The number of argument with which this program was executed.
- *   argv - Array of pointers to strings containing the command-line arguments. 
+ *   argc - The number of command line arguments.
+ *   argv - The list of command line arguments.
+ *
+ * Outputs: None
  *
  * Return value:
- *   0 - This program terminated normally.
+ *   0 - Normal exit.
+ *   Any other number - Error.
  */
-int
-main (int argc, char ** argv) {
-	/* Print a friendly message */
-	printf ("Hello from User Space!\n");
+int main(int argc, char **argv) {
+	char* result = test1() ? "succeeded" : "failed";
+	printf("Test 1 %s!\n", result);
+	result = test2() ? "succeeded" : "failed";
+	printf("Test 2 %s!\n", result);
+	result = test3() ? "succeeded" : "failed";
+	printf("Test 3 %s!\n", result);
+	result = test4() ? "succeeded" : "failed";
+	printf("Test 4 %s!\n", result);
+	result = test5() ? "succeeded" : "failed";
+	printf("Test 5 %s!\n", result);
+
+	struct prinfo *info = (struct prinfo *) malloc(sizeof(struct prinfo));
+	info->pid = getpid();
+
+	if (syscall(181, info) < 0) {
+		perror("prinfo failed");
+		return 0;
+	}
 
-	/* Call our new system call */
-	syscall (181, NULL);
+	print_info(info);
+	printf("Run ps now.\n");
+	sleep(100);
 
-	/* Exit the program */
 	return 0;
 }
+
+/*
+ * Function: test1()
+ *
+ * Description:
+ *   This function tests for accuracy of PIDs between parents and children.
+ *
+ * Inputs: None
+ *
+ * Outputs: None
+ *
+ * Return value:
+ *   0 - This test failed, and so prinfo recognition of parent/child
+ *       relationships is buggy.
+ *   1 - This test succeeded.
+ */
+int test1() {
+	pid_t fork_result1, fork_result2;
+	pid_t grandparent_pid = getpid();
+	pid_t parent_pid = -1;
+	pid_t grandchild_pid = -1;
+	int waitstatus1, waitstatus2;
+
+	if ((fork_result1 = fork()) == 0) {
+		if ((fork_result2 = fork()) == 0) {
+			/* Within grandchild */
+			sleep(10);
+			exit(0);
+		}
+		else if (fork_result2 > 0) {
+			/* Within parent */
+			struct prinfo *grandparent_info, *parent_info, *grandchild_info;
+			parent_pid = getpid();
+			grandchild_pid = fork_result2;
+
+			grandparent_info = (struct prinfo *) malloc(sizeof(struct prinfo));
+			parent_info = (struct prinfo *) malloc(sizeof(struct prinfo));
+			grandchild_info = (struct prinfo *) malloc(sizeof(struct prinfo));
+
+			grandparent_info->pid = grandparent_pid;
+			parent_info->pid = parent_pid;
+			grandchild_info->pid = grandchild_pid;
+
+			if (syscall(181, grandparent_info) < 0) {
+				perror("prinfo failed");
+				return 0;
+			}
+			if (syscall(181, parent_info) < 0) {
+				perror("prinfo failed");
+				return 0;
+			}
+			if (syscall(181, grandchild_info) < 0) {
+				perror("prinfo failed");
+				return 0;
+			}
+
+			/* Grandparent's youngest child and grandchild's parent should be parent */
+			int ret1 = (grandparent_info->youngest_child_pid == parent_info->pid
+						&& parent_info->pid == grandchild_info->parent_pid);
+
+			/* Parent's parent should be grandparent */
+			int ret2 = (parent_info->parent_pid == grandparent_info->pid);
+
+			/* Parent's youngest child should be grandchild */
+			int ret3 = (grandchild_info->pid == parent_info->youngest_child_pid);
+
+			if (waitpid(fork_result2, &waitstatus1, 0) == -1)
+				return 0;
+			return (ret1 && ret2 && ret3);
+		}
+		else {
+			perror("fork failed");
+			return 0;
+		}
+
+		exit(0);
+	}
+	else if (fork_result1 > 0) {
+		/* Within grandparent */
+		if (waitpid(fork_result1, &waitstatus2, 0) == -1)
+			exit(0);
+	}
+	else {
+		perror("fork failed");
+		return 0;
+	}
+
+	exit(0);
+}
+
+/*
+ * Function: test2()
+ *
+ * Description:
+ *   This function tests for correctness of sibling relationships between
+ *   processes.
+ *
+ * Inputs: None
+ *
+ * Outputs: None
+ *
+ * Return value:
+ *   0 - The test failed, and prinfo recognition of sibling relationships is
+ *       buggy.
+ *   1 - The test succeeded.
+ */
+int test2() {
+	struct prinfo *older, *younger;
+	pid_t fork_result1, fork_result2;
+	int waitstatus;
+
+	older = (struct prinfo *) malloc(sizeof(struct prinfo));
+	younger = (struct prinfo *) malloc(sizeof(struct prinfo));
+
+	/* Spawn two child processes */
+	if ((fork_result1 = fork()) > 0) {
+		if ((fork_result2 = fork()) > 0) {
+			older->pid = fork_result1;
+			younger->pid = fork_result2;
+
+			if (syscall(181, older) < 0) {
+				perror("prinfo failed");
+				return 0;
+			}
+			if (syscall(181, younger) < 0) {
+			   perror("prinfo failed");
+			   return 0;
+			}
+
+			if (waitpid(fork_result1, &waitstatus, 0) == -1) return 0;
+			if (waitpid(fork_result2, &waitstatus, 0) == -1) return 0;
+		}
+		else if (fork_result2 == 0) {
+			sleep(10);
+			exit(0);
+		}
+		else {
+			perror("fork failed!");
+			return 0;
+		}
+	}
+	else if (fork_result1 == 0) {
+		sleep(10);
+		exit(0);
+	}
+	else {
+		perror("fork failed");
+		return 0;
+	}
+
+	/* Older's younger sibling should be younger and vice-versa */
+	int ret1 = ((older->younger_sibling_pid == younger->pid)
+				&& (younger->older_sibling_pid == older->pid));
+
+	/* Older should be older than younger */
+	int ret2 = (older->start_time < younger->start_time);
+
+	return (ret1 && ret2);
+}
+
+/*
+ * Function: test3()
+ *
+ * Description:
+ *   This function tests to check the accuracy of prinfo's open FD count.
+ *
+ * Inputs: None
+ *
+ * Outputs: None
+ *
+ * Return value:
+ *   0 - The test failed, and prinfo's num_open_fds field is buggy.
+ *   1 - The test succeeded.
+ */
+int test3() {
+	int fd1 = open("fd1.txt", O_RDWR | O_CREAT);
+	int fd2 = open("fd2.txt", O_RDWR | O_CREAT);
+	if (fd1 == -1 || fd2 == -1) {
+		fprintf(stderr, "Error opening files\n");
+		return 0;
+	}
+
+	struct prinfo *info;
+	info = (struct prinfo *) malloc(sizeof(struct prinfo));
+
+	info->pid = getpid();
+
+	if (syscall(181, info) < 0) {
+		perror("prinfo failed");
+		return 0;
+	}
+
+	int ret1 = (info->num_open_fds == 5);
+	if (close(fd2) < 0) {
+		perror("close failed");
+		return 0;
+	}
+
+	if (syscall(181, info) < 0) {
+		perror("prinfo failed");
+		return 0;
+	}
+
+	int ret2 = (info->num_open_fds == 4);
+	if (close(fd1) < 0) {
+		perror("close failed");
+		return 0;
+	}
+
+	if (syscall(181, info) < 0) {
+		perror("prinfo failed");
+		return 0;
+	}
+
+	int ret3 = (info->num_open_fds == 3);
+
+	return (ret1 && ret2 && ret3);
+}
+
+/*
+ * Function: test4()
+ *
+ * Description:
+ *   This function tests that pending signals are correctly stored in the
+ *   prinfo struct.
+ *
+ * Inputs: None
+ *
+ * Outputs: None
+ *
+ * Return value:
+ *   0 - This test failed, and so the pending signal set is not correctly
+ *       stored.
+ *   1 - This test succeeded.
+ */
+int test4() {
+	struct prinfo *info;
+
+	info = (struct prinfo *) malloc(sizeof(struct prinfo));
+
+	info->pid = getpid();
+
+	/* Blocks SIGUSR2 and then sends SIGUSR2 to this process */
+	sigset_t block;
+	sigemptyset(&block);
+	sigaddset(&block, SIGUSR2);
+	sigprocmask(SIG_BLOCK, &block, NULL);
+	if (kill(info->pid, SIGUSR2) < 0) {
+		perror("kill failed");
+		return 0;
+	}
+
+	if (syscall(181, info) < 0) {
+		perror("prinfo failed");
+		return 0;
+	}
+
+	/* Print out list of signals */
+	int i;
+	int max = 8 * sizeof(unsigned long);
+
+	printf("The list of pending signals:\n");
+	for (i = max - 1; i >= 0; i--) {
+		printf("%d", (int) ((info->signal >> i) & 0x01));
+	}
+	printf("\n");
+
+	return (info->signal = 2 << (SIGUSR2 - 1));
+}
+
+/*
+ * Function: test5()
+ *
+ * Description:
+ *   This function tests that the prinfo system call correctly handles invalid
+ *   inputs.
+ *
+ * Inputs: None
+ *
+ * Outputs: None
+ *
+ * Return value:
+ *   0 - The test failed, and prinfo does not return an error code for invalid
+ *       input.
+ *   1 - The test succeeded.
+ */
+int test5() {
+	/* Test passing NULL struct */
+	int ret1 = (syscall(181, NULL) < 0);
+
+	/* Test unset PID */
+	struct prinfo *info;
+	info = (struct prinfo *) malloc(sizeof(struct prinfo));
+	int ret2 = (syscall(181, info) < 0);
+
+	/* Test invalid PID */
+	info->pid = -1;
+	int ret3 = (syscall(181, info) < 0);
+
+	return (ret1 && ret2 && ret3);
+}
+
+void print_info(struct prinfo *info) {
+	printf("\nProcess information:\n");
+
+	char *state_text;
+	switch (info->state) {
+		case 0:
+			state_text = "Running";
+			break;
+		case 1:
+			state_text = "Interruptible";
+			break;
+		case 2:
+			state_text = "Uninterruptible";
+			break;
+		case 4:
+			state_text = "Stopped";
+			break;
+		case 8:
+			state_text = "Traced";
+			break;
+		case 64:
+			state_text = "Dead";
+			break;
+		case 128:
+			state_text = "Wakekill";
+			break;
+		case 256:
+			state_text = "Waking";
+			break;
+		case 512:
+			state_text = "Parked";
+			break;
+		default:
+			state_text = "Unknown";
+	}
+	printf("State: %ld (%s)\n", info->state, state_text);
+
+	printf("PID: %d\nParent PID: %d\n", info->pid, info->parent_pid);
+	printf("Youngest child PID: %d\n", info->youngest_child_pid);
+	printf("Younger sibling PID: %d\nOlder sibling PID: %d\n",
+		   info->younger_sibling_pid, info->older_sibling_pid);
+
+	printf("Start time (nsec): %lu\nUser time (nsec): %lu\nSystem time (nsec): %lu\n",
+		   info->start_time, info->user_time, info->sys_time);
+	printf("Total child user time (nsec): %lu\nTotal child system time (nsec): %lu\n",
+		   info->cutime, info->cstime);
+
+	printf("User ID: %ld\nProgram name: %s\n", info->uid, info->comm);
+
+	printf("Pending signals list: %lu\nOpen file descriptors: %lu\n",
+		   info->signal, info->num_open_fds);
+}
+
diff --git a/install/bin/make b/install/bin/make
new file mode 100755
index 0000000..f831101
Binary files /dev/null and b/install/bin/make differ
diff --git a/install/bin/qemu-ga b/install/bin/qemu-ga
new file mode 100755
index 0000000..6b56c37
Binary files /dev/null and b/install/bin/qemu-ga differ
diff --git a/install/bin/qemu-i386 b/install/bin/qemu-i386
new file mode 100755
index 0000000..9a6026e
Binary files /dev/null and b/install/bin/qemu-i386 differ
diff --git a/install/bin/qemu-img b/install/bin/qemu-img
new file mode 100755
index 0000000..1913048
Binary files /dev/null and b/install/bin/qemu-img differ
diff --git a/install/bin/qemu-io b/install/bin/qemu-io
new file mode 100755
index 0000000..91231be
Binary files /dev/null and b/install/bin/qemu-io differ
diff --git a/install/bin/qemu-nbd b/install/bin/qemu-nbd
new file mode 100755
index 0000000..af8e89c
Binary files /dev/null and b/install/bin/qemu-nbd differ
diff --git a/install/bin/qemu-system-i386 b/install/bin/qemu-system-i386
new file mode 100755
index 0000000..cb4551d
Binary files /dev/null and b/install/bin/qemu-system-i386 differ
diff --git a/install/bin/qemu-system-x86_64 b/install/bin/qemu-system-x86_64
new file mode 100755
index 0000000..3c97b1a
Binary files /dev/null and b/install/bin/qemu-system-x86_64 differ
diff --git a/install/bin/qemu-x86_64 b/install/bin/qemu-x86_64
new file mode 100755
index 0000000..0ec28c7
Binary files /dev/null and b/install/bin/qemu-x86_64 differ
diff --git a/install/bin/vscclient b/install/bin/vscclient
new file mode 100755
index 0000000..4111082
Binary files /dev/null and b/install/bin/vscclient differ
diff --git a/install/etc/qemu/target-x86_64.conf b/install/etc/qemu/target-x86_64.conf
new file mode 100644
index 0000000..e69de29
diff --git a/install/include/cacard/cac.h b/install/include/cacard/cac.h
new file mode 100644
index 0000000..d24a2a8
--- /dev/null
+++ b/install/include/cacard/cac.h
@@ -0,0 +1,31 @@
+/*
+ * defines the entry point for the cac card. Only used by cac.c anc
+ * vcard_emul_type.c
+ *
+ * This work is licensed under the terms of the GNU LGPL, version 2.1 or later.
+ * See the COPYING.LIB file in the top-level directory.
+ */
+#ifndef CAC_H
+#define CAC_H 1
+#include "vcard.h"
+#include "vreader.h"
+
+#define CAC_GET_PROPERTIES  0x56
+#define CAC_GET_ACR         0x4c
+#define CAC_READ_BUFFER     0x52
+#define CAC_UPDATE_BUFFER   0x58
+#define CAC_SIGN_DECRYPT    0x42
+#define CAC_GET_CERTIFICATE 0x36
+
+/*
+ * Initialize the cac card. This is the only public function in this file. All
+ * the rest are connected through function pointers.
+ */
+VCardStatus cac_card_init(VReader *reader, VCard *card, const char *params,
+              unsigned char * const *cert, int cert_len[],
+              VCardKey *key[] /* adopt the keys*/,
+              int cert_count);
+
+/* not yet implemented */
+VCardStatus cac_is_cac_card(VReader *reader);
+#endif
diff --git a/install/include/cacard/card_7816.h b/install/include/cacard/card_7816.h
new file mode 100644
index 0000000..4a01993
--- /dev/null
+++ b/install/include/cacard/card_7816.h
@@ -0,0 +1,62 @@
+/*
+ * Implement the 7816 portion of the card spec
+ *
+ * This work is licensed under the terms of the GNU LGPL, version 2.1 or later.
+ * See the COPYING.LIB file in the top-level directory.
+ */
+#ifndef CARD_7816_H
+#define CARD_7816_H  1
+
+#include "card_7816t.h"
+#include "vcardt.h"
+
+/*
+ * constructors for VCardResponse's
+ */
+/* response from a return buffer and a status */
+VCardResponse *vcard_response_new(VCard *card, unsigned char *buf, int len,
+                                  int Le, vcard_7816_status_t status);
+/* response from a return buffer and status bytes */
+VCardResponse *vcard_response_new_bytes(VCard *card, unsigned char *buf,
+                                        int len, int Le,
+                                        unsigned char sw1, unsigned char sw2);
+/* response from just status bytes */
+VCardResponse *vcard_response_new_status_bytes(unsigned char sw1,
+                                               unsigned char sw2);
+/* response from just status: NOTE this cannot fail, it will always return a
+ * valid response, if it can't allocate memory, the response will be
+ * VCARD7816_STATUS_EXC_ERROR_MEMORY_FAILURE */
+VCardResponse *vcard_make_response(vcard_7816_status_t status);
+
+/* create a raw response (status has already been encoded */
+VCardResponse *vcard_response_new_data(unsigned char *buf, int len);
+
+
+
+
+/*
+ * destructor for VCardResponse.
+ *  Can be called with a NULL response
+ */
+void vcard_response_delete(VCardResponse *response);
+
+/*
+ * constructor for VCardAPDU
+ */
+VCardAPDU *vcard_apdu_new(unsigned char *raw_apdu, int len,
+                          unsigned short *status);
+
+/*
+ * destructor for VCardAPDU
+ *  Can be called with a NULL apdu
+ */
+void vcard_apdu_delete(VCardAPDU *apdu);
+
+/*
+ * APDU processing starts here. This routes the card processing stuff to the
+ * right location. Always returns a valid response.
+ */
+VCardStatus vcard_process_apdu(VCard *card, VCardAPDU *apdu,
+                               VCardResponse **response);
+
+#endif
diff --git a/install/include/cacard/card_7816t.h b/install/include/cacard/card_7816t.h
new file mode 100644
index 0000000..8eef0ce
--- /dev/null
+++ b/install/include/cacard/card_7816t.h
@@ -0,0 +1,165 @@
+/*
+ * Implement the 7816 portion of the card spec
+ *
+ * This work is licensed under the terms of the GNU LGPL, version 2.1 or later.
+ * See the COPYING.LIB file in the top-level directory.
+ */
+#ifndef CARD_7816T_H
+#define CARD_7816T_H 1
+
+typedef unsigned short vcard_7816_status_t;
+
+struct VCardResponseStruct {
+    unsigned char *b_data;
+    vcard_7816_status_t b_status;
+    unsigned char b_sw1;
+    unsigned char b_sw2;
+    int b_len;
+    int b_total_len;
+    enum VCardResponseBufferType {
+        VCARD_MALLOC,
+        VCARD_MALLOC_DATA,
+        VCARD_MALLOC_STRUCT,
+        VCARD_STATIC
+    } b_type;
+};
+
+#define VCARD_RESPONSE_NEW_STATIC_STATUS(stat) \
+static const VCardResponse VCardResponse##stat = \
+        {(unsigned char *)&VCardResponse##stat.b_sw1, (stat), ((stat) >> 8), \
+         ((stat) & 0xff), 0, 2, VCARD_STATIC};
+
+#define VCARD_RESPONSE_NEW_STATIC_STATUS_BYTES(sw1, sw2) \
+static const VCardResponse VCARDResponse##sw1 = \
+        {(unsigned char *)&VCardResponse##name.b_sw1, ((sw1) << 8 | (sw2)), \
+         (sw1), (sw2), 0, 2, VCARD_STATIC};
+
+/* cast away the const, callers need may need to 'free' the
+ * result, and const implies that they don't */
+#define VCARD_RESPONSE_GET_STATIC(name) \
+        ((VCardResponse *)(&VCardResponse##name))
+
+typedef enum {
+    VCARD_7816_ISO,
+    VCARD_7816_RFU,
+    VCARD_7816_PTS,
+    VCARD_7816_PROPRIETARY
+} VCardAPDUType;
+
+
+/*
+ * 7816 header. All APDU's have this header.
+ * They must be laid out in this order.
+ */
+struct VCardAPDUHeader {
+    unsigned char ah_cla;
+    unsigned char ah_ins;
+    unsigned char ah_p1;
+    unsigned char ah_p2;
+    unsigned char ah_Le;
+    unsigned char ah_body[1]; /* indefinate length */
+};
+
+/*
+ * 7816 APDU structure. The raw bytes are stored in the union and can be
+ * accessed directly through u.data (which is aliased as a_data).
+ *
+ * Names of the fields match the 7816 documentation.
+ */
+struct VCardAPDUStruct {
+    int a_len;                /* length of the whole buffer, including header */
+    int a_Lc;                 /* 7816 Lc (parameter length) value */
+    int a_Le;                 /* 7816 Le (expected result length) value */
+    unsigned char *a_body;    /* pointer to the parameter */
+    int a_channel;            /* decoded channel */
+    int a_secure_messaging;   /* decoded secure messaging type */
+    int a_type;               /* decoded type from cla (top nibble of class) */
+    VCardAPDUType a_gen_type; /* generic type (7816, PROPRIETARY, RFU, etc) */
+    union {
+        struct VCardAPDUHeader *header;
+        unsigned char   *data;
+    } u;
+/* give the subfields a unified look */
+#define a_header u.header
+#define a_data u.data
+#define a_cla a_header->ah_cla /* class */
+#define a_ins a_header->ah_ins /* instruction */
+#define a_p1 a_header->ah_p1   /* parameter 1 */
+#define a_p2 a_header->ah_p2   /* parameter 2 */
+};
+
+/* 7816 status codes */
+#define VCARD7816_STATUS_SUCCESS                              0x9000
+#define VCARD7816_STATUS_WARNING                              0x6200
+#define VCARD7816_STATUS_WARNING_RET_CORUPT                   0x6281
+#define VCARD7816_STATUS_WARNING_BUF_END_BEFORE_LE            0x6282
+#define VCARD7816_STATUS_WARNING_INVALID_FILE_SELECTED        0x6283
+#define VCARD7816_STATUS_WARNING_FCI_FORMAT_INVALID           0x6284
+#define VCARD7816_STATUS_WARNING_CHANGE                       0x6300
+#define VCARD7816_STATUS_WARNING_FILE_FILLED                  0x6381
+#define VCARD7816_STATUS_EXC_ERROR                            0x6400
+#define VCARD7816_STATUS_EXC_ERROR_CHANGE                     0x6500
+#define VCARD7816_STATUS_EXC_ERROR_MEMORY_FAILURE             0x6581
+#define VCARD7816_STATUS_ERROR_WRONG_LENGTH                   0x6700
+#define VCARD7816_STATUS_ERROR_CLA_NOT_SUPPORTED              0x6800
+#define VCARD7816_STATUS_ERROR_CHANNEL_NOT_SUPPORTED          0x6881
+#define VCARD7816_STATUS_ERROR_SECURE_NOT_SUPPORTED           0x6882
+#define VCARD7816_STATUS_ERROR_COMMAND_NOT_SUPPORTED          0x6900
+#define VCARD7816_STATUS_ERROR_COMMAND_INCOMPATIBLE_WITH_FILE 0x6981
+#define VCARD7816_STATUS_ERROR_SECURITY_NOT_SATISFIED         0x6982
+#define VCARD7816_STATUS_ERROR_AUTHENTICATION_BLOCKED         0x6983
+#define VCARD7816_STATUS_ERROR_DATA_INVALID                   0x6984
+#define VCARD7816_STATUS_ERROR_CONDITION_NOT_SATISFIED        0x6985
+#define VCARD7816_STATUS_ERROR_DATA_NO_EF                     0x6986
+#define VCARD7816_STATUS_ERROR_SM_OBJECT_MISSING              0x6987
+#define VCARD7816_STATUS_ERROR_SM_OBJECT_INCORRECT            0x6988
+#define VCARD7816_STATUS_ERROR_WRONG_PARAMETERS               0x6a00
+#define VCARD7816_STATUS_ERROR_WRONG_PARAMETERS_IN_DATA       0x6a80
+#define VCARD7816_STATUS_ERROR_FUNCTION_NOT_SUPPORTED         0x6a81
+#define VCARD7816_STATUS_ERROR_FILE_NOT_FOUND                 0x6a82
+#define VCARD7816_STATUS_ERROR_RECORD_NOT_FOUND               0x6a83
+#define VCARD7816_STATUS_ERROR_NO_SPACE_FOR_FILE              0x6a84
+#define VCARD7816_STATUS_ERROR_LC_TLV_INCONSISTENT            0x6a85
+#define VCARD7816_STATUS_ERROR_P1_P2_INCORRECT                0x6a86
+#define VCARD7816_STATUS_ERROR_LC_P1_P2_INCONSISTENT          0x6a87
+#define VCARD7816_STATUS_ERROR_DATA_NOT_FOUND                 0x6a88
+#define VCARD7816_STATUS_ERROR_WRONG_PARAMETERS_2             0x6b00
+#define VCARD7816_STATUS_ERROR_INS_CODE_INVALID               0x6d00
+#define VCARD7816_STATUS_ERROR_CLA_INVALID                    0x6e00
+#define VCARD7816_STATUS_ERROR_GENERAL                        0x6f00
+/* 7816 sw1 codes */
+#define VCARD7816_SW1_SUCCESS               0x90
+#define VCARD7816_SW1_RESPONSE_BYTES        0x61
+#define VCARD7816_SW1_WARNING               0x62
+#define VCARD7816_SW1_WARNING_CHANGE        0x63
+#define VCARD7816_SW1_EXC_ERROR             0x64
+#define VCARD7816_SW1_EXC_ERROR_CHANGE      0x65
+#define VCARD7816_SW1_ERROR_WRONG_LENGTH    0x67
+#define VCARD7816_SW1_CLA_ERROR             0x68
+#define VCARD7816_SW1_COMMAND_ERROR         0x69
+#define VCARD7816_SW1_P1_P2_ERROR           0x6a
+#define VCARD7816_SW1_LE_ERROR              0x6c
+#define VCARD7816_SW1_INS_ERROR             0x6d
+#define VCARD7816_SW1_CLA_NOT_SUPPORTED     0x6e
+
+/* 7816 Instructions */
+#define VCARD7816_INS_MANAGE_CHANNEL        0x70
+#define VCARD7816_INS_EXTERNAL_AUTHENTICATE 0x82
+#define VCARD7816_INS_GET_CHALLENGE         0x84
+#define VCARD7816_INS_INTERNAL_AUTHENTICATE 0x88
+#define VCARD7816_INS_ERASE_BINARY          0x0e
+#define VCARD7816_INS_READ_BINARY           0xb0
+#define VCARD7816_INS_WRITE_BINARY          0xd0
+#define VCARD7816_INS_UPDATE_BINARY         0xd6
+#define VCARD7816_INS_READ_RECORD           0xb2
+#define VCARD7816_INS_WRITE_RECORD          0xd2
+#define VCARD7816_INS_UPDATE_RECORD         0xdc
+#define VCARD7816_INS_APPEND_RECORD         0xe2
+#define VCARD7816_INS_ENVELOPE              0xc2
+#define VCARD7816_INS_PUT_DATA              0xda
+#define VCARD7816_INS_GET_DATA              0xca
+#define VCARD7816_INS_SELECT_FILE           0xa4
+#define VCARD7816_INS_VERIFY                0x20
+#define VCARD7816_INS_GET_RESPONSE          0xc0
+
+#endif
diff --git a/install/include/cacard/eventt.h b/install/include/cacard/eventt.h
new file mode 100644
index 0000000..0dc7bd4
--- /dev/null
+++ b/install/include/cacard/eventt.h
@@ -0,0 +1,29 @@
+/*
+ * This work is licensed under the terms of the GNU LGPL, version 2.1 or later.
+ * See the COPYING.LIB file in the top-level directory.
+ */
+
+#ifndef EVENTT_H
+#define EVENTT_H 1
+#include "vreadert.h"
+#include "vcardt.h"
+
+typedef struct VEventStruct VEvent;
+
+typedef enum {
+    VEVENT_READER_INSERT,
+    VEVENT_READER_REMOVE,
+    VEVENT_CARD_INSERT,
+    VEVENT_CARD_REMOVE,
+    VEVENT_LAST,
+} VEventType;
+
+struct VEventStruct {
+    VEvent *next;
+    VEventType type;
+    VReader *reader;
+    VCard *card;
+};
+#endif
+
+
diff --git a/install/include/cacard/vcard.h b/install/include/cacard/vcard.h
new file mode 100644
index 0000000..47dc703
--- /dev/null
+++ b/install/include/cacard/vcard.h
@@ -0,0 +1,86 @@
+/*
+ * This work is licensed under the terms of the GNU LGPL, version 2.1 or later.
+ * See the COPYING.LIB file in the top-level directory.
+ */
+#ifndef VCARD_H
+#define VCARD_H 1
+
+#include "vcardt.h"
+
+/*
+ * response buffer constructors and destructors.
+ *
+ * response buffers are used when we need to return more data than will fit in
+ * a normal APDU response (nominally 254 bytes).
+ */
+VCardBufferResponse *vcard_buffer_response_new(unsigned char *buffer, int size);
+void vcard_buffer_response_delete(VCardBufferResponse *buffer_response);
+
+
+/*
+ * clean up state on reset
+ */
+void vcard_reset(VCard *card, VCardPower power);
+
+/*
+ * applet utilities
+ */
+/*
+ * Constructor for a VCardApplet
+ */
+VCardApplet *vcard_new_applet(VCardProcessAPDU applet_process_function,
+                              VCardResetApplet applet_reset_function,
+                              unsigned char *aid, int aid_len);
+
+/*
+ * destructor for a VCardApplet
+ *  Can be called with a NULL applet
+ */
+void vcard_delete_applet(VCardApplet *applet);
+
+/* accessor - set the card type specific private data */
+void vcard_set_applet_private(VCardApplet *applet, VCardAppletPrivate *_private,
+                              VCardAppletPrivateFree private_free);
+
+/* set type of vcard */
+void vcard_set_type(VCard *card, VCardType type);
+
+/*
+ * utilities interacting with the current applet
+ */
+/* add a new applet to a card */
+VCardStatus vcard_add_applet(VCard *card, VCardApplet *applet);
+/* find the applet on the card with the given aid */
+VCardApplet *vcard_find_applet(VCard *card, unsigned char *aid, int aid_len);
+/* set the following applet to be current on the given channel */
+void vcard_select_applet(VCard *card, int channel, VCardApplet *applet);
+/* get the card type specific private data on the given channel */
+VCardAppletPrivate *vcard_get_current_applet_private(VCard *card, int channel);
+/* fetch the applet's id */
+unsigned char *vcard_applet_get_aid(VCardApplet *applet, int *aid_len);
+
+/* process the apdu for the current selected applet/file */
+VCardStatus vcard_process_applet_apdu(VCard *card, VCardAPDU *apdu,
+                                      VCardResponse **response);
+/*
+ * VCard utilities
+ */
+/* constructor */
+VCard *vcard_new(VCardEmul *_private, VCardEmulFree private_free);
+/* get a reference */
+VCard *vcard_reference(VCard *);
+/* destructor (reference counted) */
+void vcard_free(VCard *);
+/* get the atr from the card */
+void vcard_get_atr(VCard *card, unsigned char *atr, int *atr_len);
+void vcard_set_atr_func(VCard *card, VCardGetAtr vcard_get_atr);
+
+/* accessor functions for the response buffer */
+VCardBufferResponse *vcard_get_buffer_response(VCard *card);
+void vcard_set_buffer_response(VCard *card, VCardBufferResponse *buffer);
+/* accessor functions for the type */
+VCardType vcard_get_type(VCard *card);
+/* get the private data */
+VCardEmul *vcard_get_private(VCard *card);
+
+#endif
diff --git a/install/include/cacard/vcard_emul.h b/install/include/cacard/vcard_emul.h
new file mode 100644
index 0000000..963563f
--- /dev/null
+++ b/install/include/cacard/vcard_emul.h
@@ -0,0 +1,65 @@
+/*
+ * This is the actual card emulator.
+ *
+ * These functions can be implemented in different ways on different platforms
+ * using the underlying system primitives. For Linux it uses NSS, though direct
+ * to PKCS #11, openssl+pkcs11, or even gnu crypto libraries+pkcs #11 could be
+ * used. On Windows CAPI could be used.
+ *
+ * This work is licensed under the terms of the GNU LGPL, version 2.1 or later.
+ * See the COPYING.LIB file in the top-level directory.
+ */
+
+#ifndef VCARD_EMUL_H
+#define VCARD_EMUL_H 1
+
+#include "card_7816t.h"
+#include "vcard.h"
+#include "vcard_emul_type.h"
+
+/*
+ * types
+ */
+typedef enum {
+    VCARD_EMUL_OK = 0,
+    VCARD_EMUL_FAIL,
+    /* return values by vcard_emul_init */
+    VCARD_EMUL_INIT_ALREADY_INITED,
+} VCardEmulError;
+
+/* options are emul specific. call card_emul_parse_args to change a string
+ * To an options struct */
+typedef struct VCardEmulOptionsStruct VCardEmulOptions;
+
+/*
+ * Login functions
+ */
+/* return the number of login attempts still possible on the card. if unknown,
+ * return -1 */
+int vcard_emul_get_login_count(VCard *card);
+/* login into the card, return the 7816 status word (sw2 || sw1) */
+vcard_7816_status_t vcard_emul_login(VCard *card, unsigned char *pin,
+                                     int pin_len);
+
+/*
+ * key functions
+ */
+/* delete a key */
+void vcard_emul_delete_key(VCardKey *key);
+/* RSA sign/decrypt with the key, signature happens 'in place' */
+vcard_7816_status_t vcard_emul_rsa_op(VCard *card, VCardKey *key,
+                                  unsigned char *buffer, int buffer_size);
+
+void vcard_emul_reset(VCard *card, VCardPower power);
+void vcard_emul_get_atr(VCard *card, unsigned char *atr, int *atr_len);
+
+/* Re-insert of a card that has been removed by force removal */
+VCardEmulError vcard_emul_force_card_insert(VReader *vreader);
+/* Force a card removal even if the card is not physically removed */
+VCardEmulError vcard_emul_force_card_remove(VReader *vreader);
+
+VCardEmulOptions *vcard_emul_options(const char *args);
+VCardEmulError vcard_emul_init(const VCardEmulOptions *options);
+void vcard_emul_replay_insertion_events(void);
+void vcard_emul_usage(void);
+#endif
diff --git a/install/include/cacard/vcard_emul_type.h b/install/include/cacard/vcard_emul_type.h
new file mode 100644
index 0000000..0242f40
--- /dev/null
+++ b/install/include/cacard/vcard_emul_type.h
@@ -0,0 +1,32 @@
+/*
+ *  This header file abstracts the different card types. The goal is new card
+ *  types can easily be added by simply changing this file and
+ *  vcard_emul_type.c. It is currently not a requirement to dynamically add new
+ *  card types.
+ *
+ * This work is licensed under the terms of the GNU LGPL, version 2.1 or later.
+ * See the COPYING.LIB file in the top-level directory.
+ */
+
+#ifndef VCARD_EMUL_TYPE_H
+#define VCARD_EMUL_TYPE_H 1
+#include "vcardt.h"
+#include "vreadert.h"
+
+/*
+ * types
+ */
+typedef enum {
+     VCARD_EMUL_NONE = 0,
+     VCARD_EMUL_CAC,
+     VCARD_EMUL_PASSTHRU
+} VCardEmulType;
+
+/* functions used by the rest of the emulator */
+VCardStatus vcard_init(VReader *vreader, VCard *vcard, VCardEmulType type,
+                       const char *params, unsigned char * const *cert,
+                       int cert_len[], VCardKey *key[], int cert_count);
+VCardEmulType vcard_emul_type_select(VReader *vreader);
+VCardEmulType vcard_emul_type_from_string(const char *type_string);
+
+#endif
diff --git a/install/include/cacard/vcardt.h b/install/include/cacard/vcardt.h
new file mode 100644
index 0000000..795e265
--- /dev/null
+++ b/install/include/cacard/vcardt.h
@@ -0,0 +1,59 @@
+/*
+ * This work is licensed under the terms of the GNU LGPL, version 2.1 or later.
+ * See the COPYING.LIB file in the top-level directory.
+ */
+#ifndef VCARDT_H
+#define VCARDT_H 1
+
+/*
+ * these should come from some common spice header file
+ */
+#include <assert.h>
+#ifndef MIN
+#define MIN(x, y) ((x) > (y) ? (y) : (x))
+#define MAX(x, y) ((x) > (y) ? (x) : (y))
+#endif
+
+typedef struct VCardStruct VCard;
+typedef struct VCardAPDUStruct VCardAPDU;
+typedef struct VCardResponseStruct VCardResponse;
+typedef struct VCardBufferResponseStruct VCardBufferResponse;
+typedef struct VCardAppletStruct VCardApplet;
+typedef struct VCardAppletPrivateStruct VCardAppletPrivate;
+typedef struct VCardKeyStruct VCardKey;  /* opaque */
+typedef struct VCardEmulStruct VCardEmul;
+
+#define MAX_CHANNEL 4
+
+typedef enum {
+    VCARD_DONE,
+    VCARD_NEXT,
+    VCARD_FAIL
+} VCardStatus;
+
+typedef enum {
+    VCARD_FILE_SYSTEM,
+    VCARD_VM,
+    VCARD_DIRECT
+} VCardType;
+
+typedef enum {
+    VCARD_POWER_ON,
+    VCARD_POWER_OFF
+} VCardPower;
+
+typedef VCardStatus (*VCardProcessAPDU)(VCard *card, VCardAPDU *apdu,
+                                        VCardResponse **response);
+typedef VCardStatus (*VCardResetApplet)(VCard *card, int channel);
+typedef void (*VCardAppletPrivateFree) (VCardAppletPrivate *);
+typedef void (*VCardEmulFree) (VCardEmul *);
+typedef void (*VCardGetAtr) (VCard *, unsigned char *atr, int *atr_len);
+
+struct VCardBufferResponseStruct {
+    unsigned char *buffer;
+    int buffer_len;
+    unsigned char *current;
+    int len;
+};
+
+#endif
diff --git a/install/include/cacard/vcardt_internal.h b/install/include/cacard/vcardt_internal.h
new file mode 100644
index 0000000..e5c8d2d
--- /dev/null
+++ b/install/include/cacard/vcardt_internal.h
@@ -0,0 +1,6 @@
+#ifndef VCARDT_INTERNAL_H
+#define VCARDT_INTERNAL_H
+
+unsigned char *vcard_alloc_atr(const char *postfix, int *atr_len);
+
+#endif
diff --git a/install/include/cacard/vevent.h b/install/include/cacard/vevent.h
new file mode 100644
index 0000000..38c3482
--- /dev/null
+++ b/install/include/cacard/vevent.h
@@ -0,0 +1,27 @@
+/*
+ * This work is licensed under the terms of the GNU LGPL, version 2.1 or later.
+ * See the COPYING.LIB file in the top-level directory.
+ */
+#ifndef EVENT_H
+#define EVENT_H 1
+#include "eventt.h"
+#include "vreadert.h"
+#include "vcardt.h"
+
+VEvent *vevent_new(VEventType type, VReader *reader, VCard *card);
+void vevent_delete(VEvent *);
+
+/*
+ * VEvent queueing services
+ */
+void vevent_queue_vevent(VEvent *);
+void vevent_queue_init(void);
+
+/*
+ *  VEvent dequeing services
+ */
+VEvent *vevent_wait_next_vevent(void);
+VEvent *vevent_get_next_vevent(void);
+
+
+#endif
diff --git a/install/include/cacard/vreader.h b/install/include/cacard/vreader.h
new file mode 100644
index 0000000..ec20421
--- /dev/null
+++ b/install/include/cacard/vreader.h
@@ -0,0 +1,55 @@
+/*
+ * This work is licensed under the terms of the GNU LGPL, version 2.1 or later.
+ * See the COPYING.LIB file in the top-level directory.
+ */
+
+#ifndef VREADER_H
+#define VREADER_H 1
+
+#include "eventt.h"
+#include "vreadert.h"
+#include "vcardt.h"
+
+/*
+ * calls for reader front end
+ */
+VReaderStatus vreader_power_on(VReader *reader, unsigned char *atr, int *len);
+VReaderStatus vreader_power_off(VReader *reader);
+VReaderStatus vreader_xfr_bytes(VReader *reader, unsigned char *send_buf,
+                                int send_buf_len, unsigned char *receive_buf,
+                                int *receive_buf_len);
+
+/* constructor */
+VReader *vreader_new(const char *readerName, VReaderEmul *emul_private,
+                     VReaderEmulFree private_free);
+/* get a new reference to a reader */
+VReader *vreader_reference(VReader *reader);
+/* "destructor" (readers are reference counted) */
+void vreader_free(VReader *reader);
+
+/* accessors */
+VReaderEmul *vreader_get_private(VReader *);
+VReaderStatus vreader_card_is_present(VReader *reader);
+void vreader_queue_card_event(VReader *reader);
+const char *vreader_get_name(VReader *reader);
+vreader_id_t vreader_get_id(VReader *reader);
+VReaderStatus vreader_set_id(VReader *reader, vreader_id_t id);
+
+/* list operations */
+VReaderList *vreader_get_reader_list(void);
+void vreader_list_delete(VReaderList *list);
+VReader *vreader_list_get_reader(VReaderListEntry *entry);
+VReaderListEntry *vreader_list_get_first(VReaderList *list);
+VReaderListEntry *vreader_list_get_next(VReaderListEntry *list);
+VReader *vreader_get_reader_by_id(vreader_id_t id);
+VReader *vreader_get_reader_by_name(const char *name);
+
+/*
+ * list tools for vcard_emul
+ */
+void vreader_init(void);
+VReaderStatus vreader_add_reader(VReader *reader);
+VReaderStatus vreader_remove_reader(VReader *reader);
+VReaderStatus vreader_insert_card(VReader *reader, VCard *card);
+
+#endif
diff --git a/install/include/cacard/vreadert.h b/install/include/cacard/vreadert.h
new file mode 100644
index 0000000..f97e0a7
--- /dev/null
+++ b/install/include/cacard/vreadert.h
@@ -0,0 +1,24 @@
+/*
+ * This work is licensed under the terms of the GNU LGPL, version 2.1 or later.
+ * See the COPYING.LIB file in the top-level directory.
+ */
+
+#ifndef VREADERT_H
+#define VREADERT_H 1
+
+typedef enum {
+    VREADER_OK = 0,
+    VREADER_NO_CARD,
+    VREADER_OUT_OF_MEMORY
+} VReaderStatus;
+
+typedef unsigned int vreader_id_t;
+typedef struct VReaderStruct VReader;
+typedef struct VReaderListStruct VReaderList;
+typedef struct VReaderListEntryStruct VReaderListEntry;
+
+typedef struct VReaderEmulStruct VReaderEmul;
+typedef void (*VReaderEmulFree)(VReaderEmul *);
+
+#endif
+
diff --git a/install/include/cacard/vscard_common.h b/install/include/cacard/vscard_common.h
new file mode 100644
index 0000000..08f68e4
--- /dev/null
+++ b/install/include/cacard/vscard_common.h
@@ -0,0 +1,178 @@
+/* Virtual Smart Card protocol definition
+ *
+ * This protocol is between a host using virtual smart card readers,
+ * and a client providing the smart cards, perhaps by emulating them or by
+ * access to real cards.
+ *
+ * Definitions for this protocol:
+ *  Host   - user of the card
+ *  Client - owner of the card
+ *
+ * The current implementation passes the raw APDU's from 7816 and additionally
+ * contains messages to setup and teardown readers, handle insertion and
+ * removal of cards, negotiate the protocol via capabilities and provide
+ * for error responses.
+ *
+ * Copyright (c) 2011 Red Hat.
+ *
+ * This work is licensed under the terms of the GNU LGPL, version 2.1 or later.
+ * See the COPYING.LIB file in the top-level directory.
+ */
+
+#ifndef VSCARD_COMMON_H
+#define VSCARD_COMMON_H
+
+#include <stdint.h>
+
+#define VERSION_MAJOR_BITS 11
+#define VERSION_MIDDLE_BITS 11
+#define VERSION_MINOR_BITS 10
+
+#define MAKE_VERSION(major, middle, minor) \
+     ((major  << (VERSION_MINOR_BITS + VERSION_MIDDLE_BITS)) \
+      | (middle <<  VERSION_MINOR_BITS) \
+      | (minor))
+
+/*
+ * IMPORTANT NOTE on VERSION
+ *
+ * The version below MUST be changed whenever a change in this file is made.
+ *
+ * The last digit, the minor, is for bug fix changes only.
+ *
+ * The middle digit is for backward / forward compatible changes, updates
+ * to the existing messages, addition of fields.
+ *
+ * The major digit is for a breaking change of protocol, presumably
+ * something that cannot be accommodated with the existing protocol.
+ */
+
+#define VSCARD_VERSION MAKE_VERSION(0, 0, 2)
+
+typedef enum VSCMsgType {
+    VSC_Init = 1,
+    VSC_Error,
+    VSC_ReaderAdd,
+    VSC_ReaderRemove,
+    VSC_ATR,
+    VSC_CardRemove,
+    VSC_APDU,
+    VSC_Flush,
+    VSC_FlushComplete
+} VSCMsgType;
+
+typedef enum VSCErrorCode {
+    VSC_SUCCESS = 0,
+    VSC_GENERAL_ERROR = 1,
+    VSC_CANNOT_ADD_MORE_READERS,
+    VSC_CARD_ALREAY_INSERTED,
+} VSCErrorCode;
+
+#define VSCARD_UNDEFINED_READER_ID  0xffffffff
+#define VSCARD_MINIMAL_READER_ID    0
+
+#define VSCARD_MAGIC (*(uint32_t *)"VSCD")
+
+/*
+ * Header
+ * Each message starts with the header.
+ * type - message type
+ * reader_id - used by messages that are reader specific
+ * length - length of payload (not including header, i.e. zero for
+ *  messages containing empty payloads)
+ */
+typedef struct VSCMsgHeader {
+    uint32_t   type;
+    uint32_t   reader_id;
+    uint32_t   length;
+    uint8_t    data[0];
+} VSCMsgHeader;
+
+/*
+ * VSCMsgInit               Client <-> Host
+ * Client sends it on connection, with its own capabilities.
+ * Host replies with VSCMsgInit filling in its capabilities.
+ *
+ * It is not meant to be used for negotiation, i.e. sending more then
+ * once from any side, but could be used for that in the future.
+ */
+typedef struct VSCMsgInit {
+    uint32_t   magic;
+    uint32_t   version;
+    uint32_t   capabilities[1]; /* receiver must check length,
+                                   array may grow in the future*/
+} VSCMsgInit;
+
+/*
+ * VSCMsgError              Client <-> Host
+ * This message is a response to any of:
+ *  Reader Add
+ *  Reader Remove
+ *  Card Remove
+ * If the operation was successful then VSC_SUCCESS
+ * is returned, other wise a specific error code.
+ */
+typedef struct VSCMsgError {
+    uint32_t   code;
+} VSCMsgError;
+
+/*
+ * VSCMsgReaderAdd          Client -> Host
+ * Host replies with allocated reader id in VSCMsgError with code==SUCCESS.
+ *
+ * name - name of the reader on client side, UTF-8 encoded. Only used
+ *  for client presentation (may be translated to the device presented to the
+ *  guest), protocol wise only reader_id is important.
+ */
+typedef struct VSCMsgReaderAdd {
+    uint8_t    name[0];
+} VSCMsgReaderAdd;
+
+/*
+ * VSCMsgReaderRemove       Client -> Host
+ * The client's reader has been removed.
+ */
+typedef struct VSCMsgReaderRemove {
+} VSCMsgReaderRemove;
+
+/*
+ * VSCMsgATR                Client -> Host
+ * Answer to reset. Sent for card insertion or card reset. The reset/insertion
+ * happens on the client side, they do not require any action from the host.
+ */
+typedef struct VSCMsgATR {
+    uint8_t     atr[0];
+} VSCMsgATR;
+
+/*
+ * VSCMsgCardRemove         Client -> Host
+ * The client card has been removed.
+ */
+typedef struct VSCMsgCardRemove {
+} VSCMsgCardRemove;
+
+/*
+ * VSCMsgAPDU               Client <-> Host
+ * Main reason of existence. Transfer a single APDU in either direction.
+ */
+typedef struct VSCMsgAPDU {
+    uint8_t    data[0];
+} VSCMsgAPDU;
+
+/*
+ * VSCMsgFlush               Host -> Client
+ * Request client to send a FlushComplete message when it is done
+ * servicing all outstanding APDUs
+ */
+typedef struct VSCMsgFlush {
+} VSCMsgFlush;
+
+/*
+ * VSCMsgFlush               Client -> Host
+ * Client response to Flush after all APDUs have been processed and
+ * responses sent.
+ */
+typedef struct VSCMsgFlushComplete {
+} VSCMsgFlushComplete;
+
+#endif /* VSCARD_COMMON_H */
diff --git a/install/info/dir b/install/info/dir
new file mode 100644
index 0000000..bd82890
--- /dev/null
+++ b/install/info/dir
@@ -0,0 +1,18 @@
+This is the file .../info/dir, which contains the
+topmost node of the Info hierarchy, called (dir)Top.
+The first time you invoke Info you start off looking at this node.
+
+File: dir,	Node: Top	This is the top of the INFO tree
+
+  This (the Directory node) gives a menu of major topics.
+  Typing "q" exits, "?" lists all Info commands, "d" returns here,
+  "h" gives a primer for first-timers,
+  "mEmacs<Return>" visits the Emacs manual, etc.
+
+  In Emacs, you can click mouse button 2 on a menu item or cross reference
+  to select it.
+
+* Menu:
+
+GNU Packages
+* Make: (make).                 Remake files automatically.
diff --git a/install/info/make.info b/install/info/make.info
new file mode 100644
index 0000000..d43f032
--- /dev/null
+++ b/install/info/make.info
@@ -0,0 +1,184 @@
+This is make.info, produced by makeinfo version 4.8 from make.texi.
+
+   This file documents the GNU `make' utility, which determines
+automatically which pieces of a large program need to be recompiled,
+and issues the commands to recompile them.
+
+   This is Edition 0.70, last updated 1 April 2006, of `The GNU Make
+Manual', for GNU `make' version 3.81.
+
+   Copyright (C) 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996,
+1997, 1998, 1999, 2000, 2002, 2003, 2004, 2005, 2006 Free Software
+Foundation, Inc.
+
+     Permission is granted to copy, distribute and/or modify this
+     document under the terms of the GNU Free Documentation License,
+     Version 1.2 or any later version published by the Free Software
+     Foundation; with no Invariant Sections, with the Front-Cover Texts
+     being "A GNU Manual," and with the Back-Cover Texts as in (a)
+     below.  A copy of the license is included in the section entitled
+     "GNU Free Documentation License."
+
+     (a) The FSF's Back-Cover Text is: "You have freedom to copy and
+     modify this GNU Manual, like GNU software.  Copies published by
+     the Free Software Foundation raise funds for GNU development."
+
+INFO-DIR-SECTION GNU Packages
+START-INFO-DIR-ENTRY
+* Make: (make).            Remake files automatically.
+END-INFO-DIR-ENTRY
+
+
+Indirect:
+make.info-1: 1297
+make.info-2: 301265
+
+Tag Table:
+(Indirect)
+Node: Top1297
+Node: Overview14702
+Node: Preparing15712
+Node: Reading16684
+Node: Bugs17611
+Node: Introduction19441
+Node: Rule Introduction21033
+Node: Simple Makefile22777
+Node: How Make Works26406
+Node: Variables Simplify29061
+Node: make Deduces31267
+Node: Combine By Prerequisite33007
+Node: Cleanup34036
+Node: Makefiles35455
+Node: Makefile Contents36421
+Node: Makefile Names39376
+Node: Include40987
+Ref: Include-Footnote-144619
+Node: MAKEFILES Variable44753
+Node: MAKEFILE_LIST Variable46263
+Node: Special Variables47531
+Node: Remaking Makefiles51038
+Node: Overriding Makefiles55287
+Node: Reading Makefiles57340
+Node: Secondary Expansion60244
+Node: Rules67678
+Node: Rule Example70350
+Node: Rule Syntax71207
+Node: Prerequisite Types73710
+Node: Wildcards75486
+Node: Wildcard Examples77204
+Node: Wildcard Pitfall78460
+Node: Wildcard Function80249
+Node: Directory Search82033
+Node: General Search83175
+Node: Selective Search84890
+Node: Search Algorithm87878
+Node: Commands/Search90397
+Node: Implicit/Search91743
+Node: Libraries/Search92687
+Node: Phony Targets94779
+Node: Force Targets99865
+Node: Empty Targets100910
+Node: Special Targets102208
+Node: Multiple Targets109382
+Node: Multiple Rules111257
+Node: Static Pattern113493
+Node: Static Usage114145
+Node: Static versus Implicit117866
+Node: Double-Colon119610
+Node: Automatic Prerequisites121267
+Node: Commands125545
+Node: Command Syntax126753
+Node: Splitting Lines128778
+Node: Variables in Commands131759
+Node: Echoing133086
+Node: Execution134378
+Ref: Execution-Footnote-1135629
+Node: Choosing the Shell135775
+Node: Parallel139744
+Node: Errors143337
+Node: Interrupts146983
+Node: Recursion148570
+Node: MAKE Variable150664
+Node: Variables/Recursion152931
+Node: Options/Recursion158372
+Node: -w Option163537
+Node: Sequences164532
+Node: Empty Commands167544
+Node: Using Variables168718
+Node: Reference171831
+Node: Flavors173390
+Node: Advanced179128
+Node: Substitution Refs179633
+Node: Computed Names181186
+Node: Values185730
+Node: Setting186643
+Node: Appending188679
+Node: Override Directive192605
+Node: Defining193989
+Node: Environment196453
+Node: Target-specific198702
+Node: Pattern-specific201669
+Node: Conditionals203071
+Node: Conditional Example203781
+Node: Conditional Syntax206358
+Node: Testing Flags212083
+Node: Functions213185
+Node: Syntax of Functions214605
+Node: Text Functions216804
+Node: File Name Functions225375
+Node: Conditional Functions230597
+Node: Foreach Function232971
+Node: Call Function236183
+Node: Value Function239068
+Node: Eval Function240505
+Node: Origin Function242779
+Node: Flavor Function245997
+Node: Shell Function247063
+Node: Make Control Functions248697
+Node: Running250366
+Node: Makefile Arguments252355
+Node: Goals253071
+Node: Instead of Execution257812
+Node: Avoiding Compilation261098
+Node: Overriding263073
+Node: Testing265371
+Node: Options Summary267256
+Node: Implicit Rules277382
+Node: Using Implicit279530
+Node: Catalogue of Rules283069
+Node: Implicit Variables292419
+Node: Chained Rules297254
+Node: Pattern Rules301265
+Node: Pattern Intro302801
+Node: Pattern Examples305698
+Node: Automatic Variables307507
+Node: Pattern Match314878
+Node: Match-Anything Rules316514
+Node: Canceling Rules320389
+Node: Last Resort321105
+Node: Suffix Rules322952
+Node: Implicit Rule Search326681
+Node: Archives330200
+Node: Archive Members330898
+Node: Archive Update332511
+Node: Archive Symbols334425
+Node: Archive Pitfalls335659
+Node: Archive Suffix Rules336382
+Node: Features337929
+Node: Missing346484
+Node: Makefile Conventions350222
+Node: Makefile Basics351008
+Node: Utilities in Makefiles354175
+Node: Command Variables356313
+Node: Directory Variables359883
+Node: Standard Targets374023
+Ref: Standard Targets-Footnote-1387142
+Node: Install Command Categories387242
+Node: Quick Reference391768
+Node: Error Messages402464
+Node: Complex Makefile410154
+Node: GNU Free Documentation License418872
+Node: Concept Index441321
+Node: Name Index506510
+
+End Tag Table
diff --git a/install/info/make.info-1 b/install/info/make.info-1
new file mode 100644
index 0000000..486df36
--- /dev/null
+++ b/install/info/make.info-1
@@ -0,0 +1,7261 @@
+This is make.info, produced by makeinfo version 4.8 from make.texi.
+
+   This file documents the GNU `make' utility, which determines
+automatically which pieces of a large program need to be recompiled,
+and issues the commands to recompile them.
+
+   This is Edition 0.70, last updated 1 April 2006, of `The GNU Make
+Manual', for GNU `make' version 3.81.
+
+   Copyright (C) 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996,
+1997, 1998, 1999, 2000, 2002, 2003, 2004, 2005, 2006 Free Software
+Foundation, Inc.
+
+     Permission is granted to copy, distribute and/or modify this
+     document under the terms of the GNU Free Documentation License,
+     Version 1.2 or any later version published by the Free Software
+     Foundation; with no Invariant Sections, with the Front-Cover Texts
+     being "A GNU Manual," and with the Back-Cover Texts as in (a)
+     below.  A copy of the license is included in the section entitled
+     "GNU Free Documentation License."
+
+     (a) The FSF's Back-Cover Text is: "You have freedom to copy and
+     modify this GNU Manual, like GNU software.  Copies published by
+     the Free Software Foundation raise funds for GNU development."
+
+INFO-DIR-SECTION GNU Packages
+START-INFO-DIR-ENTRY
+* Make: (make).            Remake files automatically.
+END-INFO-DIR-ENTRY
+
+
+File: make.info,  Node: Top,  Next: Overview,  Prev: (dir),  Up: (dir)
+
+GNU `make'
+**********
+
+This file documents the GNU `make' utility, which determines
+automatically which pieces of a large program need to be recompiled,
+and issues the commands to recompile them.
+
+   This is Edition 0.70, last updated 1 April 2006, of `The GNU Make
+Manual', for GNU `make' version 3.81.
+
+   Copyright (C) 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996,
+1997, 1998, 1999, 2000, 2002, 2003, 2004, 2005, 2006 Free Software
+Foundation, Inc.
+
+     Permission is granted to copy, distribute and/or modify this
+     document under the terms of the GNU Free Documentation License,
+     Version 1.2 or any later version published by the Free Software
+     Foundation; with no Invariant Sections, with the Front-Cover Texts
+     being "A GNU Manual," and with the Back-Cover Texts as in (a)
+     below.  A copy of the license is included in the section entitled
+     "GNU Free Documentation License."
+
+     (a) The FSF's Back-Cover Text is: "You have freedom to copy and
+     modify this GNU Manual, like GNU software.  Copies published by
+     the Free Software Foundation raise funds for GNU development."
+
+* Menu:
+
+* Overview::                    Overview of `make'.
+* Introduction::                An introduction to `make'.
+* Makefiles::                   Makefiles tell `make' what to do.
+* Rules::                       Rules describe when a file must be remade.
+* Commands::                    Commands say how to remake a file.
+* Using Variables::             You can use variables to avoid repetition.
+* Conditionals::                Use or ignore parts of the makefile based
+                                  on the values of variables.
+* Functions::                   Many powerful ways to manipulate text.
+* Invoking make: Running.       How to invoke `make' on the command line.
+* Implicit Rules::              Use implicit rules to treat many files alike,
+                                  based on their file names.
+* Archives::                    How `make' can update library archives.
+* Features::                    Features GNU `make' has over other `make's.
+* Missing::                     What GNU `make' lacks from other `make's.
+* Makefile Conventions::        Conventions for writing makefiles for
+                                  GNU programs.
+* Quick Reference::             A quick reference for experienced users.
+* Error Messages::              A list of common errors generated by `make'.
+* Complex Makefile::            A real example of a straightforward,
+                                  but nontrivial, makefile.
+
+* GNU Free Documentation License::  License for copying this manual
+* Concept Index::               Index of Concepts
+* Name Index::                  Index of Functions, Variables, & Directives
+
+ --- The Detailed Node Listing ---
+
+Overview of `make'
+
+* Preparing::                   Preparing and Running Make
+* Reading::                     On Reading this Text
+* Bugs::                        Problems and Bugs
+
+An Introduction to Makefiles
+
+* Rule Introduction::           What a rule looks like.
+* Simple Makefile::             A Simple Makefile
+* How Make Works::              How `make' Processes This Makefile
+* Variables Simplify::          Variables Make Makefiles Simpler
+* make Deduces::                Letting `make' Deduce the Commands
+* Combine By Prerequisite::     Another Style of Makefile
+* Cleanup::                     Rules for Cleaning the Directory
+
+Writing Makefiles
+
+* Makefile Contents::           What makefiles contain.
+* Makefile Names::              How to name your makefile.
+* Include::                     How one makefile can use another makefile.
+* MAKEFILES Variable::          The environment can specify extra makefiles.
+* MAKEFILE_LIST Variable::      Discover which makefiles have been read.
+* Special Variables::           Other special variables.
+* Remaking Makefiles::          How makefiles get remade.
+* Overriding Makefiles::        How to override part of one makefile
+                                  with another makefile.
+* Reading Makefiles::           How makefiles are parsed.
+* Secondary Expansion::         How and when secondary expansion is performed.
+
+Writing Rules
+
+* Rule Example::                An example explained.
+* Rule Syntax::                 General syntax explained.
+* Prerequisite Types::          There are two types of prerequisites.
+* Wildcards::                   Using wildcard characters such as `*'.
+* Directory Search::            Searching other directories for source files.
+* Phony Targets::               Using a target that is not a real file's name.
+* Force Targets::               You can use a target without commands
+                                  or prerequisites to mark other targets
+                                  as phony.
+* Empty Targets::               When only the date matters and the
+                                  files are empty.
+* Special Targets::             Targets with special built-in meanings.
+* Multiple Targets::            When to make use of several targets in a rule.
+* Multiple Rules::              How to use several rules with the same target.
+* Static Pattern::              Static pattern rules apply to multiple targets
+                                  and can vary the prerequisites according to
+                                  the target name.
+* Double-Colon::                How to use a special kind of rule to allow
+                                  several independent rules for one target.
+* Automatic Prerequisites::     How to automatically generate rules giving
+                                  prerequisites from source files themselves.
+
+Using Wildcard Characters in File Names
+
+* Wildcard Examples::           Several examples
+* Wildcard Pitfall::            Problems to avoid.
+* Wildcard Function::           How to cause wildcard expansion where
+                                  it does not normally take place.
+
+Searching Directories for Prerequisites
+
+* General Search::              Specifying a search path that applies
+                                  to every prerequisite.
+* Selective Search::            Specifying a search path
+                                  for a specified class of names.
+* Search Algorithm::            When and how search paths are applied.
+* Commands/Search::             How to write shell commands that work together
+                                  with search paths.
+* Implicit/Search::             How search paths affect implicit rules.
+* Libraries/Search::            Directory search for link libraries.
+
+Static Pattern Rules
+
+* Static Usage::                The syntax of static pattern rules.
+* Static versus Implicit::      When are they better than implicit rules?
+
+Writing the Commands in Rules
+
+* Command Syntax::              Command syntax features and pitfalls.
+* Echoing::                     How to control when commands are echoed.
+* Execution::                   How commands are executed.
+* Parallel::                    How commands can be executed in parallel.
+* Errors::                      What happens after a command execution error.
+* Interrupts::                  What happens when a command is interrupted.
+* Recursion::                   Invoking `make' from makefiles.
+* Sequences::                   Defining canned sequences of commands.
+* Empty Commands::              Defining useful, do-nothing commands.
+
+Command Syntax
+
+* Splitting Lines::             Breaking long command lines for readability.
+* Variables in Commands::       Using `make' variables in commands.
+
+Command Execution
+
+* Choosing the Shell::          How `make' chooses the shell used
+                                  to run commands.
+
+Recursive Use of `make'
+
+* MAKE Variable::               The special effects of using `$(MAKE)'.
+* Variables/Recursion::         How to communicate variables to a sub-`make'.
+* Options/Recursion::           How to communicate options to a sub-`make'.
+* -w Option::                   How the `-w' or `--print-directory' option
+                                  helps debug use of recursive `make' commands.
+
+How to Use Variables
+
+* Reference::                   How to use the value of a variable.
+* Flavors::                     Variables come in two flavors.
+* Advanced::                    Advanced features for referencing a variable.
+* Values::                      All the ways variables get their values.
+* Setting::                     How to set a variable in the makefile.
+* Appending::                   How to append more text to the old value
+                                  of a variable.
+* Override Directive::          How to set a variable in the makefile even if
+                                  the user has set it with a command argument.
+* Defining::                    An alternate way to set a variable
+                                  to a verbatim string.
+* Environment::                 Variable values can come from the environment.
+* Target-specific::             Variable values can be defined on a per-target
+                                  basis.
+* Pattern-specific::            Target-specific variable values can be applied
+                                  to a group of targets that match a pattern.
+
+Advanced Features for Reference to Variables
+
+* Substitution Refs::           Referencing a variable with
+                                  substitutions on the value.
+* Computed Names::              Computing the name of the variable to refer to.
+
+Conditional Parts of Makefiles
+
+* Conditional Example::         Example of a conditional
+* Conditional Syntax::          The syntax of conditionals.
+* Testing Flags::               Conditionals that test flags.
+
+Functions for Transforming Text
+
+* Syntax of Functions::         How to write a function call.
+* Text Functions::              General-purpose text manipulation functions.
+* File Name Functions::         Functions for manipulating file names.
+* Conditional Functions::       Functions that implement conditions.
+* Foreach Function::            Repeat some text with controlled variation.
+* Call Function::               Expand a user-defined function.
+* Value Function::              Return the un-expanded value of a variable.
+* Eval Function::               Evaluate the arguments as makefile syntax.
+* Origin Function::             Find where a variable got its value.
+* Flavor Function::             Find out the flavor of a variable.
+* Shell Function::              Substitute the output of a shell command.
+* Make Control Functions::      Functions that control how make runs.
+
+How to Run `make'
+
+* Makefile Arguments::          How to specify which makefile to use.
+* Goals::                       How to use goal arguments to specify which
+                                  parts of the makefile to use.
+* Instead of Execution::        How to use mode flags to specify what
+                                  kind of thing to do with the commands
+                                  in the makefile other than simply
+                                  execute them.
+* Avoiding Compilation::        How to avoid recompiling certain files.
+* Overriding::                  How to override a variable to specify
+                                  an alternate compiler and other things.
+* Testing::                     How to proceed past some errors, to
+                                  test compilation.
+* Options Summary::             Summary of Options
+
+Using Implicit Rules
+
+* Using Implicit::              How to use an existing implicit rule
+                                  to get the commands for updating a file.
+* Catalogue of Rules::          A list of built-in implicit rules.
+* Implicit Variables::          How to change what predefined rules do.
+* Chained Rules::               How to use a chain of implicit rules.
+* Pattern Rules::               How to define new implicit rules.
+* Last Resort::                 How to define commands for rules which
+                                  cannot find any.
+* Suffix Rules::                The old-fashioned style of implicit rule.
+* Implicit Rule Search::        The precise algorithm for applying
+                                  implicit rules.
+
+Defining and Redefining Pattern Rules
+
+* Pattern Intro::               An introduction to pattern rules.
+* Pattern Examples::            Examples of pattern rules.
+* Automatic Variables::         How to use automatic variables in the
+                                  commands of implicit rules.
+* Pattern Match::               How patterns match.
+* Match-Anything Rules::        Precautions you should take prior to
+                                  defining rules that can match any
+                                  target file whatever.
+* Canceling Rules::             How to override or cancel built-in rules.
+
+Using `make' to Update Archive Files
+
+* Archive Members::             Archive members as targets.
+* Archive Update::              The implicit rule for archive member targets.
+* Archive Pitfalls::            Dangers to watch out for when using archives.
+* Archive Suffix Rules::        You can write a special kind of suffix rule
+                                  for updating archives.
+
+Implicit Rule for Archive Member Targets
+
+* Archive Symbols::             How to update archive symbol directories.
+
+
+File: make.info,  Node: Overview,  Next: Introduction,  Prev: Top,  Up: Top
+
+1 Overview of `make'
+********************
+
+The `make' utility automatically determines which pieces of a large
+program need to be recompiled, and issues commands to recompile them.
+This manual describes GNU `make', which was implemented by Richard
+Stallman and Roland McGrath.  Development since Version 3.76 has been
+handled by Paul D. Smith.
+
+   GNU `make' conforms to section 6.2 of `IEEE Standard 1003.2-1992'
+(POSIX.2).  
+
+   Our examples show C programs, since they are most common, but you
+can use `make' with any programming language whose compiler can be run
+with a shell command.  Indeed, `make' is not limited to programs.  You
+can use it to describe any task where some files must be updated
+automatically from others whenever the others change.
+
+* Menu:
+
+* Preparing::                   Preparing and Running Make
+* Reading::                     On Reading this Text
+* Bugs::                        Problems and Bugs
+
+
+File: make.info,  Node: Preparing,  Next: Reading,  Prev: Overview,  Up: Overview
+
+Preparing and Running Make
+==========================
+
+   To prepare to use `make', you must write a file called the
+"makefile" that describes the relationships among files in your program
+and provides commands for updating each file.  In a program, typically,
+the executable file is updated from object files, which are in turn
+made by compiling source files.
+
+   Once a suitable makefile exists, each time you change some source
+files, this simple shell command:
+
+     make
+
+suffices to perform all necessary recompilations.  The `make' program
+uses the makefile data base and the last-modification times of the
+files to decide which of the files need to be updated.  For each of
+those files, it issues the commands recorded in the data base.
+
+   You can provide command line arguments to `make' to control which
+files should be recompiled, or how.  *Note How to Run `make': Running.
+
+
+File: make.info,  Node: Reading,  Next: Bugs,  Prev: Preparing,  Up: Overview
+
+1.1 How to Read This Manual
+===========================
+
+If you are new to `make', or are looking for a general introduction,
+read the first few sections of each chapter, skipping the later
+sections.  In each chapter, the first few sections contain introductory
+or general information and the later sections contain specialized or
+technical information.  The exception is the second chapter, *Note An
+Introduction to Makefiles: Introduction, all of which is introductory.
+
+   If you are familiar with other `make' programs, see *Note Features
+of GNU `make': Features, which lists the enhancements GNU `make' has,
+and *Note Incompatibilities and Missing Features: Missing, which
+explains the few things GNU `make' lacks that others have.
+
+   For a quick summary, see *Note Options Summary::, *Note Quick
+Reference::, and *Note Special Targets::.
+
+
+File: make.info,  Node: Bugs,  Prev: Reading,  Up: Overview
+
+1.2 Problems and Bugs
+=====================
+
+If you have problems with GNU `make' or think you've found a bug,
+please report it to the developers; we cannot promise to do anything but
+we might well want to fix it.
+
+   Before reporting a bug, make sure you've actually found a real bug.
+Carefully reread the documentation and see if it really says you can do
+what you're trying to do.  If it's not clear whether you should be able
+to do something or not, report that too; it's a bug in the
+documentation!
+
+   Before reporting a bug or trying to fix it yourself, try to isolate
+it to the smallest possible makefile that reproduces the problem.  Then
+send us the makefile and the exact results `make' gave you, including
+any error or warning messages.  Please don't paraphrase these messages:
+it's best to cut and paste them into your report.  When generating this
+small makefile, be sure to not use any non-free or unusual tools in
+your commands: you can almost always emulate what such a tool would do
+with simple shell commands.  Finally, be sure to explain what you
+expected to occur; this will help us decide whether the problem was
+really in the documentation.
+
+   Once you have a precise problem you can report it in one of two ways.
+Either send electronic mail to:
+
+         bug-make@gnu.org
+
+or use our Web-based project management tool, at:
+
+         http://savannah.gnu.org/projects/make/
+
+In addition to the information above, please be careful to include the
+version number of `make' you are using.  You can get this information
+with the command `make --version'.  Be sure also to include the type of
+machine and operating system you are using.  One way to obtain this
+information is by looking at the final lines of output from the command
+`make --help'.
+
+
+File: make.info,  Node: Introduction,  Next: Makefiles,  Prev: Overview,  Up: Top
+
+2 An Introduction to Makefiles
+******************************
+
+You need a file called a "makefile" to tell `make' what to do.  Most
+often, the makefile tells `make' how to compile and link a program.  
+
+   In this chapter, we will discuss a simple makefile that describes
+how to compile and link a text editor which consists of eight C source
+files and three header files.  The makefile can also tell `make' how to
+run miscellaneous commands when explicitly asked (for example, to remove
+certain files as a clean-up operation).  To see a more complex example
+of a makefile, see *Note Complex Makefile::.
+
+   When `make' recompiles the editor, each changed C source file must
+be recompiled.  If a header file has changed, each C source file that
+includes the header file must be recompiled to be safe.  Each
+compilation produces an object file corresponding to the source file.
+Finally, if any source file has been recompiled, all the object files,
+whether newly made or saved from previous compilations, must be linked
+together to produce the new executable editor.  
+
+* Menu:
+
+* Rule Introduction::           What a rule looks like.
+* Simple Makefile::             A Simple Makefile
+* How Make Works::              How `make' Processes This Makefile
+* Variables Simplify::          Variables Make Makefiles Simpler
+* make Deduces::                Letting `make' Deduce the Commands
+* Combine By Prerequisite::     Another Style of Makefile
+* Cleanup::                     Rules for Cleaning the Directory
+
+
+File: make.info,  Node: Rule Introduction,  Next: Simple Makefile,  Prev: Introduction,  Up: Introduction
+
+2.1 What a Rule Looks Like
+==========================
+
+A simple makefile consists of "rules" with the following shape:
+
+     TARGET ... : PREREQUISITES ...
+             COMMAND
+             ...
+             ...
+
+   A "target" is usually the name of a file that is generated by a
+program; examples of targets are executable or object files.  A target
+can also be the name of an action to carry out, such as `clean' (*note
+Phony Targets::).
+
+   A "prerequisite" is a file that is used as input to create the
+target.  A target often depends on several files.
+
+   A "command" is an action that `make' carries out.  A rule may have
+more than one command, each on its own line.  *Please note:* you need
+to put a tab character at the beginning of every command line!  This is
+an obscurity that catches the unwary.
+
+   Usually a command is in a rule with prerequisites and serves to
+create a target file if any of the prerequisites change.  However, the
+rule that specifies commands for the target need not have
+prerequisites.  For example, the rule containing the delete command
+associated with the target `clean' does not have prerequisites.
+
+   A "rule", then, explains how and when to remake certain files which
+are the targets of the particular rule.  `make' carries out the
+commands on the prerequisites to create or update the target.  A rule
+can also explain how and when to carry out an action.  *Note Writing
+Rules: Rules.
+
+   A makefile may contain other text besides rules, but a simple
+makefile need only contain rules.  Rules may look somewhat more
+complicated than shown in this template, but all fit the pattern more
+or less.
+
+
+File: make.info,  Node: Simple Makefile,  Next: How Make Works,  Prev: Rule Introduction,  Up: Introduction
+
+2.2 A Simple Makefile
+=====================
+
+Here is a straightforward makefile that describes the way an executable
+file called `edit' depends on eight object files which, in turn, depend
+on eight C source and three header files.
+
+   In this example, all the C files include `defs.h', but only those
+defining editing commands include `command.h', and only low level files
+that change the editor buffer include `buffer.h'.
+
+     edit : main.o kbd.o command.o display.o \
+            insert.o search.o files.o utils.o
+             cc -o edit main.o kbd.o command.o display.o \
+                        insert.o search.o files.o utils.o
+
+     main.o : main.c defs.h
+             cc -c main.c
+     kbd.o : kbd.c defs.h command.h
+             cc -c kbd.c
+     command.o : command.c defs.h command.h
+             cc -c command.c
+     display.o : display.c defs.h buffer.h
+             cc -c display.c
+     insert.o : insert.c defs.h buffer.h
+             cc -c insert.c
+     search.o : search.c defs.h buffer.h
+             cc -c search.c
+     files.o : files.c defs.h buffer.h command.h
+             cc -c files.c
+     utils.o : utils.c defs.h
+             cc -c utils.c
+     clean :
+             rm edit main.o kbd.o command.o display.o \
+                insert.o search.o files.o utils.o
+
+We split each long line into two lines using backslash-newline; this is
+like using one long line, but is easier to read.  
+
+   To use this makefile to create the executable file called `edit',
+type:
+
+     make
+
+   To use this makefile to delete the executable file and all the object
+files from the directory, type:
+
+     make clean
+
+   In the example makefile, the targets include the executable file
+`edit', and the object files `main.o' and `kbd.o'.  The prerequisites
+are files such as `main.c' and `defs.h'.  In fact, each `.o' file is
+both a target and a prerequisite.  Commands include `cc -c main.c' and
+`cc -c kbd.c'.
+
+   When a target is a file, it needs to be recompiled or relinked if any
+of its prerequisites change.  In addition, any prerequisites that are
+themselves automatically generated should be updated first.  In this
+example, `edit' depends on each of the eight object files; the object
+file `main.o' depends on the source file `main.c' and on the header
+file `defs.h'.
+
+   A shell command follows each line that contains a target and
+prerequisites.  These shell commands say how to update the target file.
+A tab character must come at the beginning of every command line to
+distinguish command lines from other lines in the makefile.  (Bear in
+mind that `make' does not know anything about how the commands work.
+It is up to you to supply commands that will update the target file
+properly.  All `make' does is execute the commands in the rule you have
+specified when the target file needs to be updated.)  
+
+   The target `clean' is not a file, but merely the name of an action.
+Since you normally do not want to carry out the actions in this rule,
+`clean' is not a prerequisite of any other rule.  Consequently, `make'
+never does anything with it unless you tell it specifically.  Note that
+this rule not only is not a prerequisite, it also does not have any
+prerequisites, so the only purpose of the rule is to run the specified
+commands.  Targets that do not refer to files but are just actions are
+called "phony targets".  *Note Phony Targets::, for information about
+this kind of target.  *Note Errors in Commands: Errors, to see how to
+cause `make' to ignore errors from `rm' or any other command.  
+
+
+File: make.info,  Node: How Make Works,  Next: Variables Simplify,  Prev: Simple Makefile,  Up: Introduction
+
+2.3 How `make' Processes a Makefile
+===================================
+
+By default, `make' starts with the first target (not targets whose
+names start with `.').  This is called the "default goal".  ("Goals"
+are the targets that `make' strives ultimately to update.    You can
+override this behavior using the command line (*note Arguments to
+Specify the Goals: Goals.) or with the `.DEFAULT_GOAL' special variable
+(*note Other Special Variables: Special Variables.).  
+
+   In the simple example of the previous section, the default goal is to
+update the executable program `edit'; therefore, we put that rule first.
+
+   Thus, when you give the command:
+
+     make
+
+`make' reads the makefile in the current directory and begins by
+processing the first rule.  In the example, this rule is for relinking
+`edit'; but before `make' can fully process this rule, it must process
+the rules for the files that `edit' depends on, which in this case are
+the object files.  Each of these files is processed according to its
+own rule.  These rules say to update each `.o' file by compiling its
+source file.  The recompilation must be done if the source file, or any
+of the header files named as prerequisites, is more recent than the
+object file, or if the object file does not exist.
+
+   The other rules are processed because their targets appear as
+prerequisites of the goal.  If some other rule is not depended on by the
+goal (or anything it depends on, etc.), that rule is not processed,
+unless you tell `make' to do so (with a command such as `make clean').
+
+   Before recompiling an object file, `make' considers updating its
+prerequisites, the source file and header files.  This makefile does not
+specify anything to be done for them--the `.c' and `.h' files are not
+the targets of any rules--so `make' does nothing for these files.  But
+`make' would update automatically generated C programs, such as those
+made by Bison or Yacc, by their own rules at this time.
+
+   After recompiling whichever object files need it, `make' decides
+whether to relink `edit'.  This must be done if the file `edit' does
+not exist, or if any of the object files are newer than it.  If an
+object file was just recompiled, it is now newer than `edit', so `edit'
+is relinked.  
+
+   Thus, if we change the file `insert.c' and run `make', `make' will
+compile that file to update `insert.o', and then link `edit'.  If we
+change the file `command.h' and run `make', `make' will recompile the
+object files `kbd.o', `command.o' and `files.o' and then link the file
+`edit'.
+
+
+File: make.info,  Node: Variables Simplify,  Next: make Deduces,  Prev: How Make Works,  Up: Introduction
+
+2.4 Variables Make Makefiles Simpler
+====================================
+
+In our example, we had to list all the object files twice in the rule
+for `edit' (repeated here):
+
+     edit : main.o kbd.o command.o display.o \
+                   insert.o search.o files.o utils.o
+             cc -o edit main.o kbd.o command.o display.o \
+                        insert.o search.o files.o utils.o
+
+   Such duplication is error-prone; if a new object file is added to the
+system, we might add it to one list and forget the other.  We can
+eliminate the risk and simplify the makefile by using a variable.
+"Variables" allow a text string to be defined once and substituted in
+multiple places later (*note How to Use Variables: Using Variables.).
+
+   It is standard practice for every makefile to have a variable named
+`objects', `OBJECTS', `objs', `OBJS', `obj', or `OBJ' which is a list
+of all object file names.  We would define such a variable `objects'
+with a line like this in the makefile:
+
+     objects = main.o kbd.o command.o display.o \
+               insert.o search.o files.o utils.o
+
+Then, each place we want to put a list of the object file names, we can
+substitute the variable's value by writing `$(objects)' (*note How to
+Use Variables: Using Variables.).
+
+   Here is how the complete simple makefile looks when you use a
+variable for the object files:
+
+     objects = main.o kbd.o command.o display.o \
+               insert.o search.o files.o utils.o
+
+     edit : $(objects)
+             cc -o edit $(objects)
+     main.o : main.c defs.h
+             cc -c main.c
+     kbd.o : kbd.c defs.h command.h
+             cc -c kbd.c
+     command.o : command.c defs.h command.h
+             cc -c command.c
+     display.o : display.c defs.h buffer.h
+             cc -c display.c
+     insert.o : insert.c defs.h buffer.h
+             cc -c insert.c
+     search.o : search.c defs.h buffer.h
+             cc -c search.c
+     files.o : files.c defs.h buffer.h command.h
+             cc -c files.c
+     utils.o : utils.c defs.h
+             cc -c utils.c
+     clean :
+             rm edit $(objects)
+
+
+File: make.info,  Node: make Deduces,  Next: Combine By Prerequisite,  Prev: Variables Simplify,  Up: Introduction
+
+2.5 Letting `make' Deduce the Commands
+======================================
+
+It is not necessary to spell out the commands for compiling the
+individual C source files, because `make' can figure them out: it has an
+"implicit rule" for updating a `.o' file from a correspondingly named
+`.c' file using a `cc -c' command.  For example, it will use the
+command `cc -c main.c -o main.o' to compile `main.c' into `main.o'.  We
+can therefore omit the commands from the rules for the object files.
+*Note Using Implicit Rules: Implicit Rules.
+
+   When a `.c' file is used automatically in this way, it is also
+automatically added to the list of prerequisites.  We can therefore omit
+the `.c' files from the prerequisites, provided we omit the commands.
+
+   Here is the entire example, with both of these changes, and a
+variable `objects' as suggested above:
+
+     objects = main.o kbd.o command.o display.o \
+               insert.o search.o files.o utils.o
+
+     edit : $(objects)
+             cc -o edit $(objects)
+
+     main.o : defs.h
+     kbd.o : defs.h command.h
+     command.o : defs.h command.h
+     display.o : defs.h buffer.h
+     insert.o : defs.h buffer.h
+     search.o : defs.h buffer.h
+     files.o : defs.h buffer.h command.h
+     utils.o : defs.h
+
+     .PHONY : clean
+     clean :
+             rm edit $(objects)
+
+This is how we would write the makefile in actual practice.  (The
+complications associated with `clean' are described elsewhere.  See
+*Note Phony Targets::, and *Note Errors in Commands: Errors.)
+
+   Because implicit rules are so convenient, they are important.  You
+will see them used frequently.
+
+
+File: make.info,  Node: Combine By Prerequisite,  Next: Cleanup,  Prev: make Deduces,  Up: Introduction
+
+2.6 Another Style of Makefile
+=============================
+
+When the objects of a makefile are created only by implicit rules, an
+alternative style of makefile is possible.  In this style of makefile,
+you group entries by their prerequisites instead of by their targets.
+Here is what one looks like:
+
+     objects = main.o kbd.o command.o display.o \
+               insert.o search.o files.o utils.o
+
+     edit : $(objects)
+             cc -o edit $(objects)
+
+     $(objects) : defs.h
+     kbd.o command.o files.o : command.h
+     display.o insert.o search.o files.o : buffer.h
+
+Here `defs.h' is given as a prerequisite of all the object files;
+`command.h' and `buffer.h' are prerequisites of the specific object
+files listed for them.
+
+   Whether this is better is a matter of taste: it is more compact, but
+some people dislike it because they find it clearer to put all the
+information about each target in one place.
+
+
+File: make.info,  Node: Cleanup,  Prev: Combine By Prerequisite,  Up: Introduction
+
+2.7 Rules for Cleaning the Directory
+====================================
+
+Compiling a program is not the only thing you might want to write rules
+for.  Makefiles commonly tell how to do a few other things besides
+compiling a program: for example, how to delete all the object files
+and executables so that the directory is `clean'.
+
+   Here is how we could write a `make' rule for cleaning our example
+editor:
+
+     clean:
+             rm edit $(objects)
+
+   In practice, we might want to write the rule in a somewhat more
+complicated manner to handle unanticipated situations.  We would do
+this:
+
+     .PHONY : clean
+     clean :
+             -rm edit $(objects)
+
+This prevents `make' from getting confused by an actual file called
+`clean' and causes it to continue in spite of errors from `rm'.  (See
+*Note Phony Targets::, and *Note Errors in Commands: Errors.)
+
+A rule such as this should not be placed at the beginning of the
+makefile, because we do not want it to run by default!  Thus, in the
+example makefile, we want the rule for `edit', which recompiles the
+editor, to remain the default goal.
+
+   Since `clean' is not a prerequisite of `edit', this rule will not
+run at all if we give the command `make' with no arguments.  In order
+to make the rule run, we have to type `make clean'.  *Note How to Run
+`make': Running.
+
+
+File: make.info,  Node: Makefiles,  Next: Rules,  Prev: Introduction,  Up: Top
+
+3 Writing Makefiles
+*******************
+
+The information that tells `make' how to recompile a system comes from
+reading a data base called the "makefile".
+
+* Menu:
+
+* Makefile Contents::           What makefiles contain.
+* Makefile Names::              How to name your makefile.
+* Include::                     How one makefile can use another makefile.
+* MAKEFILES Variable::          The environment can specify extra makefiles.
+* MAKEFILE_LIST Variable::      Discover which makefiles have been read.
+* Special Variables::           Other special variables.
+* Remaking Makefiles::          How makefiles get remade.
+* Overriding Makefiles::        How to override part of one makefile
+                                  with another makefile.
+* Reading Makefiles::           How makefiles are parsed.
+* Secondary Expansion::         How and when secondary expansion is performed.
+
+
+File: make.info,  Node: Makefile Contents,  Next: Makefile Names,  Prev: Makefiles,  Up: Makefiles
+
+3.1 What Makefiles Contain
+==========================
+
+Makefiles contain five kinds of things: "explicit rules", "implicit
+rules", "variable definitions", "directives", and "comments".  Rules,
+variables, and directives are described at length in later chapters.
+
+   * An "explicit rule" says when and how to remake one or more files,
+     called the rule's "targets".  It lists the other files that the
+     targets depend on, called the "prerequisites" of the target, and
+     may also give commands to use to create or update the targets.
+     *Note Writing Rules: Rules.
+
+   * An "implicit rule" says when and how to remake a class of files
+     based on their names.  It describes how a target may depend on a
+     file with a name similar to the target and gives commands to
+     create or update such a target.  *Note Using Implicit Rules:
+     Implicit Rules.
+
+   * A "variable definition" is a line that specifies a text string
+     value for a variable that can be substituted into the text later.
+     The simple makefile example shows a variable definition for
+     `objects' as a list of all object files (*note Variables Make
+     Makefiles Simpler: Variables Simplify.).
+
+   * A "directive" is a command for `make' to do something special while
+     reading the makefile.  These include:
+
+        * Reading another makefile (*note Including Other Makefiles:
+          Include.).
+
+        * Deciding (based on the values of variables) whether to use or
+          ignore a part of the makefile (*note Conditional Parts of
+          Makefiles: Conditionals.).
+
+        * Defining a variable from a verbatim string containing
+          multiple lines (*note Defining Variables Verbatim: Defining.).
+
+   * `#' in a line of a makefile starts a "comment".  It and the rest
+     of the line are ignored, except that a trailing backslash not
+     escaped by another backslash will continue the comment across
+     multiple lines.  A line containing just a comment (with perhaps
+     spaces before it) is effectively blank, and is ignored.  If you
+     want a literal `#', escape it with a backslash (e.g., `\#').
+     Comments may appear on any line in the makefile, although they are
+     treated specially in certain situations.
+
+     Within a command script (if the line begins with a TAB character)
+     the entire line is passed to the shell, just as with any other
+     line that begins with a TAB.  The shell decides how to interpret
+     the text: whether or not this is a comment is up to the shell.
+
+     Within a `define' directive, comments are not ignored during the
+     definition of the variable, but rather kept intact in the value of
+     the variable.  When the variable is expanded they will either be
+     treated as `make' comments or as command script text, depending on
+     the context in which the variable is evaluated.
+
+
+File: make.info,  Node: Makefile Names,  Next: Include,  Prev: Makefile Contents,  Up: Makefiles
+
+3.2 What Name to Give Your Makefile
+===================================
+
+By default, when `make' looks for the makefile, it tries the following
+names, in order: `GNUmakefile', `makefile' and `Makefile'.  
+
+   Normally you should call your makefile either `makefile' or
+`Makefile'.  (We recommend `Makefile' because it appears prominently
+near the beginning of a directory listing, right near other important
+files such as `README'.)  The first name checked, `GNUmakefile', is not
+recommended for most makefiles.  You should use this name if you have a
+makefile that is specific to GNU `make', and will not be understood by
+other versions of `make'.  Other `make' programs look for `makefile' and
+`Makefile', but not `GNUmakefile'.
+
+   If `make' finds none of these names, it does not use any makefile.
+Then you must specify a goal with a command argument, and `make' will
+attempt to figure out how to remake it using only its built-in implicit
+rules.  *Note Using Implicit Rules: Implicit Rules.
+
+   If you want to use a nonstandard name for your makefile, you can
+specify the makefile name with the `-f' or `--file' option.  The
+arguments `-f NAME' or `--file=NAME' tell `make' to read the file NAME
+as the makefile.  If you use more than one `-f' or `--file' option, you
+can specify several makefiles.  All the makefiles are effectively
+concatenated in the order specified.  The default makefile names
+`GNUmakefile', `makefile' and `Makefile' are not checked automatically
+if you specify `-f' or `--file'.  
+
+
+File: make.info,  Node: Include,  Next: MAKEFILES Variable,  Prev: Makefile Names,  Up: Makefiles
+
+3.3 Including Other Makefiles
+=============================
+
+The `include' directive tells `make' to suspend reading the current
+makefile and read one or more other makefiles before continuing.  The
+directive is a line in the makefile that looks like this:
+
+     include FILENAMES...
+
+FILENAMES can contain shell file name patterns.  If FILENAMES is empty,
+nothing is included and no error is printed.  
+
+   Extra spaces are allowed and ignored at the beginning of the line,
+but a tab is not allowed.  (If the line begins with a tab, it will be
+considered a command line.)  Whitespace is required between `include'
+and the file names, and between file names; extra whitespace is ignored
+there and at the end of the directive.  A comment starting with `#' is
+allowed at the end of the line.  If the file names contain any variable
+or function references, they are expanded.  *Note How to Use Variables:
+Using Variables.
+
+   For example, if you have three `.mk' files, `a.mk', `b.mk', and
+`c.mk', and `$(bar)' expands to `bish bash', then the following
+expression
+
+     include foo *.mk $(bar)
+
+   is equivalent to
+
+     include foo a.mk b.mk c.mk bish bash
+
+   When `make' processes an `include' directive, it suspends reading of
+the containing makefile and reads from each listed file in turn.  When
+that is finished, `make' resumes reading the makefile in which the
+directive appears.
+
+   One occasion for using `include' directives is when several programs,
+handled by individual makefiles in various directories, need to use a
+common set of variable definitions (*note Setting Variables: Setting.)
+or pattern rules (*note Defining and Redefining Pattern Rules: Pattern
+Rules.).
+
+   Another such occasion is when you want to generate prerequisites from
+source files automatically; the prerequisites can be put in a file that
+is included by the main makefile.  This practice is generally cleaner
+than that of somehow appending the prerequisites to the end of the main
+makefile as has been traditionally done with other versions of `make'.
+*Note Automatic Prerequisites::.  
+
+   If the specified name does not start with a slash, and the file is
+not found in the current directory, several other directories are
+searched.  First, any directories you have specified with the `-I' or
+`--include-dir' option are searched (*note Summary of Options: Options
+Summary.).  Then the following directories (if they exist) are
+searched, in this order: `PREFIX/include' (normally `/usr/local/include'
+(1)) `/usr/gnu/include', `/usr/local/include', `/usr/include'.
+
+   If an included makefile cannot be found in any of these directories,
+a warning message is generated, but it is not an immediately fatal
+error; processing of the makefile containing the `include' continues.
+Once it has finished reading makefiles, `make' will try to remake any
+that are out of date or don't exist.  *Note How Makefiles Are Remade:
+Remaking Makefiles.  Only after it has tried to find a way to remake a
+makefile and failed, will `make' diagnose the missing makefile as a
+fatal error.
+
+   If you want `make' to simply ignore a makefile which does not exist
+and cannot be remade, with no error message, use the `-include'
+directive instead of `include', like this:
+
+     -include FILENAMES...
+
+   This acts like `include' in every way except that there is no error
+(not even a warning) if any of the FILENAMES do not exist.  For
+compatibility with some other `make' implementations, `sinclude' is
+another name for `-include'.
+
+   ---------- Footnotes ----------
+
+   (1) GNU Make compiled for MS-DOS and MS-Windows behaves as if PREFIX
+has been defined to be the root of the DJGPP tree hierarchy.
+
+
+File: make.info,  Node: MAKEFILES Variable,  Next: MAKEFILE_LIST Variable,  Prev: Include,  Up: Makefiles
+
+3.4 The Variable `MAKEFILES'
+============================
+
+If the environment variable `MAKEFILES' is defined, `make' considers
+its value as a list of names (separated by whitespace) of additional
+makefiles to be read before the others.  This works much like the
+`include' directive: various directories are searched for those files
+(*note Including Other Makefiles: Include.).  In addition, the default
+goal is never taken from one of these makefiles and it is not an error
+if the files listed in `MAKEFILES' are not found.
+
+   The main use of `MAKEFILES' is in communication between recursive
+invocations of `make' (*note Recursive Use of `make': Recursion.).  It
+usually is not desirable to set the environment variable before a
+top-level invocation of `make', because it is usually better not to
+mess with a makefile from outside.  However, if you are running `make'
+without a specific makefile, a makefile in `MAKEFILES' can do useful
+things to help the built-in implicit rules work better, such as
+defining search paths (*note Directory Search::).
+
+   Some users are tempted to set `MAKEFILES' in the environment
+automatically on login, and program makefiles to expect this to be done.
+This is a very bad idea, because such makefiles will fail to work if
+run by anyone else.  It is much better to write explicit `include'
+directives in the makefiles.  *Note Including Other Makefiles: Include.
+
+
+File: make.info,  Node: MAKEFILE_LIST Variable,  Next: Special Variables,  Prev: MAKEFILES Variable,  Up: Makefiles
+
+3.5 The Variable `MAKEFILE_LIST'
+================================
+
+As `make' reads various makefiles, including any obtained from the
+`MAKEFILES' variable, the command line, the default files, or from
+`include' directives, their names will be automatically appended to the
+`MAKEFILE_LIST' variable.  They are added right before `make' begins to
+parse them.
+
+   This means that if the first thing a makefile does is examine the
+last word in this variable, it will be the name of the current makefile.
+Once the current makefile has used `include', however, the last word
+will be the just-included makefile.
+
+   If a makefile named `Makefile' has this content:
+
+     name1 := $(lastword $(MAKEFILE_LIST))
+
+     include inc.mk
+
+     name2 := $(lastword $(MAKEFILE_LIST))
+
+     all:
+             @echo name1 = $(name1)
+             @echo name2 = $(name2)
+
+then you would expect to see this output:
+
+     name1 = Makefile
+     name2 = inc.mk
+
+   *Note Text Functions::, for more information on the `word' and
+`words' functions used above.  *Note The Two Flavors of Variables:
+Flavors, for more information on simply-expanded (`:=') variable
+definitions.
+
+
+File: make.info,  Node: Special Variables,  Next: Remaking Makefiles,  Prev: MAKEFILE_LIST Variable,  Up: Makefiles
+
+3.6 Other Special Variables
+===========================
+
+GNU `make' also supports other special variables.  Unless otherwise
+documented here, these values lose their special properties if they are
+set by a makefile or on the command line.
+
+`.DEFAULT_GOAL'
+     Sets the default goal to be used if no targets were specified on
+     the command line (*note Arguments to Specify the Goals: Goals.).
+     The `.DEFAULT_GOAL' variable allows you to discover the current
+     default goal, restart the default goal selection algorithm by
+     clearing its value, or to explicitly set the default goal.  The
+     following example illustrates these cases:
+
+          # Query the default goal.
+          ifeq ($(.DEFAULT_GOAL),)
+            $(warning no default goal is set)
+          endif
+
+          .PHONY: foo
+          foo: ; @echo $@
+
+          $(warning default goal is $(.DEFAULT_GOAL))
+
+          # Reset the default goal.
+          .DEFAULT_GOAL :=
+
+          .PHONY: bar
+          bar: ; @echo $@
+
+          $(warning default goal is $(.DEFAULT_GOAL))
+
+          # Set our own.
+          .DEFAULT_GOAL := foo
+
+     This makefile prints:
+
+          no default goal is set
+          default goal is foo
+          default goal is bar
+          foo
+
+     Note that assigning more than one target name to `.DEFAULT_GOAL' is
+     illegal and will result in an error.
+
+`MAKE_RESTARTS'
+     This variable is set only if this instance of `make' has restarted
+     (*note How Makefiles Are Remade: Remaking Makefiles.): it will
+     contain the number of times this instance has restarted.  Note
+     this is not the same as recursion (counted by the `MAKELEVEL'
+     variable).  You should not set, modify, or export this variable.
+
+`.VARIABLES'
+     Expands to a list of the _names_ of all global variables defined
+     so far.  This includes variables which have empty values, as well
+     as built-in variables (*note Variables Used by Implicit Rules:
+     Implicit Variables.), but does not include any variables which are
+     only defined in a target-specific context.  Note that any value
+     you assign to this variable will be ignored; it will always return
+     its special value.
+
+`.FEATURES'
+     Expands to a list of special features supported by this version of
+     `make'.  Possible values include:
+
+    `archives'
+          Supports `ar' (archive) files using special filename syntax.
+          *Note Using `make' to Update Archive Files: Archives.
+
+    `check-symlink'
+          Supports the `-L' (`--check-symlink-times') flag.  *Note
+          Summary of Options: Options Summary.
+
+    `else-if'
+          Supports "else if" non-nested conditionals.  *Note Syntax of
+          Conditionals: Conditional Syntax.
+
+    `jobserver'
+          Supports "job server" enhanced parallel builds.  *Note
+          Parallel Execution: Parallel.
+
+    `second-expansion'
+          Supports secondary expansion of prerequisite lists.
+
+    `order-only'
+          Supports order-only prerequisites.  *Note Types of
+          Prerequisites: Prerequisite Types.
+
+    `target-specific'
+          Supports target-specific and pattern-specific variable
+          assignments.  *Note Target-specific Variable Values:
+          Target-specific.
+
+
+`.INCLUDE_DIRS'
+     Expands to a list of directories that `make' searches for included
+     makefiles (*note Including Other Makefiles: Include.).
+
+
+
+File: make.info,  Node: Remaking Makefiles,  Next: Overriding Makefiles,  Prev: Special Variables,  Up: Makefiles
+
+3.7 How Makefiles Are Remade
+============================
+
+Sometimes makefiles can be remade from other files, such as RCS or SCCS
+files.  If a makefile can be remade from other files, you probably want
+`make' to get an up-to-date version of the makefile to read in.
+
+   To this end, after reading in all makefiles, `make' will consider
+each as a goal target and attempt to update it.  If a makefile has a
+rule which says how to update it (found either in that very makefile or
+in another one) or if an implicit rule applies to it (*note Using
+Implicit Rules: Implicit Rules.), it will be updated if necessary.
+After all makefiles have been checked, if any have actually been
+changed, `make' starts with a clean slate and reads all the makefiles
+over again.  (It will also attempt to update each of them over again,
+but normally this will not change them again, since they are already up
+to date.)
+
+   If you know that one or more of your makefiles cannot be remade and
+you want to keep `make' from performing an implicit rule search on
+them, perhaps for efficiency reasons, you can use any normal method of
+preventing implicit rule lookup to do so.  For example, you can write an
+explicit rule with the makefile as the target, and an empty command
+string (*note Using Empty Commands: Empty Commands.).
+
+   If the makefiles specify a double-colon rule to remake a file with
+commands but no prerequisites, that file will always be remade (*note
+Double-Colon::).  In the case of makefiles, a makefile that has a
+double-colon rule with commands but no prerequisites will be remade
+every time `make' is run, and then again after `make' starts over and
+reads the makefiles in again.  This would cause an infinite loop:
+`make' would constantly remake the makefile, and never do anything
+else.  So, to avoid this, `make' will *not* attempt to remake makefiles
+which are specified as targets of a double-colon rule with commands but
+no prerequisites.
+
+   If you do not specify any makefiles to be read with `-f' or `--file'
+options, `make' will try the default makefile names; *note What Name to
+Give Your Makefile: Makefile Names.  Unlike makefiles explicitly
+requested with `-f' or `--file' options, `make' is not certain that
+these makefiles should exist.  However, if a default makefile does not
+exist but can be created by running `make' rules, you probably want the
+rules to be run so that the makefile can be used.
+
+   Therefore, if none of the default makefiles exists, `make' will try
+to make each of them in the same order in which they are searched for
+(*note What Name to Give Your Makefile: Makefile Names.)  until it
+succeeds in making one, or it runs out of names to try.  Note that it
+is not an error if `make' cannot find or make any makefile; a makefile
+is not always necessary.
+
+   When you use the `-t' or `--touch' option (*note Instead of
+Executing the Commands: Instead of Execution.), you would not want to
+use an out-of-date makefile to decide which targets to touch.  So the
+`-t' option has no effect on updating makefiles; they are really
+updated even if `-t' is specified.  Likewise, `-q' (or `--question')
+and `-n' (or `--just-print') do not prevent updating of makefiles,
+because an out-of-date makefile would result in the wrong output for
+other targets.  Thus, `make -f mfile -n foo' will update `mfile', read
+it in, and then print the commands to update `foo' and its prerequisites
+without running them.  The commands printed for `foo' will be those
+specified in the updated contents of `mfile'.
+
+   However, on occasion you might actually wish to prevent updating of
+even the makefiles.  You can do this by specifying the makefiles as
+goals in the command line as well as specifying them as makefiles.
+When the makefile name is specified explicitly as a goal, the options
+`-t' and so on do apply to them.
+
+   Thus, `make -f mfile -n mfile foo' would read the makefile `mfile',
+print the commands needed to update it without actually running them,
+and then print the commands needed to update `foo' without running
+them.  The commands for `foo' will be those specified by the existing
+contents of `mfile'.
+
+
+File: make.info,  Node: Overriding Makefiles,  Next: Reading Makefiles,  Prev: Remaking Makefiles,  Up: Makefiles
+
+3.8 Overriding Part of Another Makefile
+=======================================
+
+Sometimes it is useful to have a makefile that is mostly just like
+another makefile.  You can often use the `include' directive to include
+one in the other, and add more targets or variable definitions.
+However, if the two makefiles give different commands for the same
+target, `make' will not let you just do this.  But there is another way.
+
+   In the containing makefile (the one that wants to include the other),
+you can use a match-anything pattern rule to say that to remake any
+target that cannot be made from the information in the containing
+makefile, `make' should look in another makefile.  *Note Pattern
+Rules::, for more information on pattern rules.
+
+   For example, if you have a makefile called `Makefile' that says how
+to make the target `foo' (and other targets), you can write a makefile
+called `GNUmakefile' that contains:
+
+     foo:
+             frobnicate > foo
+
+     %: force
+             @$(MAKE) -f Makefile $@
+     force: ;
+
+   If you say `make foo', `make' will find `GNUmakefile', read it, and
+see that to make `foo', it needs to run the command `frobnicate > foo'.
+If you say `make bar', `make' will find no way to make `bar' in
+`GNUmakefile', so it will use the commands from the pattern rule: `make
+-f Makefile bar'.  If `Makefile' provides a rule for updating `bar',
+`make' will apply the rule.  And likewise for any other target that
+`GNUmakefile' does not say how to make.
+
+   The way this works is that the pattern rule has a pattern of just
+`%', so it matches any target whatever.  The rule specifies a
+prerequisite `force', to guarantee that the commands will be run even
+if the target file already exists.  We give `force' target empty
+commands to prevent `make' from searching for an implicit rule to build
+it--otherwise it would apply the same match-anything rule to `force'
+itself and create a prerequisite loop!
+
+
+File: make.info,  Node: Reading Makefiles,  Next: Secondary Expansion,  Prev: Overriding Makefiles,  Up: Makefiles
+
+3.9 How `make' Reads a Makefile
+===============================
+
+GNU `make' does its work in two distinct phases.  During the first
+phase it reads all the makefiles, included makefiles, etc. and
+internalizes all the variables and their values, implicit and explicit
+rules, and constructs a dependency graph of all the targets and their
+prerequisites.  During the second phase, `make' uses these internal
+structures to determine what targets will need to be rebuilt and to
+invoke the rules necessary to do so.
+
+   It's important to understand this two-phase approach because it has a
+direct impact on how variable and function expansion happens; this is
+often a source of some confusion when writing makefiles.  Here we will
+present a summary of the phases in which expansion happens for different
+constructs within the makefile.  We say that expansion is "immediate"
+if it happens during the first phase: in this case `make' will expand
+any variables or functions in that section of a construct as the
+makefile is parsed.  We say that expansion is "deferred" if expansion
+is not performed immediately.  Expansion of deferred construct is not
+performed until either the construct appears later in an immediate
+context, or until the second phase.
+
+   You may not be familiar with some of these constructs yet.  You can
+reference this section as you become familiar with them, in later
+chapters.
+
+Variable Assignment
+-------------------
+
+Variable definitions are parsed as follows:
+
+     IMMEDIATE = DEFERRED
+     IMMEDIATE ?= DEFERRED
+     IMMEDIATE := IMMEDIATE
+     IMMEDIATE += DEFERRED or IMMEDIATE
+
+     define IMMEDIATE
+       DEFERRED
+     endef
+
+   For the append operator, `+=', the right-hand side is considered
+immediate if the variable was previously set as a simple variable
+(`:='), and deferred otherwise.
+
+Conditional Statements
+----------------------
+
+All instances of conditional syntax are parsed immediately, in their
+entirety; this includes the `ifdef', `ifeq', `ifndef', and `ifneq'
+forms.  Of course this means that automatic variables cannot be used in
+conditional statements, as automatic variables are not set until the
+command script for that rule is invoked.  If you need to use automatic
+variables in a conditional you _must_ use shell conditional syntax, in
+your command script proper, for these tests, not `make' conditionals.
+
+Rule Definition
+---------------
+
+A rule is always expanded the same way, regardless of the form:
+
+     IMMEDIATE : IMMEDIATE ; DEFERRED
+     	DEFERRED
+
+   That is, the target and prerequisite sections are expanded
+immediately, and the commands used to construct the target are always
+deferred.  This general rule is true for explicit rules, pattern rules,
+suffix rules, static pattern rules, and simple prerequisite definitions.
+
+
+File: make.info,  Node: Secondary Expansion,  Prev: Reading Makefiles,  Up: Makefiles
+
+3.10 Secondary Expansion
+========================
+
+In the previous section we learned that GNU `make' works in two
+distinct phases: a read-in phase and a target-update phase (*note How
+`make' Reads a Makefile: Reading Makefiles.).  GNU make also has the
+ability to enable a _second expansion_ of the prerequisites (only) for
+some or all targets defined in the makefile.  In order for this second
+expansion to occur, the special target `.SECONDEXPANSION' must be
+defined before the first prerequisite list that makes use of this
+feature.
+
+   If that special target is defined then in between the two phases
+mentioned above, right at the end of the read-in phase, all the
+prerequisites of the targets defined after the special target are
+expanded a _second time_.  In most circumstances this secondary
+expansion will have no effect, since all variable and function
+references will have been expanded during the initial parsing of the
+makefiles.  In order to take advantage of the secondary expansion phase
+of the parser, then, it's necessary to _escape_ the variable or
+function reference in the makefile.  In this case the first expansion
+merely un-escapes the reference but doesn't expand it, and expansion is
+left to the secondary expansion phase.  For example, consider this
+makefile:
+
+     .SECONDEXPANSION:
+     ONEVAR = onefile
+     TWOVAR = twofile
+     myfile: $(ONEVAR) $$(TWOVAR)
+
+   After the first expansion phase the prerequisites list of the
+`myfile' target will be `onefile' and `$(TWOVAR)'; the first
+(unescaped) variable reference to ONEVAR is expanded, while the second
+(escaped) variable reference is simply unescaped, without being
+recognized as a variable reference.  Now during the secondary expansion
+the first word is expanded again but since it contains no variable or
+function references it remains the static value `onefile', while the
+second word is now a normal reference to the variable TWOVAR, which is
+expanded to the value `twofile'.  The final result is that there are
+two prerequisites, `onefile' and `twofile'.
+
+   Obviously, this is not a very interesting case since the same result
+could more easily have been achieved simply by having both variables
+appear, unescaped, in the prerequisites list.  One difference becomes
+apparent if the variables are reset; consider this example:
+
+     .SECONDEXPANSION:
+     AVAR = top
+     onefile: $(AVAR)
+     twofile: $$(AVAR)
+     AVAR = bottom
+
+   Here the prerequisite of `onefile' will be expanded immediately, and
+resolve to the value `top', while the prerequisite of `twofile' will
+not be full expanded until the secondary expansion and yield a value of
+`bottom'.
+
+   This is marginally more exciting, but the true power of this feature
+only becomes apparent when you discover that secondary expansions
+always take place within the scope of the automatic variables for that
+target.  This means that you can use variables such as `$@', `$*', etc.
+during the second expansion and they will have their expected values,
+just as in the command script.  All you have to do is defer the
+expansion by escaping the `$'.  Also, secondary expansion occurs for
+both explicit and implicit (pattern) rules.  Knowing this, the possible
+uses for this feature increase dramatically.  For example:
+
+     .SECONDEXPANSION:
+     main_OBJS := main.o try.o test.o
+     lib_OBJS := lib.o api.o
+
+     main lib: $$($$@_OBJS)
+
+   Here, after the initial expansion the prerequisites of both the
+`main' and `lib' targets will be `$($@_OBJS)'.  During the secondary
+expansion, the `$@' variable is set to the name of the target and so
+the expansion for the `main' target will yield `$(main_OBJS)', or
+`main.o try.o test.o', while the secondary expansion for the `lib'
+target will yield `$(lib_OBJS)', or `lib.o api.o'.
+
+   You can also mix functions here, as long as they are properly
+escaped:
+
+     main_SRCS := main.c try.c test.c
+     lib_SRCS := lib.c api.c
+
+     .SECONDEXPANSION:
+     main lib: $$(patsubst %.c,%.o,$$($$@_SRCS))
+
+   This version allows users to specify source files rather than object
+files, but gives the same resulting prerequisites list as the previous
+example.
+
+   Evaluation of automatic variables during the secondary expansion
+phase, especially of the target name variable `$$@', behaves similarly
+to evaluation within command scripts.  However, there are some subtle
+differences and "corner cases" which come into play for the different
+types of rule definitions that `make' understands.  The subtleties of
+using the different automatic variables are described below.
+
+Secondary Expansion of Explicit Rules
+-------------------------------------
+
+During the secondary expansion of explicit rules, `$$@' and `$$%'
+evaluate, respectively, to the file name of the target and, when the
+target is an archive member, the target member name.  The `$$<'
+variable evaluates to the first prerequisite in the first rule for this
+target.  `$$^' and `$$+' evaluate to the list of all prerequisites of
+rules _that have already appeared_ for the same target (`$$+' with
+repetitions and `$$^' without).  The following example will help
+illustrate these behaviors:
+
+     .SECONDEXPANSION:
+
+     foo: foo.1 bar.1 $$< $$^ $$+    # line #1
+
+     foo: foo.2 bar.2 $$< $$^ $$+    # line #2
+
+     foo: foo.3 bar.3 $$< $$^ $$+    # line #3
+
+   In the first prerequisite list, all three variables (`$$<', `$$^',
+and `$$+') expand to the empty string.  In the second, they will have
+values `foo.1', `foo.1 bar.1', and `foo.1 bar.1' respectively.  In the
+third they will have values `foo.1', `foo.1 bar.1 foo.2 bar.2', and
+`foo.1 bar.1 foo.2 bar.2' respectively.
+
+   Rules undergo secondary expansion in makefile order, except that the
+rule with the command script is always evaluated last.
+
+   The variables `$$?' and `$$*' are not available and expand to the
+empty string.
+
+Secondary Expansion of Static Pattern Rules
+-------------------------------------------
+
+Rules for secondary expansion of static pattern rules are identical to
+those for explicit rules, above, with one exception: for static pattern
+rules the `$$*' variable is set to the pattern stem.  As with explicit
+rules, `$$?' is not available and expands to the empty string.
+
+Secondary Expansion of Implicit Rules
+-------------------------------------
+
+As `make' searches for an implicit rule, it substitutes the stem and
+then performs secondary expansion for every rule with a matching target
+pattern.  The value of the automatic variables is derived in the same
+fashion as for static pattern rules.  As an example:
+
+     .SECONDEXPANSION:
+
+     foo: bar
+
+     foo foz: fo%: bo%
+
+     %oo: $$< $$^ $$+ $$*
+
+   When the implicit rule is tried for target `foo', `$$<' expands to
+`bar', `$$^' expands to `bar boo', `$$+' also expands to `bar boo', and
+`$$*' expands to `f'.
+
+   Note that the directory prefix (D), as described in *Note Implicit
+Rule Search Algorithm: Implicit Rule Search, is appended (after
+expansion) to all the patterns in the prerequisites list.  As an
+example:
+
+     .SECONDEXPANSION:
+
+     /tmp/foo.o:
+
+     %.o: $$(addsuffix /%.c,foo bar) foo.h
+
+   The prerequisite list after the secondary expansion and directory
+prefix reconstruction will be `/tmp/foo/foo.c /tmp/var/bar/foo.c
+foo.h'.  If you are not interested in this reconstruction, you can use
+`$$*' instead of `%' in the prerequisites list.
+
+
+File: make.info,  Node: Rules,  Next: Commands,  Prev: Makefiles,  Up: Top
+
+4 Writing Rules
+***************
+
+A "rule" appears in the makefile and says when and how to remake
+certain files, called the rule's "targets" (most often only one per
+rule).  It lists the other files that are the "prerequisites" of the
+target, and "commands" to use to create or update the target.
+
+   The order of rules is not significant, except for determining the
+"default goal": the target for `make' to consider, if you do not
+otherwise specify one.  The default goal is the target of the first
+rule in the first makefile.  If the first rule has multiple targets,
+only the first target is taken as the default.  There are two
+exceptions: a target starting with a period is not a default unless it
+contains one or more slashes, `/', as well; and, a target that defines
+a pattern rule has no effect on the default goal.  (*Note Defining and
+Redefining Pattern Rules: Pattern Rules.)
+
+   Therefore, we usually write the makefile so that the first rule is
+the one for compiling the entire program or all the programs described
+by the makefile (often with a target called `all').  *Note Arguments to
+Specify the Goals: Goals.
+
+* Menu:
+
+* Rule Example::                An example explained.
+* Rule Syntax::                 General syntax explained.
+* Prerequisite Types::          There are two types of prerequisites.
+* Wildcards::                   Using wildcard characters such as `*'.
+* Directory Search::            Searching other directories for source files.
+* Phony Targets::               Using a target that is not a real file's name.
+* Force Targets::               You can use a target without commands
+                                  or prerequisites to mark other targets
+                                  as phony.
+* Empty Targets::               When only the date matters and the
+                                  files are empty.
+* Special Targets::             Targets with special built-in meanings.
+* Multiple Targets::            When to make use of several targets in a rule.
+* Multiple Rules::              How to use several rules with the same target.
+* Static Pattern::              Static pattern rules apply to multiple targets
+                                  and can vary the prerequisites according to
+                                  the target name.
+* Double-Colon::                How to use a special kind of rule to allow
+                                  several independent rules for one target.
+* Automatic Prerequisites::     How to automatically generate rules giving
+                                  prerequisites from source files themselves.
+
+
+File: make.info,  Node: Rule Example,  Next: Rule Syntax,  Prev: Rules,  Up: Rules
+
+4.1 Rule Example
+================
+
+Here is an example of a rule:
+
+     foo.o : foo.c defs.h       # module for twiddling the frobs
+             cc -c -g foo.c
+
+   Its target is `foo.o' and its prerequisites are `foo.c' and
+`defs.h'.  It has one command, which is `cc -c -g foo.c'.  The command
+line starts with a tab to identify it as a command.
+
+   This rule says two things:
+
+   * How to decide whether `foo.o' is out of date: it is out of date if
+     it does not exist, or if either `foo.c' or `defs.h' is more recent
+     than it.
+
+   * How to update the file `foo.o': by running `cc' as stated.  The
+     command does not explicitly mention `defs.h', but we presume that
+     `foo.c' includes it, and that that is why `defs.h' was added to
+     the prerequisites.
+
+
+File: make.info,  Node: Rule Syntax,  Next: Prerequisite Types,  Prev: Rule Example,  Up: Rules
+
+4.2 Rule Syntax
+===============
+
+In general, a rule looks like this:
+
+     TARGETS : PREREQUISITES
+             COMMAND
+             ...
+
+or like this:
+
+     TARGETS : PREREQUISITES ; COMMAND
+             COMMAND
+             ...
+
+   The TARGETS are file names, separated by spaces.  Wildcard
+characters may be used (*note Using Wildcard Characters in File Names:
+Wildcards.) and a name of the form `A(M)' represents member M in
+archive file A (*note Archive Members as Targets: Archive Members.).
+Usually there is only one target per rule, but occasionally there is a
+reason to have more (*note Multiple Targets in a Rule: Multiple
+Targets.).
+
+   The COMMAND lines start with a tab character.  The first command may
+appear on the line after the prerequisites, with a tab character, or may
+appear on the same line, with a semicolon.  Either way, the effect is
+the same.  There are other differences in the syntax of command lines.
+*Note Writing the Commands in Rules: Commands.
+
+   Because dollar signs are used to start `make' variable references,
+if you really want a dollar sign in a target or prerequisite you must
+write two of them, `$$' (*note How to Use Variables: Using Variables.).
+If you have enabled secondary expansion (*note Secondary Expansion::)
+and you want a literal dollar sign in the prerequisites lise, you must
+actually write _four_ dollar signs (`$$$$').
+
+   You may split a long line by inserting a backslash followed by a
+newline, but this is not required, as `make' places no limit on the
+length of a line in a makefile.
+
+   A rule tells `make' two things: when the targets are out of date,
+and how to update them when necessary.
+
+   The criterion for being out of date is specified in terms of the
+PREREQUISITES, which consist of file names separated by spaces.
+(Wildcards and archive members (*note Archives::) are allowed here too.)
+A target is out of date if it does not exist or if it is older than any
+of the prerequisites (by comparison of last-modification times).  The
+idea is that the contents of the target file are computed based on
+information in the prerequisites, so if any of the prerequisites
+changes, the contents of the existing target file are no longer
+necessarily valid.
+
+   How to update is specified by COMMANDS.  These are lines to be
+executed by the shell (normally `sh'), but with some extra features
+(*note Writing the Commands in Rules: Commands.).
+
+
+File: make.info,  Node: Prerequisite Types,  Next: Wildcards,  Prev: Rule Syntax,  Up: Rules
+
+4.3 Types of Prerequisites
+==========================
+
+There are actually two different types of prerequisites understood by
+GNU `make': normal prerequisites such as described in the previous
+section, and "order-only" prerequisites.  A normal prerequisite makes
+two statements: first, it imposes an order of execution of build
+commands: any commands necessary to build any of a target's
+prerequisites will be fully executed before any commands necessary to
+build the target.  Second, it imposes a dependency relationship: if any
+prerequisite is newer than the target, then the target is considered
+out-of-date and must be rebuilt.
+
+   Normally, this is exactly what you want: if a target's prerequisite
+is updated, then the target should also be updated.
+
+   Occasionally, however, you have a situation where you want to impose
+a specific ordering on the rules to be invoked _without_ forcing the
+target to be updated if one of those rules is executed.  In that case,
+you want to define "order-only" prerequisites.  Order-only
+prerequisites can be specified by placing a pipe symbol (`|') in the
+prerequisites list: any prerequisites to the left of the pipe symbol
+are normal; any prerequisites to the right are order-only:
+
+     TARGETS : NORMAL-PREREQUISITES | ORDER-ONLY-PREREQUISITES
+
+   The normal prerequisites section may of course be empty.  Also, you
+may still declare multiple lines of prerequisites for the same target:
+they are appended appropriately.  Note that if you declare the same
+file to be both a normal and an order-only prerequisite, the normal
+prerequisite takes precedence (since they are a strict superset of the
+behavior of an order-only prerequisite).
+
+
+File: make.info,  Node: Wildcards,  Next: Directory Search,  Prev: Prerequisite Types,  Up: Rules
+
+4.4 Using Wildcard Characters in File Names
+===========================================
+
+A single file name can specify many files using "wildcard characters".
+The wildcard characters in `make' are `*', `?' and `[...]', the same as
+in the Bourne shell.  For example, `*.c' specifies a list of all the
+files (in the working directory) whose names end in `.c'.
+
+   The character `~' at the beginning of a file name also has special
+significance.  If alone, or followed by a slash, it represents your home
+directory.  For example `~/bin' expands to `/home/you/bin'.  If the `~'
+is followed by a word, the string represents the home directory of the
+user named by that word.  For example `~john/bin' expands to
+`/home/john/bin'.  On systems which don't have a home directory for
+each user (such as MS-DOS or MS-Windows), this functionality can be
+simulated by setting the environment variable HOME.
+
+   Wildcard expansion is performed by `make' automatically in targets
+and in prerequisites.  In commands the shell is responsible for
+wildcard expansion.  In other contexts, wildcard expansion happens only
+if you request it explicitly with the `wildcard' function.
+
+   The special significance of a wildcard character can be turned off by
+preceding it with a backslash.  Thus, `foo\*bar' would refer to a
+specific file whose name consists of `foo', an asterisk, and `bar'.
+
+* Menu:
+
+* Wildcard Examples::           Several examples
+* Wildcard Pitfall::            Problems to avoid.
+* Wildcard Function::           How to cause wildcard expansion where
+                                  it does not normally take place.
+
+
+File: make.info,  Node: Wildcard Examples,  Next: Wildcard Pitfall,  Prev: Wildcards,  Up: Wildcards
+
+4.4.1 Wildcard Examples
+-----------------------
+
+Wildcards can be used in the commands of a rule, where they are expanded
+by the shell.  For example, here is a rule to delete all the object
+files:
+
+     clean:
+             rm -f *.o
+
+   Wildcards are also useful in the prerequisites of a rule.  With the
+following rule in the makefile, `make print' will print all the `.c'
+files that have changed since the last time you printed them:
+
+     print: *.c
+             lpr -p $?
+             touch print
+
+This rule uses `print' as an empty target file; see *Note Empty Target
+Files to Record Events: Empty Targets.  (The automatic variable `$?' is
+used to print only those files that have changed; see *Note Automatic
+Variables::.)
+
+   Wildcard expansion does not happen when you define a variable.
+Thus, if you write this:
+
+     objects = *.o
+
+then the value of the variable `objects' is the actual string `*.o'.
+However, if you use the value of `objects' in a target, prerequisite or
+command, wildcard expansion will take place at that time.  To set
+`objects' to the expansion, instead use:
+
+     objects := $(wildcard *.o)
+
+*Note Wildcard Function::.
+
+
+File: make.info,  Node: Wildcard Pitfall,  Next: Wildcard Function,  Prev: Wildcard Examples,  Up: Wildcards
+
+4.4.2 Pitfalls of Using Wildcards
+---------------------------------
+
+Now here is an example of a naive way of using wildcard expansion, that
+does not do what you would intend.  Suppose you would like to say that
+the executable file `foo' is made from all the object files in the
+directory, and you write this:
+
+     objects = *.o
+
+     foo : $(objects)
+             cc -o foo $(CFLAGS) $(objects)
+
+The value of `objects' is the actual string `*.o'.  Wildcard expansion
+happens in the rule for `foo', so that each _existing_ `.o' file
+becomes a prerequisite of `foo' and will be recompiled if necessary.
+
+   But what if you delete all the `.o' files?  When a wildcard matches
+no files, it is left as it is, so then `foo' will depend on the
+oddly-named file `*.o'.  Since no such file is likely to exist, `make'
+will give you an error saying it cannot figure out how to make `*.o'.
+This is not what you want!
+
+   Actually it is possible to obtain the desired result with wildcard
+expansion, but you need more sophisticated techniques, including the
+`wildcard' function and string substitution.  *Note The Function
+`wildcard': Wildcard Function.
+
+   Microsoft operating systems (MS-DOS and MS-Windows) use backslashes
+to separate directories in pathnames, like so:
+
+       c:\foo\bar\baz.c
+
+   This is equivalent to the Unix-style `c:/foo/bar/baz.c' (the `c:'
+part is the so-called drive letter).  When `make' runs on these
+systems, it supports backslashes as well as the Unix-style forward
+slashes in pathnames.  However, this support does _not_ include the
+wildcard expansion, where backslash is a quote character.  Therefore,
+you _must_ use Unix-style slashes in these cases.
+
+
+File: make.info,  Node: Wildcard Function,  Prev: Wildcard Pitfall,  Up: Wildcards
+
+4.4.3 The Function `wildcard'
+-----------------------------
+
+Wildcard expansion happens automatically in rules.  But wildcard
+expansion does not normally take place when a variable is set, or
+inside the arguments of a function.  If you want to do wildcard
+expansion in such places, you need to use the `wildcard' function, like
+this:
+
+     $(wildcard PATTERN...)
+
+This string, used anywhere in a makefile, is replaced by a
+space-separated list of names of existing files that match one of the
+given file name patterns.  If no existing file name matches a pattern,
+then that pattern is omitted from the output of the `wildcard'
+function.  Note that this is different from how unmatched wildcards
+behave in rules, where they are used verbatim rather than ignored
+(*note Wildcard Pitfall::).
+
+   One use of the `wildcard' function is to get a list of all the C
+source files in a directory, like this:
+
+     $(wildcard *.c)
+
+   We can change the list of C source files into a list of object files
+by replacing the `.c' suffix with `.o' in the result, like this:
+
+     $(patsubst %.c,%.o,$(wildcard *.c))
+
+(Here we have used another function, `patsubst'.  *Note Functions for
+String Substitution and Analysis: Text Functions.)
+
+   Thus, a makefile to compile all C source files in the directory and
+then link them together could be written as follows:
+
+     objects := $(patsubst %.c,%.o,$(wildcard *.c))
+
+     foo : $(objects)
+             cc -o foo $(objects)
+
+(This takes advantage of the implicit rule for compiling C programs, so
+there is no need to write explicit rules for compiling the files.
+*Note The Two Flavors of Variables: Flavors, for an explanation of
+`:=', which is a variant of `='.)
+
+
+File: make.info,  Node: Directory Search,  Next: Phony Targets,  Prev: Wildcards,  Up: Rules
+
+4.5 Searching Directories for Prerequisites
+===========================================
+
+For large systems, it is often desirable to put sources in a separate
+directory from the binaries.  The "directory search" features of `make'
+facilitate this by searching several directories automatically to find
+a prerequisite.  When you redistribute the files among directories, you
+do not need to change the individual rules, just the search paths.
+
+* Menu:
+
+* General Search::              Specifying a search path that applies
+                                  to every prerequisite.
+* Selective Search::            Specifying a search path
+                                  for a specified class of names.
+* Search Algorithm::            When and how search paths are applied.
+* Commands/Search::             How to write shell commands that work together
+                                  with search paths.
+* Implicit/Search::             How search paths affect implicit rules.
+* Libraries/Search::            Directory search for link libraries.
+
+
+File: make.info,  Node: General Search,  Next: Selective Search,  Prev: Directory Search,  Up: Directory Search
+
+4.5.1 `VPATH': Search Path for All Prerequisites
+------------------------------------------------
+
+The value of the `make' variable `VPATH' specifies a list of
+directories that `make' should search.  Most often, the directories are
+expected to contain prerequisite files that are not in the current
+directory; however, `make' uses `VPATH' as a search list for both
+prerequisites and targets of rules.
+
+   Thus, if a file that is listed as a target or prerequisite does not
+exist in the current directory, `make' searches the directories listed
+in `VPATH' for a file with that name.  If a file is found in one of
+them, that file may become the prerequisite (see below).  Rules may then
+specify the names of files in the prerequisite list as if they all
+existed in the current directory.  *Note Writing Shell Commands with
+Directory Search: Commands/Search.
+
+   In the `VPATH' variable, directory names are separated by colons or
+blanks.  The order in which directories are listed is the order followed
+by `make' in its search.  (On MS-DOS and MS-Windows, semi-colons are
+used as separators of directory names in `VPATH', since the colon can
+be used in the pathname itself, after the drive letter.)
+
+   For example,
+
+     VPATH = src:../headers
+
+specifies a path containing two directories, `src' and `../headers',
+which `make' searches in that order.
+
+   With this value of `VPATH', the following rule,
+
+     foo.o : foo.c
+
+is interpreted as if it were written like this:
+
+     foo.o : src/foo.c
+
+assuming the file `foo.c' does not exist in the current directory but
+is found in the directory `src'.
+
+
+File: make.info,  Node: Selective Search,  Next: Search Algorithm,  Prev: General Search,  Up: Directory Search
+
+4.5.2 The `vpath' Directive
+---------------------------
+
+Similar to the `VPATH' variable, but more selective, is the `vpath'
+directive (note lower case), which allows you to specify a search path
+for a particular class of file names: those that match a particular
+pattern.  Thus you can supply certain search directories for one class
+of file names and other directories (or none) for other file names.
+
+   There are three forms of the `vpath' directive:
+
+`vpath PATTERN DIRECTORIES'
+     Specify the search path DIRECTORIES for file names that match
+     PATTERN.
+
+     The search path, DIRECTORIES, is a list of directories to be
+     searched, separated by colons (semi-colons on MS-DOS and
+     MS-Windows) or blanks, just like the search path used in the
+     `VPATH' variable.
+
+`vpath PATTERN'
+     Clear out the search path associated with PATTERN.
+
+`vpath'
+     Clear all search paths previously specified with `vpath'
+     directives.
+
+   A `vpath' pattern is a string containing a `%' character.  The
+string must match the file name of a prerequisite that is being searched
+for, the `%' character matching any sequence of zero or more characters
+(as in pattern rules; *note Defining and Redefining Pattern Rules:
+Pattern Rules.).  For example, `%.h' matches files that end in `.h'.
+(If there is no `%', the pattern must match the prerequisite exactly,
+which is not useful very often.)
+
+   `%' characters in a `vpath' directive's pattern can be quoted with
+preceding backslashes (`\').  Backslashes that would otherwise quote
+`%' characters can be quoted with more backslashes.  Backslashes that
+quote `%' characters or other backslashes are removed from the pattern
+before it is compared to file names.  Backslashes that are not in
+danger of quoting `%' characters go unmolested.
+
+   When a prerequisite fails to exist in the current directory, if the
+PATTERN in a `vpath' directive matches the name of the prerequisite
+file, then the DIRECTORIES in that directive are searched just like
+(and before) the directories in the `VPATH' variable.
+
+   For example,
+
+     vpath %.h ../headers
+
+tells `make' to look for any prerequisite whose name ends in `.h' in
+the directory `../headers' if the file is not found in the current
+directory.
+
+   If several `vpath' patterns match the prerequisite file's name, then
+`make' processes each matching `vpath' directive one by one, searching
+all the directories mentioned in each directive.  `make' handles
+multiple `vpath' directives in the order in which they appear in the
+makefile; multiple directives with the same pattern are independent of
+each other.
+
+   Thus,
+
+     vpath %.c foo
+     vpath %   blish
+     vpath %.c bar
+
+will look for a file ending in `.c' in `foo', then `blish', then `bar',
+while
+
+     vpath %.c foo:bar
+     vpath %   blish
+
+will look for a file ending in `.c' in `foo', then `bar', then `blish'.
+
+
+File: make.info,  Node: Search Algorithm,  Next: Commands/Search,  Prev: Selective Search,  Up: Directory Search
+
+4.5.3 How Directory Searches are Performed
+------------------------------------------
+
+When a prerequisite is found through directory search, regardless of
+type (general or selective), the pathname located may not be the one
+that `make' actually provides you in the prerequisite list.  Sometimes
+the path discovered through directory search is thrown away.
+
+   The algorithm `make' uses to decide whether to keep or abandon a
+path found via directory search is as follows:
+
+  1. If a target file does not exist at the path specified in the
+     makefile, directory search is performed.
+
+  2. If the directory search is successful, that path is kept and this
+     file is tentatively stored as the target.
+
+  3. All prerequisites of this target are examined using this same
+     method.
+
+  4. After processing the prerequisites, the target may or may not need
+     to be rebuilt:
+
+       a. If the target does _not_ need to be rebuilt, the path to the
+          file found during directory search is used for any
+          prerequisite lists which contain this target.  In short, if
+          `make' doesn't need to rebuild the target then you use the
+          path found via directory search.
+
+       b. If the target _does_ need to be rebuilt (is out-of-date), the
+          pathname found during directory search is _thrown away_, and
+          the target is rebuilt using the file name specified in the
+          makefile.  In short, if `make' must rebuild, then the target
+          is rebuilt locally, not in the directory found via directory
+          search.
+
+   This algorithm may seem complex, but in practice it is quite often
+exactly what you want.
+
+   Other versions of `make' use a simpler algorithm: if the file does
+not exist, and it is found via directory search, then that pathname is
+always used whether or not the target needs to be built.  Thus, if the
+target is rebuilt it is created at the pathname discovered during
+directory search.
+
+   If, in fact, this is the behavior you want for some or all of your
+directories, you can use the `GPATH' variable to indicate this to
+`make'.
+
+   `GPATH' has the same syntax and format as `VPATH' (that is, a space-
+or colon-delimited list of pathnames).  If an out-of-date target is
+found by directory search in a directory that also appears in `GPATH',
+then that pathname is not thrown away.  The target is rebuilt using the
+expanded path.
+
+
+File: make.info,  Node: Commands/Search,  Next: Implicit/Search,  Prev: Search Algorithm,  Up: Directory Search
+
+4.5.4 Writing Shell Commands with Directory Search
+--------------------------------------------------
+
+When a prerequisite is found in another directory through directory
+search, this cannot change the commands of the rule; they will execute
+as written.  Therefore, you must write the commands with care so that
+they will look for the prerequisite in the directory where `make' finds
+it.
+
+   This is done with the "automatic variables" such as `$^' (*note
+Automatic Variables::).  For instance, the value of `$^' is a list of
+all the prerequisites of the rule, including the names of the
+directories in which they were found, and the value of `$@' is the
+target.  Thus:
+
+     foo.o : foo.c
+             cc -c $(CFLAGS) $^ -o $@
+
+(The variable `CFLAGS' exists so you can specify flags for C
+compilation by implicit rules; we use it here for consistency so it will
+affect all C compilations uniformly; *note Variables Used by Implicit
+Rules: Implicit Variables.)
+
+   Often the prerequisites include header files as well, which you do
+not want to mention in the commands.  The automatic variable `$<' is
+just the first prerequisite:
+
+     VPATH = src:../headers
+     foo.o : foo.c defs.h hack.h
+             cc -c $(CFLAGS) $< -o $@
+
+
+File: make.info,  Node: Implicit/Search,  Next: Libraries/Search,  Prev: Commands/Search,  Up: Directory Search
+
+4.5.5 Directory Search and Implicit Rules
+-----------------------------------------
+
+The search through the directories specified in `VPATH' or with `vpath'
+also happens during consideration of implicit rules (*note Using
+Implicit Rules: Implicit Rules.).
+
+   For example, when a file `foo.o' has no explicit rule, `make'
+considers implicit rules, such as the built-in rule to compile `foo.c'
+if that file exists.  If such a file is lacking in the current
+directory, the appropriate directories are searched for it.  If `foo.c'
+exists (or is mentioned in the makefile) in any of the directories, the
+implicit rule for C compilation is applied.
+
+   The commands of implicit rules normally use automatic variables as a
+matter of necessity; consequently they will use the file names found by
+directory search with no extra effort.
+
+
+File: make.info,  Node: Libraries/Search,  Prev: Implicit/Search,  Up: Directory Search
+
+4.5.6 Directory Search for Link Libraries
+-----------------------------------------
+
+Directory search applies in a special way to libraries used with the
+linker.  This special feature comes into play when you write a
+prerequisite whose name is of the form `-lNAME'.  (You can tell
+something strange is going on here because the prerequisite is normally
+the name of a file, and the _file name_ of a library generally looks
+like `libNAME.a', not like `-lNAME'.)
+
+   When a prerequisite's name has the form `-lNAME', `make' handles it
+specially by searching for the file `libNAME.so' in the current
+directory, in directories specified by matching `vpath' search paths
+and the `VPATH' search path, and then in the directories `/lib',
+`/usr/lib', and `PREFIX/lib' (normally `/usr/local/lib', but
+MS-DOS/MS-Windows versions of `make' behave as if PREFIX is defined to
+be the root of the DJGPP installation tree).
+
+   If that file is not found, then the file `libNAME.a' is searched
+for, in the same directories as above.
+
+   For example, if there is a `/usr/lib/libcurses.a' library on your
+system (and no `/usr/lib/libcurses.so' file), then
+
+     foo : foo.c -lcurses
+             cc $^ -o $@
+
+would cause the command `cc foo.c /usr/lib/libcurses.a -o foo' to be
+executed when `foo' is older than `foo.c' or than
+`/usr/lib/libcurses.a'.
+
+   Although the default set of files to be searched for is `libNAME.so'
+and `libNAME.a', this is customizable via the `.LIBPATTERNS' variable.
+Each word in the value of this variable is a pattern string.  When a
+prerequisite like `-lNAME' is seen, `make' will replace the percent in
+each pattern in the list with NAME and perform the above directory
+searches using that library filename.  If no library is found, the next
+word in the list will be used.
+
+   The default value for `.LIBPATTERNS' is `lib%.so lib%.a', which
+provides the default behavior described above.
+
+   You can turn off link library expansion completely by setting this
+variable to an empty value.
+
+
+File: make.info,  Node: Phony Targets,  Next: Force Targets,  Prev: Directory Search,  Up: Rules
+
+4.6 Phony Targets
+=================
+
+A phony target is one that is not really the name of a file.  It is
+just a name for some commands to be executed when you make an explicit
+request.  There are two reasons to use a phony target: to avoid a
+conflict with a file of the same name, and to improve performance.
+
+   If you write a rule whose commands will not create the target file,
+the commands will be executed every time the target comes up for
+remaking.  Here is an example:
+
+     clean:
+             rm *.o temp
+
+Because the `rm' command does not create a file named `clean', probably
+no such file will ever exist.  Therefore, the `rm' command will be
+executed every time you say `make clean'.  
+
+   The phony target will cease to work if anything ever does create a
+file named `clean' in this directory.  Since it has no prerequisites,
+the file `clean' would inevitably be considered up to date, and its
+commands would not be executed.  To avoid this problem, you can
+explicitly declare the target to be phony, using the special target
+`.PHONY' (*note Special Built-in Target Names: Special Targets.) as
+follows:
+
+     .PHONY : clean
+
+Once this is done, `make clean' will run the commands regardless of
+whether there is a file named `clean'.
+
+   Since it knows that phony targets do not name actual files that
+could be remade from other files, `make' skips the implicit rule search
+for phony targets (*note Implicit Rules::).  This is why declaring a
+target phony is good for performance, even if you are not worried about
+the actual file existing.
+
+   Thus, you first write the line that states that `clean' is a phony
+target, then you write the rule, like this:
+
+     .PHONY: clean
+     clean:
+             rm *.o temp
+
+   Another example of the usefulness of phony targets is in conjunction
+with recursive invocations of `make' (for more information, see *Note
+Recursive Use of `make': Recursion.).  In this case the makefile will
+often contain a variable which lists a number of subdirectories to be
+built.  One way to handle this is with one rule whose command is a
+shell loop over the subdirectories, like this:
+
+     SUBDIRS = foo bar baz
+
+     subdirs:
+             for dir in $(SUBDIRS); do \
+               $(MAKE) -C $$dir; \
+             done
+
+   There are a few problems with this method, however.  First, any error
+detected in a submake is not noted by this rule, so it will continue to
+build the rest of the directories even when one fails.  This can be
+overcome by adding shell commands to note the error and exit, but then
+it will do so even if `make' is invoked with the `-k' option, which is
+unfortunate.  Second, and perhaps more importantly, you cannot take
+advantage of `make''s ability to build targets in parallel (*note
+Parallel Execution: Parallel.), since there is only one rule.
+
+   By declaring the subdirectories as phony targets (you must do this as
+the subdirectory obviously always exists; otherwise it won't be built)
+you can remove these problems:
+
+     SUBDIRS = foo bar baz
+
+     .PHONY: subdirs $(SUBDIRS)
+
+     subdirs: $(SUBDIRS)
+
+     $(SUBDIRS):
+             $(MAKE) -C $@
+
+     foo: baz
+
+   Here we've also declared that the `foo' subdirectory cannot be built
+until after the `baz' subdirectory is complete; this kind of
+relationship declaration is particularly important when attempting
+parallel builds.
+
+   A phony target should not be a prerequisite of a real target file;
+if it is, its commands are run every time `make' goes to update that
+file.  As long as a phony target is never a prerequisite of a real
+target, the phony target commands will be executed only when the phony
+target is a specified goal (*note Arguments to Specify the Goals:
+Goals.).
+
+   Phony targets can have prerequisites.  When one directory contains
+multiple programs, it is most convenient to describe all of the
+programs in one makefile `./Makefile'.  Since the target remade by
+default will be the first one in the makefile, it is common to make
+this a phony target named `all' and give it, as prerequisites, all the
+individual programs.  For example:
+
+     all : prog1 prog2 prog3
+     .PHONY : all
+
+     prog1 : prog1.o utils.o
+             cc -o prog1 prog1.o utils.o
+
+     prog2 : prog2.o
+             cc -o prog2 prog2.o
+
+     prog3 : prog3.o sort.o utils.o
+             cc -o prog3 prog3.o sort.o utils.o
+
+Now you can say just `make' to remake all three programs, or specify as
+arguments the ones to remake (as in `make prog1 prog3').  Phoniness is
+not inherited: the prerequisites of a phony target are not themselves
+phony, unless explicitly declared to be so.
+
+   When one phony target is a prerequisite of another, it serves as a
+subroutine of the other.  For example, here `make cleanall' will delete
+the object files, the difference files, and the file `program':
+
+     .PHONY: cleanall cleanobj cleandiff
+
+     cleanall : cleanobj cleandiff
+             rm program
+
+     cleanobj :
+             rm *.o
+
+     cleandiff :
+             rm *.diff
+
+
+File: make.info,  Node: Force Targets,  Next: Empty Targets,  Prev: Phony Targets,  Up: Rules
+
+4.7 Rules without Commands or Prerequisites
+===========================================
+
+If a rule has no prerequisites or commands, and the target of the rule
+is a nonexistent file, then `make' imagines this target to have been
+updated whenever its rule is run.  This implies that all targets
+depending on this one will always have their commands run.
+
+   An example will illustrate this:
+
+     clean: FORCE
+             rm $(objects)
+     FORCE:
+
+   Here the target `FORCE' satisfies the special conditions, so the
+target `clean' that depends on it is forced to run its commands.  There
+is nothing special about the name `FORCE', but that is one name
+commonly used this way.
+
+   As you can see, using `FORCE' this way has the same results as using
+`.PHONY: clean'.
+
+   Using `.PHONY' is more explicit and more efficient.  However, other
+versions of `make' do not support `.PHONY'; thus `FORCE' appears in
+many makefiles.  *Note Phony Targets::.
+
+
+File: make.info,  Node: Empty Targets,  Next: Special Targets,  Prev: Force Targets,  Up: Rules
+
+4.8 Empty Target Files to Record Events
+=======================================
+
+The "empty target" is a variant of the phony target; it is used to hold
+commands for an action that you request explicitly from time to time.
+Unlike a phony target, this target file can really exist; but the file's
+contents do not matter, and usually are empty.
+
+   The purpose of the empty target file is to record, with its
+last-modification time, when the rule's commands were last executed.  It
+does so because one of the commands is a `touch' command to update the
+target file.
+
+   The empty target file should have some prerequisites (otherwise it
+doesn't make sense).  When you ask to remake the empty target, the
+commands are executed if any prerequisite is more recent than the
+target; in other words, if a prerequisite has changed since the last
+time you remade the target.  Here is an example:
+
+     print: foo.c bar.c
+             lpr -p $?
+             touch print
+   
+With this rule, `make print' will execute the `lpr' command if either
+source file has changed since the last `make print'.  The automatic
+variable `$?' is used to print only those files that have changed
+(*note Automatic Variables::).
+
+
+File: make.info,  Node: Special Targets,  Next: Multiple Targets,  Prev: Empty Targets,  Up: Rules
+
+4.9 Special Built-in Target Names
+=================================
+
+Certain names have special meanings if they appear as targets.
+
+`.PHONY'
+     The prerequisites of the special target `.PHONY' are considered to
+     be phony targets.  When it is time to consider such a target,
+     `make' will run its commands unconditionally, regardless of
+     whether a file with that name exists or what its last-modification
+     time is.  *Note Phony Targets: Phony Targets.
+
+`.SUFFIXES'
+     The prerequisites of the special target `.SUFFIXES' are the list
+     of suffixes to be used in checking for suffix rules.  *Note
+     Old-Fashioned Suffix Rules: Suffix Rules.
+
+`.DEFAULT'
+     The commands specified for `.DEFAULT' are used for any target for
+     which no rules are found (either explicit rules or implicit rules).
+     *Note Last Resort::.  If `.DEFAULT' commands are specified, every
+     file mentioned as a prerequisite, but not as a target in a rule,
+     will have these commands executed on its behalf.  *Note Implicit
+     Rule Search Algorithm: Implicit Rule Search.
+
+`.PRECIOUS'
+     The targets which `.PRECIOUS' depends on are given the following
+     special treatment: if `make' is killed or interrupted during the
+     execution of their commands, the target is not deleted.  *Note
+     Interrupting or Killing `make': Interrupts.  Also, if the target
+     is an intermediate file, it will not be deleted after it is no
+     longer needed, as is normally done.  *Note Chains of Implicit
+     Rules: Chained Rules.  In this latter respect it overlaps with the
+     `.SECONDARY' special target.
+
+     You can also list the target pattern of an implicit rule (such as
+     `%.o') as a prerequisite file of the special target `.PRECIOUS' to
+     preserve intermediate files created by rules whose target patterns
+     match that file's name.
+
+`.INTERMEDIATE'
+     The targets which `.INTERMEDIATE' depends on are treated as
+     intermediate files.  *Note Chains of Implicit Rules: Chained Rules.
+     `.INTERMEDIATE' with no prerequisites has no effect.
+
+`.SECONDARY'
+     The targets which `.SECONDARY' depends on are treated as
+     intermediate files, except that they are never automatically
+     deleted.  *Note Chains of Implicit Rules: Chained Rules.
+
+     `.SECONDARY' with no prerequisites causes all targets to be treated
+     as secondary (i.e., no target is removed because it is considered
+     intermediate).
+
+`.SECONDEXPANSION'
+     If `.SECONDEXPANSION' is mentioned as a target anywhere in the
+     makefile, then all prerequisite lists defined _after_ it appears
+     will be expanded a second time after all makefiles have been read
+     in.  *Note Secondary Expansion: Secondary Expansion.
+
+     The prerequisites of the special target `.SUFFIXES' are the list
+     of suffixes to be used in checking for suffix rules.  *Note
+     Old-Fashioned Suffix Rules: Suffix Rules.
+
+`.DELETE_ON_ERROR'
+     If `.DELETE_ON_ERROR' is mentioned as a target anywhere in the
+     makefile, then `make' will delete the target of a rule if it has
+     changed and its commands exit with a nonzero exit status, just as
+     it does when it receives a signal.  *Note Errors in Commands:
+     Errors.
+
+`.IGNORE'
+     If you specify prerequisites for `.IGNORE', then `make' will
+     ignore errors in execution of the commands run for those particular
+     files.  The commands for `.IGNORE' are not meaningful.
+
+     If mentioned as a target with no prerequisites, `.IGNORE' says to
+     ignore errors in execution of commands for all files.  This usage
+     of `.IGNORE' is supported only for historical compatibility.  Since
+     this affects every command in the makefile, it is not very useful;
+     we recommend you use the more selective ways to ignore errors in
+     specific commands.  *Note Errors in Commands: Errors.
+
+`.LOW_RESOLUTION_TIME'
+     If you specify prerequisites for `.LOW_RESOLUTION_TIME', `make'
+     assumes that these files are created by commands that generate low
+     resolution time stamps.  The commands for `.LOW_RESOLUTION_TIME'
+     are not meaningful.
+
+     The high resolution file time stamps of many modern hosts lessen
+     the chance of `make' incorrectly concluding that a file is up to
+     date.  Unfortunately, these hosts provide no way to set a high
+     resolution file time stamp, so commands like `cp -p' that
+     explicitly set a file's time stamp must discard its subsecond
+     part.  If a file is created by such a command, you should list it
+     as a prerequisite of `.LOW_RESOLUTION_TIME' so that `make' does
+     not mistakenly conclude that the file is out of date.  For example:
+
+          .LOW_RESOLUTION_TIME: dst
+          dst: src
+                  cp -p src dst
+
+     Since `cp -p' discards the subsecond part of `src''s time stamp,
+     `dst' is typically slightly older than `src' even when it is up to
+     date.  The `.LOW_RESOLUTION_TIME' line causes `make' to consider
+     `dst' to be up to date if its time stamp is at the start of the
+     same second that `src''s time stamp is in.
+
+     Due to a limitation of the archive format, archive member time
+     stamps are always low resolution.  You need not list archive
+     members as prerequisites of `.LOW_RESOLUTION_TIME', as `make' does
+     this automatically.
+
+`.SILENT'
+     If you specify prerequisites for `.SILENT', then `make' will not
+     print the commands to remake those particular files before
+     executing them.  The commands for `.SILENT' are not meaningful.
+
+     If mentioned as a target with no prerequisites, `.SILENT' says not
+     to print any commands before executing them.  This usage of
+     `.SILENT' is supported only for historical compatibility.  We
+     recommend you use the more selective ways to silence specific
+     commands.  *Note Command Echoing: Echoing.  If you want to silence
+     all commands for a particular run of `make', use the `-s' or
+     `--silent' option (*note Options Summary::).
+
+`.EXPORT_ALL_VARIABLES'
+     Simply by being mentioned as a target, this tells `make' to export
+     all variables to child processes by default.  *Note Communicating
+     Variables to a Sub-`make': Variables/Recursion.
+
+`.NOTPARALLEL'
+     If `.NOTPARALLEL' is mentioned as a target, then this invocation of
+     `make' will be run serially, even if the `-j' option is given.
+     Any recursively invoked `make' command will still be run in
+     parallel (unless its makefile contains this target).  Any
+     prerequisites on this target are ignored.
+
+   Any defined implicit rule suffix also counts as a special target if
+it appears as a target, and so does the concatenation of two suffixes,
+such as `.c.o'.  These targets are suffix rules, an obsolete way of
+defining implicit rules (but a way still widely used).  In principle,
+any target name could be special in this way if you break it in two and
+add both pieces to the suffix list.  In practice, suffixes normally
+begin with `.', so these special target names also begin with `.'.
+*Note Old-Fashioned Suffix Rules: Suffix Rules.
+
+
+File: make.info,  Node: Multiple Targets,  Next: Multiple Rules,  Prev: Special Targets,  Up: Rules
+
+4.10 Multiple Targets in a Rule
+===============================
+
+A rule with multiple targets is equivalent to writing many rules, each
+with one target, and all identical aside from that.  The same commands
+apply to all the targets, but their effects may vary because you can
+substitute the actual target name into the command using `$@'.  The
+rule contributes the same prerequisites to all the targets also.
+
+   This is useful in two cases.
+
+   * You want just prerequisites, no commands.  For example:
+
+          kbd.o command.o files.o: command.h
+
+     gives an additional prerequisite to each of the three object files
+     mentioned.
+
+   * Similar commands work for all the targets.  The commands do not
+     need to be absolutely identical, since the automatic variable `$@'
+     can be used to substitute the particular target to be remade into
+     the commands (*note Automatic Variables::).  For example:
+
+          bigoutput littleoutput : text.g
+                  generate text.g -$(subst output,,$@) > $@
+     
+     is equivalent to
+
+          bigoutput : text.g
+                  generate text.g -big > bigoutput
+          littleoutput : text.g
+                  generate text.g -little > littleoutput
+
+     Here we assume the hypothetical program `generate' makes two types
+     of output, one if given `-big' and one if given `-little'.  *Note
+     Functions for String Substitution and Analysis: Text Functions,
+     for an explanation of the `subst' function.
+
+   Suppose you would like to vary the prerequisites according to the
+target, much as the variable `$@' allows you to vary the commands.  You
+cannot do this with multiple targets in an ordinary rule, but you can
+do it with a "static pattern rule".  *Note Static Pattern Rules: Static
+Pattern.
+
+
+File: make.info,  Node: Multiple Rules,  Next: Static Pattern,  Prev: Multiple Targets,  Up: Rules
+
+4.11 Multiple Rules for One Target
+==================================
+
+One file can be the target of several rules.  All the prerequisites
+mentioned in all the rules are merged into one list of prerequisites for
+the target.  If the target is older than any prerequisite from any rule,
+the commands are executed.
+
+   There can only be one set of commands to be executed for a file.  If
+more than one rule gives commands for the same file, `make' uses the
+last set given and prints an error message.  (As a special case, if the
+file's name begins with a dot, no error message is printed.  This odd
+behavior is only for compatibility with other implementations of
+`make'... you should avoid using it).  Occasionally it is useful to
+have the same target invoke multiple commands which are defined in
+different parts of your makefile; you can use "double-colon rules"
+(*note Double-Colon::) for this.
+
+   An extra rule with just prerequisites can be used to give a few extra
+prerequisites to many files at once.  For example, makefiles often have
+a variable, such as `objects', containing a list of all the compiler
+output files in the system being made.  An easy way to say that all of
+them must be recompiled if `config.h' changes is to write the following:
+
+     objects = foo.o bar.o
+     foo.o : defs.h
+     bar.o : defs.h test.h
+     $(objects) : config.h
+
+   This could be inserted or taken out without changing the rules that
+really specify how to make the object files, making it a convenient
+form to use if you wish to add the additional prerequisite
+intermittently.
+
+   Another wrinkle is that the additional prerequisites could be
+specified with a variable that you set with a command argument to `make'
+(*note Overriding Variables: Overriding.).  For example,
+
+     extradeps=
+     $(objects) : $(extradeps)
+
+means that the command `make extradeps=foo.h' will consider `foo.h' as
+a prerequisite of each object file, but plain `make' will not.
+
+   If none of the explicit rules for a target has commands, then `make'
+searches for an applicable implicit rule to find some commands *note
+Using Implicit Rules: Implicit Rules.).
+
+
+File: make.info,  Node: Static Pattern,  Next: Double-Colon,  Prev: Multiple Rules,  Up: Rules
+
+4.12 Static Pattern Rules
+=========================
+
+"Static pattern rules" are rules which specify multiple targets and
+construct the prerequisite names for each target based on the target
+name.  They are more general than ordinary rules with multiple targets
+because the targets do not have to have identical prerequisites.  Their
+prerequisites must be _analogous_, but not necessarily _identical_.
+
+* Menu:
+
+* Static Usage::                The syntax of static pattern rules.
+* Static versus Implicit::      When are they better than implicit rules?
+
+
+File: make.info,  Node: Static Usage,  Next: Static versus Implicit,  Prev: Static Pattern,  Up: Static Pattern
+
+4.12.1 Syntax of Static Pattern Rules
+-------------------------------------
+
+Here is the syntax of a static pattern rule:
+
+     TARGETS ...: TARGET-PATTERN: PREREQ-PATTERNS ...
+             COMMANDS
+             ...
+
+The TARGETS list specifies the targets that the rule applies to.  The
+targets can contain wildcard characters, just like the targets of
+ordinary rules (*note Using Wildcard Characters in File Names:
+Wildcards.).
+
+   The TARGET-PATTERN and PREREQ-PATTERNS say how to compute the
+prerequisites of each target.  Each target is matched against the
+TARGET-PATTERN to extract a part of the target name, called the "stem".
+This stem is substituted into each of the PREREQ-PATTERNS to make the
+prerequisite names (one from each PREREQ-PATTERN).
+
+   Each pattern normally contains the character `%' just once.  When the
+TARGET-PATTERN matches a target, the `%' can match any part of the
+target name; this part is called the "stem".  The rest of the pattern
+must match exactly.  For example, the target `foo.o' matches the
+pattern `%.o', with `foo' as the stem.  The targets `foo.c' and
+`foo.out' do not match that pattern.
+
+   The prerequisite names for each target are made by substituting the
+stem for the `%' in each prerequisite pattern.  For example, if one
+prerequisite pattern is `%.c', then substitution of the stem `foo'
+gives the prerequisite name `foo.c'.  It is legitimate to write a
+prerequisite pattern that does not contain `%'; then this prerequisite
+is the same for all targets.
+
+   `%' characters in pattern rules can be quoted with preceding
+backslashes (`\').  Backslashes that would otherwise quote `%'
+characters can be quoted with more backslashes.  Backslashes that quote
+`%' characters or other backslashes are removed from the pattern before
+it is compared to file names or has a stem substituted into it.
+Backslashes that are not in danger of quoting `%' characters go
+unmolested.  For example, the pattern `the\%weird\\%pattern\\' has
+`the%weird\' preceding the operative `%' character, and `pattern\\'
+following it.  The final two backslashes are left alone because they
+cannot affect any `%' character.
+
+   Here is an example, which compiles each of `foo.o' and `bar.o' from
+the corresponding `.c' file:
+
+     objects = foo.o bar.o
+
+     all: $(objects)
+
+     $(objects): %.o: %.c
+             $(CC) -c $(CFLAGS) $< -o $@
+
+Here `$<' is the automatic variable that holds the name of the
+prerequisite and `$@' is the automatic variable that holds the name of
+the target; see *Note Automatic Variables::.
+
+   Each target specified must match the target pattern; a warning is
+issued for each target that does not.  If you have a list of files,
+only some of which will match the pattern, you can use the `filter'
+function to remove nonmatching file names (*note Functions for String
+Substitution and Analysis: Text Functions.):
+
+     files = foo.elc bar.o lose.o
+
+     $(filter %.o,$(files)): %.o: %.c
+             $(CC) -c $(CFLAGS) $< -o $@
+     $(filter %.elc,$(files)): %.elc: %.el
+             emacs -f batch-byte-compile $<
+
+In this example the result of `$(filter %.o,$(files))' is `bar.o
+lose.o', and the first static pattern rule causes each of these object
+files to be updated by compiling the corresponding C source file.  The
+result of `$(filter %.elc,$(files))' is `foo.elc', so that file is made
+from `foo.el'.
+
+   Another example shows how to use `$*' in static pattern rules: 
+
+     bigoutput littleoutput : %output : text.g
+             generate text.g -$* > $@
+
+When the `generate' command is run, `$*' will expand to the stem,
+either `big' or `little'.
+
+
+File: make.info,  Node: Static versus Implicit,  Prev: Static Usage,  Up: Static Pattern
+
+4.12.2 Static Pattern Rules versus Implicit Rules
+-------------------------------------------------
+
+A static pattern rule has much in common with an implicit rule defined
+as a pattern rule (*note Defining and Redefining Pattern Rules: Pattern
+Rules.).  Both have a pattern for the target and patterns for
+constructing the names of prerequisites.  The difference is in how
+`make' decides _when_ the rule applies.
+
+   An implicit rule _can_ apply to any target that matches its pattern,
+but it _does_ apply only when the target has no commands otherwise
+specified, and only when the prerequisites can be found.  If more than
+one implicit rule appears applicable, only one applies; the choice
+depends on the order of rules.
+
+   By contrast, a static pattern rule applies to the precise list of
+targets that you specify in the rule.  It cannot apply to any other
+target and it invariably does apply to each of the targets specified.
+If two conflicting rules apply, and both have commands, that's an error.
+
+   The static pattern rule can be better than an implicit rule for these
+reasons:
+
+   * You may wish to override the usual implicit rule for a few files
+     whose names cannot be categorized syntactically but can be given
+     in an explicit list.
+
+   * If you cannot be sure of the precise contents of the directories
+     you are using, you may not be sure which other irrelevant files
+     might lead `make' to use the wrong implicit rule.  The choice
+     might depend on the order in which the implicit rule search is
+     done.  With static pattern rules, there is no uncertainty: each
+     rule applies to precisely the targets specified.
+
+
+File: make.info,  Node: Double-Colon,  Next: Automatic Prerequisites,  Prev: Static Pattern,  Up: Rules
+
+4.13 Double-Colon Rules
+=======================
+
+"Double-colon" rules are rules written with `::' instead of `:' after
+the target names.  They are handled differently from ordinary rules
+when the same target appears in more than one rule.
+
+   When a target appears in multiple rules, all the rules must be the
+same type: all ordinary, or all double-colon.  If they are
+double-colon, each of them is independent of the others.  Each
+double-colon rule's commands are executed if the target is older than
+any prerequisites of that rule.  If there are no prerequisites for that
+rule, its commands are always executed (even if the target already
+exists).  This can result in executing none, any, or all of the
+double-colon rules.
+
+   Double-colon rules with the same target are in fact completely
+separate from one another.  Each double-colon rule is processed
+individually, just as rules with different targets are processed.
+
+   The double-colon rules for a target are executed in the order they
+appear in the makefile.  However, the cases where double-colon rules
+really make sense are those where the order of executing the commands
+would not matter.
+
+   Double-colon rules are somewhat obscure and not often very useful;
+they provide a mechanism for cases in which the method used to update a
+target differs depending on which prerequisite files caused the update,
+and such cases are rare.
+
+   Each double-colon rule should specify commands; if it does not, an
+implicit rule will be used if one applies.  *Note Using Implicit Rules:
+Implicit Rules.
+
+
+File: make.info,  Node: Automatic Prerequisites,  Prev: Double-Colon,  Up: Rules
+
+4.14 Generating Prerequisites Automatically
+===========================================
+
+In the makefile for a program, many of the rules you need to write often
+say only that some object file depends on some header file.  For
+example, if `main.c' uses `defs.h' via an `#include', you would write:
+
+     main.o: defs.h
+
+You need this rule so that `make' knows that it must remake `main.o'
+whenever `defs.h' changes.  You can see that for a large program you
+would have to write dozens of such rules in your makefile.  And, you
+must always be very careful to update the makefile every time you add
+or remove an `#include'.  
+
+   To avoid this hassle, most modern C compilers can write these rules
+for you, by looking at the `#include' lines in the source files.
+Usually this is done with the `-M' option to the compiler.  For
+example, the command:
+
+     cc -M main.c
+
+generates the output:
+
+     main.o : main.c defs.h
+
+Thus you no longer have to write all those rules yourself.  The
+compiler will do it for you.
+
+   Note that such a prerequisite constitutes mentioning `main.o' in a
+makefile, so it can never be considered an intermediate file by implicit
+rule search.  This means that `make' won't ever remove the file after
+using it; *note Chains of Implicit Rules: Chained Rules.
+
+   With old `make' programs, it was traditional practice to use this
+compiler feature to generate prerequisites on demand with a command like
+`make depend'.  That command would create a file `depend' containing
+all the automatically-generated prerequisites; then the makefile could
+use `include' to read them in (*note Include::).
+
+   In GNU `make', the feature of remaking makefiles makes this practice
+obsolete--you need never tell `make' explicitly to regenerate the
+prerequisites, because it always regenerates any makefile that is out
+of date.  *Note Remaking Makefiles::.
+
+   The practice we recommend for automatic prerequisite generation is
+to have one makefile corresponding to each source file.  For each
+source file `NAME.c' there is a makefile `NAME.d' which lists what
+files the object file `NAME.o' depends on.  That way only the source
+files that have changed need to be rescanned to produce the new
+prerequisites.
+
+   Here is the pattern rule to generate a file of prerequisites (i.e.,
+a makefile) called `NAME.d' from a C source file called `NAME.c':
+
+     %.d: %.c
+             @set -e; rm -f $@; \
+              $(CC) -M $(CPPFLAGS) $< > $@.$$$$; \
+              sed 's,\($*\)\.o[ :]*,\1.o $@ : ,g' < $@.$$$$ > $@; \
+              rm -f $@.$$$$
+
+*Note Pattern Rules::, for information on defining pattern rules.  The
+`-e' flag to the shell causes it to exit immediately if the `$(CC)'
+command (or any other command) fails (exits with a nonzero status).  
+
+   With the GNU C compiler, you may wish to use the `-MM' flag instead
+of `-M'.  This omits prerequisites on system header files.  *Note
+Options Controlling the Preprocessor: (gcc.info)Preprocessor Options,
+for details.
+
+   The purpose of the `sed' command is to translate (for example):
+
+     main.o : main.c defs.h
+
+into:
+
+     main.o main.d : main.c defs.h
+
+This makes each `.d' file depend on all the source and header files
+that the corresponding `.o' file depends on.  `make' then knows it must
+regenerate the prerequisites whenever any of the source or header files
+changes.
+
+   Once you've defined the rule to remake the `.d' files, you then use
+the `include' directive to read them all in.  *Note Include::.  For
+example:
+
+     sources = foo.c bar.c
+
+     include $(sources:.c=.d)
+
+(This example uses a substitution variable reference to translate the
+list of source files `foo.c bar.c' into a list of prerequisite
+makefiles, `foo.d bar.d'.  *Note Substitution Refs::, for full
+information on substitution references.)  Since the `.d' files are
+makefiles like any others, `make' will remake them as necessary with no
+further work from you.  *Note Remaking Makefiles::.
+
+   Note that the `.d' files contain target definitions; you should be
+sure to place the `include' directive _after_ the first, default goal
+in your makefiles or run the risk of having a random object file become
+the default goal.  *Note How Make Works::.
+
+
+File: make.info,  Node: Commands,  Next: Using Variables,  Prev: Rules,  Up: Top
+
+5 Writing the Commands in Rules
+*******************************
+
+The commands of a rule consist of one or more shell command lines to be
+executed, one at a time, in the order they appear.  Typically, the
+result of executing these commands is that the target of the rule is
+brought up to date.
+
+   Users use many different shell programs, but commands in makefiles
+are always interpreted by `/bin/sh' unless the makefile specifies
+otherwise.  *Note Command Execution: Execution.
+
+* Menu:
+
+* Command Syntax::              Command syntax features and pitfalls.
+* Echoing::                     How to control when commands are echoed.
+* Execution::                   How commands are executed.
+* Parallel::                    How commands can be executed in parallel.
+* Errors::                      What happens after a command execution error.
+* Interrupts::                  What happens when a command is interrupted.
+* Recursion::                   Invoking `make' from makefiles.
+* Sequences::                   Defining canned sequences of commands.
+* Empty Commands::              Defining useful, do-nothing commands.
+
+
+File: make.info,  Node: Command Syntax,  Next: Echoing,  Prev: Commands,  Up: Commands
+
+5.1 Command Syntax
+==================
+
+Makefiles have the unusual property that there are really two distinct
+syntaxes in one file.  Most of the makefile uses `make' syntax (*note
+Writing Makefiles: Makefiles.).  However, commands are meant to be
+interpreted by the shell and so they are written using shell syntax.
+The `make' program does not try to understand shell syntax: it performs
+only a very few specific translations on the content of the command
+before handing it to the shell.
+
+   Each command line must start with a tab, except that the first
+command line may be attached to the target-and-prerequisites line with a
+semicolon in between.  _Any_ line in the makefile that begins with a
+tab and appears in a "rule context" (that is, after a rule has been
+started until another rule or variable definition) will be considered a
+command line for that rule.  Blank lines and lines of just comments may
+appear among the command lines; they are ignored.
+
+   Some consequences of these rules include:
+
+   * A blank line that begins with a tab is not blank: it's an empty
+     command (*note Empty Commands::).
+
+   * A comment in a command line is not a `make' comment; it will be
+     passed to the shell as-is.  Whether the shell treats it as a
+     comment or not depends on your shell.
+
+   * A variable definition in a "rule context" which is indented by a
+     tab as the first character on the line, will be considered a
+     command line, not a `make' variable definition, and passed to the
+     shell.
+
+   * A conditional expression (`ifdef', `ifeq', etc. *note Syntax of
+     Conditionals: Conditional Syntax.) in a "rule context" which is
+     indented by a tab as the first character on the line, will be
+     considered a command line and be passed to the shell.
+
+
+* Menu:
+
+* Splitting Lines::             Breaking long command lines for readability.
+* Variables in Commands::       Using `make' variables in commands.
+
+
+File: make.info,  Node: Splitting Lines,  Next: Variables in Commands,  Prev: Command Syntax,  Up: Command Syntax
+
+5.1.1 Splitting Command Lines
+-----------------------------
+
+One of the few ways in which `make' does interpret command lines is
+checking for a backslash just before the newline.  As in normal
+makefile syntax, a single command can be split into multiple lines in
+the makefile by placing a backslash before each newline.  A sequence of
+lines like this is considered a single command, and one instance of the
+shell will be invoked to run it.
+
+   However, in contrast to how they are treated in other places in a
+makefile, backslash-newline pairs are _not_ removed from the command.
+Both the backslash and the newline characters are preserved and passed
+to the shell.  How the backslash-newline is interpreted depends on your
+shell.  If the first character of the next line after the
+backslash-newline is a tab, then that tab (and only that tab) is
+removed.  Whitespace is never added to the command.
+
+   For example, this makefile:
+
+     all :
+             @echo no\
+     space
+             @echo no\
+             space
+             @echo one \
+             space
+             @echo one\
+              space
+
+consists of four separate shell commands where the output is:
+
+     nospace
+     nospace
+     one space
+     one space
+
+   As a more complex example, this makefile:
+
+     all : ; @echo 'hello \
+             world' ; echo "hello \
+         world"
+
+will run one shell with a command script of:
+
+     echo 'hello \
+     world' ; echo "hello \
+         world"
+
+which, according to shell quoting rules, will yield the following
+output:
+
+     hello \
+     world
+     hello     world
+
+Notice how the backslash/newline pair was removed inside the string
+quoted with double quotes (`"..."'), but not from the string quoted
+with single quotes (`'...'').  This is the way the default shell
+(`/bin/sh') handles backslash/newline pairs.  If you specify a
+different shell in your makefiles it may treat them differently.
+
+   Sometimes you want to split a long line inside of single quotes, but
+you don't want the backslash-newline to appear in the quoted content.
+This is often the case when passing scripts to languages such as Perl,
+where extraneous backslashes inside the script can change its meaning
+or even be a syntax error.  One simple way of handling this is to place
+the quoted string, or even the entire command, into a `make' variable
+then use the variable in the command.  In this situation the newline
+quoting rules for makefiles will be used, and the backslash-newline
+will be removed.  If we rewrite our example above using this method:
+
+     HELLO = 'hello \
+     world'
+
+     all : ; @echo $(HELLO)
+
+we will get output like this:
+
+     hello world
+
+   If you like, you can also use target-specific variables (*note
+Target-specific Variable Values: Target-specific.) to obtain a tighter
+correspondence between the variable and the command that uses it.
+
+
+File: make.info,  Node: Variables in Commands,  Prev: Splitting Lines,  Up: Command Syntax
+
+5.1.2 Using Variables in Commands
+---------------------------------
+
+The other way in which `make' processes commands is by expanding any
+variable references in them (*note Basics of Variable References:
+Reference.).  This occurs after make has finished reading all the
+makefiles and the target is determined to be out of date; so, the
+commands for targets which are not rebuilt are never expanded.
+
+   Variable and function references in commands have identical syntax
+and semantics to references elsewhere in the makefile.  They also have
+the same quoting rules: if you want a dollar sign to appear in your
+command, you must double it (`$$').  For shells like the default shell,
+that use dollar signs to introduce variables, it's important to keep
+clear in your mind whether the variable you want to reference is a
+`make' variable (use a single dollar sign) or a shell variable (use two
+dollar signs).  For example:
+
+     LIST = one two three
+     all:
+             for i in $(LIST); do \
+                 echo $$i; \
+             done
+
+results in the following command being passed to the shell:
+
+     for i in one two three; do \
+         echo $i; \
+     done
+
+which generates the expected result:
+
+     one
+     two
+     three
+
+
+File: make.info,  Node: Echoing,  Next: Execution,  Prev: Command Syntax,  Up: Commands
+
+5.2 Command Echoing
+===================
+
+Normally `make' prints each command line before it is executed.  We
+call this "echoing" because it gives the appearance that you are typing
+the commands yourself.
+
+   When a line starts with `@', the echoing of that line is suppressed.
+The `@' is discarded before the command is passed to the shell.
+Typically you would use this for a command whose only effect is to print
+something, such as an `echo' command to indicate progress through the
+makefile:
+
+     @echo About to make distribution files
+
+   When `make' is given the flag `-n' or `--just-print' it only echoes
+commands, it won't execute them.  *Note Summary of Options: Options
+Summary.  In this case and only this case, even the commands starting
+with `@' are printed.  This flag is useful for finding out which
+commands `make' thinks are necessary without actually doing them.
+
+   The `-s' or `--silent' flag to `make' prevents all echoing, as if
+all commands started with `@'.  A rule in the makefile for the special
+target `.SILENT' without prerequisites has the same effect (*note
+Special Built-in Target Names: Special Targets.).  `.SILENT' is
+essentially obsolete since `@' is more flexible.
+
+
+File: make.info,  Node: Execution,  Next: Parallel,  Prev: Echoing,  Up: Commands
+
+5.3 Command Execution
+=====================
+
+When it is time to execute commands to update a target, they are
+executed by invoking a new subshell for each command line.  (In
+practice, `make' may take shortcuts that do not affect the results.)
+
+   *Please note:* this implies that setting shell variables and
+invoking shell commands such as `cd' that set a context local to each
+process will not affect the following command lines.(1)  If you want to
+use `cd' to affect the next statement, put both statements in a single
+command line.  Then `make' will invoke one shell to run the entire
+line, and the shell will execute the statements in sequence.  For
+example:
+
+     foo : bar/lose
+             cd $(@D) && gobble $(@F) > ../$@
+
+Here we use the shell AND operator (`&&') so that if the `cd' command
+fails, the script will fail without trying to invoke the `gobble'
+command in the wrong directory, which could cause problems (in this
+case it would certainly cause `../foo' to be truncated, at least).
+
+* Menu:
+
+* Choosing the Shell::          How `make' chooses the shell used
+                                  to run commands.
+
+   ---------- Footnotes ----------
+
+   (1) On MS-DOS, the value of current working directory is *global*, so
+changing it _will_ affect the following command lines on those systems.
+
+
+File: make.info,  Node: Choosing the Shell,  Prev: Execution,  Up: Execution
+
+5.3.1 Choosing the Shell
+------------------------
+
+The program used as the shell is taken from the variable `SHELL'.  If
+this variable is not set in your makefile, the program `/bin/sh' is
+used as the shell.
+
+   Unlike most variables, the variable `SHELL' is never set from the
+environment.  This is because the `SHELL' environment variable is used
+to specify your personal choice of shell program for interactive use.
+It would be very bad for personal choices like this to affect the
+functioning of makefiles.  *Note Variables from the Environment:
+Environment.
+
+   Furthermore, when you do set `SHELL' in your makefile that value is
+_not_ exported in the environment to commands that `make' invokes.
+Instead, the value inherited from the user's environment, if any, is
+exported.  You can override this behavior by explicitly exporting
+`SHELL' (*note Communicating Variables to a Sub-`make':
+Variables/Recursion.), forcing it to be passed in the environment to
+commands.
+
+   However, on MS-DOS and MS-Windows the value of `SHELL' in the
+environment *is* used, since on those systems most users do not set
+this variable, and therefore it is most likely set specifically to be
+used by `make'.  On MS-DOS, if the setting of `SHELL' is not suitable
+for `make', you can set the variable `MAKESHELL' to the shell that
+`make' should use; if set it will be used as the shell instead of the
+value of `SHELL'.
+
+Choosing a Shell in DOS and Windows
+...................................
+
+Choosing a shell in MS-DOS and MS-Windows is much more complex than on
+other systems.
+
+   On MS-DOS, if `SHELL' is not set, the value of the variable
+`COMSPEC' (which is always set) is used instead.
+
+   The processing of lines that set the variable `SHELL' in Makefiles
+is different on MS-DOS.  The stock shell, `command.com', is
+ridiculously limited in its functionality and many users of `make' tend
+to install a replacement shell.  Therefore, on MS-DOS, `make' examines
+the value of `SHELL', and changes its behavior based on whether it
+points to a Unix-style or DOS-style shell.  This allows reasonable
+functionality even if `SHELL' points to `command.com'.
+
+   If `SHELL' points to a Unix-style shell, `make' on MS-DOS
+additionally checks whether that shell can indeed be found; if not, it
+ignores the line that sets `SHELL'.  In MS-DOS, GNU `make' searches for
+the shell in the following places:
+
+  1. In the precise place pointed to by the value of `SHELL'.  For
+     example, if the makefile specifies `SHELL = /bin/sh', `make' will
+     look in the directory `/bin' on the current drive.
+
+  2. In the current directory.
+
+  3. In each of the directories in the `PATH' variable, in order.
+
+
+   In every directory it examines, `make' will first look for the
+specific file (`sh' in the example above).  If this is not found, it
+will also look in that directory for that file with one of the known
+extensions which identify executable files.  For example `.exe',
+`.com', `.bat', `.btm', `.sh', and some others.
+
+   If any of these attempts is successful, the value of `SHELL' will be
+set to the full pathname of the shell as found.  However, if none of
+these is found, the value of `SHELL' will not be changed, and thus the
+line that sets it will be effectively ignored.  This is so `make' will
+only support features specific to a Unix-style shell if such a shell is
+actually installed on the system where `make' runs.
+
+   Note that this extended search for the shell is limited to the cases
+where `SHELL' is set from the Makefile; if it is set in the environment
+or command line, you are expected to set it to the full pathname of the
+shell, exactly as things are on Unix.
+
+   The effect of the above DOS-specific processing is that a Makefile
+that contains `SHELL = /bin/sh' (as many Unix makefiles do), will work
+on MS-DOS unaltered if you have e.g. `sh.exe' installed in some
+directory along your `PATH'.
+
+
+File: make.info,  Node: Parallel,  Next: Errors,  Prev: Execution,  Up: Commands
+
+5.4 Parallel Execution
+======================
+
+GNU `make' knows how to execute several commands at once.  Normally,
+`make' will execute only one command at a time, waiting for it to
+finish before executing the next.  However, the `-j' or `--jobs' option
+tells `make' to execute many commands simultaneously.
+
+   On MS-DOS, the `-j' option has no effect, since that system doesn't
+support multi-processing.
+
+   If the `-j' option is followed by an integer, this is the number of
+commands to execute at once; this is called the number of "job slots".
+If there is nothing looking like an integer after the `-j' option,
+there is no limit on the number of job slots.  The default number of job
+slots is one, which means serial execution (one thing at a time).
+
+   One unpleasant consequence of running several commands
+simultaneously is that output generated by the commands appears
+whenever each command sends it, so messages from different commands may
+be interspersed.
+
+   Another problem is that two processes cannot both take input from the
+same device; so to make sure that only one command tries to take input
+from the terminal at once, `make' will invalidate the standard input
+streams of all but one running command.  This means that attempting to
+read from standard input will usually be a fatal error (a `Broken pipe'
+signal) for most child processes if there are several.  
+
+   It is unpredictable which command will have a valid standard input
+stream (which will come from the terminal, or wherever you redirect the
+standard input of `make').  The first command run will always get it
+first, and the first command started after that one finishes will get
+it next, and so on.
+
+   We will change how this aspect of `make' works if we find a better
+alternative.  In the mean time, you should not rely on any command using
+standard input at all if you are using the parallel execution feature;
+but if you are not using this feature, then standard input works
+normally in all commands.
+
+   Finally, handling recursive `make' invocations raises issues.  For
+more information on this, see *Note Communicating Options to a
+Sub-`make': Options/Recursion.
+
+   If a command fails (is killed by a signal or exits with a nonzero
+status), and errors are not ignored for that command (*note Errors in
+Commands: Errors.), the remaining command lines to remake the same
+target will not be run.  If a command fails and the `-k' or
+`--keep-going' option was not given (*note Summary of Options: Options
+Summary.), `make' aborts execution.  If make terminates for any reason
+(including a signal) with child processes running, it waits for them to
+finish before actually exiting.
+
+   When the system is heavily loaded, you will probably want to run
+fewer jobs than when it is lightly loaded.  You can use the `-l' option
+to tell `make' to limit the number of jobs to run at once, based on the
+load average.  The `-l' or `--max-load' option is followed by a
+floating-point number.  For example,
+
+     -l 2.5
+
+will not let `make' start more than one job if the load average is
+above 2.5.  The `-l' option with no following number removes the load
+limit, if one was given with a previous `-l' option.
+
+   More precisely, when `make' goes to start up a job, and it already
+has at least one job running, it checks the current load average; if it
+is not lower than the limit given with `-l', `make' waits until the load
+average goes below that limit, or until all the other jobs finish.
+
+   By default, there is no load limit.
+
+
+File: make.info,  Node: Errors,  Next: Interrupts,  Prev: Parallel,  Up: Commands
+
+5.5 Errors in Commands
+======================
+
+After each shell command returns, `make' looks at its exit status.  If
+the command completed successfully, the next command line is executed
+in a new shell; after the last command line is finished, the rule is
+finished.
+
+   If there is an error (the exit status is nonzero), `make' gives up on
+the current rule, and perhaps on all rules.
+
+   Sometimes the failure of a certain command does not indicate a
+problem.  For example, you may use the `mkdir' command to ensure that a
+directory exists.  If the directory already exists, `mkdir' will report
+an error, but you probably want `make' to continue regardless.
+
+   To ignore errors in a command line, write a `-' at the beginning of
+the line's text (after the initial tab).  The `-' is discarded before
+the command is passed to the shell for execution.
+
+   For example,
+
+     clean:
+             -rm -f *.o
+
+This causes `rm' to continue even if it is unable to remove a file.
+
+   When you run `make' with the `-i' or `--ignore-errors' flag, errors
+are ignored in all commands of all rules.  A rule in the makefile for
+the special target `.IGNORE' has the same effect, if there are no
+prerequisites.  These ways of ignoring errors are obsolete because `-'
+is more flexible.
+
+   When errors are to be ignored, because of either a `-' or the `-i'
+flag, `make' treats an error return just like success, except that it
+prints out a message that tells you the status code the command exited
+with, and says that the error has been ignored.
+
+   When an error happens that `make' has not been told to ignore, it
+implies that the current target cannot be correctly remade, and neither
+can any other that depends on it either directly or indirectly.  No
+further commands will be executed for these targets, since their
+preconditions have not been achieved.
+
+   Normally `make' gives up immediately in this circumstance, returning
+a nonzero status.  However, if the `-k' or `--keep-going' flag is
+specified, `make' continues to consider the other prerequisites of the
+pending targets, remaking them if necessary, before it gives up and
+returns nonzero status.  For example, after an error in compiling one
+object file, `make -k' will continue compiling other object files even
+though it already knows that linking them will be impossible.  *Note
+Summary of Options: Options Summary.
+
+   The usual behavior assumes that your purpose is to get the specified
+targets up to date; once `make' learns that this is impossible, it
+might as well report the failure immediately.  The `-k' option says
+that the real purpose is to test as many of the changes made in the
+program as possible, perhaps to find several independent problems so
+that you can correct them all before the next attempt to compile.  This
+is why Emacs' `compile' command passes the `-k' flag by default.  
+
+   Usually when a command fails, if it has changed the target file at
+all, the file is corrupted and cannot be used--or at least it is not
+completely updated.  Yet the file's time stamp says that it is now up to
+date, so the next time `make' runs, it will not try to update that
+file.  The situation is just the same as when the command is killed by a
+signal; *note Interrupts::.  So generally the right thing to do is to
+delete the target file if the command fails after beginning to change
+the file.  `make' will do this if `.DELETE_ON_ERROR' appears as a
+target.  This is almost always what you want `make' to do, but it is
+not historical practice; so for compatibility, you must explicitly
+request it.
+
+
+File: make.info,  Node: Interrupts,  Next: Recursion,  Prev: Errors,  Up: Commands
+
+5.6 Interrupting or Killing `make'
+==================================
+
+If `make' gets a fatal signal while a command is executing, it may
+delete the target file that the command was supposed to update.  This is
+done if the target file's last-modification time has changed since
+`make' first checked it.
+
+   The purpose of deleting the target is to make sure that it is remade
+from scratch when `make' is next run.  Why is this?  Suppose you type
+`Ctrl-c' while a compiler is running, and it has begun to write an
+object file `foo.o'.  The `Ctrl-c' kills the compiler, resulting in an
+incomplete file whose last-modification time is newer than the source
+file `foo.c'.  But `make' also receives the `Ctrl-c' signal and deletes
+this incomplete file.  If `make' did not do this, the next invocation
+of `make' would think that `foo.o' did not require updating--resulting
+in a strange error message from the linker when it tries to link an
+object file half of which is missing.
+
+   You can prevent the deletion of a target file in this way by making
+the special target `.PRECIOUS' depend on it.  Before remaking a target,
+`make' checks to see whether it appears on the prerequisites of
+`.PRECIOUS', and thereby decides whether the target should be deleted
+if a signal happens.  Some reasons why you might do this are that the
+target is updated in some atomic fashion, or exists only to record a
+modification-time (its contents do not matter), or must exist at all
+times to prevent other sorts of trouble.
+
+
+File: make.info,  Node: Recursion,  Next: Sequences,  Prev: Interrupts,  Up: Commands
+
+5.7 Recursive Use of `make'
+===========================
+
+Recursive use of `make' means using `make' as a command in a makefile.
+This technique is useful when you want separate makefiles for various
+subsystems that compose a larger system.  For example, suppose you have
+a subdirectory `subdir' which has its own makefile, and you would like
+the containing directory's makefile to run `make' on the subdirectory.
+You can do it by writing this:
+
+     subsystem:
+             cd subdir && $(MAKE)
+
+or, equivalently, this (*note Summary of Options: Options Summary.):
+
+     subsystem:
+             $(MAKE) -C subdir
+   
+   You can write recursive `make' commands just by copying this example,
+but there are many things to know about how they work and why, and about
+how the sub-`make' relates to the top-level `make'.  You may also find
+it useful to declare targets that invoke recursive `make' commands as
+`.PHONY' (for more discussion on when this is useful, see *Note Phony
+Targets::).
+
+   For your convenience, when GNU `make' starts (after it has processed
+any `-C' options) it sets the variable `CURDIR' to the pathname of the
+current working directory.  This value is never touched by `make'
+again: in particular note that if you include files from other
+directories the value of `CURDIR' does not change.  The value has the
+same precedence it would have if it were set in the makefile (by
+default, an environment variable `CURDIR' will not override this
+value).  Note that setting this variable has no impact on the operation
+of `make' (it does not cause `make' to change its working directory,
+for example).
+
+* Menu:
+
+* MAKE Variable::               The special effects of using `$(MAKE)'.
+* Variables/Recursion::         How to communicate variables to a sub-`make'.
+* Options/Recursion::           How to communicate options to a sub-`make'.
+* -w Option::                   How the `-w' or `--print-directory' option
+                                  helps debug use of recursive `make' commands.
+
+
+File: make.info,  Node: MAKE Variable,  Next: Variables/Recursion,  Prev: Recursion,  Up: Recursion
+
+5.7.1 How the `MAKE' Variable Works
+-----------------------------------
+
+Recursive `make' commands should always use the variable `MAKE', not
+the explicit command name `make', as shown here:
+
+     subsystem:
+             cd subdir && $(MAKE)
+
+   The value of this variable is the file name with which `make' was
+invoked.  If this file name was `/bin/make', then the command executed
+is `cd subdir && /bin/make'.  If you use a special version of `make' to
+run the top-level makefile, the same special version will be executed
+for recursive invocations.  
+
+   As a special feature, using the variable `MAKE' in the commands of a
+rule alters the effects of the `-t' (`--touch'), `-n' (`--just-print'),
+or `-q' (`--question') option.  Using the `MAKE' variable has the same
+effect as using a `+' character at the beginning of the command line.
+*Note Instead of Executing the Commands: Instead of Execution.  This
+special feature is only enabled if the `MAKE' variable appears directly
+in the command script: it does not apply if the `MAKE' variable is
+referenced through expansion of another variable.  In the latter case
+you must use the `+' token to get these special effects.
+
+   Consider the command `make -t' in the above example.  (The `-t'
+option marks targets as up to date without actually running any
+commands; see *Note Instead of Execution::.)  Following the usual
+definition of `-t', a `make -t' command in the example would create a
+file named `subsystem' and do nothing else.  What you really want it to
+do is run `cd subdir && make -t'; but that would require executing the
+command, and `-t' says not to execute commands.  
+
+   The special feature makes this do what you want: whenever a command
+line of a rule contains the variable `MAKE', the flags `-t', `-n' and
+`-q' do not apply to that line.  Command lines containing `MAKE' are
+executed normally despite the presence of a flag that causes most
+commands not to be run.  The usual `MAKEFLAGS' mechanism passes the
+flags to the sub-`make' (*note Communicating Options to a Sub-`make':
+Options/Recursion.), so your request to touch the files, or print the
+commands, is propagated to the subsystem.
+
+
+File: make.info,  Node: Variables/Recursion,  Next: Options/Recursion,  Prev: MAKE Variable,  Up: Recursion
+
+5.7.2 Communicating Variables to a Sub-`make'
+---------------------------------------------
+
+Variable values of the top-level `make' can be passed to the sub-`make'
+through the environment by explicit request.  These variables are
+defined in the sub-`make' as defaults, but do not override what is
+specified in the makefile used by the sub-`make' makefile unless you
+use the `-e' switch (*note Summary of Options: Options Summary.).
+
+   To pass down, or "export", a variable, `make' adds the variable and
+its value to the environment for running each command.  The sub-`make',
+in turn, uses the environment to initialize its table of variable
+values.  *Note Variables from the Environment: Environment.
+
+   Except by explicit request, `make' exports a variable only if it is
+either defined in the environment initially or set on the command line,
+and if its name consists only of letters, numbers, and underscores.
+Some shells cannot cope with environment variable names consisting of
+characters other than letters, numbers, and underscores.
+
+   The value of the `make' variable `SHELL' is not exported.  Instead,
+the value of the `SHELL' variable from the invoking environment is
+passed to the sub-`make'.  You can force `make' to export its value for
+`SHELL' by using the `export' directive, described below.  *Note
+Choosing the Shell::.
+
+   The special variable `MAKEFLAGS' is always exported (unless you
+unexport it).  `MAKEFILES' is exported if you set it to anything.
+
+   `make' automatically passes down variable values that were defined
+on the command line, by putting them in the `MAKEFLAGS' variable.
+*Note Options/Recursion::.
+
+   Variables are _not_ normally passed down if they were created by
+default by `make' (*note Variables Used by Implicit Rules: Implicit
+Variables.).  The sub-`make' will define these for itself.
+
+   If you want to export specific variables to a sub-`make', use the
+`export' directive, like this:
+
+     export VARIABLE ...
+
+If you want to _prevent_ a variable from being exported, use the
+`unexport' directive, like this:
+
+     unexport VARIABLE ...
+
+In both of these forms, the arguments to `export' and `unexport' are
+expanded, and so could be variables or functions which expand to a
+(list of) variable names to be (un)exported.
+
+   As a convenience, you can define a variable and export it at the same
+time by doing:
+
+     export VARIABLE = value
+
+has the same result as:
+
+     VARIABLE = value
+     export VARIABLE
+
+and
+
+     export VARIABLE := value
+
+has the same result as:
+
+     VARIABLE := value
+     export VARIABLE
+
+   Likewise,
+
+     export VARIABLE += value
+
+is just like:
+
+     VARIABLE += value
+     export VARIABLE
+
+*Note Appending More Text to Variables: Appending.
+
+   You may notice that the `export' and `unexport' directives work in
+`make' in the same way they work in the shell, `sh'.
+
+   If you want all variables to be exported by default, you can use
+`export' by itself:
+
+     export
+
+This tells `make' that variables which are not explicitly mentioned in
+an `export' or `unexport' directive should be exported.  Any variable
+given in an `unexport' directive will still _not_ be exported.  If you
+use `export' by itself to export variables by default, variables whose
+names contain characters other than alphanumerics and underscores will
+not be exported unless specifically mentioned in an `export' directive.
+
+   The behavior elicited by an `export' directive by itself was the
+default in older versions of GNU `make'.  If your makefiles depend on
+this behavior and you want to be compatible with old versions of
+`make', you can write a rule for the special target
+`.EXPORT_ALL_VARIABLES' instead of using the `export' directive.  This
+will be ignored by old `make's, while the `export' directive will cause
+a syntax error.  
+
+   Likewise, you can use `unexport' by itself to tell `make' _not_ to
+export variables by default.  Since this is the default behavior, you
+would only need to do this if `export' had been used by itself earlier
+(in an included makefile, perhaps).  You *cannot* use `export' and
+`unexport' by themselves to have variables exported for some commands
+and not for others.  The last `export' or `unexport' directive that
+appears by itself determines the behavior for the entire run of `make'.
+
+   As a special feature, the variable `MAKELEVEL' is changed when it is
+passed down from level to level.  This variable's value is a string
+which is the depth of the level as a decimal number.  The value is `0'
+for the top-level `make'; `1' for a sub-`make', `2' for a
+sub-sub-`make', and so on.  The incrementation happens when `make' sets
+up the environment for a command.
+
+   The main use of `MAKELEVEL' is to test it in a conditional directive
+(*note Conditional Parts of Makefiles: Conditionals.); this way you can
+write a makefile that behaves one way if run recursively and another
+way if run directly by you.
+
+   You can use the variable `MAKEFILES' to cause all sub-`make'
+commands to use additional makefiles.  The value of `MAKEFILES' is a
+whitespace-separated list of file names.  This variable, if defined in
+the outer-level makefile, is passed down through the environment; then
+it serves as a list of extra makefiles for the sub-`make' to read
+before the usual or specified ones.  *Note The Variable `MAKEFILES':
+MAKEFILES Variable.
+
+
+File: make.info,  Node: Options/Recursion,  Next: -w Option,  Prev: Variables/Recursion,  Up: Recursion
+
+5.7.3 Communicating Options to a Sub-`make'
+-------------------------------------------
+
+Flags such as `-s' and `-k' are passed automatically to the sub-`make'
+through the variable `MAKEFLAGS'.  This variable is set up
+automatically by `make' to contain the flag letters that `make'
+received.  Thus, if you do `make -ks' then `MAKEFLAGS' gets the value
+`ks'.
+
+   As a consequence, every sub-`make' gets a value for `MAKEFLAGS' in
+its environment.  In response, it takes the flags from that value and
+processes them as if they had been given as arguments.  *Note Summary
+of Options: Options Summary.
+
+   Likewise variables defined on the command line are passed to the
+sub-`make' through `MAKEFLAGS'.  Words in the value of `MAKEFLAGS' that
+contain `=', `make' treats as variable definitions just as if they
+appeared on the command line.  *Note Overriding Variables: Overriding.
+
+   The options `-C', `-f', `-o', and `-W' are not put into `MAKEFLAGS';
+these options are not passed down.
+
+   The `-j' option is a special case (*note Parallel Execution:
+Parallel.).  If you set it to some numeric value `N' and your operating
+system supports it (most any UNIX system will; others typically won't),
+the parent `make' and all the sub-`make's will communicate to ensure
+that there are only `N' jobs running at the same time between them all.
+Note that any job that is marked recursive (*note Instead of Executing
+the Commands: Instead of Execution.)  doesn't count against the total
+jobs (otherwise we could get `N' sub-`make's running and have no slots
+left over for any real work!)
+
+   If your operating system doesn't support the above communication,
+then `-j 1' is always put into `MAKEFLAGS' instead of the value you
+specified.  This is because if the `-j' option were passed down to
+sub-`make's, you would get many more jobs running in parallel than you
+asked for.  If you give `-j' with no numeric argument, meaning to run
+as many jobs as possible in parallel, this is passed down, since
+multiple infinities are no more than one.
+
+   If you do not want to pass the other flags down, you must change the
+value of `MAKEFLAGS', like this:
+
+     subsystem:
+             cd subdir && $(MAKE) MAKEFLAGS=
+
+   The command line variable definitions really appear in the variable
+`MAKEOVERRIDES', and `MAKEFLAGS' contains a reference to this variable.
+If you do want to pass flags down normally, but don't want to pass
+down the command line variable definitions, you can reset
+`MAKEOVERRIDES' to empty, like this:
+
+     MAKEOVERRIDES =
+
+This is not usually useful to do.  However, some systems have a small
+fixed limit on the size of the environment, and putting so much
+information into the value of `MAKEFLAGS' can exceed it.  If you see
+the error message `Arg list too long', this may be the problem.  (For
+strict compliance with POSIX.2, changing `MAKEOVERRIDES' does not
+affect `MAKEFLAGS' if the special target `.POSIX' appears in the
+makefile.  You probably do not care about this.)
+
+   A similar variable `MFLAGS' exists also, for historical
+compatibility.  It has the same value as `MAKEFLAGS' except that it
+does not contain the command line variable definitions, and it always
+begins with a hyphen unless it is empty (`MAKEFLAGS' begins with a
+hyphen only when it begins with an option that has no single-letter
+version, such as `--warn-undefined-variables').  `MFLAGS' was
+traditionally used explicitly in the recursive `make' command, like
+this:
+
+     subsystem:
+             cd subdir && $(MAKE) $(MFLAGS)
+
+but now `MAKEFLAGS' makes this usage redundant.  If you want your
+makefiles to be compatible with old `make' programs, use this
+technique; it will work fine with more modern `make' versions too.
+
+   The `MAKEFLAGS' variable can also be useful if you want to have
+certain options, such as `-k' (*note Summary of Options: Options
+Summary.), set each time you run `make'.  You simply put a value for
+`MAKEFLAGS' in your environment.  You can also set `MAKEFLAGS' in a
+makefile, to specify additional flags that should also be in effect for
+that makefile.  (Note that you cannot use `MFLAGS' this way.  That
+variable is set only for compatibility; `make' does not interpret a
+value you set for it in any way.)
+
+   When `make' interprets the value of `MAKEFLAGS' (either from the
+environment or from a makefile), it first prepends a hyphen if the value
+does not already begin with one.  Then it chops the value into words
+separated by blanks, and parses these words as if they were options
+given on the command line (except that `-C', `-f', `-h', `-o', `-W',
+and their long-named versions are ignored; and there is no error for an
+invalid option).
+
+   If you do put `MAKEFLAGS' in your environment, you should be sure not
+to include any options that will drastically affect the actions of
+`make' and undermine the purpose of makefiles and of `make' itself.
+For instance, the `-t', `-n', and `-q' options, if put in one of these
+variables, could have disastrous consequences and would certainly have
+at least surprising and probably annoying effects.
+
+
+File: make.info,  Node: -w Option,  Prev: Options/Recursion,  Up: Recursion
+
+5.7.4 The `--print-directory' Option
+------------------------------------
+
+If you use several levels of recursive `make' invocations, the `-w' or
+`--print-directory' option can make the output a lot easier to
+understand by showing each directory as `make' starts processing it and
+as `make' finishes processing it.  For example, if `make -w' is run in
+the directory `/u/gnu/make', `make' will print a line of the form:
+
+     make: Entering directory `/u/gnu/make'.
+
+before doing anything else, and a line of the form:
+
+     make: Leaving directory `/u/gnu/make'.
+
+when processing is completed.
+
+   Normally, you do not need to specify this option because `make' does
+it for you: `-w' is turned on automatically when you use the `-C'
+option, and in sub-`make's.  `make' will not automatically turn on `-w'
+if you also use `-s', which says to be silent, or if you use
+`--no-print-directory' to explicitly disable it.
+
+
+File: make.info,  Node: Sequences,  Next: Empty Commands,  Prev: Recursion,  Up: Commands
+
+5.8 Defining Canned Command Sequences
+=====================================
+
+When the same sequence of commands is useful in making various targets,
+you can define it as a canned sequence with the `define' directive, and
+refer to the canned sequence from the rules for those targets.  The
+canned sequence is actually a variable, so the name must not conflict
+with other variable names.
+
+   Here is an example of defining a canned sequence of commands:
+
+     define run-yacc
+     yacc $(firstword $^)
+     mv y.tab.c $@
+     endef
+   
+Here `run-yacc' is the name of the variable being defined; `endef'
+marks the end of the definition; the lines in between are the commands.
+The `define' directive does not expand variable references and
+function calls in the canned sequence; the `$' characters, parentheses,
+variable names, and so on, all become part of the value of the variable
+you are defining.  *Note Defining Variables Verbatim: Defining, for a
+complete explanation of `define'.
+
+   The first command in this example runs Yacc on the first
+prerequisite of whichever rule uses the canned sequence.  The output
+file from Yacc is always named `y.tab.c'.  The second command moves the
+output to the rule's target file name.
+
+   To use the canned sequence, substitute the variable into the
+commands of a rule.  You can substitute it like any other variable
+(*note Basics of Variable References: Reference.).  Because variables
+defined by `define' are recursively expanded variables, all the
+variable references you wrote inside the `define' are expanded now.
+For example:
+
+     foo.c : foo.y
+             $(run-yacc)
+
+`foo.y' will be substituted for the variable `$^' when it occurs in
+`run-yacc''s value, and `foo.c' for `$@'.
+
+   This is a realistic example, but this particular one is not needed in
+practice because `make' has an implicit rule to figure out these
+commands based on the file names involved (*note Using Implicit Rules:
+Implicit Rules.).
+
+   In command execution, each line of a canned sequence is treated just
+as if the line appeared on its own in the rule, preceded by a tab.  In
+particular, `make' invokes a separate subshell for each line.  You can
+use the special prefix characters that affect command lines (`@', `-',
+and `+') on each line of a canned sequence.  *Note Writing the Commands
+in Rules: Commands.  For example, using this canned sequence:
+
+     define frobnicate
+     @echo "frobnicating target $@"
+     frob-step-1 $< -o $@-step-1
+     frob-step-2 $@-step-1 -o $@
+     endef
+
+`make' will not echo the first line, the `echo' command.  But it _will_
+echo the following two command lines.
+
+   On the other hand, prefix characters on the command line that refers
+to a canned sequence apply to every line in the sequence.  So the rule:
+
+     frob.out: frob.in
+             @$(frobnicate)
+
+does not echo _any_ commands.  (*Note Command Echoing: Echoing, for a
+full explanation of `@'.)
+
+
+File: make.info,  Node: Empty Commands,  Prev: Sequences,  Up: Commands
+
+5.9 Using Empty Commands
+========================
+
+It is sometimes useful to define commands which do nothing.  This is
+done simply by giving a command that consists of nothing but
+whitespace.  For example:
+
+     target: ;
+
+defines an empty command string for `target'.  You could also use a
+line beginning with a tab character to define an empty command string,
+but this would be confusing because such a line looks empty.
+
+   You may be wondering why you would want to define a command string
+that does nothing.  The only reason this is useful is to prevent a
+target from getting implicit commands (from implicit rules or the
+`.DEFAULT' special target; *note Implicit Rules:: and *note Defining
+Last-Resort Default Rules: Last Resort.).
+
+   You may be inclined to define empty command strings for targets that
+are not actual files, but only exist so that their prerequisites can be
+remade.  However, this is not the best way to do that, because the
+prerequisites may not be remade properly if the target file actually
+does exist.  *Note Phony Targets: Phony Targets, for a better way to do
+this.
+
+
+File: make.info,  Node: Using Variables,  Next: Conditionals,  Prev: Commands,  Up: Top
+
+6 How to Use Variables
+**********************
+
+A "variable" is a name defined in a makefile to represent a string of
+text, called the variable's "value".  These values are substituted by
+explicit request into targets, prerequisites, commands, and other parts
+of the makefile.  (In some other versions of `make', variables are
+called "macros".)  
+
+   Variables and functions in all parts of a makefile are expanded when
+read, except for the shell commands in rules, the right-hand sides of
+variable definitions using `=', and the bodies of variable definitions
+using the `define' directive.
+
+   Variables can represent lists of file names, options to pass to
+compilers, programs to run, directories to look in for source files,
+directories to write output in, or anything else you can imagine.
+
+   A variable name may be any sequence of characters not containing `:',
+`#', `=', or leading or trailing whitespace.  However, variable names
+containing characters other than letters, numbers, and underscores
+should be avoided, as they may be given special meanings in the future,
+and with some shells they cannot be passed through the environment to a
+sub-`make' (*note Communicating Variables to a Sub-`make':
+Variables/Recursion.).
+
+   Variable names are case-sensitive.  The names `foo', `FOO', and
+`Foo' all refer to different variables.
+
+   It is traditional to use upper case letters in variable names, but we
+recommend using lower case letters for variable names that serve
+internal purposes in the makefile, and reserving upper case for
+parameters that control implicit rules or for parameters that the user
+should override with command options (*note Overriding Variables:
+Overriding.).
+
+   A few variables have names that are a single punctuation character or
+just a few characters.  These are the "automatic variables", and they
+have particular specialized uses.  *Note Automatic Variables::.
+
+* Menu:
+
+* Reference::                   How to use the value of a variable.
+* Flavors::                     Variables come in two flavors.
+* Advanced::                    Advanced features for referencing a variable.
+* Values::                      All the ways variables get their values.
+* Setting::                     How to set a variable in the makefile.
+* Appending::                   How to append more text to the old value
+                                  of a variable.
+* Override Directive::          How to set a variable in the makefile even if
+                                  the user has set it with a command argument.
+* Defining::                    An alternate way to set a variable
+                                  to a verbatim string.
+* Environment::                 Variable values can come from the environment.
+* Target-specific::             Variable values can be defined on a per-target
+                                  basis.
+* Pattern-specific::            Target-specific variable values can be applied
+                                  to a group of targets that match a pattern.
+
+
+File: make.info,  Node: Reference,  Next: Flavors,  Prev: Using Variables,  Up: Using Variables
+
+6.1 Basics of Variable References
+=================================
+
+To substitute a variable's value, write a dollar sign followed by the
+name of the variable in parentheses or braces: either `$(foo)' or
+`${foo}' is a valid reference to the variable `foo'.  This special
+significance of `$' is why you must write `$$' to have the effect of a
+single dollar sign in a file name or command.
+
+   Variable references can be used in any context: targets,
+prerequisites, commands, most directives, and new variable values.
+Here is an example of a common case, where a variable holds the names
+of all the object files in a program:
+
+     objects = program.o foo.o utils.o
+     program : $(objects)
+             cc -o program $(objects)
+
+     $(objects) : defs.h
+
+   Variable references work by strict textual substitution.  Thus, the
+rule
+
+     foo = c
+     prog.o : prog.$(foo)
+             $(foo)$(foo) -$(foo) prog.$(foo)
+
+could be used to compile a C program `prog.c'.  Since spaces before the
+variable value are ignored in variable assignments, the value of `foo'
+is precisely `c'.  (Don't actually write your makefiles this way!)
+
+   A dollar sign followed by a character other than a dollar sign,
+open-parenthesis or open-brace treats that single character as the
+variable name.  Thus, you could reference the variable `x' with `$x'.
+However, this practice is strongly discouraged, except in the case of
+the automatic variables (*note Automatic Variables::).
+
+
+File: make.info,  Node: Flavors,  Next: Advanced,  Prev: Reference,  Up: Using Variables
+
+6.2 The Two Flavors of Variables
+================================
+
+There are two ways that a variable in GNU `make' can have a value; we
+call them the two "flavors" of variables.  The two flavors are
+distinguished in how they are defined and in what they do when expanded.
+
+   The first flavor of variable is a "recursively expanded" variable.
+Variables of this sort are defined by lines using `=' (*note Setting
+Variables: Setting.) or by the `define' directive (*note Defining
+Variables Verbatim: Defining.).  The value you specify is installed
+verbatim; if it contains references to other variables, these
+references are expanded whenever this variable is substituted (in the
+course of expanding some other string).  When this happens, it is
+called "recursive expansion".
+
+   For example,
+
+     foo = $(bar)
+     bar = $(ugh)
+     ugh = Huh?
+
+     all:;echo $(foo)
+
+will echo `Huh?': `$(foo)' expands to `$(bar)' which expands to
+`$(ugh)' which finally expands to `Huh?'.
+
+   This flavor of variable is the only sort supported by other versions
+of `make'.  It has its advantages and its disadvantages.  An advantage
+(most would say) is that:
+
+     CFLAGS = $(include_dirs) -O
+     include_dirs = -Ifoo -Ibar
+
+will do what was intended: when `CFLAGS' is expanded in a command, it
+will expand to `-Ifoo -Ibar -O'.  A major disadvantage is that you
+cannot append something on the end of a variable, as in
+
+     CFLAGS = $(CFLAGS) -O
+
+because it will cause an infinite loop in the variable expansion.
+(Actually `make' detects the infinite loop and reports an error.)  
+
+   Another disadvantage is that any functions (*note Functions for
+Transforming Text: Functions.)  referenced in the definition will be
+executed every time the variable is expanded.  This makes `make' run
+slower; worse, it causes the `wildcard' and `shell' functions to give
+unpredictable results because you cannot easily control when they are
+called, or even how many times.
+
+   To avoid all the problems and inconveniences of recursively expanded
+variables, there is another flavor: simply expanded variables.
+
+   "Simply expanded variables" are defined by lines using `:=' (*note
+Setting Variables: Setting.).  The value of a simply expanded variable
+is scanned once and for all, expanding any references to other
+variables and functions, when the variable is defined.  The actual
+value of the simply expanded variable is the result of expanding the
+text that you write.  It does not contain any references to other
+variables; it contains their values _as of the time this variable was
+defined_.  Therefore,
+
+     x := foo
+     y := $(x) bar
+     x := later
+
+is equivalent to
+
+     y := foo bar
+     x := later
+
+   When a simply expanded variable is referenced, its value is
+substituted verbatim.
+
+   Here is a somewhat more complicated example, illustrating the use of
+`:=' in conjunction with the `shell' function.  (*Note The `shell'
+Function: Shell Function.)  This example also shows use of the variable
+`MAKELEVEL', which is changed when it is passed down from level to
+level.  (*Note Communicating Variables to a Sub-`make':
+Variables/Recursion, for information about `MAKELEVEL'.)
+
+     ifeq (0,${MAKELEVEL})
+     whoami    := $(shell whoami)
+     host-type := $(shell arch)
+     MAKE := ${MAKE} host-type=${host-type} whoami=${whoami}
+     endif
+
+An advantage of this use of `:=' is that a typical `descend into a
+directory' command then looks like this:
+
+     ${subdirs}:
+             ${MAKE} -C $@ all
+
+   Simply expanded variables generally make complicated makefile
+programming more predictable because they work like variables in most
+programming languages.  They allow you to redefine a variable using its
+own value (or its value processed in some way by one of the expansion
+functions) and to use the expansion functions much more efficiently
+(*note Functions for Transforming Text: Functions.).
+
+   You can also use them to introduce controlled leading whitespace into
+variable values.  Leading whitespace characters are discarded from your
+input before substitution of variable references and function calls;
+this means you can include leading spaces in a variable value by
+protecting them with variable references, like this:
+
+     nullstring :=
+     space := $(nullstring) # end of the line
+
+Here the value of the variable `space' is precisely one space.  The
+comment `# end of the line' is included here just for clarity.  Since
+trailing space characters are _not_ stripped from variable values, just
+a space at the end of the line would have the same effect (but be
+rather hard to read).  If you put whitespace at the end of a variable
+value, it is a good idea to put a comment like that at the end of the
+line to make your intent clear.  Conversely, if you do _not_ want any
+whitespace characters at the end of your variable value, you must
+remember not to put a random comment on the end of the line after some
+whitespace, such as this:
+
+     dir := /foo/bar    # directory to put the frobs in
+
+Here the value of the variable `dir' is `/foo/bar    ' (with four
+trailing spaces), which was probably not the intention.  (Imagine
+something like `$(dir)/file' with this definition!)
+
+   There is another assignment operator for variables, `?='.  This is
+called a conditional variable assignment operator, because it only has
+an effect if the variable is not yet defined.  This statement:
+
+     FOO ?= bar
+
+is exactly equivalent to this (*note The `origin' Function: Origin
+Function.):
+
+     ifeq ($(origin FOO), undefined)
+       FOO = bar
+     endif
+
+   Note that a variable set to an empty value is still defined, so `?='
+will not set that variable.
+
+
+File: make.info,  Node: Advanced,  Next: Values,  Prev: Flavors,  Up: Using Variables
+
+6.3 Advanced Features for Reference to Variables
+================================================
+
+This section describes some advanced features you can use to reference
+variables in more flexible ways.
+
+* Menu:
+
+* Substitution Refs::           Referencing a variable with
+                                  substitutions on the value.
+* Computed Names::              Computing the name of the variable to refer to.
+
+
+File: make.info,  Node: Substitution Refs,  Next: Computed Names,  Prev: Advanced,  Up: Advanced
+
+6.3.1 Substitution References
+-----------------------------
+
+A "substitution reference" substitutes the value of a variable with
+alterations that you specify.  It has the form `$(VAR:A=B)' (or
+`${VAR:A=B}') and its meaning is to take the value of the variable VAR,
+replace every A at the end of a word with B in that value, and
+substitute the resulting string.
+
+   When we say "at the end of a word", we mean that A must appear
+either followed by whitespace or at the end of the value in order to be
+replaced; other occurrences of A in the value are unaltered.  For
+example:
+
+     foo := a.o b.o c.o
+     bar := $(foo:.o=.c)
+
+sets `bar' to `a.c b.c c.c'.  *Note Setting Variables: Setting.
+
+   A substitution reference is actually an abbreviation for use of the
+`patsubst' expansion function (*note Functions for String Substitution
+and Analysis: Text Functions.).  We provide substitution references as
+well as `patsubst' for compatibility with other implementations of
+`make'.
+
+   Another type of substitution reference lets you use the full power of
+the `patsubst' function.  It has the same form `$(VAR:A=B)' described
+above, except that now A must contain a single `%' character.  This
+case is equivalent to `$(patsubst A,B,$(VAR))'.  *Note Functions for
+String Substitution and Analysis: Text Functions, for a description of
+the `patsubst' function.
+
+For example:
+
+     foo := a.o b.o c.o
+     bar := $(foo:%.o=%.c)
+
+sets `bar' to `a.c b.c c.c'.
+
+
+File: make.info,  Node: Computed Names,  Prev: Substitution Refs,  Up: Advanced
+
+6.3.2 Computed Variable Names
+-----------------------------
+
+Computed variable names are a complicated concept needed only for
+sophisticated makefile programming.  For most purposes you need not
+consider them, except to know that making a variable with a dollar sign
+in its name might have strange results.  However, if you are the type
+that wants to understand everything, or you are actually interested in
+what they do, read on.
+
+   Variables may be referenced inside the name of a variable.  This is
+called a "computed variable name" or a "nested variable reference".
+For example,
+
+     x = y
+     y = z
+     a := $($(x))
+
+defines `a' as `z': the `$(x)' inside `$($(x))' expands to `y', so
+`$($(x))' expands to `$(y)' which in turn expands to `z'.  Here the
+name of the variable to reference is not stated explicitly; it is
+computed by expansion of `$(x)'.  The reference `$(x)' here is nested
+within the outer variable reference.
+
+   The previous example shows two levels of nesting, but any number of
+levels is possible.  For example, here are three levels:
+
+     x = y
+     y = z
+     z = u
+     a := $($($(x)))
+
+Here the innermost `$(x)' expands to `y', so `$($(x))' expands to
+`$(y)' which in turn expands to `z'; now we have `$(z)', which becomes
+`u'.
+
+   References to recursively-expanded variables within a variable name
+are reexpanded in the usual fashion.  For example:
+
+     x = $(y)
+     y = z
+     z = Hello
+     a := $($(x))
+
+defines `a' as `Hello': `$($(x))' becomes `$($(y))' which becomes
+`$(z)' which becomes `Hello'.
+
+   Nested variable references can also contain modified references and
+function invocations (*note Functions for Transforming Text:
+Functions.), just like any other reference.  For example, using the
+`subst' function (*note Functions for String Substitution and Analysis:
+Text Functions.):
+
+     x = variable1
+     variable2 := Hello
+     y = $(subst 1,2,$(x))
+     z = y
+     a := $($($(z)))
+
+eventually defines `a' as `Hello'.  It is doubtful that anyone would
+ever want to write a nested reference as convoluted as this one, but it
+works: `$($($(z)))' expands to `$($(y))' which becomes `$($(subst
+1,2,$(x)))'.  This gets the value `variable1' from `x' and changes it
+by substitution to `variable2', so that the entire string becomes
+`$(variable2)', a simple variable reference whose value is `Hello'.
+
+   A computed variable name need not consist entirely of a single
+variable reference.  It can contain several variable references, as
+well as some invariant text.  For example,
+
+     a_dirs := dira dirb
+     1_dirs := dir1 dir2
+
+     a_files := filea fileb
+     1_files := file1 file2
+
+     ifeq "$(use_a)" "yes"
+     a1 := a
+     else
+     a1 := 1
+     endif
+
+     ifeq "$(use_dirs)" "yes"
+     df := dirs
+     else
+     df := files
+     endif
+
+     dirs := $($(a1)_$(df))
+
+will give `dirs' the same value as `a_dirs', `1_dirs', `a_files' or
+`1_files' depending on the settings of `use_a' and `use_dirs'.
+
+   Computed variable names can also be used in substitution references:
+
+     a_objects := a.o b.o c.o
+     1_objects := 1.o 2.o 3.o
+
+     sources := $($(a1)_objects:.o=.c)
+
+defines `sources' as either `a.c b.c c.c' or `1.c 2.c 3.c', depending
+on the value of `a1'.
+
+   The only restriction on this sort of use of nested variable
+references is that they cannot specify part of the name of a function
+to be called.  This is because the test for a recognized function name
+is done before the expansion of nested references.  For example,
+
+     ifdef do_sort
+     func := sort
+     else
+     func := strip
+     endif
+
+     bar := a d b g q c
+
+     foo := $($(func) $(bar))
+
+attempts to give `foo' the value of the variable `sort a d b g q c' or
+`strip a d b g q c', rather than giving `a d b g q c' as the argument
+to either the `sort' or the `strip' function.  This restriction could
+be removed in the future if that change is shown to be a good idea.
+
+   You can also use computed variable names in the left-hand side of a
+variable assignment, or in a `define' directive, as in:
+
+     dir = foo
+     $(dir)_sources := $(wildcard $(dir)/*.c)
+     define $(dir)_print
+     lpr $($(dir)_sources)
+     endef
+
+This example defines the variables `dir', `foo_sources', and
+`foo_print'.
+
+   Note that "nested variable references" are quite different from
+"recursively expanded variables" (*note The Two Flavors of Variables:
+Flavors.), though both are used together in complex ways when doing
+makefile programming.
+
+
+File: make.info,  Node: Values,  Next: Setting,  Prev: Advanced,  Up: Using Variables
+
+6.4 How Variables Get Their Values
+==================================
+
+Variables can get values in several different ways:
+
+   * You can specify an overriding value when you run `make'.  *Note
+     Overriding Variables: Overriding.
+
+   * You can specify a value in the makefile, either with an assignment
+     (*note Setting Variables: Setting.) or with a verbatim definition
+     (*note Defining Variables Verbatim: Defining.).
+
+   * Variables in the environment become `make' variables.  *Note
+     Variables from the Environment: Environment.
+
+   * Several "automatic" variables are given new values for each rule.
+     Each of these has a single conventional use.  *Note Automatic
+     Variables::.
+
+   * Several variables have constant initial values.  *Note Variables
+     Used by Implicit Rules: Implicit Variables.
+
+
+File: make.info,  Node: Setting,  Next: Appending,  Prev: Values,  Up: Using Variables
+
+6.5 Setting Variables
+=====================
+
+To set a variable from the makefile, write a line starting with the
+variable name followed by `=' or `:='.  Whatever follows the `=' or
+`:=' on the line becomes the value.  For example,
+
+     objects = main.o foo.o bar.o utils.o
+
+defines a variable named `objects'.  Whitespace around the variable
+name and immediately after the `=' is ignored.
+
+   Variables defined with `=' are "recursively expanded" variables.
+Variables defined with `:=' are "simply expanded" variables; these
+definitions can contain variable references which will be expanded
+before the definition is made.  *Note The Two Flavors of Variables:
+Flavors.
+
+   The variable name may contain function and variable references, which
+are expanded when the line is read to find the actual variable name to
+use.
+
+   There is no limit on the length of the value of a variable except the
+amount of swapping space on the computer.  When a variable definition is
+long, it is a good idea to break it into several lines by inserting
+backslash-newline at convenient places in the definition.  This will not
+affect the functioning of `make', but it will make the makefile easier
+to read.
+
+   Most variable names are considered to have the empty string as a
+value if you have never set them.  Several variables have built-in
+initial values that are not empty, but you can set them in the usual
+ways (*note Variables Used by Implicit Rules: Implicit Variables.).
+Several special variables are set automatically to a new value for each
+rule; these are called the "automatic" variables (*note Automatic
+Variables::).
+
+   If you'd like a variable to be set to a value only if it's not
+already set, then you can use the shorthand operator `?=' instead of
+`='.  These two settings of the variable `FOO' are identical (*note The
+`origin' Function: Origin Function.):
+
+     FOO ?= bar
+
+and
+
+     ifeq ($(origin FOO), undefined)
+     FOO = bar
+     endif
+
+
+File: make.info,  Node: Appending,  Next: Override Directive,  Prev: Setting,  Up: Using Variables
+
+6.6 Appending More Text to Variables
+====================================
+
+Often it is useful to add more text to the value of a variable already
+defined.  You do this with a line containing `+=', like this:
+
+     objects += another.o
+
+This takes the value of the variable `objects', and adds the text
+`another.o' to it (preceded by a single space).  Thus:
+
+     objects = main.o foo.o bar.o utils.o
+     objects += another.o
+
+sets `objects' to `main.o foo.o bar.o utils.o another.o'.
+
+   Using `+=' is similar to:
+
+     objects = main.o foo.o bar.o utils.o
+     objects := $(objects) another.o
+
+but differs in ways that become important when you use more complex
+values.
+
+   When the variable in question has not been defined before, `+=' acts
+just like normal `=': it defines a recursively-expanded variable.
+However, when there _is_ a previous definition, exactly what `+=' does
+depends on what flavor of variable you defined originally.  *Note The
+Two Flavors of Variables: Flavors, for an explanation of the two
+flavors of variables.
+
+   When you add to a variable's value with `+=', `make' acts
+essentially as if you had included the extra text in the initial
+definition of the variable.  If you defined it first with `:=', making
+it a simply-expanded variable, `+=' adds to that simply-expanded
+definition, and expands the new text before appending it to the old
+value just as `:=' does (see *Note Setting Variables: Setting, for a
+full explanation of `:=').  In fact,
+
+     variable := value
+     variable += more
+
+is exactly equivalent to:
+
+
+     variable := value
+     variable := $(variable) more
+
+   On the other hand, when you use `+=' with a variable that you defined
+first to be recursively-expanded using plain `=', `make' does something
+a bit different.  Recall that when you define a recursively-expanded
+variable, `make' does not expand the value you set for variable and
+function references immediately.  Instead it stores the text verbatim,
+and saves these variable and function references to be expanded later,
+when you refer to the new variable (*note The Two Flavors of Variables:
+Flavors.).  When you use `+=' on a recursively-expanded variable, it is
+this unexpanded text to which `make' appends the new text you specify.
+
+     variable = value
+     variable += more
+
+is roughly equivalent to:
+
+     temp = value
+     variable = $(temp) more
+
+except that of course it never defines a variable called `temp'.  The
+importance of this comes when the variable's old value contains
+variable references.  Take this common example:
+
+     CFLAGS = $(includes) -O
+     ...
+     CFLAGS += -pg # enable profiling
+
+The first line defines the `CFLAGS' variable with a reference to another
+variable, `includes'.  (`CFLAGS' is used by the rules for C
+compilation; *note Catalogue of Implicit Rules: Catalogue of Rules.)
+Using `=' for the definition makes `CFLAGS' a recursively-expanded
+variable, meaning `$(includes) -O' is _not_ expanded when `make'
+processes the definition of `CFLAGS'.  Thus, `includes' need not be
+defined yet for its value to take effect.  It only has to be defined
+before any reference to `CFLAGS'.  If we tried to append to the value
+of `CFLAGS' without using `+=', we might do it like this:
+
+     CFLAGS := $(CFLAGS) -pg # enable profiling
+
+This is pretty close, but not quite what we want.  Using `:=' redefines
+`CFLAGS' as a simply-expanded variable; this means `make' expands the
+text `$(CFLAGS) -pg' before setting the variable.  If `includes' is not
+yet defined, we get ` -O -pg', and a later definition of `includes'
+will have no effect.  Conversely, by using `+=' we set `CFLAGS' to the
+_unexpanded_ value `$(includes) -O -pg'.  Thus we preserve the
+reference to `includes', so if that variable gets defined at any later
+point, a reference like `$(CFLAGS)' still uses its value.
+
+
+File: make.info,  Node: Override Directive,  Next: Defining,  Prev: Appending,  Up: Using Variables
+
+6.7 The `override' Directive
+============================
+
+If a variable has been set with a command argument (*note Overriding
+Variables: Overriding.), then ordinary assignments in the makefile are
+ignored.  If you want to set the variable in the makefile even though
+it was set with a command argument, you can use an `override'
+directive, which is a line that looks like this:
+
+     override VARIABLE = VALUE
+
+or
+
+     override VARIABLE := VALUE
+
+   To append more text to a variable defined on the command line, use:
+
+     override VARIABLE += MORE TEXT
+
+*Note Appending More Text to Variables: Appending.
+
+   The `override' directive was not invented for escalation in the war
+between makefiles and command arguments.  It was invented so you can
+alter and add to values that the user specifies with command arguments.
+
+   For example, suppose you always want the `-g' switch when you run the
+C compiler, but you would like to allow the user to specify the other
+switches with a command argument just as usual.  You could use this
+`override' directive:
+
+     override CFLAGS += -g
+
+   You can also use `override' directives with `define' directives.
+This is done as you might expect:
+
+     override define foo
+     bar
+     endef
+
+*Note Defining Variables Verbatim: Defining.
+
+
+File: make.info,  Node: Defining,  Next: Environment,  Prev: Override Directive,  Up: Using Variables
+
+6.8 Defining Variables Verbatim
+===============================
+
+Another way to set the value of a variable is to use the `define'
+directive.  This directive has an unusual syntax which allows newline
+characters to be included in the value, which is convenient for defining
+both canned sequences of commands (*note Defining Canned Command
+Sequences: Sequences.), and also sections of makefile syntax to use
+with `eval' (*note Eval Function::).
+
+   The `define' directive is followed on the same line by the name of
+the variable and nothing more.  The value to give the variable appears
+on the following lines.  The end of the value is marked by a line
+containing just the word `endef'.  Aside from this difference in
+syntax, `define' works just like `=': it creates a recursively-expanded
+variable (*note The Two Flavors of Variables: Flavors.).  The variable
+name may contain function and variable references, which are expanded
+when the directive is read to find the actual variable name to use.
+
+   You may nest `define' directives: `make' will keep track of nested
+directives and report an error if they are not all properly closed with
+`endef'.  Note that lines beginning with tab characters are considered
+part of a command script, so any `define' or `endef' strings appearing
+on such a line will not be considered `make' operators.
+
+     define two-lines
+     echo foo
+     echo $(bar)
+     endef
+
+   The value in an ordinary assignment cannot contain a newline; but the
+newlines that separate the lines of the value in a `define' become part
+of the variable's value (except for the final newline which precedes
+the `endef' and is not considered part of the value).
+
+   When used in a command script, the previous example is functionally
+equivalent to this:
+
+     two-lines = echo foo; echo $(bar)
+
+since two commands separated by semicolon behave much like two separate
+shell commands.  However, note that using two separate lines means
+`make' will invoke the shell twice, running an independent subshell for
+each line.  *Note Command Execution: Execution.
+
+   If you want variable definitions made with `define' to take
+precedence over command-line variable definitions, you can use the
+`override' directive together with `define':
+
+     override define two-lines
+     foo
+     $(bar)
+     endef
+
+*Note The `override' Directive: Override Directive.
+
+
+File: make.info,  Node: Environment,  Next: Target-specific,  Prev: Defining,  Up: Using Variables
+
+6.9 Variables from the Environment
+==================================
+
+Variables in `make' can come from the environment in which `make' is
+run.  Every environment variable that `make' sees when it starts up is
+transformed into a `make' variable with the same name and value.
+However, an explicit assignment in the makefile, or with a command
+argument, overrides the environment.  (If the `-e' flag is specified,
+then values from the environment override assignments in the makefile.
+*Note Summary of Options: Options Summary.  But this is not recommended
+practice.)
+
+   Thus, by setting the variable `CFLAGS' in your environment, you can
+cause all C compilations in most makefiles to use the compiler switches
+you prefer.  This is safe for variables with standard or conventional
+meanings because you know that no makefile will use them for other
+things.  (Note this is not totally reliable; some makefiles set
+`CFLAGS' explicitly and therefore are not affected by the value in the
+environment.)
+
+   When `make' runs a command script, variables defined in the makefile
+are placed into the environment of that command.  This allows you to
+pass values to sub-`make' invocations (*note Recursive Use of `make':
+Recursion.).  By default, only variables that came from the environment
+or the command line are passed to recursive invocations.  You can use
+the `export' directive to pass other variables.  *Note Communicating
+Variables to a Sub-`make': Variables/Recursion, for full details.
+
+   Other use of variables from the environment is not recommended.  It
+is not wise for makefiles to depend for their functioning on
+environment variables set up outside their control, since this would
+cause different users to get different results from the same makefile.
+This is against the whole purpose of most makefiles.
+
+   Such problems would be especially likely with the variable `SHELL',
+which is normally present in the environment to specify the user's
+choice of interactive shell.  It would be very undesirable for this
+choice to affect `make'; so, `make' handles the `SHELL' environment
+variable in a special way; see *Note Choosing the Shell::.
+
+
+File: make.info,  Node: Target-specific,  Next: Pattern-specific,  Prev: Environment,  Up: Using Variables
+
+6.10 Target-specific Variable Values
+====================================
+
+Variable values in `make' are usually global; that is, they are the
+same regardless of where they are evaluated (unless they're reset, of
+course).  One exception to that is automatic variables (*note Automatic
+Variables::).
+
+   The other exception is "target-specific variable values".  This
+feature allows you to define different values for the same variable,
+based on the target that `make' is currently building.  As with
+automatic variables, these values are only available within the context
+of a target's command script (and in other target-specific assignments).
+
+   Set a target-specific variable value like this:
+
+     TARGET ... : VARIABLE-ASSIGNMENT
+
+or like this:
+
+     TARGET ... : override VARIABLE-ASSIGNMENT
+
+or like this:
+
+     TARGET ... : export VARIABLE-ASSIGNMENT
+
+   Multiple TARGET values create a target-specific variable value for
+each member of the target list individually.
+
+   The VARIABLE-ASSIGNMENT can be any valid form of assignment;
+recursive (`='), static (`:='), appending (`+='), or conditional
+(`?=').  All variables that appear within the VARIABLE-ASSIGNMENT are
+evaluated within the context of the target: thus, any
+previously-defined target-specific variable values will be in effect.
+Note that this variable is actually distinct from any "global" value:
+the two variables do not have to have the same flavor (recursive vs.
+static).
+
+   Target-specific variables have the same priority as any other
+makefile variable.  Variables provided on the command-line (and in the
+environment if the `-e' option is in force) will take precedence.
+Specifying the `override' directive will allow the target-specific
+variable value to be preferred.
+
+   There is one more special feature of target-specific variables: when
+you define a target-specific variable that variable value is also in
+effect for all prerequisites of this target, and all their
+prerequisites, etc. (unless those prerequisites override that variable
+with their own target-specific variable value).  So, for example, a
+statement like this:
+
+     prog : CFLAGS = -g
+     prog : prog.o foo.o bar.o
+
+will set `CFLAGS' to `-g' in the command script for `prog', but it will
+also set `CFLAGS' to `-g' in the command scripts that create `prog.o',
+`foo.o', and `bar.o', and any command scripts which create their
+prerequisites.
+
+   Be aware that a given prerequisite will only be built once per
+invocation of make, at most.  If the same file is a prerequisite of
+multiple targets, and each of those targets has a different value for
+the same target-specific variable, then the first target to be built
+will cause that prerequisite to be built and the prerequisite will
+inherit the target-specific value from the first target.  It will
+ignore the target-specific values from any other targets.
+
+
+File: make.info,  Node: Pattern-specific,  Prev: Target-specific,  Up: Using Variables
+
+6.11 Pattern-specific Variable Values
+=====================================
+
+In addition to target-specific variable values (*note Target-specific
+Variable Values: Target-specific.), GNU `make' supports
+pattern-specific variable values.  In this form, the variable is
+defined for any target that matches the pattern specified.  If a target
+matches more than one pattern, all the matching pattern-specific
+variables are interpreted in the order in which they were defined in
+the makefile, and collected together into one set.  Variables defined
+in this way are searched after any target-specific variables defined
+explicitly for that target, and before target-specific variables
+defined for the parent target.
+
+   Set a pattern-specific variable value like this:
+
+     PATTERN ... : VARIABLE-ASSIGNMENT
+
+or like this:
+
+     PATTERN ... : override VARIABLE-ASSIGNMENT
+
+where PATTERN is a %-pattern.  As with target-specific variable values,
+multiple PATTERN values create a pattern-specific variable value for
+each pattern individually.  The VARIABLE-ASSIGNMENT can be any valid
+form of assignment.  Any command-line variable setting will take
+precedence, unless `override' is specified.
+
+   For example:
+
+     %.o : CFLAGS = -O
+
+will assign `CFLAGS' the value of `-O' for all targets matching the
+pattern `%.o'.
+
+
+File: make.info,  Node: Conditionals,  Next: Functions,  Prev: Using Variables,  Up: Top
+
+7 Conditional Parts of Makefiles
+********************************
+
+A "conditional" causes part of a makefile to be obeyed or ignored
+depending on the values of variables.  Conditionals can compare the
+value of one variable to another, or the value of a variable to a
+constant string.  Conditionals control what `make' actually "sees" in
+the makefile, so they _cannot_ be used to control shell commands at the
+time of execution.
+
+* Menu:
+
+* Conditional Example::         Example of a conditional
+* Conditional Syntax::          The syntax of conditionals.
+* Testing Flags::               Conditionals that test flags.
+
+
+File: make.info,  Node: Conditional Example,  Next: Conditional Syntax,  Prev: Conditionals,  Up: Conditionals
+
+7.1 Example of a Conditional
+============================
+
+The following example of a conditional tells `make' to use one set of
+libraries if the `CC' variable is `gcc', and a different set of
+libraries otherwise.  It works by controlling which of two command
+lines will be used as the command for a rule.  The result is that
+`CC=gcc' as an argument to `make' changes not only which compiler is
+used but also which libraries are linked.
+
+     libs_for_gcc = -lgnu
+     normal_libs =
+
+     foo: $(objects)
+     ifeq ($(CC),gcc)
+             $(CC) -o foo $(objects) $(libs_for_gcc)
+     else
+             $(CC) -o foo $(objects) $(normal_libs)
+     endif
+
+   This conditional uses three directives: one `ifeq', one `else' and
+one `endif'.
+
+   The `ifeq' directive begins the conditional, and specifies the
+condition.  It contains two arguments, separated by a comma and
+surrounded by parentheses.  Variable substitution is performed on both
+arguments and then they are compared.  The lines of the makefile
+following the `ifeq' are obeyed if the two arguments match; otherwise
+they are ignored.
+
+   The `else' directive causes the following lines to be obeyed if the
+previous conditional failed.  In the example above, this means that the
+second alternative linking command is used whenever the first
+alternative is not used.  It is optional to have an `else' in a
+conditional.
+
+   The `endif' directive ends the conditional.  Every conditional must
+end with an `endif'.  Unconditional makefile text follows.
+
+   As this example illustrates, conditionals work at the textual level:
+the lines of the conditional are treated as part of the makefile, or
+ignored, according to the condition.  This is why the larger syntactic
+units of the makefile, such as rules, may cross the beginning or the
+end of the conditional.
+
+   When the variable `CC' has the value `gcc', the above example has
+this effect:
+
+     foo: $(objects)
+             $(CC) -o foo $(objects) $(libs_for_gcc)
+
+When the variable `CC' has any other value, the effect is this:
+
+     foo: $(objects)
+             $(CC) -o foo $(objects) $(normal_libs)
+
+   Equivalent results can be obtained in another way by
+conditionalizing a variable assignment and then using the variable
+unconditionally:
+
+     libs_for_gcc = -lgnu
+     normal_libs =
+
+     ifeq ($(CC),gcc)
+       libs=$(libs_for_gcc)
+     else
+       libs=$(normal_libs)
+     endif
+
+     foo: $(objects)
+             $(CC) -o foo $(objects) $(libs)
+
+
+File: make.info,  Node: Conditional Syntax,  Next: Testing Flags,  Prev: Conditional Example,  Up: Conditionals
+
+7.2 Syntax of Conditionals
+==========================
+
+The syntax of a simple conditional with no `else' is as follows:
+
+     CONDITIONAL-DIRECTIVE
+     TEXT-IF-TRUE
+     endif
+
+The TEXT-IF-TRUE may be any lines of text, to be considered as part of
+the makefile if the condition is true.  If the condition is false, no
+text is used instead.
+
+   The syntax of a complex conditional is as follows:
+
+     CONDITIONAL-DIRECTIVE
+     TEXT-IF-TRUE
+     else
+     TEXT-IF-FALSE
+     endif
+
+   or:
+
+     CONDITIONAL-DIRECTIVE
+     TEXT-IF-ONE-IS-TRUE
+     else CONDITIONAL-DIRECTIVE
+     TEXT-IF-TRUE
+     else
+     TEXT-IF-FALSE
+     endif
+
+There can be as many "`else' CONDITIONAL-DIRECTIVE" clauses as
+necessary.  Once a given condition is true, TEXT-IF-TRUE is used and no
+other clause is used; if no condition is true then TEXT-IF-FALSE is
+used.  The TEXT-IF-TRUE and TEXT-IF-FALSE can be any number of lines of
+text.
+
+   The syntax of the CONDITIONAL-DIRECTIVE is the same whether the
+conditional is simple or complex; after an `else' or not.  There are
+four different directives that test different conditions.  Here is a
+table of them:
+
+`ifeq (ARG1, ARG2)'
+`ifeq 'ARG1' 'ARG2''
+`ifeq "ARG1" "ARG2"'
+`ifeq "ARG1" 'ARG2''
+`ifeq 'ARG1' "ARG2"'
+     Expand all variable references in ARG1 and ARG2 and compare them.
+     If they are identical, the TEXT-IF-TRUE is effective; otherwise,
+     the TEXT-IF-FALSE, if any, is effective.
+
+     Often you want to test if a variable has a non-empty value.  When
+     the value results from complex expansions of variables and
+     functions, expansions you would consider empty may actually
+     contain whitespace characters and thus are not seen as empty.
+     However, you can use the `strip' function (*note Text Functions::)
+     to avoid interpreting whitespace as a non-empty value.  For
+     example:
+
+          ifeq ($(strip $(foo)),)
+          TEXT-IF-EMPTY
+          endif
+
+     will evaluate TEXT-IF-EMPTY even if the expansion of `$(foo)'
+     contains whitespace characters.
+
+`ifneq (ARG1, ARG2)'
+`ifneq 'ARG1' 'ARG2''
+`ifneq "ARG1" "ARG2"'
+`ifneq "ARG1" 'ARG2''
+`ifneq 'ARG1' "ARG2"'
+     Expand all variable references in ARG1 and ARG2 and compare them.
+     If they are different, the TEXT-IF-TRUE is effective; otherwise,
+     the TEXT-IF-FALSE, if any, is effective.
+
+`ifdef VARIABLE-NAME'
+     The `ifdef' form takes the _name_ of a variable as its argument,
+     not a reference to a variable.  The value of that variable has a
+     non-empty value, the TEXT-IF-TRUE is effective; otherwise, the
+     TEXT-IF-FALSE, if any, is effective.  Variables that have never
+     been defined have an empty value.  The text VARIABLE-NAME is
+     expanded, so it could be a variable or function that expands to
+     the name of a variable.  For example:
+
+          bar = true
+          foo = bar
+          ifdef $(foo)
+          frobozz = yes
+          endif
+
+     The variable reference `$(foo)' is expanded, yielding `bar', which
+     is considered to be the name of a variable.  The variable `bar' is
+     not expanded, but its value is examined to determine if it is
+     non-empty.
+
+     Note that `ifdef' only tests whether a variable has a value.  It
+     does not expand the variable to see if that value is nonempty.
+     Consequently, tests using `ifdef' return true for all definitions
+     except those like `foo ='.  To test for an empty value, use
+     `ifeq ($(foo),)'.  For example,
+
+          bar =
+          foo = $(bar)
+          ifdef foo
+          frobozz = yes
+          else
+          frobozz = no
+          endif
+
+     sets `frobozz' to `yes', while:
+
+          foo =
+          ifdef foo
+          frobozz = yes
+          else
+          frobozz = no
+          endif
+
+     sets `frobozz' to `no'.
+
+`ifndef VARIABLE-NAME'
+     If the variable VARIABLE-NAME has an empty value, the TEXT-IF-TRUE
+     is effective; otherwise, the TEXT-IF-FALSE, if any, is effective.
+     The rules for expansion and testing of VARIABLE-NAME are identical
+     to the `ifdef' directive.
+
+   Extra spaces are allowed and ignored at the beginning of the
+conditional directive line, but a tab is not allowed.  (If the line
+begins with a tab, it will be considered a command for a rule.)  Aside
+from this, extra spaces or tabs may be inserted with no effect anywhere
+except within the directive name or within an argument.  A comment
+starting with `#' may appear at the end of the line.
+
+   The other two directives that play a part in a conditional are `else'
+and `endif'.  Each of these directives is written as one word, with no
+arguments.  Extra spaces are allowed and ignored at the beginning of the
+line, and spaces or tabs at the end.  A comment starting with `#' may
+appear at the end of the line.
+
+   Conditionals affect which lines of the makefile `make' uses.  If the
+condition is true, `make' reads the lines of the TEXT-IF-TRUE as part
+of the makefile; if the condition is false, `make' ignores those lines
+completely.  It follows that syntactic units of the makefile, such as
+rules, may safely be split across the beginning or the end of the
+conditional.
+
+   `make' evaluates conditionals when it reads a makefile.
+Consequently, you cannot use automatic variables in the tests of
+conditionals because they are not defined until commands are run (*note
+Automatic Variables::).
+
+   To prevent intolerable confusion, it is not permitted to start a
+conditional in one makefile and end it in another.  However, you may
+write an `include' directive within a conditional, provided you do not
+attempt to terminate the conditional inside the included file.
+
+
+File: make.info,  Node: Testing Flags,  Prev: Conditional Syntax,  Up: Conditionals
+
+7.3 Conditionals that Test Flags
+================================
+
+You can write a conditional that tests `make' command flags such as
+`-t' by using the variable `MAKEFLAGS' together with the `findstring'
+function (*note Functions for String Substitution and Analysis: Text
+Functions.).  This is useful when `touch' is not enough to make a file
+appear up to date.
+
+   The `findstring' function determines whether one string appears as a
+substring of another.  If you want to test for the `-t' flag, use `t'
+as the first string and the value of `MAKEFLAGS' as the other.
+
+   For example, here is how to arrange to use `ranlib -t' to finish
+marking an archive file up to date:
+
+     archive.a: ...
+     ifneq (,$(findstring t,$(MAKEFLAGS)))
+             +touch archive.a
+             +ranlib -t archive.a
+     else
+             ranlib archive.a
+     endif
+
+The `+' prefix marks those command lines as "recursive" so that they
+will be executed despite use of the `-t' flag.  *Note Recursive Use of
+`make': Recursion.
+
+
+File: make.info,  Node: Functions,  Next: Running,  Prev: Conditionals,  Up: Top
+
+8 Functions for Transforming Text
+*********************************
+
+"Functions" allow you to do text processing in the makefile to compute
+the files to operate on or the commands to use.  You use a function in a
+"function call", where you give the name of the function and some text
+(the "arguments") for the function to operate on.  The result of the
+function's processing is substituted into the makefile at the point of
+the call, just as a variable might be substituted.
+
+* Menu:
+
+* Syntax of Functions::         How to write a function call.
+* Text Functions::              General-purpose text manipulation functions.
+* File Name Functions::         Functions for manipulating file names.
+* Conditional Functions::       Functions that implement conditions.
+* Foreach Function::            Repeat some text with controlled variation.
+* Call Function::               Expand a user-defined function.
+* Value Function::              Return the un-expanded value of a variable.
+* Eval Function::               Evaluate the arguments as makefile syntax.
+* Origin Function::             Find where a variable got its value.
+* Flavor Function::             Find out the flavor of a variable.
+* Shell Function::              Substitute the output of a shell command.
+* Make Control Functions::      Functions that control how make runs.
+
+
+File: make.info,  Node: Syntax of Functions,  Next: Text Functions,  Prev: Functions,  Up: Functions
+
+8.1 Function Call Syntax
+========================
+
+A function call resembles a variable reference.  It looks like this:
+
+     $(FUNCTION ARGUMENTS)
+
+or like this:
+
+     ${FUNCTION ARGUMENTS}
+
+   Here FUNCTION is a function name; one of a short list of names that
+are part of `make'.  You can also essentially create your own functions
+by using the `call' builtin function.
+
+   The ARGUMENTS are the arguments of the function.  They are separated
+from the function name by one or more spaces or tabs, and if there is
+more than one argument, then they are separated by commas.  Such
+whitespace and commas are not part of an argument's value.  The
+delimiters which you use to surround the function call, whether
+parentheses or braces, can appear in an argument only in matching pairs;
+the other kind of delimiters may appear singly.  If the arguments
+themselves contain other function calls or variable references, it is
+wisest to use the same kind of delimiters for all the references; write
+`$(subst a,b,$(x))', not `$(subst a,b,${x})'.  This is because it is
+clearer, and because only one type of delimiter is matched to find the
+end of the reference.
+
+   The text written for each argument is processed by substitution of
+variables and function calls to produce the argument value, which is
+the text on which the function acts.  The substitution is done in the
+order in which the arguments appear.
+
+   Commas and unmatched parentheses or braces cannot appear in the text
+of an argument as written; leading spaces cannot appear in the text of
+the first argument as written.  These characters can be put into the
+argument value by variable substitution.  First define variables
+`comma' and `space' whose values are isolated comma and space
+characters, then substitute these variables where such characters are
+wanted, like this:
+
+     comma:= ,
+     empty:=
+     space:= $(empty) $(empty)
+     foo:= a b c
+     bar:= $(subst $(space),$(comma),$(foo))
+     # bar is now `a,b,c'.
+
+Here the `subst' function replaces each space with a comma, through the
+value of `foo', and substitutes the result.
+
+
+File: make.info,  Node: Text Functions,  Next: File Name Functions,  Prev: Syntax of Functions,  Up: Functions
+
+8.2 Functions for String Substitution and Analysis
+==================================================
+
+Here are some functions that operate on strings:
+
+`$(subst FROM,TO,TEXT)'
+     Performs a textual replacement on the text TEXT: each occurrence
+     of FROM is replaced by TO.  The result is substituted for the
+     function call.  For example,
+
+          $(subst ee,EE,feet on the street)
+
+     substitutes the string `fEEt on the strEEt'.
+
+`$(patsubst PATTERN,REPLACEMENT,TEXT)'
+     Finds whitespace-separated words in TEXT that match PATTERN and
+     replaces them with REPLACEMENT.  Here PATTERN may contain a `%'
+     which acts as a wildcard, matching any number of any characters
+     within a word.  If REPLACEMENT also contains a `%', the `%' is
+     replaced by the text that matched the `%' in PATTERN.  Only the
+     first `%' in the PATTERN and REPLACEMENT is treated this way; any
+     subsequent `%' is unchanged.
+
+     `%' characters in `patsubst' function invocations can be quoted
+     with preceding backslashes (`\').  Backslashes that would
+     otherwise quote `%' characters can be quoted with more backslashes.
+     Backslashes that quote `%' characters or other backslashes are
+     removed from the pattern before it is compared file names or has a
+     stem substituted into it.  Backslashes that are not in danger of
+     quoting `%' characters go unmolested.  For example, the pattern
+     `the\%weird\\%pattern\\' has `the%weird\' preceding the operative
+     `%' character, and `pattern\\' following it.  The final two
+     backslashes are left alone because they cannot affect any `%'
+     character.
+
+     Whitespace between words is folded into single space characters;
+     leading and trailing whitespace is discarded.
+
+     For example,
+
+          $(patsubst %.c,%.o,x.c.c bar.c)
+
+     produces the value `x.c.o bar.o'.
+
+     Substitution references (*note Substitution References:
+     Substitution Refs.) are a simpler way to get the effect of the
+     `patsubst' function:
+
+          $(VAR:PATTERN=REPLACEMENT)
+
+     is equivalent to
+
+          $(patsubst PATTERN,REPLACEMENT,$(VAR))
+
+     The second shorthand simplifies one of the most common uses of
+     `patsubst': replacing the suffix at the end of file names.
+
+          $(VAR:SUFFIX=REPLACEMENT)
+
+     is equivalent to
+
+          $(patsubst %SUFFIX,%REPLACEMENT,$(VAR))
+
+     For example, you might have a list of object files:
+
+          objects = foo.o bar.o baz.o
+
+     To get the list of corresponding source files, you could simply
+     write:
+
+          $(objects:.o=.c)
+
+     instead of using the general form:
+
+          $(patsubst %.o,%.c,$(objects))
+
+`$(strip STRING)'
+     Removes leading and trailing whitespace from STRING and replaces
+     each internal sequence of one or more whitespace characters with a
+     single space.  Thus, `$(strip a b  c )' results in `a b c'.
+
+     The function `strip' can be very useful when used in conjunction
+     with conditionals.  When comparing something with the empty string
+     `' using `ifeq' or `ifneq', you usually want a string of just
+     whitespace to match the empty string (*note Conditionals::).
+
+     Thus, the following may fail to have the desired results:
+
+          .PHONY: all
+          ifneq   "$(needs_made)" ""
+          all: $(needs_made)
+          else
+          all:;@echo 'Nothing to make!'
+          endif
+
+     Replacing the variable reference `$(needs_made)' with the function
+     call `$(strip $(needs_made))' in the `ifneq' directive would make
+     it more robust.
+
+`$(findstring FIND,IN)'
+     Searches IN for an occurrence of FIND.  If it occurs, the value is
+     FIND; otherwise, the value is empty.  You can use this function in
+     a conditional to test for the presence of a specific substring in
+     a given string.  Thus, the two examples,
+
+          $(findstring a,a b c)
+          $(findstring a,b c)
+
+     produce the values `a' and `' (the empty string), respectively.
+     *Note Testing Flags::, for a practical application of `findstring'.
+
+`$(filter PATTERN...,TEXT)'
+     Returns all whitespace-separated words in TEXT that _do_ match any
+     of the PATTERN words, removing any words that _do not_ match.  The
+     patterns are written using `%', just like the patterns used in the
+     `patsubst' function above.
+
+     The `filter' function can be used to separate out different types
+     of strings (such as file names) in a variable.  For example:
+
+          sources := foo.c bar.c baz.s ugh.h
+          foo: $(sources)
+                  cc $(filter %.c %.s,$(sources)) -o foo
+
+     says that `foo' depends of `foo.c', `bar.c', `baz.s' and `ugh.h'
+     but only `foo.c', `bar.c' and `baz.s' should be specified in the
+     command to the compiler.
+
+`$(filter-out PATTERN...,TEXT)'
+     Returns all whitespace-separated words in TEXT that _do not_ match
+     any of the PATTERN words, removing the words that _do_ match one
+     or more.  This is the exact opposite of the `filter' function.
+
+     For example, given:
+
+          objects=main1.o foo.o main2.o bar.o
+          mains=main1.o main2.o
+
+     the following generates a list which contains all the object files
+     not in `mains':
+
+          $(filter-out $(mains),$(objects))
+
+`$(sort LIST)'
+     Sorts the words of LIST in lexical order, removing duplicate
+     words.  The output is a list of words separated by single spaces.
+     Thus,
+
+          $(sort foo bar lose)
+
+     returns the value `bar foo lose'.
+
+     Incidentally, since `sort' removes duplicate words, you can use it
+     for this purpose even if you don't care about the sort order.
+
+`$(word N,TEXT)'
+     Returns the Nth word of TEXT.  The legitimate values of N start
+     from 1.  If N is bigger than the number of words in TEXT, the
+     value is empty.  For example,
+
+          $(word 2, foo bar baz)
+
+     returns `bar'.
+
+`$(wordlist S,E,TEXT)'
+     Returns the list of words in TEXT starting with word S and ending
+     with word E (inclusive).  The legitimate values of S start from 1;
+     E may start from 0.  If S is bigger than the number of words in
+     TEXT, the value is empty.  If E is bigger than the number of words
+     in TEXT, words up to the end of TEXT are returned.  If S is
+     greater than E, nothing is returned.  For example,
+
+          $(wordlist 2, 3, foo bar baz)
+
+     returns `bar baz'.
+
+`$(words TEXT)'
+     Returns the number of words in TEXT.  Thus, the last word of TEXT
+     is `$(word $(words TEXT),TEXT)'.
+
+`$(firstword NAMES...)'
+     The argument NAMES is regarded as a series of names, separated by
+     whitespace.  The value is the first name in the series.  The rest
+     of the names are ignored.
+
+     For example,
+
+          $(firstword foo bar)
+
+     produces the result `foo'.  Although `$(firstword TEXT)' is the
+     same as `$(word 1,TEXT)', the `firstword' function is retained for
+     its simplicity.
+
+`$(lastword NAMES...)'
+     The argument NAMES is regarded as a series of names, separated by
+     whitespace.  The value is the last name in the series.
+
+     For example,
+
+          $(lastword foo bar)
+
+     produces the result `bar'.  Although `$(lastword TEXT)' is the
+     same as `$(word $(words TEXT),TEXT)', the `lastword' function was
+     added for its simplicity and better performance.
+
+   Here is a realistic example of the use of `subst' and `patsubst'.
+Suppose that a makefile uses the `VPATH' variable to specify a list of
+directories that `make' should search for prerequisite files (*note
+`VPATH' Search Path for All Prerequisites: General Search.).  This
+example shows how to tell the C compiler to search for header files in
+the same list of directories.
+
+   The value of `VPATH' is a list of directories separated by colons,
+such as `src:../headers'.  First, the `subst' function is used to
+change the colons to spaces:
+
+     $(subst :, ,$(VPATH))
+
+This produces `src ../headers'.  Then `patsubst' is used to turn each
+directory name into a `-I' flag.  These can be added to the value of
+the variable `CFLAGS', which is passed automatically to the C compiler,
+like this:
+
+     override CFLAGS += $(patsubst %,-I%,$(subst :, ,$(VPATH)))
+
+The effect is to append the text `-Isrc -I../headers' to the previously
+given value of `CFLAGS'.  The `override' directive is used so that the
+new value is assigned even if the previous value of `CFLAGS' was
+specified with a command argument (*note The `override' Directive:
+Override Directive.).
+
+
+File: make.info,  Node: File Name Functions,  Next: Conditional Functions,  Prev: Text Functions,  Up: Functions
+
+8.3 Functions for File Names
+============================
+
+Several of the built-in expansion functions relate specifically to
+taking apart file names or lists of file names.
+
+   Each of the following functions performs a specific transformation
+on a file name.  The argument of the function is regarded as a series
+of file names, separated by whitespace.  (Leading and trailing
+whitespace is ignored.)  Each file name in the series is transformed in
+the same way and the results are concatenated with single spaces
+between them.
+
+`$(dir NAMES...)'
+     Extracts the directory-part of each file name in NAMES.  The
+     directory-part of the file name is everything up through (and
+     including) the last slash in it.  If the file name contains no
+     slash, the directory part is the string `./'.  For example,
+
+          $(dir src/foo.c hacks)
+
+     produces the result `src/ ./'.
+
+`$(notdir NAMES...)'
+     Extracts all but the directory-part of each file name in NAMES.
+     If the file name contains no slash, it is left unchanged.
+     Otherwise, everything through the last slash is removed from it.
+
+     A file name that ends with a slash becomes an empty string.  This
+     is unfortunate, because it means that the result does not always
+     have the same number of whitespace-separated file names as the
+     argument had; but we do not see any other valid alternative.
+
+     For example,
+
+          $(notdir src/foo.c hacks)
+
+     produces the result `foo.c hacks'.
+
+`$(suffix NAMES...)'
+     Extracts the suffix of each file name in NAMES.  If the file name
+     contains a period, the suffix is everything starting with the last
+     period.  Otherwise, the suffix is the empty string.  This
+     frequently means that the result will be empty when NAMES is not,
+     and if NAMES contains multiple file names, the result may contain
+     fewer file names.
+
+     For example,
+
+          $(suffix src/foo.c src-1.0/bar.c hacks)
+
+     produces the result `.c .c'.
+
+`$(basename NAMES...)'
+     Extracts all but the suffix of each file name in NAMES.  If the
+     file name contains a period, the basename is everything starting
+     up to (and not including) the last period.  Periods in the
+     directory part are ignored.  If there is no period, the basename
+     is the entire file name.  For example,
+
+          $(basename src/foo.c src-1.0/bar hacks)
+
+     produces the result `src/foo src-1.0/bar hacks'.
+
+`$(addsuffix SUFFIX,NAMES...)'
+     The argument NAMES is regarded as a series of names, separated by
+     whitespace; SUFFIX is used as a unit.  The value of SUFFIX is
+     appended to the end of each individual name and the resulting
+     larger names are concatenated with single spaces between them.
+     For example,
+
+          $(addsuffix .c,foo bar)
+
+     produces the result `foo.c bar.c'.
+
+`$(addprefix PREFIX,NAMES...)'
+     The argument NAMES is regarded as a series of names, separated by
+     whitespace; PREFIX is used as a unit.  The value of PREFIX is
+     prepended to the front of each individual name and the resulting
+     larger names are concatenated with single spaces between them.
+     For example,
+
+          $(addprefix src/,foo bar)
+
+     produces the result `src/foo src/bar'.
+
+`$(join LIST1,LIST2)'
+     Concatenates the two arguments word by word: the two first words
+     (one from each argument) concatenated form the first word of the
+     result, the two second words form the second word of the result,
+     and so on.  So the Nth word of the result comes from the Nth word
+     of each argument.  If one argument has more words that the other,
+     the extra words are copied unchanged into the result.
+
+     For example, `$(join a b,.c .o)' produces `a.c b.o'.
+
+     Whitespace between the words in the lists is not preserved; it is
+     replaced with a single space.
+
+     This function can merge the results of the `dir' and `notdir'
+     functions, to produce the original list of files which was given
+     to those two functions.
+
+`$(wildcard PATTERN)'
+     The argument PATTERN is a file name pattern, typically containing
+     wildcard characters (as in shell file name patterns).  The result
+     of `wildcard' is a space-separated list of the names of existing
+     files that match the pattern.  *Note Using Wildcard Characters in
+     File Names: Wildcards.
+
+`$(realpath NAMES...)'
+     For each file name in NAMES return the canonical absolute name.  A
+     canonical name does not contain any `.' or `..' components, nor
+     any repeated path separators (`/') or symlinks.  In case of a
+     failure the empty string is returned.  Consult the `realpath(3)'
+     documentation for a list of possible failure causes.
+
+`$(abspath NAMES...)'
+     For each file name in NAMES return an absolute name that does not
+     contain any `.' or `..' components, nor any repeated path
+     separators (`/').  Note that, in contrast to `realpath' function,
+     `abspath' does not resolve symlinks and does not require the file
+     names to refer to an existing file or directory.  Use the
+     `wildcard' function to test for existence.
+
+
+File: make.info,  Node: Conditional Functions,  Next: Foreach Function,  Prev: File Name Functions,  Up: Functions
+
+8.4 Functions for Conditionals
+==============================
+
+There are three functions that provide conditional expansion.  A key
+aspect of these functions is that not all of the arguments are expanded
+initially.  Only those arguments which need to be expanded, will be
+expanded.
+
+`$(if CONDITION,THEN-PART[,ELSE-PART])'
+     The `if' function provides support for conditional expansion in a
+     functional context (as opposed to the GNU `make' makefile
+     conditionals such as `ifeq' (*note Syntax of Conditionals:
+     Conditional Syntax.).
+
+     The first argument, CONDITION, first has all preceding and
+     trailing whitespace stripped, then is expanded.  If it expands to
+     any non-empty string, then the condition is considered to be true.
+     If it expands to an empty string, the condition is considered to
+     be false.
+
+     If the condition is true then the second argument, THEN-PART, is
+     evaluated and this is used as the result of the evaluation of the
+     entire `if' function.
+
+     If the condition is false then the third argument, ELSE-PART, is
+     evaluated and this is the result of the `if' function.  If there is
+     no third argument, the `if' function evaluates to nothing (the
+     empty string).
+
+     Note that only one of the THEN-PART or the ELSE-PART will be
+     evaluated, never both.  Thus, either can contain side-effects
+     (such as `shell' function calls, etc.)
+
+`$(or CONDITION1[,CONDITION2[,CONDITION3...]])'
+     The `or' function provides a "short-circuiting" OR operation.
+     Each argument is expanded, in order.  If an argument expands to a
+     non-empty string the processing stops and the result of the
+     expansion is that string.  If, after all arguments are expanded,
+     all of them are false (empty), then the result of the expansion is
+     the empty string.
+
+`$(and CONDITION1[,CONDITION2[,CONDITION3...]])'
+     The `and' function provides a "short-circuiting" AND operation.
+     Each argument is expanded, in order.  If an argument expands to an
+     empty string the processing stops and the result of the expansion
+     is the empty string.  If all arguments expand to a non-empty
+     string then the result of the expansion is the expansion of the
+     last argument.
+
+
+
+File: make.info,  Node: Foreach Function,  Next: Call Function,  Prev: Conditional Functions,  Up: Functions
+
+8.5 The `foreach' Function
+==========================
+
+The `foreach' function is very different from other functions.  It
+causes one piece of text to be used repeatedly, each time with a
+different substitution performed on it.  It resembles the `for' command
+in the shell `sh' and the `foreach' command in the C-shell `csh'.
+
+   The syntax of the `foreach' function is:
+
+     $(foreach VAR,LIST,TEXT)
+
+The first two arguments, VAR and LIST, are expanded before anything
+else is done; note that the last argument, TEXT, is *not* expanded at
+the same time.  Then for each word of the expanded value of LIST, the
+variable named by the expanded value of VAR is set to that word, and
+TEXT is expanded.  Presumably TEXT contains references to that
+variable, so its expansion will be different each time.
+
+   The result is that TEXT is expanded as many times as there are
+whitespace-separated words in LIST.  The multiple expansions of TEXT
+are concatenated, with spaces between them, to make the result of
+`foreach'.
+
+   This simple example sets the variable `files' to the list of all
+files in the directories in the list `dirs':
+
+     dirs := a b c d
+     files := $(foreach dir,$(dirs),$(wildcard $(dir)/*))
+
+   Here TEXT is `$(wildcard $(dir)/*)'.  The first repetition finds the
+value `a' for `dir', so it produces the same result as `$(wildcard
+a/*)'; the second repetition produces the result of `$(wildcard b/*)';
+and the third, that of `$(wildcard c/*)'.
+
+   This example has the same result (except for setting `dirs') as the
+following example:
+
+     files := $(wildcard a/* b/* c/* d/*)
+
+   When TEXT is complicated, you can improve readability by giving it a
+name, with an additional variable:
+
+     find_files = $(wildcard $(dir)/*)
+     dirs := a b c d
+     files := $(foreach dir,$(dirs),$(find_files))
+
+Here we use the variable `find_files' this way.  We use plain `=' to
+define a recursively-expanding variable, so that its value contains an
+actual function call to be reexpanded under the control of `foreach'; a
+simply-expanded variable would not do, since `wildcard' would be called
+only once at the time of defining `find_files'.
+
+   The `foreach' function has no permanent effect on the variable VAR;
+its value and flavor after the `foreach' function call are the same as
+they were beforehand.  The other values which are taken from LIST are
+in effect only temporarily, during the execution of `foreach'.  The
+variable VAR is a simply-expanded variable during the execution of
+`foreach'.  If VAR was undefined before the `foreach' function call, it
+is undefined after the call.  *Note The Two Flavors of Variables:
+Flavors.
+
+   You must take care when using complex variable expressions that
+result in variable names because many strange things are valid variable
+names, but are probably not what you intended.  For example,
+
+     files := $(foreach Esta escrito en espanol!,b c ch,$(find_files))
+
+might be useful if the value of `find_files' references the variable
+whose name is `Esta escrito en espanol!' (es un nombre bastante largo,
+no?), but it is more likely to be a mistake.
+
+
+File: make.info,  Node: Call Function,  Next: Value Function,  Prev: Foreach Function,  Up: Functions
+
+8.6 The `call' Function
+=======================
+
+The `call' function is unique in that it can be used to create new
+parameterized functions.  You can write a complex expression as the
+value of a variable, then use `call' to expand it with different values.
+
+   The syntax of the `call' function is:
+
+     $(call VARIABLE,PARAM,PARAM,...)
+
+   When `make' expands this function, it assigns each PARAM to
+temporary variables `$(1)', `$(2)', etc.  The variable `$(0)' will
+contain VARIABLE.  There is no maximum number of parameter arguments.
+There is no minimum, either, but it doesn't make sense to use `call'
+with no parameters.
+
+   Then VARIABLE is expanded as a `make' variable in the context of
+these temporary assignments.  Thus, any reference to `$(1)' in the
+value of VARIABLE will resolve to the first PARAM in the invocation of
+`call'.
+
+   Note that VARIABLE is the _name_ of a variable, not a _reference_ to
+that variable.  Therefore you would not normally use a `$' or
+parentheses when writing it.  (You can, however, use a variable
+reference in the name if you want the name not to be a constant.)
+
+   If VARIABLE is the name of a builtin function, the builtin function
+is always invoked (even if a `make' variable by that name also exists).
+
+   The `call' function expands the PARAM arguments before assigning
+them to temporary variables.  This means that VARIABLE values
+containing references to builtin functions that have special expansion
+rules, like `foreach' or `if', may not work as you expect.
+
+   Some examples may make this clearer.
+
+   This macro simply reverses its arguments:
+
+     reverse = $(2) $(1)
+
+     foo = $(call reverse,a,b)
+
+Here FOO will contain `b a'.
+
+   This one is slightly more interesting: it defines a macro to search
+for the first instance of a program in `PATH':
+
+     pathsearch = $(firstword $(wildcard $(addsuffix /$(1),$(subst :, ,$(PATH)))))
+
+     LS := $(call pathsearch,ls)
+
+Now the variable LS contains `/bin/ls' or similar.
+
+   The `call' function can be nested.  Each recursive invocation gets
+its own local values for `$(1)', etc. that mask the values of
+higher-level `call'.  For example, here is an implementation of a "map"
+function:
+
+     map = $(foreach a,$(2),$(call $(1),$(a)))
+
+   Now you can MAP a function that normally takes only one argument,
+such as `origin', to multiple values in one step:
+
+     o = $(call map,origin,o map MAKE)
+
+   and end up with O containing something like `file file default'.
+
+   A final caution: be careful when adding whitespace to the arguments
+to `call'.  As with other functions, any whitespace contained in the
+second and subsequent arguments is kept; this can cause strange
+effects.  It's generally safest to remove all extraneous whitespace when
+providing parameters to `call'.
+
+
+File: make.info,  Node: Value Function,  Next: Eval Function,  Prev: Call Function,  Up: Functions
+
+8.7 The `value' Function
+========================
+
+The `value' function provides a way for you to use the value of a
+variable _without_ having it expanded.  Please note that this does not
+undo expansions which have already occurred; for example if you create
+a simply expanded variable its value is expanded during the definition;
+in that case the `value' function will return the same result as using
+the variable directly.
+
+   The syntax of the `value' function is:
+
+     $(value VARIABLE)
+
+   Note that VARIABLE is the _name_ of a variable; not a _reference_ to
+that variable.  Therefore you would not normally use a `$' or
+parentheses when writing it.  (You can, however, use a variable
+reference in the name if you want the name not to be a constant.)
+
+   The result of this function is a string containing the value of
+VARIABLE, without any expansion occurring.  For example, in this
+makefile:
+
+     FOO = $PATH
+
+     all:
+             @echo $(FOO)
+             @echo $(value FOO)
+
+The first output line would be `ATH', since the "$P" would be expanded
+as a `make' variable, while the second output line would be the current
+value of your `$PATH' environment variable, since the `value' function
+avoided the expansion.
+
+   The `value' function is most often used in conjunction with the
+`eval' function (*note Eval Function::).
+
+
+File: make.info,  Node: Eval Function,  Next: Origin Function,  Prev: Value Function,  Up: Functions
+
+8.8 The `eval' Function
+=======================
+
+The `eval' function is very special: it allows you to define new
+makefile constructs that are not constant; which are the result of
+evaluating other variables and functions.  The argument to the `eval'
+function is expanded, then the results of that expansion are parsed as
+makefile syntax.  The expanded results can define new `make' variables,
+targets, implicit or explicit rules, etc.
+
+   The result of the `eval' function is always the empty string; thus,
+it can be placed virtually anywhere in a makefile without causing
+syntax errors.
+
+   It's important to realize that the `eval' argument is expanded
+_twice_; first by the `eval' function, then the results of that
+expansion are expanded again when they are parsed as makefile syntax.
+This means you may need to provide extra levels of escaping for "$"
+characters when using `eval'.  The `value' function (*note Value
+Function::) can sometimes be useful in these situations, to circumvent
+unwanted expansions.
+
+   Here is an example of how `eval' can be used; this example combines
+a number of concepts and other functions.  Although it might seem
+overly complex to use `eval' in this example, rather than just writing
+out the rules, consider two things: first, the template definition (in
+`PROGRAM_template') could need to be much more complex than it is here;
+and second, you might put the complex, "generic" part of this example
+into another makefile, then include it in all the individual makefiles.
+Now your individual makefiles are quite straightforward.
+
+     PROGRAMS    = server client
+
+     server_OBJS = server.o server_priv.o server_access.o
+     server_LIBS = priv protocol
+
+     client_OBJS = client.o client_api.o client_mem.o
+     client_LIBS = protocol
+
+     # Everything after this is generic
+
+     .PHONY: all
+     all: $(PROGRAMS)
+
+     define PROGRAM_template
+      $(1): $$($(1)_OBJS) $$($(1)_LIBS:%=-l%)
+      ALL_OBJS   += $$($(1)_OBJS)
+     endef
+
+     $(foreach prog,$(PROGRAMS),$(eval $(call PROGRAM_template,$(prog))))
+
+     $(PROGRAMS):
+             $(LINK.o) $^ $(LDLIBS) -o $@
+
+     clean:
+             rm -f $(ALL_OBJS) $(PROGRAMS)
+
+
+File: make.info,  Node: Origin Function,  Next: Flavor Function,  Prev: Eval Function,  Up: Functions
+
+8.9 The `origin' Function
+=========================
+
+The `origin' function is unlike most other functions in that it does
+not operate on the values of variables; it tells you something _about_
+a variable.  Specifically, it tells you where it came from.
+
+   The syntax of the `origin' function is:
+
+     $(origin VARIABLE)
+
+   Note that VARIABLE is the _name_ of a variable to inquire about; not
+a _reference_ to that variable.  Therefore you would not normally use a
+`$' or parentheses when writing it.  (You can, however, use a variable
+reference in the name if you want the name not to be a constant.)
+
+   The result of this function is a string telling you how the variable
+VARIABLE was defined:
+
+`undefined'
+     if VARIABLE was never defined.
+
+`default'
+     if VARIABLE has a default definition, as is usual with `CC' and so
+     on.  *Note Variables Used by Implicit Rules: Implicit Variables.
+     Note that if you have redefined a default variable, the `origin'
+     function will return the origin of the later definition.
+
+`environment'
+     if VARIABLE was defined as an environment variable and the `-e'
+     option is _not_ turned on (*note Summary of Options: Options
+     Summary.).
+
+`environment override'
+     if VARIABLE was defined as an environment variable and the `-e'
+     option _is_ turned on (*note Summary of Options: Options Summary.).
+
+`file'
+     if VARIABLE was defined in a makefile.
+
+`command line'
+     if VARIABLE was defined on the command line.
+
+`override'
+     if VARIABLE was defined with an `override' directive in a makefile
+     (*note The `override' Directive: Override Directive.).
+
+`automatic'
+     if VARIABLE is an automatic variable defined for the execution of
+     the commands for each rule (*note Automatic Variables::).
+
+   This information is primarily useful (other than for your curiosity)
+to determine if you want to believe the value of a variable.  For
+example, suppose you have a makefile `foo' that includes another
+makefile `bar'.  You want a variable `bletch' to be defined in `bar' if
+you run the command `make -f bar', even if the environment contains a
+definition of `bletch'.  However, if `foo' defined `bletch' before
+including `bar', you do not want to override that definition.  This
+could be done by using an `override' directive in `foo', giving that
+definition precedence over the later definition in `bar';
+unfortunately, the `override' directive would also override any command
+line definitions.  So, `bar' could include:
+
+     ifdef bletch
+     ifeq "$(origin bletch)" "environment"
+     bletch = barf, gag, etc.
+     endif
+     endif
+
+If `bletch' has been defined from the environment, this will redefine
+it.
+
+   If you want to override a previous definition of `bletch' if it came
+from the environment, even under `-e', you could instead write:
+
+     ifneq "$(findstring environment,$(origin bletch))" ""
+     bletch = barf, gag, etc.
+     endif
+
+   Here the redefinition takes place if `$(origin bletch)' returns
+either `environment' or `environment override'.  *Note Functions for
+String Substitution and Analysis: Text Functions.
+
+
+File: make.info,  Node: Flavor Function,  Next: Shell Function,  Prev: Origin Function,  Up: Functions
+
+8.10 The `flavor' Function
+==========================
+
+The `flavor' function is unlike most other functions (and like `origin'
+function) in that it does not operate on the values of variables; it
+tells you something _about_ a variable.  Specifically, it tells you the
+flavor of a variable (*note The Two Flavors of Variables: Flavors.).
+
+   The syntax of the `flavor' function is:
+
+     $(flavor VARIABLE)
+
+   Note that VARIABLE is the _name_ of a variable to inquire about; not
+a _reference_ to that variable.  Therefore you would not normally use a
+`$' or parentheses when writing it.  (You can, however, use a variable
+reference in the name if you want the name not to be a constant.)
+
+   The result of this function is a string that identifies the flavor
+of the variable VARIABLE:
+
+`undefined'
+     if VARIABLE was never defined.
+
+`recursive'
+     if VARIABLE is a recursively expanded variable.
+
+`simple'
+     if VARIABLE is a simply expanded variable.
+
+
+
+File: make.info,  Node: Shell Function,  Next: Make Control Functions,  Prev: Flavor Function,  Up: Functions
+
+8.11 The `shell' Function
+=========================
+
+The `shell' function is unlike any other function other than the
+`wildcard' function (*note The Function `wildcard': Wildcard Function.)
+in that it communicates with the world outside of `make'.
+
+   The `shell' function performs the same function that backquotes
+(``') perform in most shells: it does "command expansion".  This means
+that it takes as an argument a shell command and evaluates to the
+output of the command.  The only processing `make' does on the result
+is to convert each newline (or carriage-return / newline pair) to a
+single space.  If there is a trailing (carriage-return and) newline it
+will simply be removed.
+
+   The commands run by calls to the `shell' function are run when the
+function calls are expanded (*note How `make' Reads a Makefile: Reading
+Makefiles.).  Because this function involves spawning a new shell, you
+should carefully consider the performance implications of using the
+`shell' function within recursively expanded variables vs. simply
+expanded variables (*note The Two Flavors of Variables: Flavors.).
+
+   Here are some examples of the use of the `shell' function:
+
+     contents := $(shell cat foo)
+
+sets `contents' to the contents of the file `foo', with a space (rather
+than a newline) separating each line.
+
+     files := $(shell echo *.c)
+
+sets `files' to the expansion of `*.c'.  Unless `make' is using a very
+strange shell, this has the same result as `$(wildcard *.c)' (as long
+as at least one `.c' file exists).
+
+
+File: make.info,  Node: Make Control Functions,  Prev: Shell Function,  Up: Functions
+
+8.12 Functions That Control Make
+================================
+
+These functions control the way make runs.  Generally, they are used to
+provide information to the user of the makefile or to cause make to stop
+if some sort of environmental error is detected.
+
+`$(error TEXT...)'
+     Generates a fatal error where the message is TEXT.  Note that the
+     error is generated whenever this function is evaluated.  So, if
+     you put it inside a command script or on the right side of a
+     recursive variable assignment, it won't be evaluated until later.
+     The TEXT will be expanded before the error is generated.
+
+     For example,
+
+          ifdef ERROR1
+          $(error error is $(ERROR1))
+          endif
+
+     will generate a fatal error during the read of the makefile if the
+     `make' variable `ERROR1' is defined.  Or,
+
+          ERR = $(error found an error!)
+
+          .PHONY: err
+          err: ; $(ERR)
+
+     will generate a fatal error while `make' is running, if the `err'
+     target is invoked.
+
+`$(warning TEXT...)'
+     This function works similarly to the `error' function, above,
+     except that `make' doesn't exit.  Instead, TEXT is expanded and
+     the resulting message is displayed, but processing of the makefile
+     continues.
+
+     The result of the expansion of this function is the empty string.
+
+`$(info TEXT...)'
+     This function does nothing more than print its (expanded)
+     argument(s) to standard output.  No makefile name or line number
+     is added.  The result of the expansion of this function is the
+     empty string.
+
+
+File: make.info,  Node: Running,  Next: Implicit Rules,  Prev: Functions,  Up: Top
+
+9 How to Run `make'
+*******************
+
+A makefile that says how to recompile a program can be used in more
+than one way.  The simplest use is to recompile every file that is out
+of date.  Usually, makefiles are written so that if you run `make' with
+no arguments, it does just that.
+
+   But you might want to update only some of the files; you might want
+to use a different compiler or different compiler options; you might
+want just to find out which files are out of date without changing them.
+
+   By giving arguments when you run `make', you can do any of these
+things and many others.
+
+   The exit status of `make' is always one of three values:
+`0'
+     The exit status is zero if `make' is successful.
+
+`2'
+     The exit status is two if `make' encounters any errors.  It will
+     print messages describing the particular errors.
+
+`1'
+     The exit status is one if you use the `-q' flag and `make'
+     determines that some target is not already up to date.  *Note
+     Instead of Executing the Commands: Instead of Execution.
+
+* Menu:
+
+* Makefile Arguments::          How to specify which makefile to use.
+* Goals::                       How to use goal arguments to specify which
+                                  parts of the makefile to use.
+* Instead of Execution::        How to use mode flags to specify what
+                                  kind of thing to do with the commands
+                                  in the makefile other than simply
+                                  execute them.
+* Avoiding Compilation::        How to avoid recompiling certain files.
+* Overriding::                  How to override a variable to specify
+                                  an alternate compiler and other things.
+* Testing::                     How to proceed past some errors, to
+                                  test compilation.
+* Options Summary::             Summary of Options
+
+
+File: make.info,  Node: Makefile Arguments,  Next: Goals,  Prev: Running,  Up: Running
+
+9.1 Arguments to Specify the Makefile
+=====================================
+
+The way to specify the name of the makefile is with the `-f' or
+`--file' option (`--makefile' also works).  For example, `-f altmake'
+says to use the file `altmake' as the makefile.
+
+   If you use the `-f' flag several times and follow each `-f' with an
+argument, all the specified files are used jointly as makefiles.
+
+   If you do not use the `-f' or `--file' flag, the default is to try
+`GNUmakefile', `makefile', and `Makefile', in that order, and use the
+first of these three which exists or can be made (*note Writing
+Makefiles: Makefiles.).
+
+
+File: make.info,  Node: Goals,  Next: Instead of Execution,  Prev: Makefile Arguments,  Up: Running
+
+9.2 Arguments to Specify the Goals
+==================================
+
+The "goals" are the targets that `make' should strive ultimately to
+update.  Other targets are updated as well if they appear as
+prerequisites of goals, or prerequisites of prerequisites of goals, etc.
+
+   By default, the goal is the first target in the makefile (not
+counting targets that start with a period).  Therefore, makefiles are
+usually written so that the first target is for compiling the entire
+program or programs they describe.  If the first rule in the makefile
+has several targets, only the first target in the rule becomes the
+default goal, not the whole list.  You can manage the selection of the
+default goal from within your makefile using the `.DEFAULT_GOAL'
+variable (*note Other Special Variables: Special Variables.).
+
+   You can also specify a different goal or goals with command-line
+arguments to `make'.  Use the name of the goal as an argument.  If you
+specify several goals, `make' processes each of them in turn, in the
+order you name them.
+
+   Any target in the makefile may be specified as a goal (unless it
+starts with `-' or contains an `=', in which case it will be parsed as
+a switch or variable definition, respectively).  Even targets not in
+the makefile may be specified, if `make' can find implicit rules that
+say how to make them.
+
+   `Make' will set the special variable `MAKECMDGOALS' to the list of
+goals you specified on the command line.  If no goals were given on the
+command line, this variable is empty.  Note that this variable should
+be used only in special circumstances.
+
+   An example of appropriate use is to avoid including `.d' files
+during `clean' rules (*note Automatic Prerequisites::), so `make' won't
+create them only to immediately remove them again:
+
+     sources = foo.c bar.c
+
+     ifneq ($(MAKECMDGOALS),clean)
+     include $(sources:.c=.d)
+     endif
+
+   One use of specifying a goal is if you want to compile only a part of
+the program, or only one of several programs.  Specify as a goal each
+file that you wish to remake.  For example, consider a directory
+containing several programs, with a makefile that starts like this:
+
+     .PHONY: all
+     all: size nm ld ar as
+
+   If you are working on the program `size', you might want to say
+`make size' so that only the files of that program are recompiled.
+
+   Another use of specifying a goal is to make files that are not
+normally made.  For example, there may be a file of debugging output,
+or a version of the program that is compiled specially for testing,
+which has a rule in the makefile but is not a prerequisite of the
+default goal.
+
+   Another use of specifying a goal is to run the commands associated
+with a phony target (*note Phony Targets::) or empty target (*note
+Empty Target Files to Record Events: Empty Targets.).  Many makefiles
+contain a phony target named `clean' which deletes everything except
+source files.  Naturally, this is done only if you request it
+explicitly with `make clean'.  Following is a list of typical phony and
+empty target names.  *Note Standard Targets::, for a detailed list of
+all the standard target names which GNU software packages use.
+
+`all'
+     Make all the top-level targets the makefile knows about.
+
+`clean'
+     Delete all files that are normally created by running `make'.
+
+`mostlyclean'
+     Like `clean', but may refrain from deleting a few files that people
+     normally don't want to recompile.  For example, the `mostlyclean'
+     target for GCC does not delete `libgcc.a', because recompiling it
+     is rarely necessary and takes a lot of time.
+
+`distclean'
+`realclean'
+`clobber'
+     Any of these targets might be defined to delete _more_ files than
+     `clean' does.  For example, this would delete configuration files
+     or links that you would normally create as preparation for
+     compilation, even if the makefile itself cannot create these files.
+
+`install'
+     Copy the executable file into a directory that users typically
+     search for commands; copy any auxiliary files that the executable
+     uses into the directories where it will look for them.
+
+`print'
+     Print listings of the source files that have changed.
+
+`tar'
+     Create a tar file of the source files.
+
+`shar'
+     Create a shell archive (shar file) of the source files.
+
+`dist'
+     Create a distribution file of the source files.  This might be a
+     tar file, or a shar file, or a compressed version of one of the
+     above, or even more than one of the above.
+
+`TAGS'
+     Update a tags table for this program.
+
+`check'
+`test'
+     Perform self tests on the program this makefile builds.
+
+
+File: make.info,  Node: Instead of Execution,  Next: Avoiding Compilation,  Prev: Goals,  Up: Running
+
+9.3 Instead of Executing the Commands
+=====================================
+
+The makefile tells `make' how to tell whether a target is up to date,
+and how to update each target.  But updating the targets is not always
+what you want.  Certain options specify other activities for `make'.
+
+`-n'
+`--just-print'
+`--dry-run'
+`--recon'
+     "No-op".  The activity is to print what commands would be used to
+     make the targets up to date, but not actually execute them.
+
+`-t'
+`--touch'
+     "Touch".  The activity is to mark the targets as up to date without
+     actually changing them.  In other words, `make' pretends to compile
+     the targets but does not really change their contents.
+
+`-q'
+`--question'
+     "Question".  The activity is to find out silently whether the
+     targets are up to date already; but execute no commands in either
+     case.  In other words, neither compilation nor output will occur.
+
+`-W FILE'
+`--what-if=FILE'
+`--assume-new=FILE'
+`--new-file=FILE'
+     "What if".  Each `-W' flag is followed by a file name.  The given
+     files' modification times are recorded by `make' as being the
+     present time, although the actual modification times remain the
+     same.  You can use the `-W' flag in conjunction with the `-n' flag
+     to see what would happen if you were to modify specific files.
+
+   With the `-n' flag, `make' prints the commands that it would
+normally execute but does not execute them.
+
+   With the `-t' flag, `make' ignores the commands in the rules and
+uses (in effect) the command `touch' for each target that needs to be
+remade.  The `touch' command is also printed, unless `-s' or `.SILENT'
+is used.  For speed, `make' does not actually invoke the program
+`touch'.  It does the work directly.
+
+   With the `-q' flag, `make' prints nothing and executes no commands,
+but the exit status code it returns is zero if and only if the targets
+to be considered are already up to date.  If the exit status is one,
+then some updating needs to be done.  If `make' encounters an error,
+the exit status is two, so you can distinguish an error from a target
+that is not up to date.
+
+   It is an error to use more than one of these three flags in the same
+invocation of `make'.
+
+   The `-n', `-t', and `-q' options do not affect command lines that
+begin with `+' characters or contain the strings `$(MAKE)' or
+`${MAKE}'.  Note that only the line containing the `+' character or the
+strings `$(MAKE)' or `${MAKE}' is run regardless of these options.
+Other lines in the same rule are not run unless they too begin with `+'
+or contain `$(MAKE)' or `${MAKE}' (*Note How the `MAKE' Variable Works:
+MAKE Variable.)
+
+   The `-W' flag provides two features:
+
+   * If you also use the `-n' or `-q' flag, you can see what `make'
+     would do if you were to modify some files.
+
+   * Without the `-n' or `-q' flag, when `make' is actually executing
+     commands, the `-W' flag can direct `make' to act as if some files
+     had been modified, without actually modifying the files.
+
+   Note that the options `-p' and `-v' allow you to obtain other
+information about `make' or about the makefiles in use (*note Summary
+of Options: Options Summary.).
+
+
+File: make.info,  Node: Avoiding Compilation,  Next: Overriding,  Prev: Instead of Execution,  Up: Running
+
+9.4 Avoiding Recompilation of Some Files
+========================================
+
+Sometimes you may have changed a source file but you do not want to
+recompile all the files that depend on it.  For example, suppose you add
+a macro or a declaration to a header file that many other files depend
+on.  Being conservative, `make' assumes that any change in the header
+file requires recompilation of all dependent files, but you know that
+they do not need to be recompiled and you would rather not waste the
+time waiting for them to compile.
+
+   If you anticipate the problem before changing the header file, you
+can use the `-t' flag.  This flag tells `make' not to run the commands
+in the rules, but rather to mark the target up to date by changing its
+last-modification date.  You would follow this procedure:
+
+  1. Use the command `make' to recompile the source files that really
+     need recompilation, ensuring that the object files are up-to-date
+     before you begin.
+
+  2. Make the changes in the header files.
+
+  3. Use the command `make -t' to mark all the object files as up to
+     date.  The next time you run `make', the changes in the header
+     files will not cause any recompilation.
+
+   If you have already changed the header file at a time when some files
+do need recompilation, it is too late to do this.  Instead, you can use
+the `-o FILE' flag, which marks a specified file as "old" (*note
+Summary of Options: Options Summary.).  This means that the file itself
+will not be remade, and nothing else will be remade on its account.
+Follow this procedure:
+
+  1. Recompile the source files that need compilation for reasons
+     independent of the particular header file, with `make -o
+     HEADERFILE'.  If several header files are involved, use a separate
+     `-o' option for each header file.
+
+  2. Touch all the object files with `make -t'.
+
+
+File: make.info,  Node: Overriding,  Next: Testing,  Prev: Avoiding Compilation,  Up: Running
+
+9.5 Overriding Variables
+========================
+
+An argument that contains `=' specifies the value of a variable: `V=X'
+sets the value of the variable V to X.  If you specify a value in this
+way, all ordinary assignments of the same variable in the makefile are
+ignored; we say they have been "overridden" by the command line
+argument.
+
+   The most common way to use this facility is to pass extra flags to
+compilers.  For example, in a properly written makefile, the variable
+`CFLAGS' is included in each command that runs the C compiler, so a
+file `foo.c' would be compiled something like this:
+
+     cc -c $(CFLAGS) foo.c
+
+   Thus, whatever value you set for `CFLAGS' affects each compilation
+that occurs.  The makefile probably specifies the usual value for
+`CFLAGS', like this:
+
+     CFLAGS=-g
+
+   Each time you run `make', you can override this value if you wish.
+For example, if you say `make CFLAGS='-g -O'', each C compilation will
+be done with `cc -c -g -O'.  (This also illustrates how you can use
+quoting in the shell to enclose spaces and other special characters in
+the value of a variable when you override it.)
+
+   The variable `CFLAGS' is only one of many standard variables that
+exist just so that you can change them this way.  *Note Variables Used
+by Implicit Rules: Implicit Variables, for a complete list.
+
+   You can also program the makefile to look at additional variables of
+your own, giving the user the ability to control other aspects of how
+the makefile works by changing the variables.
+
+   When you override a variable with a command argument, you can define
+either a recursively-expanded variable or a simply-expanded variable.
+The examples shown above make a recursively-expanded variable; to make a
+simply-expanded variable, write `:=' instead of `='.  But, unless you
+want to include a variable reference or function call in the _value_
+that you specify, it makes no difference which kind of variable you
+create.
+
+   There is one way that the makefile can change a variable that you
+have overridden.  This is to use the `override' directive, which is a
+line that looks like this: `override VARIABLE = VALUE' (*note The
+`override' Directive: Override Directive.).
+
+
+File: make.info,  Node: Testing,  Next: Options Summary,  Prev: Overriding,  Up: Running
+
+9.6 Testing the Compilation of a Program
+========================================
+
+Normally, when an error happens in executing a shell command, `make'
+gives up immediately, returning a nonzero status.  No further commands
+are executed for any target.  The error implies that the goal cannot be
+correctly remade, and `make' reports this as soon as it knows.
+
+   When you are compiling a program that you have just changed, this is
+not what you want.  Instead, you would rather that `make' try compiling
+every file that can be tried, to show you as many compilation errors as
+possible.
+
+   On these occasions, you should use the `-k' or `--keep-going' flag.
+This tells `make' to continue to consider the other prerequisites of
+the pending targets, remaking them if necessary, before it gives up and
+returns nonzero status.  For example, after an error in compiling one
+object file, `make -k' will continue compiling other object files even
+though it already knows that linking them will be impossible.  In
+addition to continuing after failed shell commands, `make -k' will
+continue as much as possible after discovering that it does not know
+how to make a target or prerequisite file.  This will always cause an
+error message, but without `-k', it is a fatal error (*note Summary of
+Options: Options Summary.).
+
+   The usual behavior of `make' assumes that your purpose is to get the
+goals up to date; once `make' learns that this is impossible, it might
+as well report the failure immediately.  The `-k' flag says that the
+real purpose is to test as much as possible of the changes made in the
+program, perhaps to find several independent problems so that you can
+correct them all before the next attempt to compile.  This is why Emacs'
+`M-x compile' command passes the `-k' flag by default.
+
+
+File: make.info,  Node: Options Summary,  Prev: Testing,  Up: Running
+
+9.7 Summary of Options
+======================
+
+Here is a table of all the options `make' understands:
+
+`-b'
+`-m'
+     These options are ignored for compatibility with other versions of
+     `make'.
+
+`-B'
+`--always-make'
+     Consider all targets out-of-date.  GNU `make' proceeds to consider
+     targets and their prerequisites using the normal algorithms;
+     however, all targets so considered are always remade regardless of
+     the status of their prerequisites.  To avoid infinite recursion, if
+     `MAKE_RESTARTS' (*note Other Special Variables: Special
+     Variables.) is set to a number greater than 0 this option is
+     disabled when considering whether to remake makefiles (*note How
+     Makefiles Are Remade: Remaking Makefiles.).
+
+`-C DIR'
+`--directory=DIR'
+     Change to directory DIR before reading the makefiles.  If multiple
+     `-C' options are specified, each is interpreted relative to the
+     previous one: `-C / -C etc' is equivalent to `-C /etc'.  This is
+     typically used with recursive invocations of `make' (*note
+     Recursive Use of `make': Recursion.).
+
+`-d'
+     Print debugging information in addition to normal processing.  The
+     debugging information says which files are being considered for
+     remaking, which file-times are being compared and with what
+     results, which files actually need to be remade, which implicit
+     rules are considered and which are applied--everything interesting
+     about how `make' decides what to do.  The `-d' option is
+     equivalent to `--debug=a' (see below).
+
+`--debug[=OPTIONS]'
+     Print debugging information in addition to normal processing.
+     Various levels and types of output can be chosen.  With no
+     arguments, print the "basic" level of debugging.  Possible
+     arguments are below; only the first character is considered, and
+     values must be comma- or space-separated.
+
+    `a (all)'
+          All types of debugging output are enabled.  This is
+          equivalent to using `-d'.
+
+    `b (basic)'
+          Basic debugging prints each target that was found to be
+          out-of-date, and whether the build was successful or not.
+
+    `v (verbose)'
+          A level above `basic'; includes messages about which
+          makefiles were parsed, prerequisites that did not need to be
+          rebuilt, etc.  This option also enables `basic' messages.
+
+    `i (implicit)'
+          Prints messages describing the implicit rule searches for
+          each target.  This option also enables `basic' messages.
+
+    `j (jobs)'
+          Prints messages giving details on the invocation of specific
+          subcommands.
+
+    `m (makefile)'
+          By default, the above messages are not enabled while trying
+          to remake the makefiles.  This option enables messages while
+          rebuilding makefiles, too.  Note that the `all' option does
+          enable this option.  This option also enables `basic'
+          messages.
+
+`-e'
+`--environment-overrides'
+     Give variables taken from the environment precedence over
+     variables from makefiles.  *Note Variables from the Environment:
+     Environment.
+
+`-f FILE'
+`--file=FILE'
+`--makefile=FILE'
+     Read the file named FILE as a makefile.  *Note Writing Makefiles:
+     Makefiles.
+
+`-h'
+`--help'
+     Remind you of the options that `make' understands and then exit.
+
+`-i'
+`--ignore-errors'
+     Ignore all errors in commands executed to remake files.  *Note
+     Errors in Commands: Errors.
+
+`-I DIR'
+`--include-dir=DIR'
+     Specifies a directory DIR to search for included makefiles.  *Note
+     Including Other Makefiles: Include.  If several `-I' options are
+     used to specify several directories, the directories are searched
+     in the order specified.
+
+`-j [JOBS]'
+`--jobs[=JOBS]'
+     Specifies the number of jobs (commands) to run simultaneously.
+     With no argument, `make' runs as many jobs simultaneously as
+     possible.  If there is more than one `-j' option, the last one is
+     effective.  *Note Parallel Execution: Parallel, for more
+     information on how commands are run.  Note that this option is
+     ignored on MS-DOS.
+
+`-k'
+`--keep-going'
+     Continue as much as possible after an error.  While the target that
+     failed, and those that depend on it, cannot be remade, the other
+     prerequisites of these targets can be processed all the same.
+     *Note Testing the Compilation of a Program: Testing.
+
+`-l [LOAD]'
+`--load-average[=LOAD]'
+`--max-load[=LOAD]'
+     Specifies that no new jobs (commands) should be started if there
+     are other jobs running and the load average is at least LOAD (a
+     floating-point number).  With no argument, removes a previous load
+     limit.  *Note Parallel Execution: Parallel.
+
+`-L'
+`--check-symlink-times'
+     On systems that support symbolic links, this option causes `make'
+     to consider the timestamps on any symbolic links in addition to the
+     timestamp on the file referenced by those links.  When this option
+     is provided, the most recent timestamp among the file and the
+     symbolic links is taken as the modification time for this target
+     file.
+
+`-n'
+`--just-print'
+`--dry-run'
+`--recon'
+     Print the commands that would be executed, but do not execute them.
+     *Note Instead of Executing the Commands: Instead of Execution.
+
+`-o FILE'
+`--old-file=FILE'
+`--assume-old=FILE'
+     Do not remake the file FILE even if it is older than its
+     prerequisites, and do not remake anything on account of changes in
+     FILE.  Essentially the file is treated as very old and its rules
+     are ignored.  *Note Avoiding Recompilation of Some Files: Avoiding
+     Compilation.
+
+`-p'
+`--print-data-base'
+     Print the data base (rules and variable values) that results from
+     reading the makefiles; then execute as usual or as otherwise
+     specified.  This also prints the version information given by the
+     `-v' switch (see below).  To print the data base without trying to
+     remake any files, use `make -qp'.  To print the data base of
+     predefined rules and variables, use `make -p -f /dev/null'.  The
+     data base output contains filename and linenumber information for
+     command and variable definitions, so it can be a useful debugging
+     tool in complex environments.
+
+`-q'
+`--question'
+     "Question mode".  Do not run any commands, or print anything; just
+     return an exit status that is zero if the specified targets are
+     already up to date, one if any remaking is required, or two if an
+     error is encountered.  *Note Instead of Executing the Commands:
+     Instead of Execution.
+
+`-r'
+`--no-builtin-rules'
+     Eliminate use of the built-in implicit rules (*note Using Implicit
+     Rules: Implicit Rules.).  You can still define your own by writing
+     pattern rules (*note Defining and Redefining Pattern Rules:
+     Pattern Rules.).  The `-r' option also clears out the default list
+     of suffixes for suffix rules (*note Old-Fashioned Suffix Rules:
+     Suffix Rules.).  But you can still define your own suffixes with a
+     rule for `.SUFFIXES', and then define your own suffix rules.  Note
+     that only _rules_ are affected by the `-r' option; default
+     variables remain in effect (*note Variables Used by Implicit
+     Rules: Implicit Variables.); see the `-R' option below.
+
+`-R'
+`--no-builtin-variables'
+     Eliminate use of the built-in rule-specific variables (*note
+     Variables Used by Implicit Rules: Implicit Variables.).  You can
+     still define your own, of course.  The `-R' option also
+     automatically enables the `-r' option (see above), since it
+     doesn't make sense to have implicit rules without any definitions
+     for the variables that they use.
+
+`-s'
+`--silent'
+`--quiet'
+     Silent operation; do not print the commands as they are executed.
+     *Note Command Echoing: Echoing.
+
+`-S'
+`--no-keep-going'
+`--stop'
+     Cancel the effect of the `-k' option.  This is never necessary
+     except in a recursive `make' where `-k' might be inherited from
+     the top-level `make' via `MAKEFLAGS' (*note Recursive Use of
+     `make': Recursion.)  or if you set `-k' in `MAKEFLAGS' in your
+     environment.
+
+`-t'
+`--touch'
+     Touch files (mark them up to date without really changing them)
+     instead of running their commands.  This is used to pretend that
+     the commands were done, in order to fool future invocations of
+     `make'.  *Note Instead of Executing the Commands: Instead of
+     Execution.
+
+`-v'
+`--version'
+     Print the version of the `make' program plus a copyright, a list
+     of authors, and a notice that there is no warranty; then exit.
+
+`-w'
+`--print-directory'
+     Print a message containing the working directory both before and
+     after executing the makefile.  This may be useful for tracking
+     down errors from complicated nests of recursive `make' commands.
+     *Note Recursive Use of `make': Recursion.  (In practice, you
+     rarely need to specify this option since `make' does it for you;
+     see *Note The `--print-directory' Option: -w Option.)
+
+`--no-print-directory'
+     Disable printing of the working directory under `-w'.  This option
+     is useful when `-w' is turned on automatically, but you do not
+     want to see the extra messages.  *Note The `--print-directory'
+     Option: -w Option.
+
+`-W FILE'
+`--what-if=FILE'
+`--new-file=FILE'
+`--assume-new=FILE'
+     Pretend that the target FILE has just been modified.  When used
+     with the `-n' flag, this shows you what would happen if you were
+     to modify that file.  Without `-n', it is almost the same as
+     running a `touch' command on the given file before running `make',
+     except that the modification time is changed only in the
+     imagination of `make'.  *Note Instead of Executing the Commands:
+     Instead of Execution.
+
+`--warn-undefined-variables'
+     Issue a warning message whenever `make' sees a reference to an
+     undefined variable.  This can be helpful when you are trying to
+     debug makefiles which use variables in complex ways.
+
+
+File: make.info,  Node: Implicit Rules,  Next: Archives,  Prev: Running,  Up: Top
+
+10 Using Implicit Rules
+***********************
+
+Certain standard ways of remaking target files are used very often.  For
+example, one customary way to make an object file is from a C source
+file using the C compiler, `cc'.
+
+   "Implicit rules" tell `make' how to use customary techniques so that
+you do not have to specify them in detail when you want to use them.
+For example, there is an implicit rule for C compilation.  File names
+determine which implicit rules are run.  For example, C compilation
+typically takes a `.c' file and makes a `.o' file.  So `make' applies
+the implicit rule for C compilation when it sees this combination of
+file name endings.
+
+   A chain of implicit rules can apply in sequence; for example, `make'
+will remake a `.o' file from a `.y' file by way of a `.c' file.
+
+   The built-in implicit rules use several variables in their commands
+so that, by changing the values of the variables, you can change the
+way the implicit rule works.  For example, the variable `CFLAGS'
+controls the flags given to the C compiler by the implicit rule for C
+compilation.
+
+   You can define your own implicit rules by writing "pattern rules".
+
+   "Suffix rules" are a more limited way to define implicit rules.
+Pattern rules are more general and clearer, but suffix rules are
+retained for compatibility.
+
+* Menu:
+
+* Using Implicit::              How to use an existing implicit rule
+                                  to get the commands for updating a file.
+* Catalogue of Rules::          A list of built-in implicit rules.
+* Implicit Variables::          How to change what predefined rules do.
+* Chained Rules::               How to use a chain of implicit rules.
+* Pattern Rules::               How to define new implicit rules.
+* Last Resort::                 How to define commands for rules which
+                                  cannot find any.
+* Suffix Rules::                The old-fashioned style of implicit rule.
+* Implicit Rule Search::        The precise algorithm for applying
+                                  implicit rules.
+
+
+File: make.info,  Node: Using Implicit,  Next: Catalogue of Rules,  Prev: Implicit Rules,  Up: Implicit Rules
+
+10.1 Using Implicit Rules
+=========================
+
+To allow `make' to find a customary method for updating a target file,
+all you have to do is refrain from specifying commands yourself.  Either
+write a rule with no command lines, or don't write a rule at all.  Then
+`make' will figure out which implicit rule to use based on which kind
+of source file exists or can be made.
+
+   For example, suppose the makefile looks like this:
+
+     foo : foo.o bar.o
+             cc -o foo foo.o bar.o $(CFLAGS) $(LDFLAGS)
+
+Because you mention `foo.o' but do not give a rule for it, `make' will
+automatically look for an implicit rule that tells how to update it.
+This happens whether or not the file `foo.o' currently exists.
+
+   If an implicit rule is found, it can supply both commands and one or
+more prerequisites (the source files).  You would want to write a rule
+for `foo.o' with no command lines if you need to specify additional
+prerequisites, such as header files, that the implicit rule cannot
+supply.
+
+   Each implicit rule has a target pattern and prerequisite patterns.
+There may be many implicit rules with the same target pattern.  For
+example, numerous rules make `.o' files: one, from a `.c' file with the
+C compiler; another, from a `.p' file with the Pascal compiler; and so
+on.  The rule that actually applies is the one whose prerequisites
+exist or can be made.  So, if you have a file `foo.c', `make' will run
+the C compiler; otherwise, if you have a file `foo.p', `make' will run
+the Pascal compiler; and so on.
+
+   Of course, when you write the makefile, you know which implicit rule
+you want `make' to use, and you know it will choose that one because you
+know which possible prerequisite files are supposed to exist.  *Note
+Catalogue of Implicit Rules: Catalogue of Rules, for a catalogue of all
+the predefined implicit rules.
+
+   Above, we said an implicit rule applies if the required
+prerequisites "exist or can be made".  A file "can be made" if it is
+mentioned explicitly in the makefile as a target or a prerequisite, or
+if an implicit rule can be recursively found for how to make it.  When
+an implicit prerequisite is the result of another implicit rule, we say
+that "chaining" is occurring.  *Note Chains of Implicit Rules: Chained
+Rules.
+
+   In general, `make' searches for an implicit rule for each target, and
+for each double-colon rule, that has no commands.  A file that is
+mentioned only as a prerequisite is considered a target whose rule
+specifies nothing, so implicit rule search happens for it.  *Note
+Implicit Rule Search Algorithm: Implicit Rule Search, for the details
+of how the search is done.
+
+   Note that explicit prerequisites do not influence implicit rule
+search.  For example, consider this explicit rule:
+
+     foo.o: foo.p
+
+The prerequisite on `foo.p' does not necessarily mean that `make' will
+remake `foo.o' according to the implicit rule to make an object file, a
+`.o' file, from a Pascal source file, a `.p' file.  For example, if
+`foo.c' also exists, the implicit rule to make an object file from a C
+source file is used instead, because it appears before the Pascal rule
+in the list of predefined implicit rules (*note Catalogue of Implicit
+Rules: Catalogue of Rules.).
+
+   If you do not want an implicit rule to be used for a target that has
+no commands, you can give that target empty commands by writing a
+semicolon (*note Defining Empty Commands: Empty Commands.).
+
+
+File: make.info,  Node: Catalogue of Rules,  Next: Implicit Variables,  Prev: Using Implicit,  Up: Implicit Rules
+
+10.2 Catalogue of Implicit Rules
+================================
+
+Here is a catalogue of predefined implicit rules which are always
+available unless the makefile explicitly overrides or cancels them.
+*Note Canceling Implicit Rules: Canceling Rules, for information on
+canceling or overriding an implicit rule.  The `-r' or
+`--no-builtin-rules' option cancels all predefined rules.
+
+   This manual only documents the default rules available on POSIX-based
+operating systems.  Other operating systems, such as VMS, Windows,
+OS/2, etc. may have different sets of default rules.  To see the full
+list of default rules and variables available in your version of GNU
+`make', run `make -p' in a directory with no makefile.
+
+   Not all of these rules will always be defined, even when the `-r'
+option is not given.  Many of the predefined implicit rules are
+implemented in `make' as suffix rules, so which ones will be defined
+depends on the "suffix list" (the list of prerequisites of the special
+target `.SUFFIXES').  The default suffix list is: `.out', `.a', `.ln',
+`.o', `.c', `.cc', `.C', `.cpp', `.p', `.f', `.F', `.r', `.y', `.l',
+`.s', `.S', `.mod', `.sym', `.def', `.h', `.info', `.dvi', `.tex',
+`.texinfo', `.texi', `.txinfo', `.w', `.ch' `.web', `.sh', `.elc',
+`.el'.  All of the implicit rules described below whose prerequisites
+have one of these suffixes are actually suffix rules.  If you modify
+the suffix list, the only predefined suffix rules in effect will be
+those named by one or two of the suffixes that are on the list you
+specify; rules whose suffixes fail to be on the list are disabled.
+*Note Old-Fashioned Suffix Rules: Suffix Rules, for full details on
+suffix rules.
+
+Compiling C programs
+     `N.o' is made automatically from `N.c' with a command of the form
+     `$(CC) -c $(CPPFLAGS) $(CFLAGS)'.
+
+Compiling C++ programs
+     `N.o' is made automatically from `N.cc', `N.cpp', or `N.C' with a
+     command of the form `$(CXX) -c $(CPPFLAGS) $(CXXFLAGS)'.  We
+     encourage you to use the suffix `.cc' for C++ source files instead
+     of `.C'.
+
+Compiling Pascal programs
+     `N.o' is made automatically from `N.p' with the command `$(PC) -c
+     $(PFLAGS)'.
+
+Compiling Fortran and Ratfor programs
+     `N.o' is made automatically from `N.r', `N.F' or `N.f' by running
+     the Fortran compiler.  The precise command used is as follows:
+
+    `.f'
+          `$(FC) -c $(FFLAGS)'.
+
+    `.F'
+          `$(FC) -c $(FFLAGS) $(CPPFLAGS)'.
+
+    `.r'
+          `$(FC) -c $(FFLAGS) $(RFLAGS)'.
+
+Preprocessing Fortran and Ratfor programs
+     `N.f' is made automatically from `N.r' or `N.F'.  This rule runs
+     just the preprocessor to convert a Ratfor or preprocessable
+     Fortran program into a strict Fortran program.  The precise
+     command used is as follows:
+
+    `.F'
+          `$(FC) -F $(CPPFLAGS) $(FFLAGS)'.
+
+    `.r'
+          `$(FC) -F $(FFLAGS) $(RFLAGS)'.
+
+Compiling Modula-2 programs
+     `N.sym' is made from `N.def' with a command of the form `$(M2C)
+     $(M2FLAGS) $(DEFFLAGS)'.  `N.o' is made from `N.mod'; the form is:
+     `$(M2C) $(M2FLAGS) $(MODFLAGS)'.
+
+Assembling and preprocessing assembler programs
+     `N.o' is made automatically from `N.s' by running the assembler,
+     `as'.  The precise command is `$(AS) $(ASFLAGS)'.
+
+     `N.s' is made automatically from `N.S' by running the C
+     preprocessor, `cpp'.  The precise command is `$(CPP) $(CPPFLAGS)'.
+
+Linking a single object file
+     `N' is made automatically from `N.o' by running the linker
+     (usually called `ld') via the C compiler.  The precise command
+     used is `$(CC) $(LDFLAGS) N.o $(LOADLIBES) $(LDLIBS)'.
+
+     This rule does the right thing for a simple program with only one
+     source file.  It will also do the right thing if there are multiple
+     object files (presumably coming from various other source files),
+     one of which has a name matching that of the executable file.
+     Thus,
+
+          x: y.o z.o
+
+     when `x.c', `y.c' and `z.c' all exist will execute:
+
+          cc -c x.c -o x.o
+          cc -c y.c -o y.o
+          cc -c z.c -o z.o
+          cc x.o y.o z.o -o x
+          rm -f x.o
+          rm -f y.o
+          rm -f z.o
+
+     In more complicated cases, such as when there is no object file
+     whose name derives from the executable file name, you must write
+     an explicit command for linking.
+
+     Each kind of file automatically made into `.o' object files will
+     be automatically linked by using the compiler (`$(CC)', `$(FC)' or
+     `$(PC)'; the C compiler `$(CC)' is used to assemble `.s' files)
+     without the `-c' option.  This could be done by using the `.o'
+     object files as intermediates, but it is faster to do the
+     compiling and linking in one step, so that's how it's done.
+
+Yacc for C programs
+     `N.c' is made automatically from `N.y' by running Yacc with the
+     command `$(YACC) $(YFLAGS)'.
+
+Lex for C programs
+     `N.c' is made automatically from `N.l' by running Lex.  The actual
+     command is `$(LEX) $(LFLAGS)'.
+
+Lex for Ratfor programs
+     `N.r' is made automatically from `N.l' by running Lex.  The actual
+     command is `$(LEX) $(LFLAGS)'.
+
+     The convention of using the same suffix `.l' for all Lex files
+     regardless of whether they produce C code or Ratfor code makes it
+     impossible for `make' to determine automatically which of the two
+     languages you are using in any particular case.  If `make' is
+     called upon to remake an object file from a `.l' file, it must
+     guess which compiler to use.  It will guess the C compiler, because
+     that is more common.  If you are using Ratfor, make sure `make'
+     knows this by mentioning `N.r' in the makefile.  Or, if you are
+     using Ratfor exclusively, with no C files, remove `.c' from the
+     list of implicit rule suffixes with:
+
+          .SUFFIXES:
+          .SUFFIXES: .o .r .f .l ...
+
+Making Lint Libraries from C, Yacc, or Lex programs
+     `N.ln' is made from `N.c' by running `lint'.  The precise command
+     is `$(LINT) $(LINTFLAGS) $(CPPFLAGS) -i'.  The same command is
+     used on the C code produced from `N.y' or `N.l'.
+
+TeX and Web
+     `N.dvi' is made from `N.tex' with the command `$(TEX)'.  `N.tex'
+     is made from `N.web' with `$(WEAVE)', or from `N.w' (and from
+     `N.ch' if it exists or can be made) with `$(CWEAVE)'.  `N.p' is
+     made from `N.web' with `$(TANGLE)' and `N.c' is made from `N.w'
+     (and from `N.ch' if it exists or can be made) with `$(CTANGLE)'.
+
+Texinfo and Info
+     `N.dvi' is made from `N.texinfo', `N.texi', or `N.txinfo', with
+     the command `$(TEXI2DVI) $(TEXI2DVI_FLAGS)'.  `N.info' is made from
+     `N.texinfo', `N.texi', or `N.txinfo', with the command
+     `$(MAKEINFO) $(MAKEINFO_FLAGS)'.
+
+RCS
+     Any file `N' is extracted if necessary from an RCS file named
+     either `N,v' or `RCS/N,v'.  The precise command used is
+     `$(CO) $(COFLAGS)'.  `N' will not be extracted from RCS if it
+     already exists, even if the RCS file is newer.  The rules for RCS
+     are terminal (*note Match-Anything Pattern Rules: Match-Anything
+     Rules.), so RCS files cannot be generated from another source;
+     they must actually exist.
+
+SCCS
+     Any file `N' is extracted if necessary from an SCCS file named
+     either `s.N' or `SCCS/s.N'.  The precise command used is
+     `$(GET) $(GFLAGS)'.  The rules for SCCS are terminal (*note
+     Match-Anything Pattern Rules: Match-Anything Rules.), so SCCS
+     files cannot be generated from another source; they must actually
+     exist.
+
+     For the benefit of SCCS, a file `N' is copied from `N.sh' and made
+     executable (by everyone).  This is for shell scripts that are
+     checked into SCCS.  Since RCS preserves the execution permission
+     of a file, you do not need to use this feature with RCS.
+
+     We recommend that you avoid using of SCCS.  RCS is widely held to
+     be superior, and is also free.  By choosing free software in place
+     of comparable (or inferior) proprietary software, you support the
+     free software movement.
+
+   Usually, you want to change only the variables listed in the table
+above, which are documented in the following section.
+
+   However, the commands in built-in implicit rules actually use
+variables such as `COMPILE.c', `LINK.p', and `PREPROCESS.S', whose
+values contain the commands listed above.
+
+   `make' follows the convention that the rule to compile a `.X' source
+file uses the variable `COMPILE.X'.  Similarly, the rule to produce an
+executable from a `.X' file uses `LINK.X'; and the rule to preprocess a
+`.X' file uses `PREPROCESS.X'.
+
+   Every rule that produces an object file uses the variable
+`OUTPUT_OPTION'.  `make' defines this variable either to contain `-o
+$@', or to be empty, depending on a compile-time option.  You need the
+`-o' option to ensure that the output goes into the right file when the
+source file is in a different directory, as when using `VPATH' (*note
+Directory Search::).  However, compilers on some systems do not accept
+a `-o' switch for object files.  If you use such a system, and use
+`VPATH', some compilations will put their output in the wrong place.  A
+possible workaround for this problem is to give `OUTPUT_OPTION' the
+value `; mv $*.o $@'.
+
+
+File: make.info,  Node: Implicit Variables,  Next: Chained Rules,  Prev: Catalogue of Rules,  Up: Implicit Rules
+
+10.3 Variables Used by Implicit Rules
+=====================================
+
+The commands in built-in implicit rules make liberal use of certain
+predefined variables.  You can alter the values of these variables in
+the makefile, with arguments to `make', or in the environment to alter
+how the implicit rules work without redefining the rules themselves.
+You can cancel all variables used by implicit rules with the `-R' or
+`--no-builtin-variables' option.
+
+   For example, the command used to compile a C source file actually
+says `$(CC) -c $(CFLAGS) $(CPPFLAGS)'.  The default values of the
+variables used are `cc' and nothing, resulting in the command `cc -c'.
+By redefining `CC' to `ncc', you could cause `ncc' to be used for all C
+compilations performed by the implicit rule.  By redefining `CFLAGS' to
+be `-g', you could pass the `-g' option to each compilation.  _All_
+implicit rules that do C compilation use `$(CC)' to get the program
+name for the compiler and _all_ include `$(CFLAGS)' among the arguments
+given to the compiler.
+
+   The variables used in implicit rules fall into two classes: those
+that are names of programs (like `CC') and those that contain arguments
+for the programs (like `CFLAGS').  (The "name of a program" may also
+contain some command arguments, but it must start with an actual
+executable program name.)  If a variable value contains more than one
+argument, separate them with spaces.
+
+   The following tables describe of some of the more commonly-used
+predefined variables.  This list is not exhaustive, and the default
+values shown here may not be what are selected by `make' for your
+environment.  To see the complete list of predefined variables for your
+instance of GNU `make' you can run `make -p' in a directory with no
+makefiles.
+
+   Here is a table of some of the more common variables used as names of
+programs in built-in rules: makefiles.
+
+`AR'
+     Archive-maintaining program; default `ar'.  
+
+`AS'
+     Program for compiling assembly files; default `as'.  
+
+`CC'
+     Program for compiling C programs; default `cc'.  
+
+`CO'
+     Program for checking out files from RCS; default `co'.  
+
+`CXX'
+     Program for compiling C++ programs; default `g++'.  
+
+`CO'
+     Program for extracting a file from RCS; default `co'.  
+
+`CPP'
+     Program for running the C preprocessor, with results to standard
+     output; default `$(CC) -E'.
+
+`FC'
+     Program for compiling or preprocessing Fortran and Ratfor programs;
+     default `f77'.  
+
+`GET'
+     Program for extracting a file from SCCS; default `get'.  
+
+`LEX'
+     Program to use to turn Lex grammars into source code; default
+     `lex'.  
+
+`YACC'
+     Program to use to turn Yacc grammars into source code; default
+     `yacc'.  
+
+`LINT'
+     Program to use to run lint on source code; default `lint'.  
+
+`M2C'
+     Program to use to compile Modula-2 source code; default `m2c'.  
+
+`PC'
+     Program for compiling Pascal programs; default `pc'.  
+
+`MAKEINFO'
+     Program to convert a Texinfo source file into an Info file; default
+     `makeinfo'.  
+
+`TEX'
+     Program to make TeX DVI files from TeX source; default `tex'.  
+
+`TEXI2DVI'
+     Program to make TeX DVI files from Texinfo source; default
+     `texi2dvi'.  
+
+`WEAVE'
+     Program to translate Web into TeX; default `weave'.  
+
+`CWEAVE'
+     Program to translate C Web into TeX; default `cweave'.  
+
+`TANGLE'
+     Program to translate Web into Pascal; default `tangle'.  
+
+`CTANGLE'
+     Program to translate C Web into C; default `ctangle'.  
+
+`RM'
+     Command to remove a file; default `rm -f'.  
+
+   Here is a table of variables whose values are additional arguments
+for the programs above.  The default values for all of these is the
+empty string, unless otherwise noted.
+
+`ARFLAGS'
+     Flags to give the archive-maintaining program; default `rv'.
+
+`ASFLAGS'
+     Extra flags to give to the assembler (when explicitly invoked on a
+     `.s' or `.S' file).
+
+`CFLAGS'
+     Extra flags to give to the C compiler.
+
+`CXXFLAGS'
+     Extra flags to give to the C++ compiler.
+
+`COFLAGS'
+     Extra flags to give to the RCS `co' program.
+
+`CPPFLAGS'
+     Extra flags to give to the C preprocessor and programs that use it
+     (the C and Fortran compilers).
+
+`FFLAGS'
+     Extra flags to give to the Fortran compiler.
+
+`GFLAGS'
+     Extra flags to give to the SCCS `get' program.
+
+`LDFLAGS'
+     Extra flags to give to compilers when they are supposed to invoke
+     the linker, `ld'.
+
+`LFLAGS'
+     Extra flags to give to Lex.
+
+`YFLAGS'
+     Extra flags to give to Yacc.
+
+`PFLAGS'
+     Extra flags to give to the Pascal compiler.
+
+`RFLAGS'
+     Extra flags to give to the Fortran compiler for Ratfor programs.
+
+`LINTFLAGS'
+     Extra flags to give to lint.
+
+
+File: make.info,  Node: Chained Rules,  Next: Pattern Rules,  Prev: Implicit Variables,  Up: Implicit Rules
+
+10.4 Chains of Implicit Rules
+=============================
+
+Sometimes a file can be made by a sequence of implicit rules.  For
+example, a file `N.o' could be made from `N.y' by running first Yacc
+and then `cc'.  Such a sequence is called a "chain".
+
+   If the file `N.c' exists, or is mentioned in the makefile, no
+special searching is required: `make' finds that the object file can be
+made by C compilation from `N.c'; later on, when considering how to
+make `N.c', the rule for running Yacc is used.  Ultimately both `N.c'
+and `N.o' are updated.
+
+   However, even if `N.c' does not exist and is not mentioned, `make'
+knows how to envision it as the missing link between `N.o' and `N.y'!
+In this case, `N.c' is called an "intermediate file".  Once `make' has
+decided to use the intermediate file, it is entered in the data base as
+if it had been mentioned in the makefile, along with the implicit rule
+that says how to create it.
+
+   Intermediate files are remade using their rules just like all other
+files.  But intermediate files are treated differently in two ways.
+
+   The first difference is what happens if the intermediate file does
+not exist.  If an ordinary file B does not exist, and `make' considers
+a target that depends on B, it invariably creates B and then updates
+the target from B.  But if B is an intermediate file, then `make' can
+leave well enough alone.  It won't bother updating B, or the ultimate
+target, unless some prerequisite of B is newer than that target or
+there is some other reason to update that target.
+
+   The second difference is that if `make' _does_ create B in order to
+update something else, it deletes B later on after it is no longer
+needed.  Therefore, an intermediate file which did not exist before
+`make' also does not exist after `make'.  `make' reports the deletion
+to you by printing a `rm -f' command showing which file it is deleting.
+
+   Ordinarily, a file cannot be intermediate if it is mentioned in the
+makefile as a target or prerequisite.  However, you can explicitly mark
+a file as intermediate by listing it as a prerequisite of the special
+target `.INTERMEDIATE'.  This takes effect even if the file is mentioned
+explicitly in some other way.
+
+   You can prevent automatic deletion of an intermediate file by
+marking it as a "secondary" file.  To do this, list it as a
+prerequisite of the special target `.SECONDARY'.  When a file is
+secondary, `make' will not create the file merely because it does not
+already exist, but `make' does not automatically delete the file.
+Marking a file as secondary also marks it as intermediate.
+
+   You can list the target pattern of an implicit rule (such as `%.o')
+as a prerequisite of the special target `.PRECIOUS' to preserve
+intermediate files made by implicit rules whose target patterns match
+that file's name; see *Note Interrupts::.  
+
+   A chain can involve more than two implicit rules.  For example, it is
+possible to make a file `foo' from `RCS/foo.y,v' by running RCS, Yacc
+and `cc'.  Then both `foo.y' and `foo.c' are intermediate files that
+are deleted at the end.
+
+   No single implicit rule can appear more than once in a chain.  This
+means that `make' will not even consider such a ridiculous thing as
+making `foo' from `foo.o.o' by running the linker twice.  This
+constraint has the added benefit of preventing any infinite loop in the
+search for an implicit rule chain.
+
+   There are some special implicit rules to optimize certain cases that
+would otherwise be handled by rule chains.  For example, making `foo'
+from `foo.c' could be handled by compiling and linking with separate
+chained rules, using `foo.o' as an intermediate file.  But what
+actually happens is that a special rule for this case does the
+compilation and linking with a single `cc' command.  The optimized rule
+is used in preference to the step-by-step chain because it comes
+earlier in the ordering of rules.
+
diff --git a/install/info/make.info-2 b/install/info/make.info-2
new file mode 100644
index 0000000..19727b2
--- /dev/null
+++ b/install/info/make.info-2
@@ -0,0 +1,4393 @@
+This is make.info, produced by makeinfo version 4.8 from make.texi.
+
+   This file documents the GNU `make' utility, which determines
+automatically which pieces of a large program need to be recompiled,
+and issues the commands to recompile them.
+
+   This is Edition 0.70, last updated 1 April 2006, of `The GNU Make
+Manual', for GNU `make' version 3.81.
+
+   Copyright (C) 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996,
+1997, 1998, 1999, 2000, 2002, 2003, 2004, 2005, 2006 Free Software
+Foundation, Inc.
+
+     Permission is granted to copy, distribute and/or modify this
+     document under the terms of the GNU Free Documentation License,
+     Version 1.2 or any later version published by the Free Software
+     Foundation; with no Invariant Sections, with the Front-Cover Texts
+     being "A GNU Manual," and with the Back-Cover Texts as in (a)
+     below.  A copy of the license is included in the section entitled
+     "GNU Free Documentation License."
+
+     (a) The FSF's Back-Cover Text is: "You have freedom to copy and
+     modify this GNU Manual, like GNU software.  Copies published by
+     the Free Software Foundation raise funds for GNU development."
+
+INFO-DIR-SECTION GNU Packages
+START-INFO-DIR-ENTRY
+* Make: (make).            Remake files automatically.
+END-INFO-DIR-ENTRY
+
+
+File: make.info,  Node: Pattern Rules,  Next: Last Resort,  Prev: Chained Rules,  Up: Implicit Rules
+
+10.5 Defining and Redefining Pattern Rules
+==========================================
+
+You define an implicit rule by writing a "pattern rule".  A pattern
+rule looks like an ordinary rule, except that its target contains the
+character `%' (exactly one of them).  The target is considered a
+pattern for matching file names; the `%' can match any nonempty
+substring, while other characters match only themselves.  The
+prerequisites likewise use `%' to show how their names relate to the
+target name.
+
+   Thus, a pattern rule `%.o : %.c' says how to make any file `STEM.o'
+from another file `STEM.c'.
+
+   Note that expansion using `%' in pattern rules occurs *after* any
+variable or function expansions, which take place when the makefile is
+read.  *Note How to Use Variables: Using Variables, and *Note Functions
+for Transforming Text: Functions.
+
+* Menu:
+
+* Pattern Intro::               An introduction to pattern rules.
+* Pattern Examples::            Examples of pattern rules.
+* Automatic Variables::         How to use automatic variables in the
+                                  commands of implicit rules.
+* Pattern Match::               How patterns match.
+* Match-Anything Rules::        Precautions you should take prior to
+                                  defining rules that can match any
+                                  target file whatever.
+* Canceling Rules::             How to override or cancel built-in rules.
+
+
+File: make.info,  Node: Pattern Intro,  Next: Pattern Examples,  Prev: Pattern Rules,  Up: Pattern Rules
+
+10.5.1 Introduction to Pattern Rules
+------------------------------------
+
+A pattern rule contains the character `%' (exactly one of them) in the
+target; otherwise, it looks exactly like an ordinary rule.  The target
+is a pattern for matching file names; the `%' matches any nonempty
+substring, while other characters match only themselves.  
+
+   For example, `%.c' as a pattern matches any file name that ends in
+`.c'.  `s.%.c' as a pattern matches any file name that starts with
+`s.', ends in `.c' and is at least five characters long.  (There must
+be at least one character to match the `%'.)  The substring that the
+`%' matches is called the "stem".
+
+   `%' in a prerequisite of a pattern rule stands for the same stem
+that was matched by the `%' in the target.  In order for the pattern
+rule to apply, its target pattern must match the file name under
+consideration and all of its prerequisites (after pattern substitution)
+must name files that exist or can be made.  These files become
+prerequisites of the target.  
+
+   Thus, a rule of the form
+
+     %.o : %.c ; COMMAND...
+
+specifies how to make a file `N.o', with another file `N.c' as its
+prerequisite, provided that `N.c' exists or can be made.
+
+   There may also be prerequisites that do not use `%'; such a
+prerequisite attaches to every file made by this pattern rule.  These
+unvarying prerequisites are useful occasionally.
+
+   A pattern rule need not have any prerequisites that contain `%', or
+in fact any prerequisites at all.  Such a rule is effectively a general
+wildcard.  It provides a way to make any file that matches the target
+pattern.  *Note Last Resort::.
+
+   Pattern rules may have more than one target.  Unlike normal rules,
+this does not act as many different rules with the same prerequisites
+and commands.  If a pattern rule has multiple targets, `make' knows that
+the rule's commands are responsible for making all of the targets.  The
+commands are executed only once to make all the targets.  When searching
+for a pattern rule to match a target, the target patterns of a rule
+other than the one that matches the target in need of a rule are
+incidental: `make' worries only about giving commands and prerequisites
+to the file presently in question.  However, when this file's commands
+are run, the other targets are marked as having been updated themselves.  
+
+   The order in which pattern rules appear in the makefile is important
+since this is the order in which they are considered.  Of equally
+applicable rules, only the first one found is used.  The rules you
+write take precedence over those that are built in.  Note however, that
+a rule whose prerequisites actually exist or are mentioned always takes
+priority over a rule with prerequisites that must be made by chaining
+other implicit rules.  
+
+
+File: make.info,  Node: Pattern Examples,  Next: Automatic Variables,  Prev: Pattern Intro,  Up: Pattern Rules
+
+10.5.2 Pattern Rule Examples
+----------------------------
+
+Here are some examples of pattern rules actually predefined in `make'.
+First, the rule that compiles `.c' files into `.o' files:
+
+     %.o : %.c
+             $(CC) -c $(CFLAGS) $(CPPFLAGS) $< -o $@
+
+defines a rule that can make any file `X.o' from `X.c'.  The command
+uses the automatic variables `$@' and `$<' to substitute the names of
+the target file and the source file in each case where the rule applies
+(*note Automatic Variables::).
+
+   Here is a second built-in rule:
+
+     % :: RCS/%,v
+             $(CO) $(COFLAGS) $<
+
+defines a rule that can make any file `X' whatsoever from a
+corresponding file `X,v' in the subdirectory `RCS'.  Since the target
+is `%', this rule will apply to any file whatever, provided the
+appropriate prerequisite file exists.  The double colon makes the rule
+"terminal", which means that its prerequisite may not be an intermediate
+file (*note Match-Anything Pattern Rules: Match-Anything Rules.).
+
+   This pattern rule has two targets:
+
+     %.tab.c %.tab.h: %.y
+             bison -d $<
+
+This tells `make' that the command `bison -d X.y' will make both
+`X.tab.c' and `X.tab.h'.  If the file `foo' depends on the files
+`parse.tab.o' and `scan.o' and the file `scan.o' depends on the file
+`parse.tab.h', when `parse.y' is changed, the command `bison -d parse.y'
+will be executed only once, and the prerequisites of both `parse.tab.o'
+and `scan.o' will be satisfied.  (Presumably the file `parse.tab.o'
+will be recompiled from `parse.tab.c' and the file `scan.o' from
+`scan.c', while `foo' is linked from `parse.tab.o', `scan.o', and its
+other prerequisites, and it will execute happily ever after.)
+
+
+File: make.info,  Node: Automatic Variables,  Next: Pattern Match,  Prev: Pattern Examples,  Up: Pattern Rules
+
+10.5.3 Automatic Variables
+--------------------------
+
+Suppose you are writing a pattern rule to compile a `.c' file into a
+`.o' file: how do you write the `cc' command so that it operates on the
+right source file name?  You cannot write the name in the command,
+because the name is different each time the implicit rule is applied.
+
+   What you do is use a special feature of `make', the "automatic
+variables".  These variables have values computed afresh for each rule
+that is executed, based on the target and prerequisites of the rule.
+In this example, you would use `$@' for the object file name and `$<'
+for the source file name.
+
+   It's very important that you recognize the limited scope in which
+automatic variable values are available: they only have values within
+the command script.  In particular, you cannot use them anywhere within
+the target list of a rule; they have no value there and will expand to
+the empty string.  Also, they cannot be accessed directly within the
+prerequisite list of a rule.  A common mistake is attempting to use
+`$@' within the prerequisites list; this will not work.  However, there
+is a special feature of GNU `make', secondary expansion (*note
+Secondary Expansion::), which will allow automatic variable values to
+be used in prerequisite lists.
+
+   Here is a table of automatic variables:
+
+`$@'
+     The file name of the target of the rule.  If the target is an
+     archive member, then `$@' is the name of the archive file.  In a
+     pattern rule that has multiple targets (*note Introduction to
+     Pattern Rules: Pattern Intro.), `$@' is the name of whichever
+     target caused the rule's commands to be run.
+
+`$%'
+     The target member name, when the target is an archive member.
+     *Note Archives::.  For example, if the target is `foo.a(bar.o)'
+     then `$%' is `bar.o' and `$@' is `foo.a'.  `$%' is empty when the
+     target is not an archive member.
+
+`$<'
+     The name of the first prerequisite.  If the target got its
+     commands from an implicit rule, this will be the first
+     prerequisite added by the implicit rule (*note Implicit Rules::).
+
+`$?'
+     The names of all the prerequisites that are newer than the target,
+     with spaces between them.  For prerequisites which are archive
+     members, only the member named is used (*note Archives::).  
+
+`$^'
+     The names of all the prerequisites, with spaces between them.  For
+     prerequisites which are archive members, only the member named is
+     used (*note Archives::).  A target has only one prerequisite on
+     each other file it depends on, no matter how many times each file
+     is listed as a prerequisite.  So if you list a prerequisite more
+     than once for a target, the value of `$^' contains just one copy
+     of the name.  This list does *not* contain any of the order-only
+     prerequisites; for those see the `$|' variable, below.  
+
+`$+'
+     This is like `$^', but prerequisites listed more than once are
+     duplicated in the order they were listed in the makefile.  This is
+     primarily useful for use in linking commands where it is
+     meaningful to repeat library file names in a particular order.
+
+`$|'
+     The names of all the order-only prerequisites, with spaces between
+     them.
+
+`$*'
+     The stem with which an implicit rule matches (*note How Patterns
+     Match: Pattern Match.).  If the target is `dir/a.foo.b' and the
+     target pattern is `a.%.b' then the stem is `dir/foo'.  The stem is
+     useful for constructing names of related files.  
+
+     In a static pattern rule, the stem is part of the file name that
+     matched the `%' in the target pattern.
+
+     In an explicit rule, there is no stem; so `$*' cannot be determined
+     in that way.  Instead, if the target name ends with a recognized
+     suffix (*note Old-Fashioned Suffix Rules: Suffix Rules.), `$*' is
+     set to the target name minus the suffix.  For example, if the
+     target name is `foo.c', then `$*' is set to `foo', since `.c' is a
+     suffix.  GNU `make' does this bizarre thing only for compatibility
+     with other implementations of `make'.  You should generally avoid
+     using `$*' except in implicit rules or static pattern rules.
+
+     If the target name in an explicit rule does not end with a
+     recognized suffix, `$*' is set to the empty string for that rule.
+
+   `$?' is useful even in explicit rules when you wish to operate on
+only the prerequisites that have changed.  For example, suppose that an
+archive named `lib' is supposed to contain copies of several object
+files.  This rule copies just the changed object files into the archive:
+
+     lib: foo.o bar.o lose.o win.o
+             ar r lib $?
+
+   Of the variables listed above, four have values that are single file
+names, and three have values that are lists of file names.  These seven
+have variants that get just the file's directory name or just the file
+name within the directory.  The variant variables' names are formed by
+appending `D' or `F', respectively.  These variants are semi-obsolete
+in GNU `make' since the functions `dir' and `notdir' can be used to get
+a similar effect (*note Functions for File Names: File Name
+Functions.).  Note, however, that the `D' variants all omit the
+trailing slash which always appears in the output of the `dir'
+function.  Here is a table of the variants:
+
+`$(@D)'
+     The directory part of the file name of the target, with the
+     trailing slash removed.  If the value of `$@' is `dir/foo.o' then
+     `$(@D)' is `dir'.  This value is `.' if `$@' does not contain a
+     slash.
+
+`$(@F)'
+     The file-within-directory part of the file name of the target.  If
+     the value of `$@' is `dir/foo.o' then `$(@F)' is `foo.o'.  `$(@F)'
+     is equivalent to `$(notdir $@)'.
+
+`$(*D)'
+`$(*F)'
+     The directory part and the file-within-directory part of the stem;
+     `dir' and `foo' in this example.
+
+`$(%D)'
+`$(%F)'
+     The directory part and the file-within-directory part of the target
+     archive member name.  This makes sense only for archive member
+     targets of the form `ARCHIVE(MEMBER)' and is useful only when
+     MEMBER may contain a directory name.  (*Note Archive Members as
+     Targets: Archive Members.)
+
+`$(<D)'
+`$(<F)'
+     The directory part and the file-within-directory part of the first
+     prerequisite.
+
+`$(^D)'
+`$(^F)'
+     Lists of the directory parts and the file-within-directory parts
+     of all prerequisites.
+
+`$(+D)'
+`$(+F)'
+     Lists of the directory parts and the file-within-directory parts
+     of all prerequisites, including multiple instances of duplicated
+     prerequisites.
+
+`$(?D)'
+`$(?F)'
+     Lists of the directory parts and the file-within-directory parts of
+     all prerequisites that are newer than the target.
+
+   Note that we use a special stylistic convention when we talk about
+these automatic variables; we write "the value of `$<'", rather than
+"the variable `<'" as we would write for ordinary variables such as
+`objects' and `CFLAGS'.  We think this convention looks more natural in
+this special case.  Please do not assume it has a deep significance;
+`$<' refers to the variable named `<' just as `$(CFLAGS)' refers to the
+variable named `CFLAGS'.  You could just as well use `$(<)' in place of
+`$<'.
+
+
+File: make.info,  Node: Pattern Match,  Next: Match-Anything Rules,  Prev: Automatic Variables,  Up: Pattern Rules
+
+10.5.4 How Patterns Match
+-------------------------
+
+A target pattern is composed of a `%' between a prefix and a suffix,
+either or both of which may be empty.  The pattern matches a file name
+only if the file name starts with the prefix and ends with the suffix,
+without overlap.  The text between the prefix and the suffix is called
+the "stem".  Thus, when the pattern `%.o' matches the file name
+`test.o', the stem is `test'.  The pattern rule prerequisites are
+turned into actual file names by substituting the stem for the character
+`%'.  Thus, if in the same example one of the prerequisites is written
+as `%.c', it expands to `test.c'.
+
+   When the target pattern does not contain a slash (and it usually does
+not), directory names in the file names are removed from the file name
+before it is compared with the target prefix and suffix.  After the
+comparison of the file name to the target pattern, the directory names,
+along with the slash that ends them, are added on to the prerequisite
+file names generated from the pattern rule's prerequisite patterns and
+the file name.  The directories are ignored only for the purpose of
+finding an implicit rule to use, not in the application of that rule.
+Thus, `e%t' matches the file name `src/eat', with `src/a' as the stem.
+When prerequisites are turned into file names, the directories from the
+stem are added at the front, while the rest of the stem is substituted
+for the `%'.  The stem `src/a' with a prerequisite pattern `c%r' gives
+the file name `src/car'.
+
+
+File: make.info,  Node: Match-Anything Rules,  Next: Canceling Rules,  Prev: Pattern Match,  Up: Pattern Rules
+
+10.5.5 Match-Anything Pattern Rules
+-----------------------------------
+
+When a pattern rule's target is just `%', it matches any file name
+whatever.  We call these rules "match-anything" rules.  They are very
+useful, but it can take a lot of time for `make' to think about them,
+because it must consider every such rule for each file name listed
+either as a target or as a prerequisite.
+
+   Suppose the makefile mentions `foo.c'.  For this target, `make'
+would have to consider making it by linking an object file `foo.c.o',
+or by C compilation-and-linking in one step from `foo.c.c', or by
+Pascal compilation-and-linking from `foo.c.p', and many other
+possibilities.
+
+   We know these possibilities are ridiculous since `foo.c' is a C
+source file, not an executable.  If `make' did consider these
+possibilities, it would ultimately reject them, because files such as
+`foo.c.o' and `foo.c.p' would not exist.  But these possibilities are so
+numerous that `make' would run very slowly if it had to consider them.
+
+   To gain speed, we have put various constraints on the way `make'
+considers match-anything rules.  There are two different constraints
+that can be applied, and each time you define a match-anything rule you
+must choose one or the other for that rule.
+
+   One choice is to mark the match-anything rule as "terminal" by
+defining it with a double colon.  When a rule is terminal, it does not
+apply unless its prerequisites actually exist.  Prerequisites that
+could be made with other implicit rules are not good enough.  In other
+words, no further chaining is allowed beyond a terminal rule.
+
+   For example, the built-in implicit rules for extracting sources from
+RCS and SCCS files are terminal; as a result, if the file `foo.c,v' does
+not exist, `make' will not even consider trying to make it as an
+intermediate file from `foo.c,v.o' or from `RCS/SCCS/s.foo.c,v'.  RCS
+and SCCS files are generally ultimate source files, which should not be
+remade from any other files; therefore, `make' can save time by not
+looking for ways to remake them.
+
+   If you do not mark the match-anything rule as terminal, then it is
+nonterminal.  A nonterminal match-anything rule cannot apply to a file
+name that indicates a specific type of data.  A file name indicates a
+specific type of data if some non-match-anything implicit rule target
+matches it.
+
+   For example, the file name `foo.c' matches the target for the pattern
+rule `%.c : %.y' (the rule to run Yacc).  Regardless of whether this
+rule is actually applicable (which happens only if there is a file
+`foo.y'), the fact that its target matches is enough to prevent
+consideration of any nonterminal match-anything rules for the file
+`foo.c'.  Thus, `make' will not even consider trying to make `foo.c' as
+an executable file from `foo.c.o', `foo.c.c', `foo.c.p', etc.
+
+   The motivation for this constraint is that nonterminal match-anything
+rules are used for making files containing specific types of data (such
+as executable files) and a file name with a recognized suffix indicates
+some other specific type of data (such as a C source file).
+
+   Special built-in dummy pattern rules are provided solely to recognize
+certain file names so that nonterminal match-anything rules will not be
+considered.  These dummy rules have no prerequisites and no commands,
+and they are ignored for all other purposes.  For example, the built-in
+implicit rule
+
+     %.p :
+
+exists to make sure that Pascal source files such as `foo.p' match a
+specific target pattern and thereby prevent time from being wasted
+looking for `foo.p.o' or `foo.p.c'.
+
+   Dummy pattern rules such as the one for `%.p' are made for every
+suffix listed as valid for use in suffix rules (*note Old-Fashioned
+Suffix Rules: Suffix Rules.).
+
+
+File: make.info,  Node: Canceling Rules,  Prev: Match-Anything Rules,  Up: Pattern Rules
+
+10.5.6 Canceling Implicit Rules
+-------------------------------
+
+You can override a built-in implicit rule (or one you have defined
+yourself) by defining a new pattern rule with the same target and
+prerequisites, but different commands.  When the new rule is defined,
+the built-in one is replaced.  The new rule's position in the sequence
+of implicit rules is determined by where you write the new rule.
+
+   You can cancel a built-in implicit rule by defining a pattern rule
+with the same target and prerequisites, but no commands.  For example,
+the following would cancel the rule that runs the assembler:
+
+     %.o : %.s
+
+
+File: make.info,  Node: Last Resort,  Next: Suffix Rules,  Prev: Pattern Rules,  Up: Implicit Rules
+
+10.6 Defining Last-Resort Default Rules
+=======================================
+
+You can define a last-resort implicit rule by writing a terminal
+match-anything pattern rule with no prerequisites (*note Match-Anything
+Rules::).  This is just like any other pattern rule; the only thing
+special about it is that it will match any target.  So such a rule's
+commands are used for all targets and prerequisites that have no
+commands of their own and for which no other implicit rule applies.
+
+   For example, when testing a makefile, you might not care if the
+source files contain real data, only that they exist.  Then you might
+do this:
+
+     %::
+             touch $@
+
+to cause all the source files needed (as prerequisites) to be created
+automatically.
+
+   You can instead define commands to be used for targets for which
+there are no rules at all, even ones which don't specify commands.  You
+do this by writing a rule for the target `.DEFAULT'.  Such a rule's
+commands are used for all prerequisites which do not appear as targets
+in any explicit rule, and for which no implicit rule applies.
+Naturally, there is no `.DEFAULT' rule unless you write one.
+
+   If you use `.DEFAULT' with no commands or prerequisites:
+
+     .DEFAULT:
+
+the commands previously stored for `.DEFAULT' are cleared.  Then `make'
+acts as if you had never defined `.DEFAULT' at all.
+
+   If you do not want a target to get the commands from a match-anything
+pattern rule or `.DEFAULT', but you also do not want any commands to be
+run for the target, you can give it empty commands (*note Defining
+Empty Commands: Empty Commands.).
+
+   You can use a last-resort rule to override part of another makefile.
+*Note Overriding Part of Another Makefile: Overriding Makefiles.
+
+
+File: make.info,  Node: Suffix Rules,  Next: Implicit Rule Search,  Prev: Last Resort,  Up: Implicit Rules
+
+10.7 Old-Fashioned Suffix Rules
+===============================
+
+"Suffix rules" are the old-fashioned way of defining implicit rules for
+`make'.  Suffix rules are obsolete because pattern rules are more
+general and clearer.  They are supported in GNU `make' for
+compatibility with old makefiles.  They come in two kinds:
+"double-suffix" and "single-suffix".
+
+   A double-suffix rule is defined by a pair of suffixes: the target
+suffix and the source suffix.  It matches any file whose name ends with
+the target suffix.  The corresponding implicit prerequisite is made by
+replacing the target suffix with the source suffix in the file name.  A
+two-suffix rule whose target and source suffixes are `.o' and `.c' is
+equivalent to the pattern rule `%.o : %.c'.
+
+   A single-suffix rule is defined by a single suffix, which is the
+source suffix.  It matches any file name, and the corresponding implicit
+prerequisite name is made by appending the source suffix.  A
+single-suffix rule whose source suffix is `.c' is equivalent to the
+pattern rule `% : %.c'.
+
+   Suffix rule definitions are recognized by comparing each rule's
+target against a defined list of known suffixes.  When `make' sees a
+rule whose target is a known suffix, this rule is considered a
+single-suffix rule.  When `make' sees a rule whose target is two known
+suffixes concatenated, this rule is taken as a double-suffix rule.
+
+   For example, `.c' and `.o' are both on the default list of known
+suffixes.  Therefore, if you define a rule whose target is `.c.o',
+`make' takes it to be a double-suffix rule with source suffix `.c' and
+target suffix `.o'.  Here is the old-fashioned way to define the rule
+for compiling a C source file:
+
+     .c.o:
+             $(CC) -c $(CFLAGS) $(CPPFLAGS) -o $@ $<
+
+   Suffix rules cannot have any prerequisites of their own.  If they
+have any, they are treated as normal files with funny names, not as
+suffix rules.  Thus, the rule:
+
+     .c.o: foo.h
+             $(CC) -c $(CFLAGS) $(CPPFLAGS) -o $@ $<
+
+tells how to make the file `.c.o' from the prerequisite file `foo.h',
+and is not at all like the pattern rule:
+
+     %.o: %.c foo.h
+             $(CC) -c $(CFLAGS) $(CPPFLAGS) -o $@ $<
+
+which tells how to make `.o' files from `.c' files, and makes all `.o'
+files using this pattern rule also depend on `foo.h'.
+
+   Suffix rules with no commands are also meaningless.  They do not
+remove previous rules as do pattern rules with no commands (*note
+Canceling Implicit Rules: Canceling Rules.).  They simply enter the
+suffix or pair of suffixes concatenated as a target in the data base.
+
+   The known suffixes are simply the names of the prerequisites of the
+special target `.SUFFIXES'.  You can add your own suffixes by writing a
+rule for `.SUFFIXES' that adds more prerequisites, as in:
+
+     .SUFFIXES: .hack .win
+
+which adds `.hack' and `.win' to the end of the list of suffixes.
+
+   If you wish to eliminate the default known suffixes instead of just
+adding to them, write a rule for `.SUFFIXES' with no prerequisites.  By
+special dispensation, this eliminates all existing prerequisites of
+`.SUFFIXES'.  You can then write another rule to add the suffixes you
+want.  For example,
+
+     .SUFFIXES:            # Delete the default suffixes
+     .SUFFIXES: .c .o .h   # Define our suffix list
+
+   The `-r' or `--no-builtin-rules' flag causes the default list of
+suffixes to be empty.
+
+   The variable `SUFFIXES' is defined to the default list of suffixes
+before `make' reads any makefiles.  You can change the list of suffixes
+with a rule for the special target `.SUFFIXES', but that does not alter
+this variable.
+
+
+File: make.info,  Node: Implicit Rule Search,  Prev: Suffix Rules,  Up: Implicit Rules
+
+10.8 Implicit Rule Search Algorithm
+===================================
+
+Here is the procedure `make' uses for searching for an implicit rule
+for a target T.  This procedure is followed for each double-colon rule
+with no commands, for each target of ordinary rules none of which have
+commands, and for each prerequisite that is not the target of any rule.
+It is also followed recursively for prerequisites that come from
+implicit rules, in the search for a chain of rules.
+
+   Suffix rules are not mentioned in this algorithm because suffix
+rules are converted to equivalent pattern rules once the makefiles have
+been read in.
+
+   For an archive member target of the form `ARCHIVE(MEMBER)', the
+following algorithm is run twice, first using the entire target name T,
+and second using `(MEMBER)' as the target T if the first run found no
+rule.
+
+  1. Split T into a directory part, called D, and the rest, called N.
+     For example, if T is `src/foo.o', then D is `src/' and N is
+     `foo.o'.
+
+  2. Make a list of all the pattern rules one of whose targets matches
+     T or N.  If the target pattern contains a slash, it is matched
+     against T; otherwise, against N.
+
+  3. If any rule in that list is _not_ a match-anything rule, then
+     remove all nonterminal match-anything rules from the list.
+
+  4. Remove from the list all rules with no commands.
+
+  5. For each pattern rule in the list:
+
+       a. Find the stem S, which is the nonempty part of T or N matched
+          by the `%' in the target pattern.
+
+       b. Compute the prerequisite names by substituting S for `%'; if
+          the target pattern does not contain a slash, append D to the
+          front of each prerequisite name.
+
+       c. Test whether all the prerequisites exist or ought to exist.
+          (If a file name is mentioned in the makefile as a target or
+          as an explicit prerequisite, then we say it ought to exist.)
+
+          If all prerequisites exist or ought to exist, or there are no
+          prerequisites, then this rule applies.
+
+  6. If no pattern rule has been found so far, try harder.  For each
+     pattern rule in the list:
+
+       a. If the rule is terminal, ignore it and go on to the next rule.
+
+       b. Compute the prerequisite names as before.
+
+       c. Test whether all the prerequisites exist or ought to exist.
+
+       d. For each prerequisite that does not exist, follow this
+          algorithm recursively to see if the prerequisite can be made
+          by an implicit rule.
+
+       e. If all prerequisites exist, ought to exist, or can be made by
+          implicit rules, then this rule applies.
+
+  7. If no implicit rule applies, the rule for `.DEFAULT', if any,
+     applies.  In that case, give T the same commands that `.DEFAULT'
+     has.  Otherwise, there are no commands for T.
+
+   Once a rule that applies has been found, for each target pattern of
+the rule other than the one that matched T or N, the `%' in the pattern
+is replaced with S and the resultant file name is stored until the
+commands to remake the target file T are executed.  After these
+commands are executed, each of these stored file names are entered into
+the data base and marked as having been updated and having the same
+update status as the file T.
+
+   When the commands of a pattern rule are executed for T, the automatic
+variables are set corresponding to the target and prerequisites.  *Note
+Automatic Variables::.
+
+
+File: make.info,  Node: Archives,  Next: Features,  Prev: Implicit Rules,  Up: Top
+
+11 Using `make' to Update Archive Files
+***************************************
+
+"Archive files" are files containing named subfiles called "members";
+they are maintained with the program `ar' and their main use is as
+subroutine libraries for linking.
+
+* Menu:
+
+* Archive Members::             Archive members as targets.
+* Archive Update::              The implicit rule for archive member targets.
+* Archive Pitfalls::            Dangers to watch out for when using archives.
+* Archive Suffix Rules::        You can write a special kind of suffix rule
+                                  for updating archives.
+
+
+File: make.info,  Node: Archive Members,  Next: Archive Update,  Prev: Archives,  Up: Archives
+
+11.1 Archive Members as Targets
+===============================
+
+An individual member of an archive file can be used as a target or
+prerequisite in `make'.  You specify the member named MEMBER in archive
+file ARCHIVE as follows:
+
+     ARCHIVE(MEMBER)
+
+This construct is available only in targets and prerequisites, not in
+commands!  Most programs that you might use in commands do not support
+this syntax and cannot act directly on archive members.  Only `ar' and
+other programs specifically designed to operate on archives can do so.
+Therefore, valid commands to update an archive member target probably
+must use `ar'.  For example, this rule says to create a member `hack.o'
+in archive `foolib' by copying the file `hack.o':
+
+     foolib(hack.o) : hack.o
+             ar cr foolib hack.o
+
+   In fact, nearly all archive member targets are updated in just this
+way and there is an implicit rule to do it for you.  *Please note:* The
+`c' flag to `ar' is required if the archive file does not already exist.
+
+   To specify several members in the same archive, you can write all the
+member names together between the parentheses.  For example:
+
+     foolib(hack.o kludge.o)
+
+is equivalent to:
+
+     foolib(hack.o) foolib(kludge.o)
+
+   You can also use shell-style wildcards in an archive member
+reference.  *Note Using Wildcard Characters in File Names: Wildcards.
+For example, `foolib(*.o)' expands to all existing members of the
+`foolib' archive whose names end in `.o'; perhaps `foolib(hack.o)
+foolib(kludge.o)'.
+
+
+File: make.info,  Node: Archive Update,  Next: Archive Pitfalls,  Prev: Archive Members,  Up: Archives
+
+11.2 Implicit Rule for Archive Member Targets
+=============================================
+
+Recall that a target that looks like `A(M)' stands for the member named
+M in the archive file A.
+
+   When `make' looks for an implicit rule for such a target, as a
+special feature it considers implicit rules that match `(M)', as well as
+those that match the actual target `A(M)'.
+
+   This causes one special rule whose target is `(%)' to match.  This
+rule updates the target `A(M)' by copying the file M into the archive.
+For example, it will update the archive member target `foo.a(bar.o)' by
+copying the _file_ `bar.o' into the archive `foo.a' as a _member_ named
+`bar.o'.
+
+   When this rule is chained with others, the result is very powerful.
+Thus, `make "foo.a(bar.o)"' (the quotes are needed to protect the `('
+and `)' from being interpreted specially by the shell) in the presence
+of a file `bar.c' is enough to cause the following commands to be run,
+even without a makefile:
+
+     cc -c bar.c -o bar.o
+     ar r foo.a bar.o
+     rm -f bar.o
+
+Here `make' has envisioned the file `bar.o' as an intermediate file.
+*Note Chains of Implicit Rules: Chained Rules.
+
+   Implicit rules such as this one are written using the automatic
+variable `$%'.  *Note Automatic Variables::.
+
+   An archive member name in an archive cannot contain a directory
+name, but it may be useful in a makefile to pretend that it does.  If
+you write an archive member target `foo.a(dir/file.o)', `make' will
+perform automatic updating with this command:
+
+     ar r foo.a dir/file.o
+
+which has the effect of copying the file `dir/file.o' into a member
+named `file.o'.  In connection with such usage, the automatic variables
+`%D' and `%F' may be useful.
+
+* Menu:
+
+* Archive Symbols::             How to update archive symbol directories.
+
+
+File: make.info,  Node: Archive Symbols,  Prev: Archive Update,  Up: Archive Update
+
+11.2.1 Updating Archive Symbol Directories
+------------------------------------------
+
+An archive file that is used as a library usually contains a special
+member named `__.SYMDEF' that contains a directory of the external
+symbol names defined by all the other members.  After you update any
+other members, you need to update `__.SYMDEF' so that it will summarize
+the other members properly.  This is done by running the `ranlib'
+program:
+
+     ranlib ARCHIVEFILE
+
+   Normally you would put this command in the rule for the archive file,
+and make all the members of the archive file prerequisites of that rule.
+For example,
+
+     libfoo.a: libfoo.a(x.o) libfoo.a(y.o) ...
+             ranlib libfoo.a
+
+The effect of this is to update archive members `x.o', `y.o', etc., and
+then update the symbol directory member `__.SYMDEF' by running
+`ranlib'.  The rules for updating the members are not shown here; most
+likely you can omit them and use the implicit rule which copies files
+into the archive, as described in the preceding section.
+
+   This is not necessary when using the GNU `ar' program, which updates
+the `__.SYMDEF' member automatically.
+
+
+File: make.info,  Node: Archive Pitfalls,  Next: Archive Suffix Rules,  Prev: Archive Update,  Up: Archives
+
+11.3 Dangers When Using Archives
+================================
+
+It is important to be careful when using parallel execution (the `-j'
+switch; *note Parallel Execution: Parallel.) and archives.  If multiple
+`ar' commands run at the same time on the same archive file, they will
+not know about each other and can corrupt the file.
+
+   Possibly a future version of `make' will provide a mechanism to
+circumvent this problem by serializing all commands that operate on the
+same archive file.  But for the time being, you must either write your
+makefiles to avoid this problem in some other way, or not use `-j'.
+
+
+File: make.info,  Node: Archive Suffix Rules,  Prev: Archive Pitfalls,  Up: Archives
+
+11.4 Suffix Rules for Archive Files
+===================================
+
+You can write a special kind of suffix rule for dealing with archive
+files.  *Note Suffix Rules::, for a full explanation of suffix rules.
+Archive suffix rules are obsolete in GNU `make', because pattern rules
+for archives are a more general mechanism (*note Archive Update::).
+But they are retained for compatibility with other `make's.
+
+   To write a suffix rule for archives, you simply write a suffix rule
+using the target suffix `.a' (the usual suffix for archive files).  For
+example, here is the old-fashioned suffix rule to update a library
+archive from C source files:
+
+     .c.a:
+             $(CC) $(CFLAGS) $(CPPFLAGS) -c $< -o $*.o
+             $(AR) r $@ $*.o
+             $(RM) $*.o
+
+This works just as if you had written the pattern rule:
+
+     (%.o): %.c
+             $(CC) $(CFLAGS) $(CPPFLAGS) -c $< -o $*.o
+             $(AR) r $@ $*.o
+             $(RM) $*.o
+
+   In fact, this is just what `make' does when it sees a suffix rule
+with `.a' as the target suffix.  Any double-suffix rule `.X.a' is
+converted to a pattern rule with the target pattern `(%.o)' and a
+prerequisite pattern of `%.X'.
+
+   Since you might want to use `.a' as the suffix for some other kind
+of file, `make' also converts archive suffix rules to pattern rules in
+the normal way (*note Suffix Rules::).  Thus a double-suffix rule
+`.X.a' produces two pattern rules: `(%.o): %.X' and `%.a: %.X'.
+
+
+File: make.info,  Node: Features,  Next: Missing,  Prev: Archives,  Up: Top
+
+12 Features of GNU `make'
+*************************
+
+Here is a summary of the features of GNU `make', for comparison with
+and credit to other versions of `make'.  We consider the features of
+`make' in 4.2 BSD systems as a baseline.  If you are concerned with
+writing portable makefiles, you should not use the features of `make'
+listed here, nor the ones in *Note Missing::.
+
+   Many features come from the version of `make' in System V.
+
+   * The `VPATH' variable and its special meaning.  *Note Searching
+     Directories for Prerequisites: Directory Search.  This feature
+     exists in System V `make', but is undocumented.  It is documented
+     in 4.3 BSD `make' (which says it mimics System V's `VPATH'
+     feature).
+
+   * Included makefiles.  *Note Including Other Makefiles: Include.
+     Allowing multiple files to be included with a single directive is
+     a GNU extension.
+
+   * Variables are read from and communicated via the environment.
+     *Note Variables from the Environment: Environment.
+
+   * Options passed through the variable `MAKEFLAGS' to recursive
+     invocations of `make'.  *Note Communicating Options to a
+     Sub-`make': Options/Recursion.
+
+   * The automatic variable `$%' is set to the member name in an
+     archive reference.  *Note Automatic Variables::.
+
+   * The automatic variables `$@', `$*', `$<', `$%', and `$?' have
+     corresponding forms like `$(@F)' and `$(@D)'.  We have generalized
+     this to `$^' as an obvious extension.  *Note Automatic Variables::.
+
+   * Substitution variable references.  *Note Basics of Variable
+     References: Reference.
+
+   * The command-line options `-b' and `-m', accepted and ignored.  In
+     System V `make', these options actually do something.
+
+   * Execution of recursive commands to run `make' via the variable
+     `MAKE' even if `-n', `-q' or `-t' is specified.  *Note Recursive
+     Use of `make': Recursion.
+
+   * Support for suffix `.a' in suffix rules.  *Note Archive Suffix
+     Rules::.  This feature is obsolete in GNU `make', because the
+     general feature of rule chaining (*note Chains of Implicit Rules:
+     Chained Rules.) allows one pattern rule for installing members in
+     an archive (*note Archive Update::) to be sufficient.
+
+   * The arrangement of lines and backslash-newline combinations in
+     commands is retained when the commands are printed, so they appear
+     as they do in the makefile, except for the stripping of initial
+     whitespace.
+
+   The following features were inspired by various other versions of
+`make'.  In some cases it is unclear exactly which versions inspired
+which others.
+
+   * Pattern rules using `%'.  This has been implemented in several
+     versions of `make'.  We're not sure who invented it first, but
+     it's been spread around a bit.  *Note Defining and Redefining
+     Pattern Rules: Pattern Rules.
+
+   * Rule chaining and implicit intermediate files.  This was
+     implemented by Stu Feldman in his version of `make' for AT&T
+     Eighth Edition Research Unix, and later by Andrew Hume of AT&T
+     Bell Labs in his `mk' program (where he terms it "transitive
+     closure").  We do not really know if we got this from either of
+     them or thought it up ourselves at the same time.  *Note Chains of
+     Implicit Rules: Chained Rules.
+
+   * The automatic variable `$^' containing a list of all prerequisites
+     of the current target.  We did not invent this, but we have no
+     idea who did.  *Note Automatic Variables::.  The automatic variable
+     `$+' is a simple extension of `$^'.
+
+   * The "what if" flag (`-W' in GNU `make') was (as far as we know)
+     invented by Andrew Hume in `mk'.  *Note Instead of Executing the
+     Commands: Instead of Execution.
+
+   * The concept of doing several things at once (parallelism) exists in
+     many incarnations of `make' and similar programs, though not in the
+     System V or BSD implementations.  *Note Command Execution:
+     Execution.
+
+   * Modified variable references using pattern substitution come from
+     SunOS 4.  *Note Basics of Variable References: Reference.  This
+     functionality was provided in GNU `make' by the `patsubst'
+     function before the alternate syntax was implemented for
+     compatibility with SunOS 4.  It is not altogether clear who
+     inspired whom, since GNU `make' had `patsubst' before SunOS 4 was
+     released.
+
+   * The special significance of `+' characters preceding command lines
+     (*note Instead of Executing the Commands: Instead of Execution.) is
+     mandated by `IEEE Standard 1003.2-1992' (POSIX.2).
+
+   * The `+=' syntax to append to the value of a variable comes from
+     SunOS 4 `make'.  *Note Appending More Text to Variables: Appending.
+
+   * The syntax `ARCHIVE(MEM1 MEM2...)' to list multiple members in a
+     single archive file comes from SunOS 4 `make'.  *Note Archive
+     Members::.
+
+   * The `-include' directive to include makefiles with no error for a
+     nonexistent file comes from SunOS 4 `make'.  (But note that SunOS 4
+     `make' does not allow multiple makefiles to be specified in one
+     `-include' directive.)  The same feature appears with the name
+     `sinclude' in SGI `make' and perhaps others.
+
+   The remaining features are inventions new in GNU `make':
+
+   * Use the `-v' or `--version' option to print version and copyright
+     information.
+
+   * Use the `-h' or `--help' option to summarize the options to `make'.
+
+   * Simply-expanded variables.  *Note The Two Flavors of Variables:
+     Flavors.
+
+   * Pass command-line variable assignments automatically through the
+     variable `MAKE' to recursive `make' invocations.  *Note Recursive
+     Use of `make': Recursion.
+
+   * Use the `-C' or `--directory' command option to change directory.
+     *Note Summary of Options: Options Summary.
+
+   * Make verbatim variable definitions with `define'.  *Note Defining
+     Variables Verbatim: Defining.
+
+   * Declare phony targets with the special target `.PHONY'.
+
+     Andrew Hume of AT&T Bell Labs implemented a similar feature with a
+     different syntax in his `mk' program.  This seems to be a case of
+     parallel discovery.  *Note Phony Targets: Phony Targets.
+
+   * Manipulate text by calling functions.  *Note Functions for
+     Transforming Text: Functions.
+
+   * Use the `-o' or `--old-file' option to pretend a file's
+     modification-time is old.  *Note Avoiding Recompilation of Some
+     Files: Avoiding Compilation.
+
+   * Conditional execution.
+
+     This feature has been implemented numerous times in various
+     versions of `make'; it seems a natural extension derived from the
+     features of the C preprocessor and similar macro languages and is
+     not a revolutionary concept.  *Note Conditional Parts of
+     Makefiles: Conditionals.
+
+   * Specify a search path for included makefiles.  *Note Including
+     Other Makefiles: Include.
+
+   * Specify extra makefiles to read with an environment variable.
+     *Note The Variable `MAKEFILES': MAKEFILES Variable.
+
+   * Strip leading sequences of `./' from file names, so that `./FILE'
+     and `FILE' are considered to be the same file.
+
+   * Use a special search method for library prerequisites written in
+     the form `-lNAME'.  *Note Directory Search for Link Libraries:
+     Libraries/Search.
+
+   * Allow suffixes for suffix rules (*note Old-Fashioned Suffix Rules:
+     Suffix Rules.) to contain any characters.  In other versions of
+     `make', they must begin with `.' and not contain any `/'
+     characters.
+
+   * Keep track of the current level of `make' recursion using the
+     variable `MAKELEVEL'.  *Note Recursive Use of `make': Recursion.
+
+   * Provide any goals given on the command line in the variable
+     `MAKECMDGOALS'.  *Note Arguments to Specify the Goals: Goals.
+
+   * Specify static pattern rules.  *Note Static Pattern Rules: Static
+     Pattern.
+
+   * Provide selective `vpath' search.  *Note Searching Directories for
+     Prerequisites: Directory Search.
+
+   * Provide computed variable references.  *Note Basics of Variable
+     References: Reference.
+
+   * Update makefiles.  *Note How Makefiles Are Remade: Remaking
+     Makefiles.  System V `make' has a very, very limited form of this
+     functionality in that it will check out SCCS files for makefiles.
+
+   * Various new built-in implicit rules.  *Note Catalogue of Implicit
+     Rules: Catalogue of Rules.
+
+   * The built-in variable `MAKE_VERSION' gives the version number of
+     `make'.  
+
+
+File: make.info,  Node: Missing,  Next: Makefile Conventions,  Prev: Features,  Up: Top
+
+13 Incompatibilities and Missing Features
+*****************************************
+
+The `make' programs in various other systems support a few features
+that are not implemented in GNU `make'.  The POSIX.2 standard (`IEEE
+Standard 1003.2-1992') which specifies `make' does not require any of
+these features.
+
+   * A target of the form `FILE((ENTRY))' stands for a member of
+     archive file FILE.  The member is chosen, not by name, but by
+     being an object file which defines the linker symbol ENTRY.
+
+     This feature was not put into GNU `make' because of the
+     nonmodularity of putting knowledge into `make' of the internal
+     format of archive file symbol tables.  *Note Updating Archive
+     Symbol Directories: Archive Symbols.
+
+   * Suffixes (used in suffix rules) that end with the character `~'
+     have a special meaning to System V `make'; they refer to the SCCS
+     file that corresponds to the file one would get without the `~'.
+     For example, the suffix rule `.c~.o' would make the file `N.o' from
+     the SCCS file `s.N.c'.  For complete coverage, a whole series of
+     such suffix rules is required.  *Note Old-Fashioned Suffix Rules:
+     Suffix Rules.
+
+     In GNU `make', this entire series of cases is handled by two
+     pattern rules for extraction from SCCS, in combination with the
+     general feature of rule chaining.  *Note Chains of Implicit Rules:
+     Chained Rules.
+
+   * In System V and 4.3 BSD `make', files found by `VPATH' search
+     (*note Searching Directories for Prerequisites: Directory Search.)
+     have their names changed inside command strings.  We feel it is
+     much cleaner to always use automatic variables and thus make this
+     feature obsolete.
+
+   * In some Unix `make's, the automatic variable `$*' appearing in the
+     prerequisites of a rule has the amazingly strange "feature" of
+     expanding to the full name of the _target of that rule_.  We cannot
+     imagine what went on in the minds of Unix `make' developers to do
+     this; it is utterly inconsistent with the normal definition of
+     `$*'.  
+
+   * In some Unix `make's, implicit rule search (*note Using Implicit
+     Rules: Implicit Rules.) is apparently done for _all_ targets, not
+     just those without commands.  This means you can do:
+
+          foo.o:
+                  cc -c foo.c
+
+     and Unix `make' will intuit that `foo.o' depends on `foo.c'.
+
+     We feel that such usage is broken.  The prerequisite properties of
+     `make' are well-defined (for GNU `make', at least), and doing such
+     a thing simply does not fit the model.
+
+   * GNU `make' does not include any built-in implicit rules for
+     compiling or preprocessing EFL programs.  If we hear of anyone who
+     is using EFL, we will gladly add them.
+
+   * It appears that in SVR4 `make', a suffix rule can be specified with
+     no commands, and it is treated as if it had empty commands (*note
+     Empty Commands::).  For example:
+
+          .c.a:
+
+     will override the built-in `.c.a' suffix rule.
+
+     We feel that it is cleaner for a rule without commands to always
+     simply add to the prerequisite list for the target.  The above
+     example can be easily rewritten to get the desired behavior in GNU
+     `make':
+
+          .c.a: ;
+
+   * Some versions of `make' invoke the shell with the `-e' flag,
+     except under `-k' (*note Testing the Compilation of a Program:
+     Testing.).  The `-e' flag tells the shell to exit as soon as any
+     program it runs returns a nonzero status.  We feel it is cleaner to
+     write each shell command line to stand on its own and not require
+     this special treatment.
+
+
+File: make.info,  Node: Makefile Conventions,  Next: Quick Reference,  Prev: Missing,  Up: Top
+
+14 Makefile Conventions
+***********************
+
+This node describes conventions for writing the Makefiles for GNU
+programs.  Using Automake will help you write a Makefile that follows
+these conventions.
+
+* Menu:
+
+* Makefile Basics::             General Conventions for Makefiles
+* Utilities in Makefiles::      Utilities in Makefiles
+* Command Variables::           Variables for Specifying Commands
+* Directory Variables::         Variables for Installation Directories
+* Standard Targets::            Standard Targets for Users
+* Install Command Categories::  Three categories of commands in the `install'
+                                  rule: normal, pre-install and post-install.
+
+
+File: make.info,  Node: Makefile Basics,  Next: Utilities in Makefiles,  Up: Makefile Conventions
+
+14.1 General Conventions for Makefiles
+======================================
+
+Every Makefile should contain this line:
+
+     SHELL = /bin/sh
+
+to avoid trouble on systems where the `SHELL' variable might be
+inherited from the environment.  (This is never a problem with GNU
+`make'.)
+
+   Different `make' programs have incompatible suffix lists and
+implicit rules, and this sometimes creates confusion or misbehavior.  So
+it is a good idea to set the suffix list explicitly using only the
+suffixes you need in the particular Makefile, like this:
+
+     .SUFFIXES:
+     .SUFFIXES: .c .o
+
+The first line clears out the suffix list, the second introduces all
+suffixes which may be subject to implicit rules in this Makefile.
+
+   Don't assume that `.' is in the path for command execution.  When
+you need to run programs that are a part of your package during the
+make, please make sure that it uses `./' if the program is built as
+part of the make or `$(srcdir)/' if the file is an unchanging part of
+the source code.  Without one of these prefixes, the current search
+path is used.
+
+   The distinction between `./' (the "build directory") and
+`$(srcdir)/' (the "source directory") is important because users can
+build in a separate directory using the `--srcdir' option to
+`configure'.  A rule of the form:
+
+     foo.1 : foo.man sedscript
+             sed -e sedscript foo.man > foo.1
+
+will fail when the build directory is not the source directory, because
+`foo.man' and `sedscript' are in the source directory.
+
+   When using GNU `make', relying on `VPATH' to find the source file
+will work in the case where there is a single dependency file, since
+the `make' automatic variable `$<' will represent the source file
+wherever it is.  (Many versions of `make' set `$<' only in implicit
+rules.)  A Makefile target like
+
+     foo.o : bar.c
+             $(CC) -I. -I$(srcdir) $(CFLAGS) -c bar.c -o foo.o
+
+should instead be written as
+
+     foo.o : bar.c
+             $(CC) -I. -I$(srcdir) $(CFLAGS) -c $< -o $@
+
+in order to allow `VPATH' to work correctly.  When the target has
+multiple dependencies, using an explicit `$(srcdir)' is the easiest way
+to make the rule work well.  For example, the target above for `foo.1'
+is best written as:
+
+     foo.1 : foo.man sedscript
+             sed -e $(srcdir)/sedscript $(srcdir)/foo.man > $@
+
+   GNU distributions usually contain some files which are not source
+files--for example, Info files, and the output from Autoconf, Automake,
+Bison or Flex.  Since these files normally appear in the source
+directory, they should always appear in the source directory, not in the
+build directory.  So Makefile rules to update them should put the
+updated files in the source directory.
+
+   However, if a file does not appear in the distribution, then the
+Makefile should not put it in the source directory, because building a
+program in ordinary circumstances should not modify the source directory
+in any way.
+
+   Try to make the build and installation targets, at least (and all
+their subtargets) work correctly with a parallel `make'.
+
+
+File: make.info,  Node: Utilities in Makefiles,  Next: Command Variables,  Prev: Makefile Basics,  Up: Makefile Conventions
+
+14.2 Utilities in Makefiles
+===========================
+
+Write the Makefile commands (and any shell scripts, such as
+`configure') to run in `sh', not in `csh'.  Don't use any special
+features of `ksh' or `bash'.
+
+   The `configure' script and the Makefile rules for building and
+installation should not use any utilities directly except these:
+
+     cat cmp cp diff echo egrep expr false grep install-info
+     ln ls mkdir mv pwd rm rmdir sed sleep sort tar test touch true
+
+   The compression program `gzip' can be used in the `dist' rule.
+
+   Stick to the generally supported options for these programs.  For
+example, don't use `mkdir -p', convenient as it may be, because most
+systems don't support it.
+
+   It is a good idea to avoid creating symbolic links in makefiles,
+since a few systems don't support them.
+
+   The Makefile rules for building and installation can also use
+compilers and related programs, but should do so via `make' variables
+so that the user can substitute alternatives.  Here are some of the
+programs we mean:
+
+     ar bison cc flex install ld ldconfig lex
+     make makeinfo ranlib texi2dvi yacc
+
+   Use the following `make' variables to run those programs:
+
+     $(AR) $(BISON) $(CC) $(FLEX) $(INSTALL) $(LD) $(LDCONFIG) $(LEX)
+     $(MAKE) $(MAKEINFO) $(RANLIB) $(TEXI2DVI) $(YACC)
+
+   When you use `ranlib' or `ldconfig', you should make sure nothing
+bad happens if the system does not have the program in question.
+Arrange to ignore an error from that command, and print a message before
+the command to tell the user that failure of this command does not mean
+a problem.  (The Autoconf `AC_PROG_RANLIB' macro can help with this.)
+
+   If you use symbolic links, you should implement a fallback for
+systems that don't have symbolic links.
+
+   Additional utilities that can be used via Make variables are:
+
+     chgrp chmod chown mknod
+
+   It is ok to use other utilities in Makefile portions (or scripts)
+intended only for particular systems where you know those utilities
+exist.
+
+
+File: make.info,  Node: Command Variables,  Next: Directory Variables,  Prev: Utilities in Makefiles,  Up: Makefile Conventions
+
+14.3 Variables for Specifying Commands
+======================================
+
+Makefiles should provide variables for overriding certain commands,
+options, and so on.
+
+   In particular, you should run most utility programs via variables.
+Thus, if you use Bison, have a variable named `BISON' whose default
+value is set with `BISON = bison', and refer to it with `$(BISON)'
+whenever you need to use Bison.
+
+   File management utilities such as `ln', `rm', `mv', and so on, need
+not be referred to through variables in this way, since users don't
+need to replace them with other programs.
+
+   Each program-name variable should come with an options variable that
+is used to supply options to the program.  Append `FLAGS' to the
+program-name variable name to get the options variable name--for
+example, `BISONFLAGS'.  (The names `CFLAGS' for the C compiler,
+`YFLAGS' for yacc, and `LFLAGS' for lex, are exceptions to this rule,
+but we keep them because they are standard.)  Use `CPPFLAGS' in any
+compilation command that runs the preprocessor, and use `LDFLAGS' in
+any compilation command that does linking as well as in any direct use
+of `ld'.
+
+   If there are C compiler options that _must_ be used for proper
+compilation of certain files, do not include them in `CFLAGS'.  Users
+expect to be able to specify `CFLAGS' freely themselves.  Instead,
+arrange to pass the necessary options to the C compiler independently
+of `CFLAGS', by writing them explicitly in the compilation commands or
+by defining an implicit rule, like this:
+
+     CFLAGS = -g
+     ALL_CFLAGS = -I. $(CFLAGS)
+     .c.o:
+             $(CC) -c $(CPPFLAGS) $(ALL_CFLAGS) $<
+
+   Do include the `-g' option in `CFLAGS', because that is not
+_required_ for proper compilation.  You can consider it a default that
+is only recommended.  If the package is set up so that it is compiled
+with GCC by default, then you might as well include `-O' in the default
+value of `CFLAGS' as well.
+
+   Put `CFLAGS' last in the compilation command, after other variables
+containing compiler options, so the user can use `CFLAGS' to override
+the others.
+
+   `CFLAGS' should be used in every invocation of the C compiler, both
+those which do compilation and those which do linking.
+
+   Every Makefile should define the variable `INSTALL', which is the
+basic command for installing a file into the system.
+
+   Every Makefile should also define the variables `INSTALL_PROGRAM'
+and `INSTALL_DATA'.  (The default for `INSTALL_PROGRAM' should be
+`$(INSTALL)'; the default for `INSTALL_DATA' should be `${INSTALL} -m
+644'.)  Then it should use those variables as the commands for actual
+installation, for executables and nonexecutables respectively.  Use
+these variables as follows:
+
+     $(INSTALL_PROGRAM) foo $(bindir)/foo
+     $(INSTALL_DATA) libfoo.a $(libdir)/libfoo.a
+
+   Optionally, you may prepend the value of `DESTDIR' to the target
+filename.  Doing this allows the installer to create a snapshot of the
+installation to be copied onto the real target filesystem later.  Do not
+set the value of `DESTDIR' in your Makefile, and do not include it in
+any installed files.  With support for `DESTDIR', the above examples
+become:
+
+     $(INSTALL_PROGRAM) foo $(DESTDIR)$(bindir)/foo
+     $(INSTALL_DATA) libfoo.a $(DESTDIR)$(libdir)/libfoo.a
+
+Always use a file name, not a directory name, as the second argument of
+the installation commands.  Use a separate command for each file to be
+installed.
+
+
+File: make.info,  Node: Directory Variables,  Next: Standard Targets,  Prev: Command Variables,  Up: Makefile Conventions
+
+14.4 Variables for Installation Directories
+===========================================
+
+Installation directories should always be named by variables, so it is
+easy to install in a nonstandard place.  The standard names for these
+variables and the values they should have in GNU packages are described
+below.  They are based on a standard filesystem layout; variants of it
+are used in GNU/Linux and other modern operating systems.
+
+   Installers are expected to override these values when calling `make'
+(e.g., `make prefix=/usr install' or `configure' (e.g., `configure
+--prefix=/usr').  GNU packages should not try to guess which value
+should be appropriate for these variables on the system they are being
+installed onto: use the default settings specified here so that all GNU
+packages behave identically, allowing the installer to achieve any
+desired layout.
+
+   These two variables set the root for the installation.  All the other
+installation directories should be subdirectories of one of these two,
+and nothing should be directly installed into these two directories.
+
+`prefix'
+     A prefix used in constructing the default values of the variables
+     listed below.  The default value of `prefix' should be
+     `/usr/local'.  When building the complete GNU system, the prefix
+     will be empty and `/usr' will be a symbolic link to `/'.  (If you
+     are using Autoconf, write it as `@prefix@'.)
+
+     Running `make install' with a different value of `prefix' from the
+     one used to build the program should _not_ recompile the program.
+
+`exec_prefix'
+     A prefix used in constructing the default values of some of the
+     variables listed below.  The default value of `exec_prefix' should
+     be `$(prefix)'.  (If you are using Autoconf, write it as
+     `@exec_prefix@'.)
+
+     Generally, `$(exec_prefix)' is used for directories that contain
+     machine-specific files (such as executables and subroutine
+     libraries), while `$(prefix)' is used directly for other
+     directories.
+
+     Running `make install' with a different value of `exec_prefix'
+     from the one used to build the program should _not_ recompile the
+     program.
+
+   Executable programs are installed in one of the following
+directories.
+
+`bindir'
+     The directory for installing executable programs that users can
+     run.  This should normally be `/usr/local/bin', but write it as
+     `$(exec_prefix)/bin'.  (If you are using Autoconf, write it as
+     `@bindir@'.)
+
+`sbindir'
+     The directory for installing executable programs that can be run
+     from the shell, but are only generally useful to system
+     administrators.  This should normally be `/usr/local/sbin', but
+     write it as `$(exec_prefix)/sbin'.  (If you are using Autoconf,
+     write it as `@sbindir@'.)
+
+`libexecdir'
+     The directory for installing executable programs to be run by other
+     programs rather than by users.  This directory should normally be
+     `/usr/local/libexec', but write it as `$(exec_prefix)/libexec'.
+     (If you are using Autoconf, write it as `@libexecdir@'.)
+
+     The definition of `libexecdir' is the same for all packages, so
+     you should install your data in a subdirectory thereof.  Most
+     packages install their data under `$(libexecdir)/PACKAGE-NAME/',
+     possibly within additional subdirectories thereof, such as
+     `$(libexecdir)/PACKAGE-NAME/MACHINE/VERSION'.
+
+   Data files used by the program during its execution are divided into
+categories in two ways.
+
+   * Some files are normally modified by programs; others are never
+     normally modified (though users may edit some of these).
+
+   * Some files are architecture-independent and can be shared by all
+     machines at a site; some are architecture-dependent and can be
+     shared only by machines of the same kind and operating system;
+     others may never be shared between two machines.
+
+   This makes for six different possibilities.  However, we want to
+discourage the use of architecture-dependent files, aside from object
+files and libraries.  It is much cleaner to make other data files
+architecture-independent, and it is generally not hard.
+
+   Here are the variables Makefiles should use to specify directories
+to put these various kinds of files in:
+
+`datarootdir'
+     The root of the directory tree for read-only
+     architecture-independent data files.  This should normally be
+     `/usr/local/share', but write it as `$(prefix)/share'.  (If you
+     are using Autoconf, write it as `@datarootdir@'.)  `datadir''s
+     default value is based on this variable; so are `infodir',
+     `mandir', and others.
+
+`datadir'
+     The directory for installing idiosyncratic read-only
+     architecture-independent data files for this program.  This is
+     usually the same place as `datarootdir', but we use the two
+     separate variables so that you can move these program-specific
+     files without altering the location for Info files, man pages, etc.
+
+     This should normally be `/usr/local/share', but write it as
+     `$(datarootdir)'.  (If you are using Autoconf, write it as
+     `@datadir@'.)
+
+     The definition of `datadir' is the same for all packages, so you
+     should install your data in a subdirectory thereof.  Most packages
+     install their data under `$(datadir)/PACKAGE-NAME/'.
+
+`sysconfdir'
+     The directory for installing read-only data files that pertain to a
+     single machine-that is to say, files for configuring a host.
+     Mailer and network configuration files, `/etc/passwd', and so
+     forth belong here.  All the files in this directory should be
+     ordinary ASCII text files.  This directory should normally be
+     `/usr/local/etc', but write it as `$(prefix)/etc'.  (If you are
+     using Autoconf, write it as `@sysconfdir@'.)
+
+     Do not install executables here in this directory (they probably
+     belong in `$(libexecdir)' or `$(sbindir)').  Also do not install
+     files that are modified in the normal course of their use (programs
+     whose purpose is to change the configuration of the system
+     excluded).  Those probably belong in `$(localstatedir)'.
+
+`sharedstatedir'
+     The directory for installing architecture-independent data files
+     which the programs modify while they run.  This should normally be
+     `/usr/local/com', but write it as `$(prefix)/com'.  (If you are
+     using Autoconf, write it as `@sharedstatedir@'.)
+
+`localstatedir'
+     The directory for installing data files which the programs modify
+     while they run, and that pertain to one specific machine.  Users
+     should never need to modify files in this directory to configure
+     the package's operation; put such configuration information in
+     separate files that go in `$(datadir)' or `$(sysconfdir)'.
+     `$(localstatedir)' should normally be `/usr/local/var', but write
+     it as `$(prefix)/var'.  (If you are using Autoconf, write it as
+     `@localstatedir@'.)
+
+   These variables specify the directory for installing certain specific
+types of files, if your program has them.  Every GNU package should
+have Info files, so every program needs `infodir', but not all need
+`libdir' or `lispdir'.
+
+`includedir'
+     The directory for installing header files to be included by user
+     programs with the C `#include' preprocessor directive.  This
+     should normally be `/usr/local/include', but write it as
+     `$(prefix)/include'.  (If you are using Autoconf, write it as
+     `@includedir@'.)
+
+     Most compilers other than GCC do not look for header files in
+     directory `/usr/local/include'.  So installing the header files
+     this way is only useful with GCC.  Sometimes this is not a problem
+     because some libraries are only really intended to work with GCC.
+     But some libraries are intended to work with other compilers.
+     They should install their header files in two places, one
+     specified by `includedir' and one specified by `oldincludedir'.
+
+`oldincludedir'
+     The directory for installing `#include' header files for use with
+     compilers other than GCC.  This should normally be `/usr/include'.
+     (If you are using Autoconf, you can write it as `@oldincludedir@'.)
+
+     The Makefile commands should check whether the value of
+     `oldincludedir' is empty.  If it is, they should not try to use
+     it; they should cancel the second installation of the header files.
+
+     A package should not replace an existing header in this directory
+     unless the header came from the same package.  Thus, if your Foo
+     package provides a header file `foo.h', then it should install the
+     header file in the `oldincludedir' directory if either (1) there
+     is no `foo.h' there or (2) the `foo.h' that exists came from the
+     Foo package.
+
+     To tell whether `foo.h' came from the Foo package, put a magic
+     string in the file--part of a comment--and `grep' for that string.
+
+`docdir'
+     The directory for installing documentation files (other than Info)
+     for this package.  By default, it should be
+     `/usr/local/share/doc/YOURPKG', but it should be written as
+     `$(datarootdir)/doc/YOURPKG'.  (If you are using Autoconf, write
+     it as `@docdir@'.)  The YOURPKG subdirectory, which may include a
+     version number, prevents collisions among files with common names,
+     such as `README'.
+
+`infodir'
+     The directory for installing the Info files for this package.  By
+     default, it should be `/usr/local/share/info', but it should be
+     written as `$(datarootdir)/info'.  (If you are using Autoconf,
+     write it as `@infodir@'.)  `infodir' is separate from `docdir' for
+     compatibility with existing practice.
+
+`htmldir'
+`dvidir'
+`pdfdir'
+`psdir'
+     Directories for installing documentation files in the particular
+     format.  (It is not required to support documentation in all these
+     formats.)  They should all be set to `$(docdir)' by default.  (If
+     you are using Autoconf, write them as `@htmldir@', `@dvidir@',
+     etc.)  Packages which supply several translations of their
+     documentation should install them in `$(htmldir)/'LL,
+     `$(pdfdir)/'LL, etc. where LL is a locale abbreviation such as
+     `en' or `pt_BR'.
+
+`libdir'
+     The directory for object files and libraries of object code.  Do
+     not install executables here, they probably ought to go in
+     `$(libexecdir)' instead.  The value of `libdir' should normally be
+     `/usr/local/lib', but write it as `$(exec_prefix)/lib'.  (If you
+     are using Autoconf, write it as `@libdir@'.)
+
+`lispdir'
+     The directory for installing any Emacs Lisp files in this package.
+     By default, it should be `/usr/local/share/emacs/site-lisp', but
+     it should be written as `$(datarootdir)/emacs/site-lisp'.
+
+     If you are using Autoconf, write the default as `@lispdir@'.  In
+     order to make `@lispdir@' work, you need the following lines in
+     your `configure.in' file:
+
+          lispdir='${datarootdir}/emacs/site-lisp'
+          AC_SUBST(lispdir)
+
+`localedir'
+     The directory for installing locale-specific message catalogs for
+     this package.  By default, it should be `/usr/local/share/locale',
+     but it should be written as `$(datarootdir)/locale'.  (If you are
+     using Autoconf, write it as `@localedir@'.)  This directory
+     usually has a subdirectory per locale.
+
+   Unix-style man pages are installed in one of the following:
+
+`mandir'
+     The top-level directory for installing the man pages (if any) for
+     this package.  It will normally be `/usr/local/share/man', but you
+     should write it as `$(datarootdir)/man'.  (If you are using
+     Autoconf, write it as `@mandir@'.)
+
+`man1dir'
+     The directory for installing section 1 man pages.  Write it as
+     `$(mandir)/man1'.
+
+`man2dir'
+     The directory for installing section 2 man pages.  Write it as
+     `$(mandir)/man2'
+
+`...'
+     *Don't make the primary documentation for any GNU software be a
+     man page.  Write a manual in Texinfo instead.  Man pages are just
+     for the sake of people running GNU software on Unix, which is a
+     secondary application only.*
+
+`manext'
+     The file name extension for the installed man page.  This should
+     contain a period followed by the appropriate digit; it should
+     normally be `.1'.
+
+`man1ext'
+     The file name extension for installed section 1 man pages.
+
+`man2ext'
+     The file name extension for installed section 2 man pages.
+
+`...'
+     Use these names instead of `manext' if the package needs to
+     install man pages in more than one section of the manual.
+
+   And finally, you should set the following variable:
+
+`srcdir'
+     The directory for the sources being compiled.  The value of this
+     variable is normally inserted by the `configure' shell script.
+     (If you are using Autconf, use `srcdir = @srcdir@'.)
+
+   For example:
+
+     # Common prefix for installation directories.
+     # NOTE: This directory must exist when you start the install.
+     prefix = /usr/local
+     datarootdir = $(prefix)/share
+     datadir = $(datarootdir)
+     exec_prefix = $(prefix)
+     # Where to put the executable for the command `gcc'.
+     bindir = $(exec_prefix)/bin
+     # Where to put the directories used by the compiler.
+     libexecdir = $(exec_prefix)/libexec
+     # Where to put the Info files.
+     infodir = $(datarootdir)/info
+
+   If your program installs a large number of files into one of the
+standard user-specified directories, it might be useful to group them
+into a subdirectory particular to that program.  If you do this, you
+should write the `install' rule to create these subdirectories.
+
+   Do not expect the user to include the subdirectory name in the value
+of any of the variables listed above.  The idea of having a uniform set
+of variable names for installation directories is to enable the user to
+specify the exact same values for several different GNU packages.  In
+order for this to be useful, all the packages must be designed so that
+they will work sensibly when the user does so.
+
+
+File: make.info,  Node: Standard Targets,  Next: Install Command Categories,  Prev: Directory Variables,  Up: Makefile Conventions
+
+14.5 Standard Targets for Users
+===============================
+
+All GNU programs should have the following targets in their Makefiles:
+
+`all'
+     Compile the entire program.  This should be the default target.
+     This target need not rebuild any documentation files; Info files
+     should normally be included in the distribution, and DVI files
+     should be made only when explicitly asked for.
+
+     By default, the Make rules should compile and link with `-g', so
+     that executable programs have debugging symbols.  Users who don't
+     mind being helpless can strip the executables later if they wish.
+
+`install'
+     Compile the program and copy the executables, libraries, and so on
+     to the file names where they should reside for actual use.  If
+     there is a simple test to verify that a program is properly
+     installed, this target should run that test.
+
+     Do not strip executables when installing them.  Devil-may-care
+     users can use the `install-strip' target to do that.
+
+     If possible, write the `install' target rule so that it does not
+     modify anything in the directory where the program was built,
+     provided `make all' has just been done.  This is convenient for
+     building the program under one user name and installing it under
+     another.
+
+     The commands should create all the directories in which files are
+     to be installed, if they don't already exist.  This includes the
+     directories specified as the values of the variables `prefix' and
+     `exec_prefix', as well as all subdirectories that are needed.  One
+     way to do this is by means of an `installdirs' target as described
+     below.
+
+     Use `-' before any command for installing a man page, so that
+     `make' will ignore any errors.  This is in case there are systems
+     that don't have the Unix man page documentation system installed.
+
+     The way to install Info files is to copy them into `$(infodir)'
+     with `$(INSTALL_DATA)' (*note Command Variables::), and then run
+     the `install-info' program if it is present.  `install-info' is a
+     program that edits the Info `dir' file to add or update the menu
+     entry for the given Info file; it is part of the Texinfo package.
+     Here is a sample rule to install an Info file:
+
+          $(DESTDIR)$(infodir)/foo.info: foo.info
+                  $(POST_INSTALL)
+          # There may be a newer info file in . than in srcdir.
+                  -if test -f foo.info; then d=.; \
+                   else d=$(srcdir); fi; \
+                  $(INSTALL_DATA) $$d/foo.info $(DESTDIR)$@; \
+          # Run install-info only if it exists.
+          # Use `if' instead of just prepending `-' to the
+          # line so we notice real errors from install-info.
+          # We use `$(SHELL) -c' because some shells do not
+          # fail gracefully when there is an unknown command.
+                  if $(SHELL) -c 'install-info --version' \
+                     >/dev/null 2>&1; then \
+                    install-info --dir-file=$(DESTDIR)$(infodir)/dir \
+                                 $(DESTDIR)$(infodir)/foo.info; \
+                  else true; fi
+
+     When writing the `install' target, you must classify all the
+     commands into three categories: normal ones, "pre-installation"
+     commands and "post-installation" commands.  *Note Install Command
+     Categories::.
+
+`install-html'
+`install-dvi'
+`install-pdf'
+`install-ps'
+     These targets install documentation in formats other than Info;
+     they're intended to be called explicitly by the person installing
+     the package, if that format is desired.  GNU prefers Info files,
+     so these must be installed by the `install' target.
+
+     When you have many documentation files to install, we recommend
+     that you avoid collisions and clutter by arranging for these
+     targets to install in subdirectories of the appropriate
+     installation directory, such as `htmldir'.  As one example, if
+     your package has multiple manuals, and you wish to install HTML
+     documentation with many files (such as the "split" mode output by
+     `makeinfo --html'), you'll certainly want to use subdirectories,
+     or two nodes with the same name in different manuals will
+     overwrite each other.
+
+`uninstall'
+     Delete all the installed files--the copies that the `install' and
+     `install-*' targets create.
+
+     This rule should not modify the directories where compilation is
+     done, only the directories where files are installed.
+
+     The uninstallation commands are divided into three categories,
+     just like the installation commands.  *Note Install Command
+     Categories::.
+
+`install-strip'
+     Like `install', but strip the executable files while installing
+     them.  In simple cases, this target can use the `install' target in
+     a simple way:
+
+          install-strip:
+                  $(MAKE) INSTALL_PROGRAM='$(INSTALL_PROGRAM) -s' \
+                          install
+
+     But if the package installs scripts as well as real executables,
+     the `install-strip' target can't just refer to the `install'
+     target; it has to strip the executables but not the scripts.
+
+     `install-strip' should not strip the executables in the build
+     directory which are being copied for installation.  It should only
+     strip the copies that are installed.
+
+     Normally we do not recommend stripping an executable unless you
+     are sure the program has no bugs.  However, it can be reasonable
+     to install a stripped executable for actual execution while saving
+     the unstripped executable elsewhere in case there is a bug.
+
+`clean'
+     Delete all files in the current directory that are normally
+     created by building the program.  Also delete files in other
+     directories if they are created by this makefile.  However, don't
+     delete the files that record the configuration.  Also preserve
+     files that could be made by building, but normally aren't because
+     the distribution comes with them.  There is no need to delete
+     parent directories that were created with `mkdir -p', since they
+     could have existed anyway.
+
+     Delete `.dvi' files here if they are not part of the distribution.
+
+`distclean'
+     Delete all files in the current directory (or created by this
+     makefile) that are created by configuring or building the program.
+     If you have unpacked the source and built the program without
+     creating any other files, `make distclean' should leave only the
+     files that were in the distribution.  However, there is no need to
+     delete parent directories that were created with `mkdir -p', since
+     they could have existed anyway.
+
+`mostlyclean'
+     Like `clean', but may refrain from deleting a few files that people
+     normally don't want to recompile.  For example, the `mostlyclean'
+     target for GCC does not delete `libgcc.a', because recompiling it
+     is rarely necessary and takes a lot of time.
+
+`maintainer-clean'
+     Delete almost everything that can be reconstructed with this
+     Makefile.  This typically includes everything deleted by
+     `distclean', plus more: C source files produced by Bison, tags
+     tables, Info files, and so on.
+
+     The reason we say "almost everything" is that running the command
+     `make maintainer-clean' should not delete `configure' even if
+     `configure' can be remade using a rule in the Makefile.  More
+     generally, `make maintainer-clean' should not delete anything that
+     needs to exist in order to run `configure' and then begin to build
+     the program.  Also, there is no need to delete parent directories
+     that were created with `mkdir -p', since they could have existed
+     anyway.  These are the only exceptions; `maintainer-clean' should
+     delete everything else that can be rebuilt.
+
+     The `maintainer-clean' target is intended to be used by a
+     maintainer of the package, not by ordinary users.  You may need
+     special tools to reconstruct some of the files that `make
+     maintainer-clean' deletes.  Since these files are normally
+     included in the distribution, we don't take care to make them easy
+     to reconstruct.  If you find you need to unpack the full
+     distribution again, don't blame us.
+
+     To help make users aware of this, the commands for the special
+     `maintainer-clean' target should start with these two:
+
+          @echo 'This command is intended for maintainers to use; it'
+          @echo 'deletes files that may need special tools to rebuild.'
+
+`TAGS'
+     Update a tags table for this program.
+
+`info'
+     Generate any Info files needed.  The best way to write the rules
+     is as follows:
+
+          info: foo.info
+
+          foo.info: foo.texi chap1.texi chap2.texi
+                  $(MAKEINFO) $(srcdir)/foo.texi
+
+     You must define the variable `MAKEINFO' in the Makefile.  It should
+     run the `makeinfo' program, which is part of the Texinfo
+     distribution.
+
+     Normally a GNU distribution comes with Info files, and that means
+     the Info files are present in the source directory.  Therefore,
+     the Make rule for an info file should update it in the source
+     directory.  When users build the package, ordinarily Make will not
+     update the Info files because they will already be up to date.
+
+`dvi'
+`html'
+`pdf'
+`ps'
+     Generate documentation files in the given format, if possible.
+     Here's an example rule for generating DVI files from Texinfo:
+
+          dvi: foo.dvi
+
+          foo.dvi: foo.texi chap1.texi chap2.texi
+                  $(TEXI2DVI) $(srcdir)/foo.texi
+
+     You must define the variable `TEXI2DVI' in the Makefile.  It should
+     run the program `texi2dvi', which is part of the Texinfo
+     distribution.(1)  Alternatively, write just the dependencies, and
+     allow GNU `make' to provide the command.
+
+     Here's another example, this one for generating HTML from Texinfo:
+
+          html: foo.html
+
+          foo.html: foo.texi chap1.texi chap2.texi
+                  $(TEXI2HTML) $(srcdir)/foo.texi
+
+     Again, you would define the variable `TEXI2HTML' in the Makefile;
+     for example, it might run `makeinfo --no-split --html' (`makeinfo'
+     is part of the Texinfo distribution).
+
+`dist'
+     Create a distribution tar file for this program.  The tar file
+     should be set up so that the file names in the tar file start with
+     a subdirectory name which is the name of the package it is a
+     distribution for.  This name can include the version number.
+
+     For example, the distribution tar file of GCC version 1.40 unpacks
+     into a subdirectory named `gcc-1.40'.
+
+     The easiest way to do this is to create a subdirectory
+     appropriately named, use `ln' or `cp' to install the proper files
+     in it, and then `tar' that subdirectory.
+
+     Compress the tar file with `gzip'.  For example, the actual
+     distribution file for GCC version 1.40 is called `gcc-1.40.tar.gz'.
+
+     The `dist' target should explicitly depend on all non-source files
+     that are in the distribution, to make sure they are up to date in
+     the distribution.  *Note Making Releases: (standards)Releases.
+
+`check'
+     Perform self-tests (if any).  The user must build the program
+     before running the tests, but need not install the program; you
+     should write the self-tests so that they work when the program is
+     built but not installed.
+
+   The following targets are suggested as conventional names, for
+programs in which they are useful.
+
+`installcheck'
+     Perform installation tests (if any).  The user must build and
+     install the program before running the tests.  You should not
+     assume that `$(bindir)' is in the search path.
+
+`installdirs'
+     It's useful to add a target named `installdirs' to create the
+     directories where files are installed, and their parent
+     directories.  There is a script called `mkinstalldirs' which is
+     convenient for this; you can find it in the Texinfo package.  You
+     can use a rule like this:
+
+          # Make sure all installation directories (e.g. $(bindir))
+          # actually exist by making them if necessary.
+          installdirs: mkinstalldirs
+                  $(srcdir)/mkinstalldirs $(bindir) $(datadir) \
+                                          $(libdir) $(infodir) \
+                                          $(mandir)
+
+     or, if you wish to support `DESTDIR',
+
+          # Make sure all installation directories (e.g. $(bindir))
+          # actually exist by making them if necessary.
+          installdirs: mkinstalldirs
+                  $(srcdir)/mkinstalldirs \
+                      $(DESTDIR)$(bindir) $(DESTDIR)$(datadir) \
+                      $(DESTDIR)$(libdir) $(DESTDIR)$(infodir) \
+                      $(DESTDIR)$(mandir)
+
+     This rule should not modify the directories where compilation is
+     done.  It should do nothing but create installation directories.
+
+   ---------- Footnotes ----------
+
+   (1) `texi2dvi' uses TeX to do the real work of formatting. TeX is
+not distributed with Texinfo.
+
+
+File: make.info,  Node: Install Command Categories,  Prev: Standard Targets,  Up: Makefile Conventions
+
+14.6 Install Command Categories
+===============================
+
+When writing the `install' target, you must classify all the commands
+into three categories: normal ones, "pre-installation" commands and
+"post-installation" commands.
+
+   Normal commands move files into their proper places, and set their
+modes.  They may not alter any files except the ones that come entirely
+from the package they belong to.
+
+   Pre-installation and post-installation commands may alter other
+files; in particular, they can edit global configuration files or data
+bases.
+
+   Pre-installation commands are typically executed before the normal
+commands, and post-installation commands are typically run after the
+normal commands.
+
+   The most common use for a post-installation command is to run
+`install-info'.  This cannot be done with a normal command, since it
+alters a file (the Info directory) which does not come entirely and
+solely from the package being installed.  It is a post-installation
+command because it needs to be done after the normal command which
+installs the package's Info files.
+
+   Most programs don't need any pre-installation commands, but we have
+the feature just in case it is needed.
+
+   To classify the commands in the `install' rule into these three
+categories, insert "category lines" among them.  A category line
+specifies the category for the commands that follow.
+
+   A category line consists of a tab and a reference to a special Make
+variable, plus an optional comment at the end.  There are three
+variables you can use, one for each category; the variable name
+specifies the category.  Category lines are no-ops in ordinary execution
+because these three Make variables are normally undefined (and you
+_should not_ define them in the makefile).
+
+   Here are the three possible category lines, each with a comment that
+explains what it means:
+
+             $(PRE_INSTALL)     # Pre-install commands follow.
+             $(POST_INSTALL)    # Post-install commands follow.
+             $(NORMAL_INSTALL)  # Normal commands follow.
+
+   If you don't use a category line at the beginning of the `install'
+rule, all the commands are classified as normal until the first category
+line.  If you don't use any category lines, all the commands are
+classified as normal.
+
+   These are the category lines for `uninstall':
+
+             $(PRE_UNINSTALL)     # Pre-uninstall commands follow.
+             $(POST_UNINSTALL)    # Post-uninstall commands follow.
+             $(NORMAL_UNINSTALL)  # Normal commands follow.
+
+   Typically, a pre-uninstall command would be used for deleting entries
+from the Info directory.
+
+   If the `install' or `uninstall' target has any dependencies which
+act as subroutines of installation, then you should start _each_
+dependency's commands with a category line, and start the main target's
+commands with a category line also.  This way, you can ensure that each
+command is placed in the right category regardless of which of the
+dependencies actually run.
+
+   Pre-installation and post-installation commands should not run any
+programs except for these:
+
+     [ basename bash cat chgrp chmod chown cmp cp dd diff echo
+     egrep expand expr false fgrep find getopt grep gunzip gzip
+     hostname install install-info kill ldconfig ln ls md5sum
+     mkdir mkfifo mknod mv printenv pwd rm rmdir sed sort tee
+     test touch true uname xargs yes
+
+   The reason for distinguishing the commands in this way is for the
+sake of making binary packages.  Typically a binary package contains
+all the executables and other files that need to be installed, and has
+its own method of installing them--so it does not need to run the normal
+installation commands.  But installing the binary package does need to
+execute the pre-installation and post-installation commands.
+
+   Programs to build binary packages work by extracting the
+pre-installation and post-installation commands.  Here is one way of
+extracting the pre-installation commands (the `-s' option to `make' is
+needed to silence messages about entering subdirectories):
+
+     make -s -n install -o all \
+           PRE_INSTALL=pre-install \
+           POST_INSTALL=post-install \
+           NORMAL_INSTALL=normal-install \
+       | gawk -f pre-install.awk
+
+where the file `pre-install.awk' could contain this:
+
+     $0 ~ /^(normal-install|post-install)[ \t]*$/ {on = 0}
+     on {print $0}
+     $0 ~ /^pre-install[ \t]*$/ {on = 1}
+
+
+File: make.info,  Node: Quick Reference,  Next: Error Messages,  Prev: Makefile Conventions,  Up: Top
+
+Appendix A Quick Reference
+**************************
+
+This appendix summarizes the directives, text manipulation functions,
+and special variables which GNU `make' understands.  *Note Special
+Targets::, *Note Catalogue of Implicit Rules: Catalogue of Rules, and
+*Note Summary of Options: Options Summary, for other summaries.
+
+   Here is a summary of the directives GNU `make' recognizes:
+
+`define VARIABLE'
+`endef'
+     Define a multi-line, recursively-expanded variable.
+     *Note Sequences::.
+
+`ifdef VARIABLE'
+`ifndef VARIABLE'
+`ifeq (A,B)'
+`ifeq "A" "B"'
+`ifeq 'A' 'B''
+`ifneq (A,B)'
+`ifneq "A" "B"'
+`ifneq 'A' 'B''
+`else'
+`endif'
+     Conditionally evaluate part of the makefile.
+     *Note Conditionals::.
+
+`include FILE'
+`-include FILE'
+`sinclude FILE'
+     Include another makefile.
+     *Note Including Other Makefiles: Include.
+
+`override VARIABLE = VALUE'
+`override VARIABLE := VALUE'
+`override VARIABLE += VALUE'
+`override VARIABLE ?= VALUE'
+`override define VARIABLE'
+`endef'
+     Define a variable, overriding any previous definition, even one
+     from the command line.
+     *Note The `override' Directive: Override Directive.
+
+`export'
+     Tell `make' to export all variables to child processes by default.
+     *Note Communicating Variables to a Sub-`make': Variables/Recursion.
+
+`export VARIABLE'
+`export VARIABLE = VALUE'
+`export VARIABLE := VALUE'
+`export VARIABLE += VALUE'
+`export VARIABLE ?= VALUE'
+`unexport VARIABLE'
+     Tell `make' whether or not to export a particular variable to child
+     processes.
+     *Note Communicating Variables to a Sub-`make': Variables/Recursion.
+
+`vpath PATTERN PATH'
+     Specify a search path for files matching a `%' pattern.
+     *Note The `vpath' Directive: Selective Search.
+
+`vpath PATTERN'
+     Remove all search paths previously specified for PATTERN.
+
+`vpath'
+     Remove all search paths previously specified in any `vpath'
+     directive.
+
+   Here is a summary of the built-in functions (*note Functions::):
+
+`$(subst FROM,TO,TEXT)'
+     Replace FROM with TO in TEXT.
+     *Note Functions for String Substitution and Analysis: Text
+     Functions.
+
+`$(patsubst PATTERN,REPLACEMENT,TEXT)'
+     Replace words matching PATTERN with REPLACEMENT in TEXT.
+     *Note Functions for String Substitution and Analysis: Text
+     Functions.
+
+`$(strip STRING)'
+     Remove excess whitespace characters from STRING.
+     *Note Functions for String Substitution and Analysis: Text
+     Functions.
+
+`$(findstring FIND,TEXT)'
+     Locate FIND in TEXT.
+     *Note Functions for String Substitution and Analysis: Text
+     Functions.
+
+`$(filter PATTERN...,TEXT)'
+     Select words in TEXT that match one of the PATTERN words.
+     *Note Functions for String Substitution and Analysis: Text
+     Functions.
+
+`$(filter-out PATTERN...,TEXT)'
+     Select words in TEXT that _do not_ match any of the PATTERN words.
+     *Note Functions for String Substitution and Analysis: Text
+     Functions.
+
+`$(sort LIST)'
+     Sort the words in LIST lexicographically, removing duplicates.
+     *Note Functions for String Substitution and Analysis: Text
+     Functions.
+
+`$(word N,TEXT)'
+     Extract the Nth word (one-origin) of TEXT.
+     *Note Functions for String Substitution and Analysis: Text
+     Functions.
+
+`$(words TEXT)'
+     Count the number of words in TEXT.
+     *Note Functions for String Substitution and Analysis: Text
+     Functions.
+
+`$(wordlist S,E,TEXT)'
+     Returns the list of words in TEXT from S to E.
+     *Note Functions for String Substitution and Analysis: Text
+     Functions.
+
+`$(firstword NAMES...)'
+     Extract the first word of NAMES.
+     *Note Functions for String Substitution and Analysis: Text
+     Functions.
+
+`$(lastword NAMES...)'
+     Extract the last word of NAMES.
+     *Note Functions for String Substitution and Analysis: Text
+     Functions.
+
+`$(dir NAMES...)'
+     Extract the directory part of each file name.
+     *Note Functions for File Names: File Name Functions.
+
+`$(notdir NAMES...)'
+     Extract the non-directory part of each file name.
+     *Note Functions for File Names: File Name Functions.
+
+`$(suffix NAMES...)'
+     Extract the suffix (the last `.' and following characters) of each
+     file name.
+     *Note Functions for File Names: File Name Functions.
+
+`$(basename NAMES...)'
+     Extract the base name (name without suffix) of each file name.
+     *Note Functions for File Names: File Name Functions.
+
+`$(addsuffix SUFFIX,NAMES...)'
+     Append SUFFIX to each word in NAMES.
+     *Note Functions for File Names: File Name Functions.
+
+`$(addprefix PREFIX,NAMES...)'
+     Prepend PREFIX to each word in NAMES.
+     *Note Functions for File Names: File Name Functions.
+
+`$(join LIST1,LIST2)'
+     Join two parallel lists of words.
+     *Note Functions for File Names: File Name Functions.
+
+`$(wildcard PATTERN...)'
+     Find file names matching a shell file name pattern (_not_ a `%'
+     pattern).
+     *Note The Function `wildcard': Wildcard Function.
+
+`$(realpath NAMES...)'
+     For each file name in NAMES, expand to an absolute name that does
+     not contain any `.', `..', nor symlinks.
+     *Note Functions for File Names: File Name Functions.
+
+`$(abspath NAMES...)'
+     For each file name in NAMES, expand to an absolute name that does
+     not contain any `.' or `..' components, but preserves symlinks.
+     *Note Functions for File Names: File Name Functions.
+
+`$(error TEXT...)'
+     When this function is evaluated, `make' generates a fatal error
+     with the message TEXT.
+     *Note Functions That Control Make: Make Control Functions.
+
+`$(warning TEXT...)'
+     When this function is evaluated, `make' generates a warning with
+     the message TEXT.
+     *Note Functions That Control Make: Make Control Functions.
+
+`$(shell COMMAND)'
+     Execute a shell command and return its output.
+     *Note The `shell' Function: Shell Function.
+
+`$(origin VARIABLE)'
+     Return a string describing how the `make' variable VARIABLE was
+     defined.
+     *Note The `origin' Function: Origin Function.
+
+`$(flavor VARIABLE)'
+     Return a string describing the flavor of the `make' variable
+     VARIABLE.
+     *Note The `flavor' Function: Flavor Function.
+
+`$(foreach VAR,WORDS,TEXT)'
+     Evaluate TEXT with VAR bound to each word in WORDS, and
+     concatenate the results.
+     *Note The `foreach' Function: Foreach Function.
+
+`$(call VAR,PARAM,...)'
+     Evaluate the variable VAR replacing any references to `$(1)',
+     `$(2)' with the first, second, etc. PARAM values.
+     *Note The `call' Function: Call Function.
+
+`$(eval TEXT)'
+     Evaluate TEXT then read the results as makefile commands.  Expands
+     to the empty string.
+     *Note The `eval' Function: Eval Function.
+
+`$(value VAR)'
+     Evaluates to the contents of the variable VAR, with no expansion
+     performed on it.
+     *Note The `value' Function: Value Function.
+
+   Here is a summary of the automatic variables.  *Note Automatic
+Variables::, for full information.
+
+`$@'
+     The file name of the target.
+
+`$%'
+     The target member name, when the target is an archive member.
+
+`$<'
+     The name of the first prerequisite.
+
+`$?'
+     The names of all the prerequisites that are newer than the target,
+     with spaces between them.  For prerequisites which are archive
+     members, only the member named is used (*note Archives::).
+
+`$^'
+`$+'
+     The names of all the prerequisites, with spaces between them.  For
+     prerequisites which are archive members, only the member named is
+     used (*note Archives::).  The value of `$^' omits duplicate
+     prerequisites, while `$+' retains them and preserves their order.
+
+`$*'
+     The stem with which an implicit rule matches (*note How Patterns
+     Match: Pattern Match.).
+
+`$(@D)'
+`$(@F)'
+     The directory part and the file-within-directory part of `$@'.
+
+`$(*D)'
+`$(*F)'
+     The directory part and the file-within-directory part of `$*'.
+
+`$(%D)'
+`$(%F)'
+     The directory part and the file-within-directory part of `$%'.
+
+`$(<D)'
+`$(<F)'
+     The directory part and the file-within-directory part of `$<'.
+
+`$(^D)'
+`$(^F)'
+     The directory part and the file-within-directory part of `$^'.
+
+`$(+D)'
+`$(+F)'
+     The directory part and the file-within-directory part of `$+'.
+
+`$(?D)'
+`$(?F)'
+     The directory part and the file-within-directory part of `$?'.
+
+   These variables are used specially by GNU `make':
+
+`MAKEFILES'
+     Makefiles to be read on every invocation of `make'.
+     *Note The Variable `MAKEFILES': MAKEFILES Variable.
+
+`VPATH'
+     Directory search path for files not found in the current directory.
+     *Note `VPATH' Search Path for All Prerequisites: General Search.
+
+`SHELL'
+     The name of the system default command interpreter, usually
+     `/bin/sh'.  You can set `SHELL' in the makefile to change the
+     shell used to run commands.  *Note Command Execution: Execution.
+     The `SHELL' variable is handled specially when importing from and
+     exporting to the environment.  *Note Choosing the Shell::.
+
+`MAKESHELL'
+     On MS-DOS only, the name of the command interpreter that is to be
+     used by `make'.  This value takes precedence over the value of
+     `SHELL'.  *Note MAKESHELL variable: Execution.
+
+`MAKE'
+     The name with which `make' was invoked.  Using this variable in
+     commands has special meaning.  *Note How the `MAKE' Variable
+     Works: MAKE Variable.
+
+`MAKELEVEL'
+     The number of levels of recursion (sub-`make's).
+     *Note Variables/Recursion::.
+
+`MAKEFLAGS'
+     The flags given to `make'.  You can set this in the environment or
+     a makefile to set flags.
+     *Note Communicating Options to a Sub-`make': Options/Recursion.
+
+     It is _never_ appropriate to use `MAKEFLAGS' directly on a command
+     line: its contents may not be quoted correctly for use in the
+     shell.  Always allow recursive `make''s to obtain these values
+     through the environment from its parent.
+
+`MAKECMDGOALS'
+     The targets given to `make' on the command line.  Setting this
+     variable has no effect on the operation of `make'.
+     *Note Arguments to Specify the Goals: Goals.
+
+`CURDIR'
+     Set to the pathname of the current working directory (after all
+     `-C' options are processed, if any).  Setting this variable has no
+     effect on the operation of `make'.
+     *Note Recursive Use of `make': Recursion.
+
+`SUFFIXES'
+     The default list of suffixes before `make' reads any makefiles.
+
+`.LIBPATTERNS'
+     Defines the naming of the libraries `make' searches for, and their
+     order.
+     *Note Directory Search for Link Libraries: Libraries/Search.
+
+
+File: make.info,  Node: Error Messages,  Next: Complex Makefile,  Prev: Quick Reference,  Up: Top
+
+Appendix B Errors Generated by Make
+***********************************
+
+Here is a list of the more common errors you might see generated by
+`make', and some information about what they mean and how to fix them.
+
+   Sometimes `make' errors are not fatal, especially in the presence of
+a `-' prefix on a command script line, or the `-k' command line option.
+Errors that are fatal are prefixed with the string `***'.
+
+   Error messages are all either prefixed with the name of the program
+(usually `make'), or, if the error is found in a makefile, the name of
+the file and linenumber containing the problem.
+
+   In the table below, these common prefixes are left off.
+
+`[FOO] Error NN'
+`[FOO] SIGNAL DESCRIPTION'
+     These errors are not really `make' errors at all.  They mean that a
+     program that `make' invoked as part of a command script returned a
+     non-0 error code (`Error NN'), which `make' interprets as failure,
+     or it exited in some other abnormal fashion (with a signal of some
+     type).  *Note Errors in Commands: Errors.
+
+     If no `***' is attached to the message, then the subprocess failed
+     but the rule in the makefile was prefixed with the `-' special
+     character, so `make' ignored the error.
+
+`missing separator.  Stop.'
+`missing separator (did you mean TAB instead of 8 spaces?).  Stop.'
+     This means that `make' could not understand much of anything about
+     the command line it just read.  GNU `make' looks for various kinds
+     of separators (`:', `=', TAB characters, etc.) to help it decide
+     what kind of commandline it's seeing.  This means it couldn't find
+     a valid one.
+
+     One of the most common reasons for this message is that you (or
+     perhaps your oh-so-helpful editor, as is the case with many
+     MS-Windows editors) have attempted to indent your command scripts
+     with spaces instead of a TAB character.  In this case, `make' will
+     use the second form of the error above.  Remember that every line
+     in the command script must begin with a TAB character.  Eight
+     spaces do not count.  *Note Rule Syntax::.
+
+`commands commence before first target.  Stop.'
+`missing rule before commands.  Stop.'
+     This means the first thing in the makefile seems to be part of a
+     command script: it begins with a TAB character and doesn't appear
+     to be a legal `make' command (such as a variable assignment).
+     Command scripts must always be associated with a target.
+
+     The second form is generated if the line has a semicolon as the
+     first non-whitespace character; `make' interprets this to mean you
+     left out the "target: prerequisite" section of a rule.  *Note Rule
+     Syntax::.
+
+`No rule to make target `XXX'.'
+`No rule to make target `XXX', needed by `YYY'.'
+     This means that `make' decided it needed to build a target, but
+     then couldn't find any instructions in the makefile on how to do
+     that, either explicit or implicit (including in the default rules
+     database).
+
+     If you want that file to be built, you will need to add a rule to
+     your makefile describing how that target can be built.  Other
+     possible sources of this problem are typos in the makefile (if
+     that filename is wrong) or a corrupted source tree (if that file
+     is not supposed to be built, but rather only a prerequisite).
+
+`No targets specified and no makefile found.  Stop.'
+`No targets.  Stop.'
+     The former means that you didn't provide any targets to be built
+     on the command line, and `make' couldn't find any makefiles to
+     read in.  The latter means that some makefile was found, but it
+     didn't contain any default goal and none was given on the command
+     line.  GNU `make' has nothing to do in these situations.  *Note
+     Arguments to Specify the Makefile: Makefile Arguments.
+
+`Makefile `XXX' was not found.'
+`Included makefile `XXX' was not found.'
+     A makefile specified on the command line (first form) or included
+     (second form) was not found.
+
+`warning: overriding commands for target `XXX''
+`warning: ignoring old commands for target `XXX''
+     GNU `make' allows commands to be specified only once per target
+     (except for double-colon rules).  If you give commands for a target
+     which already has been defined to have commands, this warning is
+     issued and the second set of commands will overwrite the first set.
+     *Note Multiple Rules for One Target: Multiple Rules.
+
+`Circular XXX <- YYY dependency dropped.'
+     This means that `make' detected a loop in the dependency graph:
+     after tracing the prerequisite YYY of target XXX, and its
+     prerequisites, etc., one of them depended on XXX again.
+
+`Recursive variable `XXX' references itself (eventually).  Stop.'
+     This means you've defined a normal (recursive) `make' variable XXX
+     that, when it's expanded, will refer to itself (XXX).  This is not
+     allowed; either use simply-expanded variables (`:=') or use the
+     append operator (`+=').  *Note How to Use Variables: Using
+     Variables.
+
+`Unterminated variable reference.  Stop.'
+     This means you forgot to provide the proper closing parenthesis or
+     brace in your variable or function reference.
+
+`insufficient arguments to function `XXX'.  Stop.'
+     This means you haven't provided the requisite number of arguments
+     for this function.  See the documentation of the function for a
+     description of its arguments.  *Note Functions for Transforming
+     Text: Functions.
+
+`missing target pattern.  Stop.'
+`multiple target patterns.  Stop.'
+`target pattern contains no `%'.  Stop.'
+`mixed implicit and static pattern rules.  Stop.'
+     These are generated for malformed static pattern rules.  The first
+     means there's no pattern in the target section of the rule; the
+     second means there are multiple patterns in the target section;
+     the third means the target doesn't contain a pattern character
+     (`%'); and the fourth means that all three parts of the static
+     pattern rule contain pattern characters (`%')-only the first two
+     parts should.  *Note Syntax of Static Pattern Rules: Static Usage.
+
+`warning: -jN forced in submake: disabling jobserver mode.'
+     This warning and the next are generated if `make' detects error
+     conditions related to parallel processing on systems where
+     sub-`make's can communicate (*note Communicating Options to a
+     Sub-`make': Options/Recursion.).  This warning is generated if a
+     recursive invocation of a `make' process is forced to have `-jN'
+     in its argument list (where N is greater than one).  This could
+     happen, for example, if you set the `MAKE' environment variable to
+     `make -j2'.  In this case, the sub-`make' doesn't communicate with
+     other `make' processes and will simply pretend it has two jobs of
+     its own.
+
+`warning: jobserver unavailable: using -j1.  Add `+' to parent make rule.'
+     In order for `make' processes to communicate, the parent will pass
+     information to the child.  Since this could result in problems if
+     the child process isn't actually a `make', the parent will only do
+     this if it thinks the child is a `make'.  The parent uses the
+     normal algorithms to determine this (*note How the `MAKE' Variable
+     Works: MAKE Variable.).  If the makefile is constructed such that
+     the parent doesn't know the child is a `make' process, then the
+     child will receive only part of the information necessary.  In
+     this case, the child will generate this warning message and
+     proceed with its build in a sequential manner.
+
+
+
+File: make.info,  Node: Complex Makefile,  Next: GNU Free Documentation License,  Prev: Error Messages,  Up: Top
+
+Appendix C Complex Makefile Example
+***********************************
+
+Here is the makefile for the GNU `tar' program.  This is a moderately
+complex makefile.
+
+   Because it is the first target, the default goal is `all'.  An
+interesting feature of this makefile is that `testpad.h' is a source
+file automatically created by the `testpad' program, itself compiled
+from `testpad.c'.
+
+   If you type `make' or `make all', then `make' creates the `tar'
+executable, the `rmt' daemon that provides remote tape access, and the
+`tar.info' Info file.
+
+   If you type `make install', then `make' not only creates `tar',
+`rmt', and `tar.info', but also installs them.
+
+   If you type `make clean', then `make' removes the `.o' files, and
+the `tar', `rmt', `testpad', `testpad.h', and `core' files.
+
+   If you type `make distclean', then `make' not only removes the same
+files as does `make clean' but also the `TAGS', `Makefile', and
+`config.status' files.  (Although it is not evident, this makefile (and
+`config.status') is generated by the user with the `configure' program,
+which is provided in the `tar' distribution, but is not shown here.)
+
+   If you type `make realclean', then `make' removes the same files as
+does `make distclean' and also removes the Info files generated from
+`tar.texinfo'.
+
+   In addition, there are targets `shar' and `dist' that create
+distribution kits.
+
+     # Generated automatically from Makefile.in by configure.
+     # Un*x Makefile for GNU tar program.
+     # Copyright (C) 1991 Free Software Foundation, Inc.
+
+     # This program is free software; you can redistribute
+     # it and/or modify it under the terms of the GNU
+     # General Public License ...
+     ...
+     ...
+
+     SHELL = /bin/sh
+
+     #### Start of system configuration section. ####
+
+     srcdir = .
+
+     # If you use gcc, you should either run the
+     # fixincludes script that comes with it or else use
+     # gcc with the -traditional option.  Otherwise ioctl
+     # calls will be compiled incorrectly on some systems.
+     CC = gcc -O
+     YACC = bison -y
+     INSTALL = /usr/local/bin/install -c
+     INSTALLDATA = /usr/local/bin/install -c -m 644
+
+     # Things you might add to DEFS:
+     # -DSTDC_HEADERS        If you have ANSI C headers and
+     #                       libraries.
+     # -DPOSIX               If you have POSIX.1 headers and
+     #                       libraries.
+     # -DBSD42               If you have sys/dir.h (unless
+     #                       you use -DPOSIX), sys/file.h,
+     #                       and st_blocks in `struct stat'.
+     # -DUSG                 If you have System V/ANSI C
+     #                       string and memory functions
+     #                       and headers, sys/sysmacros.h,
+     #                       fcntl.h, getcwd, no valloc,
+     #                       and ndir.h (unless
+     #                       you use -DDIRENT).
+     # -DNO_MEMORY_H         If USG or STDC_HEADERS but do not
+     #                       include memory.h.
+     # -DDIRENT              If USG and you have dirent.h
+     #                       instead of ndir.h.
+     # -DSIGTYPE=int         If your signal handlers
+     #                       return int, not void.
+     # -DNO_MTIO             If you lack sys/mtio.h
+     #                       (magtape ioctls).
+     # -DNO_REMOTE           If you do not have a remote shell
+     #                       or rexec.
+     # -DUSE_REXEC           To use rexec for remote tape
+     #                       operations instead of
+     #                       forking rsh or remsh.
+     # -DVPRINTF_MISSING     If you lack vprintf function
+     #                       (but have _doprnt).
+     # -DDOPRNT_MISSING      If you lack _doprnt function.
+     #                       Also need to define
+     #                       -DVPRINTF_MISSING.
+     # -DFTIME_MISSING       If you lack ftime system call.
+     # -DSTRSTR_MISSING      If you lack strstr function.
+     # -DVALLOC_MISSING      If you lack valloc function.
+     # -DMKDIR_MISSING       If you lack mkdir and
+     #                       rmdir system calls.
+     # -DRENAME_MISSING      If you lack rename system call.
+     # -DFTRUNCATE_MISSING   If you lack ftruncate
+     #                       system call.
+     # -DV7                  On Version 7 Unix (not
+     #                       tested in a long time).
+     # -DEMUL_OPEN3          If you lack a 3-argument version
+     #                       of open, and want to emulate it
+     #                       with system calls you do have.
+     # -DNO_OPEN3            If you lack the 3-argument open
+     #                       and want to disable the tar -k
+     #                       option instead of emulating open.
+     # -DXENIX               If you have sys/inode.h
+     #                       and need it 94 to be included.
+
+     DEFS =  -DSIGTYPE=int -DDIRENT -DSTRSTR_MISSING \
+             -DVPRINTF_MISSING -DBSD42
+     # Set this to rtapelib.o unless you defined NO_REMOTE,
+     # in which case make it empty.
+     RTAPELIB = rtapelib.o
+     LIBS =
+     DEF_AR_FILE = /dev/rmt8
+     DEFBLOCKING = 20
+
+     CDEBUG = -g
+     CFLAGS = $(CDEBUG) -I. -I$(srcdir) $(DEFS) \
+             -DDEF_AR_FILE=\"$(DEF_AR_FILE)\" \
+             -DDEFBLOCKING=$(DEFBLOCKING)
+     LDFLAGS = -g
+
+     prefix = /usr/local
+     # Prefix for each installed program,
+     # normally empty or `g'.
+     binprefix =
+
+     # The directory to install tar in.
+     bindir = $(prefix)/bin
+
+     # The directory to install the info files in.
+     infodir = $(prefix)/info
+
+     #### End of system configuration section. ####
+
+     SRC1 =  tar.c create.c extract.c buffer.c \
+             getoldopt.c update.c gnu.c mangle.c
+     SRC2 =  version.c list.c names.c diffarch.c \
+             port.c wildmat.c getopt.c
+     SRC3 =  getopt1.c regex.c getdate.y
+     SRCS =  $(SRC1) $(SRC2) $(SRC3)
+     OBJ1 =  tar.o create.o extract.o buffer.o \
+             getoldopt.o update.o gnu.o mangle.o
+     OBJ2 =  version.o list.o names.o diffarch.o \
+             port.o wildmat.o getopt.o
+     OBJ3 =  getopt1.o regex.o getdate.o $(RTAPELIB)
+     OBJS =  $(OBJ1) $(OBJ2) $(OBJ3)
+     AUX =   README COPYING ChangeLog Makefile.in  \
+             makefile.pc configure configure.in \
+             tar.texinfo tar.info* texinfo.tex \
+             tar.h port.h open3.h getopt.h regex.h \
+             rmt.h rmt.c rtapelib.c alloca.c \
+             msd_dir.h msd_dir.c tcexparg.c \
+             level-0 level-1 backup-specs testpad.c
+
+     .PHONY: all
+     all:    tar rmt tar.info
+
+     .PHONY: tar
+     tar:    $(OBJS)
+             $(CC) $(LDFLAGS) -o $@ $(OBJS) $(LIBS)
+
+     rmt:    rmt.c
+             $(CC) $(CFLAGS) $(LDFLAGS) -o $@ rmt.c
+
+     tar.info: tar.texinfo
+             makeinfo tar.texinfo
+
+     .PHONY: install
+     install: all
+             $(INSTALL) tar $(bindir)/$(binprefix)tar
+             -test ! -f rmt || $(INSTALL) rmt /etc/rmt
+             $(INSTALLDATA) $(srcdir)/tar.info* $(infodir)
+
+     $(OBJS): tar.h port.h testpad.h
+     regex.o buffer.o tar.o: regex.h
+     # getdate.y has 8 shift/reduce conflicts.
+
+     testpad.h: testpad
+             ./testpad
+
+     testpad: testpad.o
+             $(CC) -o $@ testpad.o
+
+     TAGS:   $(SRCS)
+             etags $(SRCS)
+
+     .PHONY: clean
+     clean:
+             rm -f *.o tar rmt testpad testpad.h core
+
+     .PHONY: distclean
+     distclean: clean
+             rm -f TAGS Makefile config.status
+
+     .PHONY: realclean
+     realclean: distclean
+             rm -f tar.info*
+
+     .PHONY: shar
+     shar: $(SRCS) $(AUX)
+             shar $(SRCS) $(AUX) | compress \
+               > tar-`sed -e '/version_string/!d' \
+                          -e 's/[^0-9.]*\([0-9.]*\).*/\1/' \
+                          -e q
+                          version.c`.shar.Z
+
+     .PHONY: dist
+     dist: $(SRCS) $(AUX)
+             echo tar-`sed \
+                  -e '/version_string/!d' \
+                  -e 's/[^0-9.]*\([0-9.]*\).*/\1/' \
+                  -e q
+                  version.c` > .fname
+             -rm -rf `cat .fname`
+             mkdir `cat .fname`
+             ln $(SRCS) $(AUX) `cat .fname`
+             tar chZf `cat .fname`.tar.Z `cat .fname`
+             -rm -rf `cat .fname` .fname
+
+     tar.zoo: $(SRCS) $(AUX)
+             -rm -rf tmp.dir
+             -mkdir tmp.dir
+             -rm tar.zoo
+             for X in $(SRCS) $(AUX) ; do \
+                 echo $$X ; \
+                 sed 's/$$/^M/' $$X \
+                 > tmp.dir/$$X ; done
+             cd tmp.dir ; zoo aM ../tar.zoo *
+             -rm -rf tmp.dir
+
+
+File: make.info,  Node: GNU Free Documentation License,  Next: Concept Index,  Prev: Complex Makefile,  Up: Top
+
+Appendix D GNU Free Documentation License
+*****************************************
+
+                      Version 1.2, November 2002
+
+     Copyright (C) 2000,2001,2002 Free Software Foundation, Inc.
+     51 Franklin St, Fifth Floor, Boston, MA  02110-1301, USA
+
+     Everyone is permitted to copy and distribute verbatim copies
+     of this license document, but changing it is not allowed.
+
+  0. PREAMBLE
+
+     The purpose of this License is to make a manual, textbook, or other
+     functional and useful document "free" in the sense of freedom: to
+     assure everyone the effective freedom to copy and redistribute it,
+     with or without modifying it, either commercially or
+     noncommercially.  Secondarily, this License preserves for the
+     author and publisher a way to get credit for their work, while not
+     being considered responsible for modifications made by others.
+
+     This License is a kind of "copyleft", which means that derivative
+     works of the document must themselves be free in the same sense.
+     It complements the GNU General Public License, which is a copyleft
+     license designed for free software.
+
+     We have designed this License in order to use it for manuals for
+     free software, because free software needs free documentation: a
+     free program should come with manuals providing the same freedoms
+     that the software does.  But this License is not limited to
+     software manuals; it can be used for any textual work, regardless
+     of subject matter or whether it is published as a printed book.
+     We recommend this License principally for works whose purpose is
+     instruction or reference.
+
+  1. APPLICABILITY AND DEFINITIONS
+
+     This License applies to any manual or other work, in any medium,
+     that contains a notice placed by the copyright holder saying it
+     can be distributed under the terms of this License.  Such a notice
+     grants a world-wide, royalty-free license, unlimited in duration,
+     to use that work under the conditions stated herein.  The
+     "Document", below, refers to any such manual or work.  Any member
+     of the public is a licensee, and is addressed as "you".  You
+     accept the license if you copy, modify or distribute the work in a
+     way requiring permission under copyright law.
+
+     A "Modified Version" of the Document means any work containing the
+     Document or a portion of it, either copied verbatim, or with
+     modifications and/or translated into another language.
+
+     A "Secondary Section" is a named appendix or a front-matter section
+     of the Document that deals exclusively with the relationship of the
+     publishers or authors of the Document to the Document's overall
+     subject (or to related matters) and contains nothing that could
+     fall directly within that overall subject.  (Thus, if the Document
+     is in part a textbook of mathematics, a Secondary Section may not
+     explain any mathematics.)  The relationship could be a matter of
+     historical connection with the subject or with related matters, or
+     of legal, commercial, philosophical, ethical or political position
+     regarding them.
+
+     The "Invariant Sections" are certain Secondary Sections whose
+     titles are designated, as being those of Invariant Sections, in
+     the notice that says that the Document is released under this
+     License.  If a section does not fit the above definition of
+     Secondary then it is not allowed to be designated as Invariant.
+     The Document may contain zero Invariant Sections.  If the Document
+     does not identify any Invariant Sections then there are none.
+
+     The "Cover Texts" are certain short passages of text that are
+     listed, as Front-Cover Texts or Back-Cover Texts, in the notice
+     that says that the Document is released under this License.  A
+     Front-Cover Text may be at most 5 words, and a Back-Cover Text may
+     be at most 25 words.
+
+     A "Transparent" copy of the Document means a machine-readable copy,
+     represented in a format whose specification is available to the
+     general public, that is suitable for revising the document
+     straightforwardly with generic text editors or (for images
+     composed of pixels) generic paint programs or (for drawings) some
+     widely available drawing editor, and that is suitable for input to
+     text formatters or for automatic translation to a variety of
+     formats suitable for input to text formatters.  A copy made in an
+     otherwise Transparent file format whose markup, or absence of
+     markup, has been arranged to thwart or discourage subsequent
+     modification by readers is not Transparent.  An image format is
+     not Transparent if used for any substantial amount of text.  A
+     copy that is not "Transparent" is called "Opaque".
+
+     Examples of suitable formats for Transparent copies include plain
+     ASCII without markup, Texinfo input format, LaTeX input format,
+     SGML or XML using a publicly available DTD, and
+     standard-conforming simple HTML, PostScript or PDF designed for
+     human modification.  Examples of transparent image formats include
+     PNG, XCF and JPG.  Opaque formats include proprietary formats that
+     can be read and edited only by proprietary word processors, SGML or
+     XML for which the DTD and/or processing tools are not generally
+     available, and the machine-generated HTML, PostScript or PDF
+     produced by some word processors for output purposes only.
+
+     The "Title Page" means, for a printed book, the title page itself,
+     plus such following pages as are needed to hold, legibly, the
+     material this License requires to appear in the title page.  For
+     works in formats which do not have any title page as such, "Title
+     Page" means the text near the most prominent appearance of the
+     work's title, preceding the beginning of the body of the text.
+
+     A section "Entitled XYZ" means a named subunit of the Document
+     whose title either is precisely XYZ or contains XYZ in parentheses
+     following text that translates XYZ in another language.  (Here XYZ
+     stands for a specific section name mentioned below, such as
+     "Acknowledgements", "Dedications", "Endorsements", or "History".)
+     To "Preserve the Title" of such a section when you modify the
+     Document means that it remains a section "Entitled XYZ" according
+     to this definition.
+
+     The Document may include Warranty Disclaimers next to the notice
+     which states that this License applies to the Document.  These
+     Warranty Disclaimers are considered to be included by reference in
+     this License, but only as regards disclaiming warranties: any other
+     implication that these Warranty Disclaimers may have is void and
+     has no effect on the meaning of this License.
+
+  2. VERBATIM COPYING
+
+     You may copy and distribute the Document in any medium, either
+     commercially or noncommercially, provided that this License, the
+     copyright notices, and the license notice saying this License
+     applies to the Document are reproduced in all copies, and that you
+     add no other conditions whatsoever to those of this License.  You
+     may not use technical measures to obstruct or control the reading
+     or further copying of the copies you make or distribute.  However,
+     you may accept compensation in exchange for copies.  If you
+     distribute a large enough number of copies you must also follow
+     the conditions in section 3.
+
+     You may also lend copies, under the same conditions stated above,
+     and you may publicly display copies.
+
+  3. COPYING IN QUANTITY
+
+     If you publish printed copies (or copies in media that commonly
+     have printed covers) of the Document, numbering more than 100, and
+     the Document's license notice requires Cover Texts, you must
+     enclose the copies in covers that carry, clearly and legibly, all
+     these Cover Texts: Front-Cover Texts on the front cover, and
+     Back-Cover Texts on the back cover.  Both covers must also clearly
+     and legibly identify you as the publisher of these copies.  The
+     front cover must present the full title with all words of the
+     title equally prominent and visible.  You may add other material
+     on the covers in addition.  Copying with changes limited to the
+     covers, as long as they preserve the title of the Document and
+     satisfy these conditions, can be treated as verbatim copying in
+     other respects.
+
+     If the required texts for either cover are too voluminous to fit
+     legibly, you should put the first ones listed (as many as fit
+     reasonably) on the actual cover, and continue the rest onto
+     adjacent pages.
+
+     If you publish or distribute Opaque copies of the Document
+     numbering more than 100, you must either include a
+     machine-readable Transparent copy along with each Opaque copy, or
+     state in or with each Opaque copy a computer-network location from
+     which the general network-using public has access to download
+     using public-standard network protocols a complete Transparent
+     copy of the Document, free of added material.  If you use the
+     latter option, you must take reasonably prudent steps, when you
+     begin distribution of Opaque copies in quantity, to ensure that
+     this Transparent copy will remain thus accessible at the stated
+     location until at least one year after the last time you
+     distribute an Opaque copy (directly or through your agents or
+     retailers) of that edition to the public.
+
+     It is requested, but not required, that you contact the authors of
+     the Document well before redistributing any large number of
+     copies, to give them a chance to provide you with an updated
+     version of the Document.
+
+  4. MODIFICATIONS
+
+     You may copy and distribute a Modified Version of the Document
+     under the conditions of sections 2 and 3 above, provided that you
+     release the Modified Version under precisely this License, with
+     the Modified Version filling the role of the Document, thus
+     licensing distribution and modification of the Modified Version to
+     whoever possesses a copy of it.  In addition, you must do these
+     things in the Modified Version:
+
+       A. Use in the Title Page (and on the covers, if any) a title
+          distinct from that of the Document, and from those of
+          previous versions (which should, if there were any, be listed
+          in the History section of the Document).  You may use the
+          same title as a previous version if the original publisher of
+          that version gives permission.
+
+       B. List on the Title Page, as authors, one or more persons or
+          entities responsible for authorship of the modifications in
+          the Modified Version, together with at least five of the
+          principal authors of the Document (all of its principal
+          authors, if it has fewer than five), unless they release you
+          from this requirement.
+
+       C. State on the Title page the name of the publisher of the
+          Modified Version, as the publisher.
+
+       D. Preserve all the copyright notices of the Document.
+
+       E. Add an appropriate copyright notice for your modifications
+          adjacent to the other copyright notices.
+
+       F. Include, immediately after the copyright notices, a license
+          notice giving the public permission to use the Modified
+          Version under the terms of this License, in the form shown in
+          the Addendum below.
+
+       G. Preserve in that license notice the full lists of Invariant
+          Sections and required Cover Texts given in the Document's
+          license notice.
+
+       H. Include an unaltered copy of this License.
+
+       I. Preserve the section Entitled "History", Preserve its Title,
+          and add to it an item stating at least the title, year, new
+          authors, and publisher of the Modified Version as given on
+          the Title Page.  If there is no section Entitled "History" in
+          the Document, create one stating the title, year, authors,
+          and publisher of the Document as given on its Title Page,
+          then add an item describing the Modified Version as stated in
+          the previous sentence.
+
+       J. Preserve the network location, if any, given in the Document
+          for public access to a Transparent copy of the Document, and
+          likewise the network locations given in the Document for
+          previous versions it was based on.  These may be placed in
+          the "History" section.  You may omit a network location for a
+          work that was published at least four years before the
+          Document itself, or if the original publisher of the version
+          it refers to gives permission.
+
+       K. For any section Entitled "Acknowledgements" or "Dedications",
+          Preserve the Title of the section, and preserve in the
+          section all the substance and tone of each of the contributor
+          acknowledgements and/or dedications given therein.
+
+       L. Preserve all the Invariant Sections of the Document,
+          unaltered in their text and in their titles.  Section numbers
+          or the equivalent are not considered part of the section
+          titles.
+
+       M. Delete any section Entitled "Endorsements".  Such a section
+          may not be included in the Modified Version.
+
+       N. Do not retitle any existing section to be Entitled
+          "Endorsements" or to conflict in title with any Invariant
+          Section.
+
+       O. Preserve any Warranty Disclaimers.
+
+     If the Modified Version includes new front-matter sections or
+     appendices that qualify as Secondary Sections and contain no
+     material copied from the Document, you may at your option
+     designate some or all of these sections as invariant.  To do this,
+     add their titles to the list of Invariant Sections in the Modified
+     Version's license notice.  These titles must be distinct from any
+     other section titles.
+
+     You may add a section Entitled "Endorsements", provided it contains
+     nothing but endorsements of your Modified Version by various
+     parties--for example, statements of peer review or that the text
+     has been approved by an organization as the authoritative
+     definition of a standard.
+
+     You may add a passage of up to five words as a Front-Cover Text,
+     and a passage of up to 25 words as a Back-Cover Text, to the end
+     of the list of Cover Texts in the Modified Version.  Only one
+     passage of Front-Cover Text and one of Back-Cover Text may be
+     added by (or through arrangements made by) any one entity.  If the
+     Document already includes a cover text for the same cover,
+     previously added by you or by arrangement made by the same entity
+     you are acting on behalf of, you may not add another; but you may
+     replace the old one, on explicit permission from the previous
+     publisher that added the old one.
+
+     The author(s) and publisher(s) of the Document do not by this
+     License give permission to use their names for publicity for or to
+     assert or imply endorsement of any Modified Version.
+
+  5. COMBINING DOCUMENTS
+
+     You may combine the Document with other documents released under
+     this License, under the terms defined in section 4 above for
+     modified versions, provided that you include in the combination
+     all of the Invariant Sections of all of the original documents,
+     unmodified, and list them all as Invariant Sections of your
+     combined work in its license notice, and that you preserve all
+     their Warranty Disclaimers.
+
+     The combined work need only contain one copy of this License, and
+     multiple identical Invariant Sections may be replaced with a single
+     copy.  If there are multiple Invariant Sections with the same name
+     but different contents, make the title of each such section unique
+     by adding at the end of it, in parentheses, the name of the
+     original author or publisher of that section if known, or else a
+     unique number.  Make the same adjustment to the section titles in
+     the list of Invariant Sections in the license notice of the
+     combined work.
+
+     In the combination, you must combine any sections Entitled
+     "History" in the various original documents, forming one section
+     Entitled "History"; likewise combine any sections Entitled
+     "Acknowledgements", and any sections Entitled "Dedications".  You
+     must delete all sections Entitled "Endorsements."
+
+  6. COLLECTIONS OF DOCUMENTS
+
+     You may make a collection consisting of the Document and other
+     documents released under this License, and replace the individual
+     copies of this License in the various documents with a single copy
+     that is included in the collection, provided that you follow the
+     rules of this License for verbatim copying of each of the
+     documents in all other respects.
+
+     You may extract a single document from such a collection, and
+     distribute it individually under this License, provided you insert
+     a copy of this License into the extracted document, and follow
+     this License in all other respects regarding verbatim copying of
+     that document.
+
+  7. AGGREGATION WITH INDEPENDENT WORKS
+
+     A compilation of the Document or its derivatives with other
+     separate and independent documents or works, in or on a volume of
+     a storage or distribution medium, is called an "aggregate" if the
+     copyright resulting from the compilation is not used to limit the
+     legal rights of the compilation's users beyond what the individual
+     works permit.  When the Document is included in an aggregate, this
+     License does not apply to the other works in the aggregate which
+     are not themselves derivative works of the Document.
+
+     If the Cover Text requirement of section 3 is applicable to these
+     copies of the Document, then if the Document is less than one half
+     of the entire aggregate, the Document's Cover Texts may be placed
+     on covers that bracket the Document within the aggregate, or the
+     electronic equivalent of covers if the Document is in electronic
+     form.  Otherwise they must appear on printed covers that bracket
+     the whole aggregate.
+
+  8. TRANSLATION
+
+     Translation is considered a kind of modification, so you may
+     distribute translations of the Document under the terms of section
+     4.  Replacing Invariant Sections with translations requires special
+     permission from their copyright holders, but you may include
+     translations of some or all Invariant Sections in addition to the
+     original versions of these Invariant Sections.  You may include a
+     translation of this License, and all the license notices in the
+     Document, and any Warranty Disclaimers, provided that you also
+     include the original English version of this License and the
+     original versions of those notices and disclaimers.  In case of a
+     disagreement between the translation and the original version of
+     this License or a notice or disclaimer, the original version will
+     prevail.
+
+     If a section in the Document is Entitled "Acknowledgements",
+     "Dedications", or "History", the requirement (section 4) to
+     Preserve its Title (section 1) will typically require changing the
+     actual title.
+
+  9. TERMINATION
+
+     You may not copy, modify, sublicense, or distribute the Document
+     except as expressly provided for under this License.  Any other
+     attempt to copy, modify, sublicense or distribute the Document is
+     void, and will automatically terminate your rights under this
+     License.  However, parties who have received copies, or rights,
+     from you under this License will not have their licenses
+     terminated so long as such parties remain in full compliance.
+
+ 10. FUTURE REVISIONS OF THIS LICENSE
+
+     The Free Software Foundation may publish new, revised versions of
+     the GNU Free Documentation License from time to time.  Such new
+     versions will be similar in spirit to the present version, but may
+     differ in detail to address new problems or concerns.  See
+     `http://www.gnu.org/copyleft/'.
+
+     Each version of the License is given a distinguishing version
+     number.  If the Document specifies that a particular numbered
+     version of this License "or any later version" applies to it, you
+     have the option of following the terms and conditions either of
+     that specified version or of any later version that has been
+     published (not as a draft) by the Free Software Foundation.  If
+     the Document does not specify a version number of this License,
+     you may choose any version ever published (not as a draft) by the
+     Free Software Foundation.
+
+D.1 ADDENDUM: How to use this License for your documents
+========================================================
+
+To use this License in a document you have written, include a copy of
+the License in the document and put the following copyright and license
+notices just after the title page:
+
+       Copyright (C)  YEAR  YOUR NAME.
+       Permission is granted to copy, distribute and/or modify this document
+       under the terms of the GNU Free Documentation License, Version 1.2
+       or any later version published by the Free Software Foundation;
+       with no Invariant Sections, no Front-Cover Texts, and no Back-Cover
+       Texts.  A copy of the license is included in the section entitled ``GNU
+       Free Documentation License''.
+
+   If you have Invariant Sections, Front-Cover Texts and Back-Cover
+Texts, replace the "with...Texts." line with this:
+
+         with the Invariant Sections being LIST THEIR TITLES, with
+         the Front-Cover Texts being LIST, and with the Back-Cover Texts
+         being LIST.
+
+   If you have Invariant Sections without Cover Texts, or some other
+combination of the three, merge those two alternatives to suit the
+situation.
+
+   If your document contains nontrivial examples of program code, we
+recommend releasing these examples in parallel under your choice of
+free software license, such as the GNU General Public License, to
+permit their use in free software.
+
+
+File: make.info,  Node: Concept Index,  Next: Name Index,  Prev: GNU Free Documentation License,  Up: Top
+
+Index of Concepts
+*****************
+
+ [index ]
+* Menu:
+
+* # (comments), in commands:             Command Syntax.      (line  27)
+* # (comments), in makefile:             Makefile Contents.   (line  41)
+* #include:                              Automatic Prerequisites.
+                                                              (line  16)
+* $, in function call:                   Syntax of Functions. (line   6)
+* $, in rules:                           Rule Syntax.         (line  32)
+* $, in variable name:                   Computed Names.      (line   6)
+* $, in variable reference:              Reference.           (line   6)
+* %, in pattern rules:                   Pattern Intro.       (line   9)
+* %, quoting in patsubst:                Text Functions.      (line  26)
+* %, quoting in static pattern:          Static Usage.        (line  37)
+* %, quoting in vpath:                   Selective Search.    (line  38)
+* %, quoting with \ (backslash) <1>:     Text Functions.      (line  26)
+* %, quoting with \ (backslash) <2>:     Static Usage.        (line  37)
+* %, quoting with \ (backslash):         Selective Search.    (line  38)
+* * (wildcard character):                Wildcards.           (line   6)
+* +, and command execution:              Instead of Execution.
+                                                              (line  58)
+* +, and commands:                       MAKE Variable.       (line  18)
+* +, and define:                         Sequences.           (line  50)
+* +=:                                    Appending.           (line   6)
+* +=, expansion:                         Reading Makefiles.   (line  33)
+* ,v (RCS file extension):               Catalogue of Rules.  (line 164)
+* - (in commands):                       Errors.              (line  19)
+* -, and define:                         Sequences.           (line  50)
+* --always-make:                         Options Summary.     (line  15)
+* --assume-new <1>:                      Options Summary.     (line 242)
+* --assume-new:                          Instead of Execution.
+                                                              (line  33)
+* --assume-new, and recursion:           Options/Recursion.   (line  22)
+* --assume-old <1>:                      Options Summary.     (line 147)
+* --assume-old:                          Avoiding Compilation.
+                                                              (line   6)
+* --assume-old, and recursion:           Options/Recursion.   (line  22)
+* --check-symlink-times:                 Options Summary.     (line 130)
+* --debug:                               Options Summary.     (line  42)
+* --directory <1>:                       Options Summary.     (line  26)
+* --directory:                           Recursion.           (line  20)
+* --directory, and --print-directory:    -w Option.           (line  20)
+* --directory, and recursion:            Options/Recursion.   (line  22)
+* --dry-run <1>:                         Options Summary.     (line 140)
+* --dry-run <2>:                         Instead of Execution.
+                                                              (line  14)
+* --dry-run:                             Echoing.             (line  18)
+* --environment-overrides:               Options Summary.     (line  78)
+* --file <1>:                            Options Summary.     (line  84)
+* --file <2>:                            Makefile Arguments.  (line   6)
+* --file:                                Makefile Names.      (line  23)
+* --file, and recursion:                 Options/Recursion.   (line  22)
+* --help:                                Options Summary.     (line  90)
+* --ignore-errors <1>:                   Options Summary.     (line  94)
+* --ignore-errors:                       Errors.              (line  30)
+* --include-dir <1>:                     Options Summary.     (line  99)
+* --include-dir:                         Include.             (line  52)
+* --jobs <1>:                            Options Summary.     (line 106)
+* --jobs:                                Parallel.            (line   6)
+* --jobs, and recursion:                 Options/Recursion.   (line  25)
+* --just-print <1>:                      Options Summary.     (line 139)
+* --just-print <2>:                      Instead of Execution.
+                                                              (line  14)
+* --just-print:                          Echoing.             (line  18)
+* --keep-going <1>:                      Options Summary.     (line 115)
+* --keep-going <2>:                      Testing.             (line  16)
+* --keep-going:                          Errors.              (line  47)
+* --load-average <1>:                    Options Summary.     (line 122)
+* --load-average:                        Parallel.            (line  57)
+* --makefile <1>:                        Options Summary.     (line  85)
+* --makefile <2>:                        Makefile Arguments.  (line   6)
+* --makefile:                            Makefile Names.      (line  23)
+* --max-load <1>:                        Options Summary.     (line 123)
+* --max-load:                            Parallel.            (line  57)
+* --new-file <1>:                        Options Summary.     (line 241)
+* --new-file:                            Instead of Execution.
+                                                              (line  33)
+* --new-file, and recursion:             Options/Recursion.   (line  22)
+* --no-builtin-rules:                    Options Summary.     (line 175)
+* --no-builtin-variables:                Options Summary.     (line 188)
+* --no-keep-going:                       Options Summary.     (line 203)
+* --no-print-directory <1>:              Options Summary.     (line 233)
+* --no-print-directory:                  -w Option.           (line  20)
+* --old-file <1>:                        Options Summary.     (line 146)
+* --old-file:                            Avoiding Compilation.
+                                                              (line   6)
+* --old-file, and recursion:             Options/Recursion.   (line  22)
+* --print-data-base:                     Options Summary.     (line 155)
+* --print-directory:                     Options Summary.     (line 225)
+* --print-directory, and --directory:    -w Option.           (line  20)
+* --print-directory, and recursion:      -w Option.           (line  20)
+* --print-directory, disabling:          -w Option.           (line  20)
+* --question <1>:                        Options Summary.     (line 167)
+* --question:                            Instead of Execution.
+                                                              (line  25)
+* --quiet <1>:                           Options Summary.     (line 198)
+* --quiet:                               Echoing.             (line  24)
+* --recon <1>:                           Options Summary.     (line 141)
+* --recon <2>:                           Instead of Execution.
+                                                              (line  14)
+* --recon:                               Echoing.             (line  18)
+* --silent <1>:                          Options Summary.     (line 197)
+* --silent:                              Echoing.             (line  24)
+* --stop:                                Options Summary.     (line 204)
+* --touch <1>:                           Options Summary.     (line 212)
+* --touch:                               Instead of Execution.
+                                                              (line  19)
+* --touch, and recursion:                MAKE Variable.       (line  34)
+* --version:                             Options Summary.     (line 220)
+* --warn-undefined-variables:            Options Summary.     (line 251)
+* --what-if <1>:                         Options Summary.     (line 240)
+* --what-if:                             Instead of Execution.
+                                                              (line  33)
+* -B:                                    Options Summary.     (line  14)
+* -b:                                    Options Summary.     (line   9)
+* -C <1>:                                Options Summary.     (line  25)
+* -C:                                    Recursion.           (line  20)
+* -C, and -w:                            -w Option.           (line  20)
+* -C, and recursion:                     Options/Recursion.   (line  22)
+* -d:                                    Options Summary.     (line  33)
+* -e:                                    Options Summary.     (line  77)
+* -e (shell flag):                       Automatic Prerequisites.
+                                                              (line  66)
+* -f <1>:                                Options Summary.     (line  83)
+* -f <2>:                                Makefile Arguments.  (line   6)
+* -f:                                    Makefile Names.      (line  23)
+* -f, and recursion:                     Options/Recursion.   (line  22)
+* -h:                                    Options Summary.     (line  89)
+* -I:                                    Options Summary.     (line  98)
+* -i <1>:                                Options Summary.     (line  93)
+* -i:                                    Errors.              (line  30)
+* -I:                                    Include.             (line  52)
+* -j <1>:                                Options Summary.     (line 105)
+* -j:                                    Parallel.            (line   6)
+* -j, and archive update:                Archive Pitfalls.    (line   6)
+* -j, and recursion:                     Options/Recursion.   (line  25)
+* -k <1>:                                Options Summary.     (line 114)
+* -k <2>:                                Testing.             (line  16)
+* -k:                                    Errors.              (line  47)
+* -L:                                    Options Summary.     (line 129)
+* -l:                                    Options Summary.     (line 121)
+* -l (library search):                   Libraries/Search.    (line   6)
+* -l (load average):                     Parallel.            (line  57)
+* -m:                                    Options Summary.     (line  10)
+* -M (to compiler):                      Automatic Prerequisites.
+                                                              (line  18)
+* -MM (to GNU compiler):                 Automatic Prerequisites.
+                                                              (line  68)
+* -n <1>:                                Options Summary.     (line 138)
+* -n <2>:                                Instead of Execution.
+                                                              (line  14)
+* -n:                                    Echoing.             (line  18)
+* -o <1>:                                Options Summary.     (line 145)
+* -o:                                    Avoiding Compilation.
+                                                              (line   6)
+* -o, and recursion:                     Options/Recursion.   (line  22)
+* -p:                                    Options Summary.     (line 154)
+* -q <1>:                                Options Summary.     (line 166)
+* -q:                                    Instead of Execution.
+                                                              (line  25)
+* -R:                                    Options Summary.     (line 187)
+* -r:                                    Options Summary.     (line 174)
+* -S:                                    Options Summary.     (line 202)
+* -s <1>:                                Options Summary.     (line 196)
+* -s:                                    Echoing.             (line  24)
+* -t <1>:                                Options Summary.     (line 211)
+* -t:                                    Instead of Execution.
+                                                              (line  19)
+* -t, and recursion:                     MAKE Variable.       (line  34)
+* -v:                                    Options Summary.     (line 219)
+* -W:                                    Options Summary.     (line 239)
+* -w:                                    Options Summary.     (line 224)
+* -W:                                    Instead of Execution.
+                                                              (line  33)
+* -w, and -C:                            -w Option.           (line  20)
+* -w, and recursion:                     -w Option.           (line  20)
+* -W, and recursion:                     Options/Recursion.   (line  22)
+* -w, disabling:                         -w Option.           (line  20)
+* .a (archives):                         Archive Suffix Rules.
+                                                              (line   6)
+* .C:                                    Catalogue of Rules.  (line  39)
+* .c:                                    Catalogue of Rules.  (line  35)
+* .cc:                                   Catalogue of Rules.  (line  39)
+* .ch:                                   Catalogue of Rules.  (line 151)
+* .cpp:                                  Catalogue of Rules.  (line  39)
+* .d:                                    Automatic Prerequisites.
+                                                              (line  81)
+* .def:                                  Catalogue of Rules.  (line  74)
+* .dvi:                                  Catalogue of Rules.  (line 151)
+* .F:                                    Catalogue of Rules.  (line  49)
+* .f:                                    Catalogue of Rules.  (line  49)
+* .info:                                 Catalogue of Rules.  (line 158)
+* .l:                                    Catalogue of Rules.  (line 124)
+* .LIBPATTERNS, and link libraries:      Libraries/Search.    (line   6)
+* .ln:                                   Catalogue of Rules.  (line 146)
+* .mod:                                  Catalogue of Rules.  (line  74)
+* .o:                                    Catalogue of Rules.  (line  35)
+* .p:                                    Catalogue of Rules.  (line  45)
+* .PRECIOUS intermediate files:          Chained Rules.       (line  56)
+* .r:                                    Catalogue of Rules.  (line  49)
+* .S:                                    Catalogue of Rules.  (line  82)
+* .s:                                    Catalogue of Rules.  (line  79)
+* .sh:                                   Catalogue of Rules.  (line 180)
+* .sym:                                  Catalogue of Rules.  (line  74)
+* .tex:                                  Catalogue of Rules.  (line 151)
+* .texi:                                 Catalogue of Rules.  (line 158)
+* .texinfo:                              Catalogue of Rules.  (line 158)
+* .txinfo:                               Catalogue of Rules.  (line 158)
+* .w:                                    Catalogue of Rules.  (line 151)
+* .web:                                  Catalogue of Rules.  (line 151)
+* .y:                                    Catalogue of Rules.  (line 120)
+* :: rules (double-colon):               Double-Colon.        (line   6)
+* := <1>:                                Setting.             (line   6)
+* :=:                                    Flavors.             (line  56)
+* = <1>:                                 Setting.             (line   6)
+* =:                                     Flavors.             (line  10)
+* =, expansion:                          Reading Makefiles.   (line  33)
+* ? (wildcard character):                Wildcards.           (line   6)
+* ?= <1>:                                Setting.             (line   6)
+* ?=:                                    Flavors.             (line 129)
+* ?=, expansion:                         Reading Makefiles.   (line  33)
+* @ (in commands):                       Echoing.             (line   6)
+* @, and define:                         Sequences.           (line  50)
+* [...] (wildcard characters):           Wildcards.           (line   6)
+* \ (backslash), for continuation lines: Simple Makefile.     (line  40)
+* \ (backslash), in commands:            Splitting Lines.     (line   6)
+* \ (backslash), to quote % <1>:         Text Functions.      (line  26)
+* \ (backslash), to quote % <2>:         Static Usage.        (line  37)
+* \ (backslash), to quote %:             Selective Search.    (line  38)
+* __.SYMDEF:                             Archive Symbols.     (line   6)
+* abspath:                               File Name Functions. (line 121)
+* algorithm for directory search:        Search Algorithm.    (line   6)
+* all (standard target):                 Goals.               (line  72)
+* appending to variables:                Appending.           (line   6)
+* ar:                                    Implicit Variables.  (line  41)
+* archive:                               Archives.            (line   6)
+* archive member targets:                Archive Members.     (line   6)
+* archive symbol directory updating:     Archive Symbols.     (line   6)
+* archive, and -j:                       Archive Pitfalls.    (line   6)
+* archive, and parallel execution:       Archive Pitfalls.    (line   6)
+* archive, suffix rule for:              Archive Suffix Rules.
+                                                              (line   6)
+* Arg list too long:                     Options/Recursion.   (line  57)
+* arguments of functions:                Syntax of Functions. (line   6)
+* as <1>:                                Implicit Variables.  (line  44)
+* as:                                    Catalogue of Rules.  (line  79)
+* assembly, rule to compile:             Catalogue of Rules.  (line  79)
+* automatic generation of prerequisites <1>: Automatic Prerequisites.
+                                                              (line   6)
+* automatic generation of prerequisites: Include.             (line  50)
+* automatic variables:                   Automatic Variables. (line   6)
+* automatic variables in prerequisites:  Automatic Variables. (line  17)
+* backquotes:                            Shell Function.      (line   6)
+* backslash (\), for continuation lines: Simple Makefile.     (line  40)
+* backslash (\), in commands:            Splitting Lines.     (line   6)
+* backslash (\), to quote % <1>:         Text Functions.      (line  26)
+* backslash (\), to quote % <2>:         Static Usage.        (line  37)
+* backslash (\), to quote %:             Selective Search.    (line  38)
+* backslashes in pathnames and wildcard expansion: Wildcard Pitfall.
+                                                              (line  31)
+* basename:                              File Name Functions. (line  57)
+* binary packages:                       Install Command Categories.
+                                                              (line  80)
+* broken pipe:                           Parallel.            (line  30)
+* bugs, reporting:                       Bugs.                (line   6)
+* built-in special targets:              Special Targets.     (line   6)
+* C++, rule to compile:                  Catalogue of Rules.  (line  39)
+* C, rule to compile:                    Catalogue of Rules.  (line  35)
+* cc <1>:                                Implicit Variables.  (line  47)
+* cc:                                    Catalogue of Rules.  (line  35)
+* cd (shell command) <1>:                MAKE Variable.       (line  16)
+* cd (shell command):                    Execution.           (line  10)
+* chains of rules:                       Chained Rules.       (line   6)
+* check (standard target):               Goals.               (line 114)
+* clean (standard target):               Goals.               (line  75)
+* clean target <1>:                      Cleanup.             (line  11)
+* clean target:                          Simple Makefile.     (line  83)
+* cleaning up:                           Cleanup.             (line   6)
+* clobber (standard target):             Goals.               (line  86)
+* co <1>:                                Implicit Variables.  (line  56)
+* co:                                    Catalogue of Rules.  (line 164)
+* combining rules by prerequisite:       Combine By Prerequisite.
+                                                              (line   6)
+* command line variable definitions, and recursion: Options/Recursion.
+                                                              (line  17)
+* command line variables:                Overriding.          (line   6)
+* command syntax:                        Command Syntax.      (line   6)
+* commands:                              Rule Syntax.         (line  26)
+* commands setting shell variables:      Execution.           (line  10)
+* commands, backslash (\) in:            Splitting Lines.     (line   6)
+* commands, comments in:                 Command Syntax.      (line  27)
+* commands, echoing:                     Echoing.             (line   6)
+* commands, empty:                       Empty Commands.      (line   6)
+* commands, errors in:                   Errors.              (line   6)
+* commands, execution:                   Execution.           (line   6)
+* commands, execution in parallel:       Parallel.            (line   6)
+* commands, expansion:                   Shell Function.      (line   6)
+* commands, how to write:                Commands.            (line   6)
+* commands, instead of executing:        Instead of Execution.
+                                                              (line   6)
+* commands, introduction to:             Rule Introduction.   (line   8)
+* commands, quoting newlines in:         Splitting Lines.     (line   6)
+* commands, sequences of:                Sequences.           (line   6)
+* commands, splitting:                   Splitting Lines.     (line   6)
+* commands, using variables in:          Variables in Commands.
+                                                              (line   6)
+* comments, in commands:                 Command Syntax.      (line  27)
+* comments, in makefile:                 Makefile Contents.   (line  41)
+* compatibility:                         Features.            (line   6)
+* compatibility in exporting:            Variables/Recursion. (line 105)
+* compilation, testing:                  Testing.             (line   6)
+* computed variable name:                Computed Names.      (line   6)
+* conditional expansion:                 Conditional Functions.
+                                                              (line   6)
+* conditional variable assignment:       Flavors.             (line 129)
+* conditionals:                          Conditionals.        (line   6)
+* continuation lines:                    Simple Makefile.     (line  40)
+* controlling make:                      Make Control Functions.
+                                                              (line   6)
+* conventions for makefiles:             Makefile Conventions.
+                                                              (line   6)
+* ctangle <1>:                           Implicit Variables.  (line 107)
+* ctangle:                               Catalogue of Rules.  (line 151)
+* cweave <1>:                            Implicit Variables.  (line 101)
+* cweave:                                Catalogue of Rules.  (line 151)
+* data base of make rules:               Options Summary.     (line 155)
+* deducing commands (implicit rules):    make Deduces.        (line   6)
+* default directories for included makefiles: Include.        (line  52)
+* default goal <1>:                      Rules.               (line  11)
+* default goal:                          How Make Works.      (line  11)
+* default makefile name:                 Makefile Names.      (line   6)
+* default rules, last-resort:            Last Resort.         (line   6)
+* define, expansion:                     Reading Makefiles.   (line  33)
+* defining variables verbatim:           Defining.            (line   6)
+* deletion of target files <1>:          Interrupts.          (line   6)
+* deletion of target files:              Errors.              (line  64)
+* directive:                             Makefile Contents.   (line  28)
+* directories, printing them:            -w Option.           (line   6)
+* directories, updating archive symbol:  Archive Symbols.     (line   6)
+* directory part:                        File Name Functions. (line  17)
+* directory search (VPATH):              Directory Search.    (line   6)
+* directory search (VPATH), and implicit rules: Implicit/Search.
+                                                              (line   6)
+* directory search (VPATH), and link libraries: Libraries/Search.
+                                                              (line   6)
+* directory search (VPATH), and shell commands: Commands/Search.
+                                                              (line   6)
+* directory search algorithm:            Search Algorithm.    (line   6)
+* directory search, traditional (GPATH): Search Algorithm.    (line  42)
+* dist (standard target):                Goals.               (line 106)
+* distclean (standard target):           Goals.               (line  84)
+* dollar sign ($), in function call:     Syntax of Functions. (line   6)
+* dollar sign ($), in rules:             Rule Syntax.         (line  32)
+* dollar sign ($), in variable name:     Computed Names.      (line   6)
+* dollar sign ($), in variable reference: Reference.          (line   6)
+* DOS, choosing a shell in:              Choosing the Shell.  (line  36)
+* double-colon rules:                    Double-Colon.        (line   6)
+* duplicate words, removing:             Text Functions.      (line 155)
+* E2BIG:                                 Options/Recursion.   (line  57)
+* echoing of commands:                   Echoing.             (line   6)
+* editor:                                Introduction.        (line  22)
+* Emacs (M-x compile):                   Errors.              (line  62)
+* empty commands:                        Empty Commands.      (line   6)
+* empty targets:                         Empty Targets.       (line   6)
+* environment:                           Environment.         (line   6)
+* environment, and recursion:            Variables/Recursion. (line   6)
+* environment, SHELL in:                 Choosing the Shell.  (line  10)
+* error, stopping on:                    Make Control Functions.
+                                                              (line  11)
+* errors (in commands):                  Errors.              (line   6)
+* errors with wildcards:                 Wildcard Pitfall.    (line   6)
+* evaluating makefile syntax:            Eval Function.       (line   6)
+* execution, in parallel:                Parallel.            (line   6)
+* execution, instead of:                 Instead of Execution.
+                                                              (line   6)
+* execution, of commands:                Execution.           (line   6)
+* exit status (errors):                  Errors.              (line   6)
+* exit status of make:                   Running.             (line  18)
+* expansion, secondary:                  Secondary Expansion. (line   6)
+* explicit rule, definition of:          Makefile Contents.   (line  10)
+* explicit rule, expansion:              Reading Makefiles.   (line  62)
+* explicit rules, secondary expansion of: Secondary Expansion.
+                                                              (line 106)
+* exporting variables:                   Variables/Recursion. (line   6)
+* f77 <1>:                               Implicit Variables.  (line  64)
+* f77:                                   Catalogue of Rules.  (line  49)
+* FDL, GNU Free Documentation License:   GNU Free Documentation License.
+                                                              (line   6)
+* features of GNU make:                  Features.            (line   6)
+* features, missing:                     Missing.             (line   6)
+* file name functions:                   File Name Functions. (line   6)
+* file name of makefile:                 Makefile Names.      (line   6)
+* file name of makefile, how to specify: Makefile Names.      (line  30)
+* file name prefix, adding:              File Name Functions. (line  79)
+* file name suffix:                      File Name Functions. (line  43)
+* file name suffix, adding:              File Name Functions. (line  68)
+* file name with wildcards:              Wildcards.           (line   6)
+* file name, abspath of:                 File Name Functions. (line 121)
+* file name, basename of:                File Name Functions. (line  57)
+* file name, directory part:             File Name Functions. (line  17)
+* file name, nondirectory part:          File Name Functions. (line  27)
+* file name, realpath of:                File Name Functions. (line 114)
+* files, assuming new:                   Instead of Execution.
+                                                              (line  33)
+* files, assuming old:                   Avoiding Compilation.
+                                                              (line   6)
+* files, avoiding recompilation of:      Avoiding Compilation.
+                                                              (line   6)
+* files, intermediate:                   Chained Rules.       (line  16)
+* filtering out words:                   Text Functions.      (line 132)
+* filtering words:                       Text Functions.      (line 114)
+* finding strings:                       Text Functions.      (line 103)
+* flags:                                 Options Summary.     (line   6)
+* flags for compilers:                   Implicit Variables.  (line   6)
+* flavor of variable:                    Flavor Function.     (line   6)
+* flavors of variables:                  Flavors.             (line   6)
+* FORCE:                                 Force Targets.       (line   6)
+* force targets:                         Force Targets.       (line   6)
+* Fortran, rule to compile:              Catalogue of Rules.  (line  49)
+* functions:                             Functions.           (line   6)
+* functions, for controlling make:       Make Control Functions.
+                                                              (line   6)
+* functions, for file names:             File Name Functions. (line   6)
+* functions, for text:                   Text Functions.      (line   6)
+* functions, syntax of:                  Syntax of Functions. (line   6)
+* functions, user defined:               Call Function.       (line   6)
+* g++ <1>:                               Implicit Variables.  (line  53)
+* g++:                                   Catalogue of Rules.  (line  39)
+* gcc:                                   Catalogue of Rules.  (line  35)
+* generating prerequisites automatically <1>: Automatic Prerequisites.
+                                                              (line   6)
+* generating prerequisites automatically: Include.            (line  50)
+* get <1>:                               Implicit Variables.  (line  67)
+* get:                                   Catalogue of Rules.  (line 173)
+* globbing (wildcards):                  Wildcards.           (line   6)
+* goal:                                  How Make Works.      (line  11)
+* goal, default <1>:                     Rules.               (line  11)
+* goal, default:                         How Make Works.      (line  11)
+* goal, how to specify:                  Goals.               (line   6)
+* home directory:                        Wildcards.           (line  11)
+* IEEE Standard 1003.2:                  Overview.            (line  13)
+* ifdef, expansion:                      Reading Makefiles.   (line  51)
+* ifeq, expansion:                       Reading Makefiles.   (line  51)
+* ifndef, expansion:                     Reading Makefiles.   (line  51)
+* ifneq, expansion:                      Reading Makefiles.   (line  51)
+* implicit rule:                         Implicit Rules.      (line   6)
+* implicit rule, and directory search:   Implicit/Search.     (line   6)
+* implicit rule, and VPATH:              Implicit/Search.     (line   6)
+* implicit rule, definition of:          Makefile Contents.   (line  16)
+* implicit rule, expansion:              Reading Makefiles.   (line  62)
+* implicit rule, how to use:             Using Implicit.      (line   6)
+* implicit rule, introduction to:        make Deduces.        (line   6)
+* implicit rule, predefined:             Catalogue of Rules.  (line   6)
+* implicit rule, search algorithm:       Implicit Rule Search.
+                                                              (line   6)
+* implicit rules, secondary expansion of: Secondary Expansion.
+                                                              (line 146)
+* included makefiles, default directories: Include.           (line  52)
+* including (MAKEFILE_LIST variable):    MAKEFILE_LIST Variable.
+                                                              (line   6)
+* including (MAKEFILES variable):        MAKEFILES Variable.  (line   6)
+* including other makefiles:             Include.             (line   6)
+* incompatibilities:                     Missing.             (line   6)
+* Info, rule to format:                  Catalogue of Rules.  (line 158)
+* install (standard target):             Goals.               (line  92)
+* intermediate files:                    Chained Rules.       (line  16)
+* intermediate files, preserving:        Chained Rules.       (line  46)
+* intermediate targets, explicit:        Special Targets.     (line  44)
+* interrupt:                             Interrupts.          (line   6)
+* job slots:                             Parallel.            (line   6)
+* job slots, and recursion:              Options/Recursion.   (line  25)
+* jobs, limiting based on load:          Parallel.            (line  57)
+* joining lists of words:                File Name Functions. (line  90)
+* killing (interruption):                Interrupts.          (line   6)
+* last-resort default rules:             Last Resort.         (line   6)
+* ld:                                    Catalogue of Rules.  (line  86)
+* lex <1>:                               Implicit Variables.  (line  71)
+* lex:                                   Catalogue of Rules.  (line 124)
+* Lex, rule to run:                      Catalogue of Rules.  (line 124)
+* libraries for linking, directory search: Libraries/Search.  (line   6)
+* library archive, suffix rule for:      Archive Suffix Rules.
+                                                              (line   6)
+* limiting jobs based on load:           Parallel.            (line  57)
+* link libraries, and directory search:  Libraries/Search.    (line   6)
+* link libraries, patterns matching:     Libraries/Search.    (line   6)
+* linking, predefined rule for:          Catalogue of Rules.  (line  86)
+* lint <1>:                              Implicit Variables.  (line  78)
+* lint:                                  Catalogue of Rules.  (line 146)
+* lint, rule to run:                     Catalogue of Rules.  (line 146)
+* list of all prerequisites:             Automatic Variables. (line  61)
+* list of changed prerequisites:         Automatic Variables. (line  51)
+* load average:                          Parallel.            (line  57)
+* loops in variable expansion:           Flavors.             (line  44)
+* lpr (shell command) <1>:               Empty Targets.       (line  25)
+* lpr (shell command):                   Wildcard Examples.   (line  21)
+* m2c <1>:                               Implicit Variables.  (line  81)
+* m2c:                                   Catalogue of Rules.  (line  74)
+* macro:                                 Using Variables.     (line  10)
+* make depend:                           Automatic Prerequisites.
+                                                              (line  37)
+* makefile:                              Introduction.        (line   7)
+* makefile name:                         Makefile Names.      (line   6)
+* makefile name, how to specify:         Makefile Names.      (line  30)
+* makefile rule parts:                   Rule Introduction.   (line   6)
+* makefile syntax, evaluating:           Eval Function.       (line   6)
+* makefile, and MAKEFILES variable:      MAKEFILES Variable.  (line   6)
+* makefile, conventions for:             Makefile Conventions.
+                                                              (line   6)
+* makefile, how make processes:          How Make Works.      (line   6)
+* makefile, how to write:                Makefiles.           (line   6)
+* makefile, including:                   Include.             (line   6)
+* makefile, overriding:                  Overriding Makefiles.
+                                                              (line   6)
+* makefile, parsing:                     Reading Makefiles.   (line   6)
+* makefile, remaking of:                 Remaking Makefiles.  (line   6)
+* makefile, simple:                      Simple Makefile.     (line   6)
+* makefiles, and MAKEFILE_LIST variable: MAKEFILE_LIST Variable.
+                                                              (line   6)
+* makefiles, and special variables:      Special Variables.   (line   6)
+* makeinfo <1>:                          Implicit Variables.  (line  88)
+* makeinfo:                              Catalogue of Rules.  (line 158)
+* match-anything rule:                   Match-Anything Rules.
+                                                              (line   6)
+* match-anything rule, used to override: Overriding Makefiles.
+                                                              (line  12)
+* missing features:                      Missing.             (line   6)
+* mistakes with wildcards:               Wildcard Pitfall.    (line   6)
+* modified variable reference:           Substitution Refs.   (line   6)
+* Modula-2, rule to compile:             Catalogue of Rules.  (line  74)
+* mostlyclean (standard target):         Goals.               (line  78)
+* multiple rules for one target:         Multiple Rules.      (line   6)
+* multiple rules for one target (::):    Double-Colon.        (line   6)
+* multiple targets:                      Multiple Targets.    (line   6)
+* multiple targets, in pattern rule:     Pattern Intro.       (line  49)
+* name of makefile:                      Makefile Names.      (line   6)
+* name of makefile, how to specify:      Makefile Names.      (line  30)
+* nested variable reference:             Computed Names.      (line   6)
+* newline, quoting, in commands:         Splitting Lines.     (line   6)
+* newline, quoting, in makefile:         Simple Makefile.     (line  40)
+* nondirectory part:                     File Name Functions. (line  27)
+* normal prerequisites:                  Prerequisite Types.  (line   6)
+* OBJ:                                   Variables Simplify.  (line  20)
+* obj:                                   Variables Simplify.  (line  20)
+* OBJECTS:                               Variables Simplify.  (line  20)
+* objects:                               Variables Simplify.  (line  14)
+* OBJS:                                  Variables Simplify.  (line  20)
+* objs:                                  Variables Simplify.  (line  20)
+* old-fashioned suffix rules:            Suffix Rules.        (line   6)
+* options:                               Options Summary.     (line   6)
+* options, and recursion:                Options/Recursion.   (line   6)
+* options, setting from environment:     Options/Recursion.   (line  81)
+* options, setting in makefiles:         Options/Recursion.   (line  81)
+* order of pattern rules:                Pattern Intro.       (line  57)
+* order-only prerequisites:              Prerequisite Types.  (line   6)
+* origin of variable:                    Origin Function.     (line   6)
+* overriding makefiles:                  Overriding Makefiles.
+                                                              (line   6)
+* overriding variables with arguments:   Overriding.          (line   6)
+* overriding with override:              Override Directive.  (line   6)
+* parallel execution:                    Parallel.            (line   6)
+* parallel execution, and archive update: Archive Pitfalls.   (line   6)
+* parallel execution, overriding:        Special Targets.     (line 135)
+* parts of makefile rule:                Rule Introduction.   (line   6)
+* Pascal, rule to compile:               Catalogue of Rules.  (line  45)
+* pattern rule:                          Pattern Intro.       (line   6)
+* pattern rule, expansion:               Reading Makefiles.   (line  62)
+* pattern rules, order of:               Pattern Intro.       (line  57)
+* pattern rules, static (not implicit):  Static Pattern.      (line   6)
+* pattern rules, static, syntax of:      Static Usage.        (line   6)
+* pattern-specific variables:            Pattern-specific.    (line   6)
+* pc <1>:                                Implicit Variables.  (line  84)
+* pc:                                    Catalogue of Rules.  (line  45)
+* phony targets:                         Phony Targets.       (line   6)
+* pitfalls of wildcards:                 Wildcard Pitfall.    (line   6)
+* portability:                           Features.            (line   6)
+* POSIX:                                 Overview.            (line  13)
+* POSIX.2:                               Options/Recursion.   (line  60)
+* post-installation commands:            Install Command Categories.
+                                                              (line   6)
+* pre-installation commands:             Install Command Categories.
+                                                              (line   6)
+* precious targets:                      Special Targets.     (line  29)
+* predefined rules and variables, printing: Options Summary.  (line 155)
+* prefix, adding:                        File Name Functions. (line  79)
+* prerequisite:                          Rules.               (line   6)
+* prerequisite pattern, implicit:        Pattern Intro.       (line  22)
+* prerequisite pattern, static (not implicit): Static Usage.  (line  30)
+* prerequisite types:                    Prerequisite Types.  (line   6)
+* prerequisite, expansion:               Reading Makefiles.   (line  62)
+* prerequisites:                         Rule Syntax.         (line  46)
+* prerequisites, and automatic variables: Automatic Variables.
+                                                              (line  17)
+* prerequisites, automatic generation <1>: Automatic Prerequisites.
+                                                              (line   6)
+* prerequisites, automatic generation:   Include.             (line  50)
+* prerequisites, introduction to:        Rule Introduction.   (line   8)
+* prerequisites, list of all:            Automatic Variables. (line  61)
+* prerequisites, list of changed:        Automatic Variables. (line  51)
+* prerequisites, normal:                 Prerequisite Types.  (line   6)
+* prerequisites, order-only:             Prerequisite Types.  (line   6)
+* prerequisites, varying (static pattern): Static Pattern.    (line   6)
+* preserving intermediate files:         Chained Rules.       (line  46)
+* preserving with .PRECIOUS <1>:         Chained Rules.       (line  56)
+* preserving with .PRECIOUS:             Special Targets.     (line  29)
+* preserving with .SECONDARY:            Special Targets.     (line  49)
+* print (standard target):               Goals.               (line  97)
+* print target <1>:                      Empty Targets.       (line  25)
+* print target:                          Wildcard Examples.   (line  21)
+* printing directories:                  -w Option.           (line   6)
+* printing messages:                     Make Control Functions.
+                                                              (line  43)
+* printing of commands:                  Echoing.             (line   6)
+* printing user warnings:                Make Control Functions.
+                                                              (line  35)
+* problems and bugs, reporting:          Bugs.                (line   6)
+* problems with wildcards:               Wildcard Pitfall.    (line   6)
+* processing a makefile:                 How Make Works.      (line   6)
+* question mode:                         Instead of Execution.
+                                                              (line  25)
+* quoting %, in patsubst:                Text Functions.      (line  26)
+* quoting %, in static pattern:          Static Usage.        (line  37)
+* quoting %, in vpath:                   Selective Search.    (line  38)
+* quoting newline, in commands:          Splitting Lines.     (line   6)
+* quoting newline, in makefile:          Simple Makefile.     (line  40)
+* Ratfor, rule to compile:               Catalogue of Rules.  (line  49)
+* RCS, rule to extract from:             Catalogue of Rules.  (line 164)
+* reading makefiles:                     Reading Makefiles.   (line   6)
+* README:                                Makefile Names.      (line   9)
+* realclean (standard target):           Goals.               (line  85)
+* realpath:                              File Name Functions. (line 114)
+* recompilation:                         Introduction.        (line  22)
+* recompilation, avoiding:               Avoiding Compilation.
+                                                              (line   6)
+* recording events with empty targets:   Empty Targets.       (line   6)
+* recursion:                             Recursion.           (line   6)
+* recursion, and -C:                     Options/Recursion.   (line  22)
+* recursion, and -f:                     Options/Recursion.   (line  22)
+* recursion, and -j:                     Options/Recursion.   (line  25)
+* recursion, and -o:                     Options/Recursion.   (line  22)
+* recursion, and -t:                     MAKE Variable.       (line  34)
+* recursion, and -w:                     -w Option.           (line  20)
+* recursion, and -W:                     Options/Recursion.   (line  22)
+* recursion, and command line variable definitions: Options/Recursion.
+                                                              (line  17)
+* recursion, and environment:            Variables/Recursion. (line   6)
+* recursion, and MAKE variable:          MAKE Variable.       (line   6)
+* recursion, and MAKEFILES variable:     MAKEFILES Variable.  (line  14)
+* recursion, and options:                Options/Recursion.   (line   6)
+* recursion, and printing directories:   -w Option.           (line   6)
+* recursion, and variables:              Variables/Recursion. (line   6)
+* recursion, level of:                   Variables/Recursion. (line 115)
+* recursive variable expansion <1>:      Flavors.             (line   6)
+* recursive variable expansion:          Using Variables.     (line   6)
+* recursively expanded variables:        Flavors.             (line   6)
+* reference to variables <1>:            Advanced.            (line   6)
+* reference to variables:                Reference.           (line   6)
+* relinking:                             How Make Works.      (line  46)
+* remaking makefiles:                    Remaking Makefiles.  (line   6)
+* removal of target files <1>:           Interrupts.          (line   6)
+* removal of target files:               Errors.              (line  64)
+* removing duplicate words:              Text Functions.      (line 155)
+* removing targets on failure:           Special Targets.     (line  68)
+* removing, to clean up:                 Cleanup.             (line   6)
+* reporting bugs:                        Bugs.                (line   6)
+* rm:                                    Implicit Variables.  (line 110)
+* rm (shell command) <1>:                Errors.              (line  27)
+* rm (shell command) <2>:                Phony Targets.       (line  20)
+* rm (shell command) <3>:                Wildcard Examples.   (line  12)
+* rm (shell command):                    Simple Makefile.     (line  83)
+* rule commands:                         Commands.            (line   6)
+* rule prerequisites:                    Rule Syntax.         (line  46)
+* rule syntax:                           Rule Syntax.         (line   6)
+* rule targets:                          Rule Syntax.         (line  18)
+* rule, double-colon (::):               Double-Colon.        (line   6)
+* rule, explicit, definition of:         Makefile Contents.   (line  10)
+* rule, how to write:                    Rules.               (line   6)
+* rule, implicit:                        Implicit Rules.      (line   6)
+* rule, implicit, and directory search:  Implicit/Search.     (line   6)
+* rule, implicit, and VPATH:             Implicit/Search.     (line   6)
+* rule, implicit, chains of:             Chained Rules.       (line   6)
+* rule, implicit, definition of:         Makefile Contents.   (line  16)
+* rule, implicit, how to use:            Using Implicit.      (line   6)
+* rule, implicit, introduction to:       make Deduces.        (line   6)
+* rule, implicit, predefined:            Catalogue of Rules.  (line   6)
+* rule, introduction to:                 Rule Introduction.   (line   6)
+* rule, multiple for one target:         Multiple Rules.      (line   6)
+* rule, no commands or prerequisites:    Force Targets.       (line   6)
+* rule, pattern:                         Pattern Intro.       (line   6)
+* rule, static pattern:                  Static Pattern.      (line   6)
+* rule, static pattern versus implicit:  Static versus Implicit.
+                                                              (line   6)
+* rule, with multiple targets:           Multiple Targets.    (line   6)
+* rules, and $:                          Rule Syntax.         (line  32)
+* s. (SCCS file prefix):                 Catalogue of Rules.  (line 173)
+* SCCS, rule to extract from:            Catalogue of Rules.  (line 173)
+* search algorithm, implicit rule:       Implicit Rule Search.
+                                                              (line   6)
+* search path for prerequisites (VPATH): Directory Search.    (line   6)
+* search path for prerequisites (VPATH), and implicit rules: Implicit/Search.
+                                                              (line   6)
+* search path for prerequisites (VPATH), and link libraries: Libraries/Search.
+                                                              (line   6)
+* searching for strings:                 Text Functions.      (line 103)
+* secondary expansion:                   Secondary Expansion. (line   6)
+* secondary expansion and explicit rules: Secondary Expansion.
+                                                              (line 106)
+* secondary expansion and implicit rules: Secondary Expansion.
+                                                              (line 146)
+* secondary expansion and static pattern rules: Secondary Expansion.
+                                                              (line 138)
+* secondary files:                       Chained Rules.       (line  46)
+* secondary targets:                     Special Targets.     (line  49)
+* sed (shell command):                   Automatic Prerequisites.
+                                                              (line  73)
+* selecting a word:                      Text Functions.      (line 159)
+* selecting word lists:                  Text Functions.      (line 168)
+* sequences of commands:                 Sequences.           (line   6)
+* setting options from environment:      Options/Recursion.   (line  81)
+* setting options in makefiles:          Options/Recursion.   (line  81)
+* setting variables:                     Setting.             (line   6)
+* several rules for one target:          Multiple Rules.      (line   6)
+* several targets in a rule:             Multiple Targets.    (line   6)
+* shar (standard target):                Goals.               (line 103)
+* shell command:                         Simple Makefile.     (line  72)
+* shell command, and directory search:   Commands/Search.     (line   6)
+* shell command, execution:              Execution.           (line   6)
+* shell command, function for:           Shell Function.      (line   6)
+* shell file name pattern (in include):  Include.             (line  13)
+* shell variables, setting in commands:  Execution.           (line  10)
+* shell wildcards (in include):          Include.             (line  13)
+* shell, choosing the:                   Choosing the Shell.  (line   6)
+* SHELL, exported value:                 Variables/Recursion. (line  23)
+* SHELL, import from environment:        Environment.         (line  37)
+* shell, in DOS and Windows:             Choosing the Shell.  (line  36)
+* SHELL, MS-DOS specifics:               Choosing the Shell.  (line  42)
+* SHELL, value of:                       Choosing the Shell.  (line   6)
+* signal:                                Interrupts.          (line   6)
+* silent operation:                      Echoing.             (line   6)
+* simple makefile:                       Simple Makefile.     (line   6)
+* simple variable expansion:             Using Variables.     (line   6)
+* simplifying with variables:            Variables Simplify.  (line   6)
+* simply expanded variables:             Flavors.             (line  56)
+* sorting words:                         Text Functions.      (line 146)
+* spaces, in variable values:            Flavors.             (line 103)
+* spaces, stripping:                     Text Functions.      (line  80)
+* special targets:                       Special Targets.     (line   6)
+* special variables:                     Special Variables.   (line   6)
+* specifying makefile name:              Makefile Names.      (line  30)
+* splitting commands:                    Splitting Lines.     (line   6)
+* standard input:                        Parallel.            (line  30)
+* standards conformance:                 Overview.            (line  13)
+* standards for makefiles:               Makefile Conventions.
+                                                              (line   6)
+* static pattern rule:                   Static Pattern.      (line   6)
+* static pattern rule, syntax of:        Static Usage.        (line   6)
+* static pattern rule, versus implicit:  Static versus Implicit.
+                                                              (line   6)
+* static pattern rules, secondary expansion of: Secondary Expansion.
+                                                              (line 138)
+* stem <1>:                              Pattern Match.       (line   6)
+* stem:                                  Static Usage.        (line  17)
+* stem, variable for:                    Automatic Variables. (line  77)
+* stopping make:                         Make Control Functions.
+                                                              (line  11)
+* strings, searching for:                Text Functions.      (line 103)
+* stripping whitespace:                  Text Functions.      (line  80)
+* sub-make:                              Variables/Recursion. (line   6)
+* subdirectories, recursion for:         Recursion.           (line   6)
+* substitution variable reference:       Substitution Refs.   (line   6)
+* suffix rule:                           Suffix Rules.        (line   6)
+* suffix rule, for archive:              Archive Suffix Rules.
+                                                              (line   6)
+* suffix, adding:                        File Name Functions. (line  68)
+* suffix, function to find:              File Name Functions. (line  43)
+* suffix, substituting in variables:     Substitution Refs.   (line   6)
+* switches:                              Options Summary.     (line   6)
+* symbol directories, updating archive:  Archive Symbols.     (line   6)
+* syntax of commands:                    Command Syntax.      (line   6)
+* syntax of rules:                       Rule Syntax.         (line   6)
+* tab character (in commands):           Rule Syntax.         (line  26)
+* tabs in rules:                         Rule Introduction.   (line  21)
+* TAGS (standard target):                Goals.               (line 111)
+* tangle <1>:                            Implicit Variables.  (line 104)
+* tangle:                                Catalogue of Rules.  (line 151)
+* tar (standard target):                 Goals.               (line 100)
+* target:                                Rules.               (line   6)
+* target pattern, implicit:              Pattern Intro.       (line   9)
+* target pattern, static (not implicit): Static Usage.        (line  17)
+* target, deleting on error:             Errors.              (line  64)
+* target, deleting on interrupt:         Interrupts.          (line   6)
+* target, expansion:                     Reading Makefiles.   (line  62)
+* target, multiple in pattern rule:      Pattern Intro.       (line  49)
+* target, multiple rules for one:        Multiple Rules.      (line   6)
+* target, touching:                      Instead of Execution.
+                                                              (line  19)
+* target-specific variables:             Target-specific.     (line   6)
+* targets:                               Rule Syntax.         (line  18)
+* targets without a file:                Phony Targets.       (line   6)
+* targets, built-in special:             Special Targets.     (line   6)
+* targets, empty:                        Empty Targets.       (line   6)
+* targets, force:                        Force Targets.       (line   6)
+* targets, introduction to:              Rule Introduction.   (line   8)
+* targets, multiple:                     Multiple Targets.    (line   6)
+* targets, phony:                        Phony Targets.       (line   6)
+* terminal rule:                         Match-Anything Rules.
+                                                              (line   6)
+* test (standard target):                Goals.               (line 115)
+* testing compilation:                   Testing.             (line   6)
+* tex <1>:                               Implicit Variables.  (line  91)
+* tex:                                   Catalogue of Rules.  (line 151)
+* TeX, rule to run:                      Catalogue of Rules.  (line 151)
+* texi2dvi <1>:                          Implicit Variables.  (line  95)
+* texi2dvi:                              Catalogue of Rules.  (line 158)
+* Texinfo, rule to format:               Catalogue of Rules.  (line 158)
+* tilde (~):                             Wildcards.           (line  11)
+* touch (shell command) <1>:             Empty Targets.       (line  25)
+* touch (shell command):                 Wildcard Examples.   (line  21)
+* touching files:                        Instead of Execution.
+                                                              (line  19)
+* traditional directory search (GPATH):  Search Algorithm.    (line  42)
+* types of prerequisites:                Prerequisite Types.  (line   6)
+* undefined variables, warning message:  Options Summary.     (line 251)
+* updating archive symbol directories:   Archive Symbols.     (line   6)
+* updating makefiles:                    Remaking Makefiles.  (line   6)
+* user defined functions:                Call Function.       (line   6)
+* value:                                 Using Variables.     (line   6)
+* value, how a variable gets it:         Values.              (line   6)
+* variable:                              Using Variables.     (line   6)
+* variable definition:                   Makefile Contents.   (line  22)
+* variable references in commands:       Variables in Commands.
+                                                              (line   6)
+* variables:                             Variables Simplify.  (line   6)
+* variables, $ in name:                  Computed Names.      (line   6)
+* variables, and implicit rule:          Automatic Variables. (line   6)
+* variables, appending to:               Appending.           (line   6)
+* variables, automatic:                  Automatic Variables. (line   6)
+* variables, command line:               Overriding.          (line   6)
+* variables, command line, and recursion: Options/Recursion.  (line  17)
+* variables, computed names:             Computed Names.      (line   6)
+* variables, conditional assignment:     Flavors.             (line 129)
+* variables, defining verbatim:          Defining.            (line   6)
+* variables, environment <1>:            Environment.         (line   6)
+* variables, environment:                Variables/Recursion. (line   6)
+* variables, exporting:                  Variables/Recursion. (line   6)
+* variables, flavor of:                  Flavor Function.     (line   6)
+* variables, flavors:                    Flavors.             (line   6)
+* variables, how they get their values:  Values.              (line   6)
+* variables, how to reference:           Reference.           (line   6)
+* variables, loops in expansion:         Flavors.             (line  44)
+* variables, modified reference:         Substitution Refs.   (line   6)
+* variables, nested references:          Computed Names.      (line   6)
+* variables, origin of:                  Origin Function.     (line   6)
+* variables, overriding:                 Override Directive.  (line   6)
+* variables, overriding with arguments:  Overriding.          (line   6)
+* variables, pattern-specific:           Pattern-specific.    (line   6)
+* variables, recursively expanded:       Flavors.             (line   6)
+* variables, setting:                    Setting.             (line   6)
+* variables, simply expanded:            Flavors.             (line  56)
+* variables, spaces in values:           Flavors.             (line 103)
+* variables, substituting suffix in:     Substitution Refs.   (line   6)
+* variables, substitution reference:     Substitution Refs.   (line   6)
+* variables, target-specific:            Target-specific.     (line   6)
+* variables, unexpanded value:           Value Function.      (line   6)
+* variables, warning for undefined:      Options Summary.     (line 251)
+* varying prerequisites:                 Static Pattern.      (line   6)
+* verbatim variable definition:          Defining.            (line   6)
+* vpath:                                 Directory Search.    (line   6)
+* VPATH, and implicit rules:             Implicit/Search.     (line   6)
+* VPATH, and link libraries:             Libraries/Search.    (line   6)
+* warnings, printing:                    Make Control Functions.
+                                                              (line  35)
+* weave <1>:                             Implicit Variables.  (line  98)
+* weave:                                 Catalogue of Rules.  (line 151)
+* Web, rule to run:                      Catalogue of Rules.  (line 151)
+* what if:                               Instead of Execution.
+                                                              (line  33)
+* whitespace, in variable values:        Flavors.             (line 103)
+* whitespace, stripping:                 Text Functions.      (line  80)
+* wildcard:                              Wildcards.           (line   6)
+* wildcard pitfalls:                     Wildcard Pitfall.    (line   6)
+* wildcard, function:                    File Name Functions. (line 107)
+* wildcard, in archive member:           Archive Members.     (line  36)
+* wildcard, in include:                  Include.             (line  13)
+* wildcards and MS-DOS/MS-Windows backslashes: Wildcard Pitfall.
+                                                              (line  31)
+* Windows, choosing a shell in:          Choosing the Shell.  (line  36)
+* word, selecting a:                     Text Functions.      (line 159)
+* words, extracting first:               Text Functions.      (line 184)
+* words, extracting last:                Text Functions.      (line 197)
+* words, filtering:                      Text Functions.      (line 114)
+* words, filtering out:                  Text Functions.      (line 132)
+* words, finding number:                 Text Functions.      (line 180)
+* words, iterating over:                 Foreach Function.    (line   6)
+* words, joining lists:                  File Name Functions. (line  90)
+* words, removing duplicates:            Text Functions.      (line 155)
+* words, selecting lists of:             Text Functions.      (line 168)
+* writing rule commands:                 Commands.            (line   6)
+* writing rules:                         Rules.               (line   6)
+* yacc <1>:                              Implicit Variables.  (line  75)
+* yacc <2>:                              Catalogue of Rules.  (line 120)
+* yacc:                                  Sequences.           (line  18)
+* Yacc, rule to run:                     Catalogue of Rules.  (line 120)
+* ~ (tilde):                             Wildcards.           (line  11)
+
+
+File: make.info,  Node: Name Index,  Prev: Concept Index,  Up: Top
+
+Index of Functions, Variables, & Directives
+*******************************************
+
+ [index ]
+* Menu:
+
+* $%:                                    Automatic Variables. (line  37)
+* $(%D):                                 Automatic Variables. (line 129)
+* $(%F):                                 Automatic Variables. (line 130)
+* $(*D):                                 Automatic Variables. (line 124)
+* $(*F):                                 Automatic Variables. (line 125)
+* $(+D):                                 Automatic Variables. (line 147)
+* $(+F):                                 Automatic Variables. (line 148)
+* $(<D):                                 Automatic Variables. (line 137)
+* $(<F):                                 Automatic Variables. (line 138)
+* $(?D):                                 Automatic Variables. (line 153)
+* $(?F):                                 Automatic Variables. (line 154)
+* $(@D):                                 Automatic Variables. (line 113)
+* $(@F):                                 Automatic Variables. (line 119)
+* $(^D):                                 Automatic Variables. (line 142)
+* $(^F):                                 Automatic Variables. (line 143)
+* $*:                                    Automatic Variables. (line  73)
+* $*, and static pattern:                Static Usage.        (line  81)
+* $+:                                    Automatic Variables. (line  63)
+* $<:                                    Automatic Variables. (line  43)
+* $?:                                    Automatic Variables. (line  48)
+* $@:                                    Automatic Variables. (line  30)
+* $^:                                    Automatic Variables. (line  53)
+* $|:                                    Automatic Variables. (line  69)
+* % (automatic variable):                Automatic Variables. (line  37)
+* %D (automatic variable):               Automatic Variables. (line 129)
+* %F (automatic variable):               Automatic Variables. (line 130)
+* * (automatic variable):                Automatic Variables. (line  73)
+* * (automatic variable), unsupported bizarre usage: Missing. (line  44)
+* *D (automatic variable):               Automatic Variables. (line 124)
+* *F (automatic variable):               Automatic Variables. (line 125)
+* + (automatic variable):                Automatic Variables. (line  63)
+* +D (automatic variable):               Automatic Variables. (line 147)
+* +F (automatic variable):               Automatic Variables. (line 148)
+* .DEFAULT <1>:                          Last Resort.         (line  23)
+* .DEFAULT:                              Special Targets.     (line  20)
+* .DEFAULT, and empty commands:          Empty Commands.      (line  16)
+* .DEFAULT_GOAL (define default goal):   Special Variables.   (line  10)
+* .DELETE_ON_ERROR <1>:                  Errors.              (line  64)
+* .DELETE_ON_ERROR:                      Special Targets.     (line  67)
+* .EXPORT_ALL_VARIABLES <1>:             Variables/Recursion. (line  99)
+* .EXPORT_ALL_VARIABLES:                 Special Targets.     (line 129)
+* .FEATURES (list of supported features): Special Variables.  (line  65)
+* .IGNORE <1>:                           Errors.              (line  30)
+* .IGNORE:                               Special Targets.     (line  74)
+* .INCLUDE_DIRS (list of include directories): Special Variables.
+                                                              (line  98)
+* .INTERMEDIATE:                         Special Targets.     (line  43)
+* .LIBPATTERNS:                          Libraries/Search.    (line   6)
+* .LOW_RESOLUTION_TIME:                  Special Targets.     (line  86)
+* .NOTPARALLEL:                          Special Targets.     (line 134)
+* .PHONY <1>:                            Special Targets.     (line   8)
+* .PHONY:                                Phony Targets.       (line  22)
+* .POSIX:                                Options/Recursion.   (line  60)
+* .PRECIOUS <1>:                         Interrupts.          (line  22)
+* .PRECIOUS:                             Special Targets.     (line  28)
+* .SECONDARY:                            Special Targets.     (line  48)
+* .SECONDEXPANSION <1>:                  Special Targets.     (line  57)
+* .SECONDEXPANSION:                      Secondary Expansion. (line   6)
+* .SILENT <1>:                           Echoing.             (line  24)
+* .SILENT:                               Special Targets.     (line 116)
+* .SUFFIXES <1>:                         Suffix Rules.        (line  61)
+* .SUFFIXES:                             Special Targets.     (line  15)
+* .VARIABLES (list of variables):        Special Variables.   (line  56)
+* /usr/gnu/include:                      Include.             (line  52)
+* /usr/include:                          Include.             (line  52)
+* /usr/local/include:                    Include.             (line  52)
+* < (automatic variable):                Automatic Variables. (line  43)
+* <D (automatic variable):               Automatic Variables. (line 137)
+* <F (automatic variable):               Automatic Variables. (line 138)
+* ? (automatic variable):                Automatic Variables. (line  48)
+* ?D (automatic variable):               Automatic Variables. (line 153)
+* ?F (automatic variable):               Automatic Variables. (line 154)
+* @ (automatic variable):                Automatic Variables. (line  30)
+* @D (automatic variable):               Automatic Variables. (line 113)
+* @F (automatic variable):               Automatic Variables. (line 119)
+* ^ (automatic variable):                Automatic Variables. (line  53)
+* ^D (automatic variable):               Automatic Variables. (line 142)
+* ^F (automatic variable):               Automatic Variables. (line 143)
+* abspath:                               File Name Functions. (line 121)
+* addprefix:                             File Name Functions. (line  79)
+* addsuffix:                             File Name Functions. (line  68)
+* and:                                   Conditional Functions.
+                                                              (line  45)
+* AR:                                    Implicit Variables.  (line  41)
+* ARFLAGS:                               Implicit Variables.  (line 117)
+* AS:                                    Implicit Variables.  (line  44)
+* ASFLAGS:                               Implicit Variables.  (line 120)
+* basename:                              File Name Functions. (line  57)
+* bindir:                                Directory Variables. (line  53)
+* call:                                  Call Function.       (line   6)
+* CC:                                    Implicit Variables.  (line  47)
+* CFLAGS:                                Implicit Variables.  (line 124)
+* CO:                                    Implicit Variables.  (line  50)
+* COFLAGS:                               Implicit Variables.  (line 130)
+* COMSPEC:                               Choosing the Shell.  (line  39)
+* CPP:                                   Implicit Variables.  (line  59)
+* CPPFLAGS:                              Implicit Variables.  (line 133)
+* CTANGLE:                               Implicit Variables.  (line 107)
+* CURDIR:                                Recursion.           (line  28)
+* CWEAVE:                                Implicit Variables.  (line 101)
+* CXX:                                   Implicit Variables.  (line  53)
+* CXXFLAGS:                              Implicit Variables.  (line 127)
+* define:                                Defining.            (line   6)
+* dir:                                   File Name Functions. (line  17)
+* else:                                  Conditional Syntax.  (line   6)
+* endef:                                 Defining.            (line   6)
+* endif:                                 Conditional Syntax.  (line   6)
+* error:                                 Make Control Functions.
+                                                              (line  11)
+* eval:                                  Eval Function.       (line   6)
+* exec_prefix:                           Directory Variables. (line  35)
+* export:                                Variables/Recursion. (line  40)
+* FC:                                    Implicit Variables.  (line  63)
+* FFLAGS:                                Implicit Variables.  (line 137)
+* filter:                                Text Functions.      (line 114)
+* filter-out:                            Text Functions.      (line 132)
+* findstring:                            Text Functions.      (line 103)
+* firstword:                             Text Functions.      (line 184)
+* flavor:                                Flavor Function.     (line   6)
+* foreach:                               Foreach Function.    (line   6)
+* GET:                                   Implicit Variables.  (line  67)
+* GFLAGS:                                Implicit Variables.  (line 140)
+* GNUmakefile:                           Makefile Names.      (line   7)
+* GPATH:                                 Search Algorithm.    (line  48)
+* if:                                    Conditional Functions.
+                                                              (line   6)
+* ifdef:                                 Conditional Syntax.  (line   6)
+* ifeq:                                  Conditional Syntax.  (line   6)
+* ifndef:                                Conditional Syntax.  (line   6)
+* ifneq:                                 Conditional Syntax.  (line   6)
+* include:                               Include.             (line   6)
+* info:                                  Make Control Functions.
+                                                              (line  43)
+* join:                                  File Name Functions. (line  90)
+* lastword:                              Text Functions.      (line 197)
+* LDFLAGS:                               Implicit Variables.  (line 143)
+* LEX:                                   Implicit Variables.  (line  70)
+* LFLAGS:                                Implicit Variables.  (line 147)
+* libexecdir:                            Directory Variables. (line  66)
+* LINT:                                  Implicit Variables.  (line  78)
+* LINTFLAGS:                             Implicit Variables.  (line 159)
+* M2C:                                   Implicit Variables.  (line  81)
+* MAKE <1>:                              Flavors.             (line  84)
+* MAKE:                                  MAKE Variable.       (line   6)
+* MAKE_RESTARTS (number of times make has restarted): Special Variables.
+                                                              (line  49)
+* MAKE_VERSION:                          Features.            (line 197)
+* MAKECMDGOALS:                          Goals.               (line  30)
+* makefile:                              Makefile Names.      (line   7)
+* Makefile:                              Makefile Names.      (line   7)
+* MAKEFILE_LIST:                         MAKEFILE_LIST Variable.
+                                                              (line   6)
+* MAKEFILES <1>:                         Variables/Recursion. (line 127)
+* MAKEFILES:                             MAKEFILES Variable.  (line   6)
+* MAKEFLAGS:                             Options/Recursion.   (line   6)
+* MAKEINFO:                              Implicit Variables.  (line  87)
+* MAKELEVEL <1>:                         Flavors.             (line  84)
+* MAKELEVEL:                             Variables/Recursion. (line 115)
+* MAKEOVERRIDES:                         Options/Recursion.   (line  49)
+* MAKESHELL (MS-DOS alternative to SHELL): Choosing the Shell.
+                                                              (line  25)
+* MFLAGS:                                Options/Recursion.   (line  65)
+* notdir:                                File Name Functions. (line  27)
+* or:                                    Conditional Functions.
+                                                              (line  37)
+* origin:                                Origin Function.     (line   6)
+* OUTPUT_OPTION:                         Catalogue of Rules.  (line 202)
+* override:                              Override Directive.  (line   6)
+* patsubst <1>:                          Text Functions.      (line  18)
+* patsubst:                              Substitution Refs.   (line  28)
+* PC:                                    Implicit Variables.  (line  84)
+* PFLAGS:                                Implicit Variables.  (line 153)
+* prefix:                                Directory Variables. (line  25)
+* realpath:                              File Name Functions. (line 114)
+* RFLAGS:                                Implicit Variables.  (line 156)
+* RM:                                    Implicit Variables.  (line 110)
+* sbindir:                               Directory Variables. (line  59)
+* shell:                                 Shell Function.      (line   6)
+* SHELL:                                 Choosing the Shell.  (line   6)
+* SHELL (command execution):             Execution.           (line   6)
+* sort:                                  Text Functions.      (line 146)
+* strip:                                 Text Functions.      (line  80)
+* subst <1>:                             Text Functions.      (line   9)
+* subst:                                 Multiple Targets.    (line  28)
+* suffix:                                File Name Functions. (line  43)
+* SUFFIXES:                              Suffix Rules.        (line  81)
+* TANGLE:                                Implicit Variables.  (line 104)
+* TEX:                                   Implicit Variables.  (line  91)
+* TEXI2DVI:                              Implicit Variables.  (line  94)
+* unexport:                              Variables/Recursion. (line  45)
+* value:                                 Value Function.      (line   6)
+* vpath:                                 Selective Search.    (line   6)
+* VPATH:                                 General Search.      (line   6)
+* vpath:                                 Directory Search.    (line   6)
+* VPATH:                                 Directory Search.    (line   6)
+* warning:                               Make Control Functions.
+                                                              (line  35)
+* WEAVE:                                 Implicit Variables.  (line  98)
+* wildcard <1>:                          File Name Functions. (line 107)
+* wildcard:                              Wildcard Function.   (line   6)
+* word:                                  Text Functions.      (line 159)
+* wordlist:                              Text Functions.      (line 168)
+* words:                                 Text Functions.      (line 180)
+* YACC:                                  Implicit Variables.  (line  74)
+* YFLAGS:                                Implicit Variables.  (line 150)
+* | (automatic variable):                Automatic Variables. (line  69)
+
+
diff --git a/install/lib/libcacard.a b/install/lib/libcacard.a
new file mode 100644
index 0000000..3990a4f
Binary files /dev/null and b/install/lib/libcacard.a differ
diff --git a/install/lib/libcacard.la b/install/lib/libcacard.la
new file mode 100644
index 0000000..c7307a6
--- /dev/null
+++ b/install/lib/libcacard.la
@@ -0,0 +1,41 @@
+# libcacard.la - a libtool library file
+# Generated by libtool (GNU libtool) 2.4.2
+#
+# Please DO NOT delete this file!
+# It is necessary for linking the library.
+
+# The name that we can dlopen(3).
+dlname='libcacard.so.0'
+
+# Names of this library.
+library_names='libcacard.so.0.0.0 libcacard.so.0 libcacard.so'
+
+# The name of the static archive.
+old_library='libcacard.a'
+
+# Linker flags that can not go in dependency_libs.
+inherited_linker_flags=' -pthread'
+
+# Libraries that this one depends upon.
+dependency_libs=' -lssl3 -lsmime3 -lnss3 -lnssutil3 -lplds4 -lplc4 -lnspr4 -ldl -lm -lgthread-2.0 -lglib-2.0 -lrt -lz -lgnutls -lSDL -lpthread -lX11 -lutil'
+
+# Names of additional weak libraries provided by this library
+weak_library_names=''
+
+# Version information for libcacard.
+current=0
+age=0
+revision=0
+
+# Is this an already installed library?
+installed=yes
+
+# Should we warn about portability when linking against -modules?
+shouldnotlink=no
+
+# Files to dlopen/dlpreopen
+dlopen=''
+dlpreopen=''
+
+# Directory that this library needs to be installed in:
+libdir='/home/vax5/u46/criswell/classes/256/qemu/install/lib'
diff --git a/install/lib/libcacard.so b/install/lib/libcacard.so
new file mode 120000
index 0000000..adc77ed
--- /dev/null
+++ b/install/lib/libcacard.so
@@ -0,0 +1 @@
+libcacard.so.0.0.0
\ No newline at end of file
diff --git a/install/lib/libcacard.so.0 b/install/lib/libcacard.so.0
new file mode 120000
index 0000000..adc77ed
--- /dev/null
+++ b/install/lib/libcacard.so.0
@@ -0,0 +1 @@
+libcacard.so.0.0.0
\ No newline at end of file
diff --git a/install/lib/libcacard.so.0.0.0 b/install/lib/libcacard.so.0.0.0
new file mode 100644
index 0000000..20682ab
Binary files /dev/null and b/install/lib/libcacard.so.0.0.0 differ
diff --git a/install/lib/pkgconfig/libcacard.pc b/install/lib/pkgconfig/libcacard.pc
new file mode 100644
index 0000000..8d188c9
--- /dev/null
+++ b/install/lib/pkgconfig/libcacard.pc
@@ -0,0 +1,13 @@
+prefix=/home/vax5/u46/criswell/classes/256/qemu/install
+exec_prefix=${prefix}
+libdir=/home/vax5/u46/criswell/classes/256/qemu/install/lib
+includedir=/home/vax5/u46/criswell/classes/256/qemu/install/include/cacard
+
+Name: cacard
+Description: CA Card library
+Version: 2.1.1
+
+Requires:  nss
+Libs: -L${libdir} -lcacard
+Libs.private:
+Cflags: -I${includedir}
diff --git a/install/libexec/qemu-bridge-helper b/install/libexec/qemu-bridge-helper
new file mode 100755
index 0000000..67c90e0
Binary files /dev/null and b/install/libexec/qemu-bridge-helper differ
diff --git a/install/man/man1/make.1 b/install/man/man1/make.1
new file mode 100644
index 0000000..d11c4e6
--- /dev/null
+++ b/install/man/man1/make.1
@@ -0,0 +1,365 @@
+.TH MAKE 1 "22 August 1989" "GNU" "LOCAL USER COMMANDS"
+.SH NAME
+make \- GNU make utility to maintain groups of programs
+.SH SYNOPSIS
+.B "make "
+[
+.B \-f
+.I makefile
+] [ options ] ... [ targets ] ...
+.SH WARNING
+This man page is an extract of the documentation of GNU
+.IR make .
+It is updated only occasionally, because the GNU project does not use nroff.
+For complete, current documentation, refer to the Info file
+.B make.info
+which is made from the Texinfo source file
+.BR make.texi .
+.SH DESCRIPTION
+.LP
+The purpose of the
+.I make
+utility is to determine automatically which
+pieces of a large program need to be recompiled, and issue the commands to
+recompile them.
+The manual describes the GNU implementation of
+.IR make ,
+which was written by Richard Stallman and Roland McGrath, and is
+currently maintained by Paul Smith.
+Our examples show C programs, since they are most common, but you can use
+.I make
+with any programming language whose compiler can be run with a
+shell command.
+In fact,
+.I make
+is not limited to programs.
+You can use it to describe any task where some files must be
+updated automatically from others whenever the others change.
+.LP
+To prepare to use
+.IR make ,
+you must write a file called the
+.I makefile
+that describes the relationships among files in your program, and the
+states the commands for updating each file.
+In a program, typically the executable file is updated from object
+files, which are in turn made by compiling source files.
+.LP
+Once a suitable makefile exists, each time you change some source files,
+this simple shell command:
+.sp 1
+.RS
+.B make
+.RE
+.sp 1
+suffices to perform all necessary recompilations.
+The
+.I make
+program uses the makefile data base and the last-modification times
+of the files to decide which of the files need to be updated.
+For each of those files, it issues the commands recorded in the data base.
+.LP
+.I make
+executes commands in the
+.I makefile
+to update
+one or more target
+.IR names ,
+where
+.I name
+is typically a program.
+If no
+.B \-f
+option is present,
+.I make
+will look for the makefiles
+.IR GNUmakefile ,
+.IR makefile ,
+and
+.IR Makefile ,
+in that order.
+.LP
+Normally you should call your makefile either
+.I makefile
+or
+.IR Makefile .
+(We recommend
+.I Makefile
+because it appears prominently near the beginning of a directory
+listing, right near other important files such as
+.IR  README .)
+The first name checked,
+.IR GNUmakefile ,
+is not recommended for most makefiles.
+You should use this name if you have a makefile that is specific to GNU
+.IR make ,
+and will not be understood by other versions of
+.IR make .
+If
+.I makefile
+is `\-', the standard input is read.
+.LP
+.I make
+updates a target if it depends on prerequisite files
+that have been modified since the target was last modified,
+or if the target does not exist.
+.SH OPTIONS
+.sp 1
+.TP 0.5i
+.BR \-b , " \-m"
+These options are ignored for compatibility with other versions of
+.IR make .
+.TP 0.5i
+.BR \-B , " \-\-always\-make"
+Unconditionally make all targets.
+.TP 0.5i
+\fB\-C\fR \fIdir\fR, \fB\-\-directory\fR=\fIdir\fR
+Change to directory
+.I dir
+before reading the makefiles or doing anything else.
+If multiple
+.B \-C
+options are specified, each is interpreted relative to the
+previous one:
+.BR "\-C " /
+.BR "\-C " etc
+is equivalent to
+.BR "\-C " /etc.
+This is typically used with recursive invocations of
+.IR make .
+.TP 0.5i
+.B \-d
+Print debugging information in addition to normal processing.
+The debugging information says which files are being considered for
+remaking, which file-times are being compared and with what results,
+which files actually need to be remade, which implicit rules are
+considered and which are applied---everything interesting about how
+.I make
+decides what to do.
+.TP 0.5i
+.BI \-\-debug "[=FLAGS]"
+Print debugging information in addition to normal processing.
+If the
+.I FLAGS
+are omitted, then the behavior is the same as if
+.B \-d
+was specified.
+.I FLAGS
+may be
+.I a
+for all debugging output (same as using
+.BR \-d ),
+.I b
+for basic debugging,
+.I v
+for more verbose basic debugging,
+.I i
+for showing implicit rules,
+.I j
+for details on invocation of commands, and
+.I m
+for debugging while remaking makefiles.
+.TP 0.5i
+.BR \-e , " \-\-environment\-overrides"
+Give variables taken from the environment precedence
+over variables from makefiles.
+.TP 0.5i
++\fB\-f\fR \fIfile\fR, \fB\-\-file\fR=\fIfile\fR, \fB\-\-makefile\fR=\fIFILE\fR
+Use
+.I file
+as a makefile.
+.TP 0.5i
+.BR \-i , " \-\-ignore\-errors"
+Ignore all errors in commands executed to remake files.
+.TP 0.5i
+\fB\-I\fR \fIdir\fR, \fB\-\-include\-dir\fR=\fIdir\fR
+Specifies a directory
+.I dir
+to search for included makefiles.
+If several
+.B \-I
+options are used to specify several directories, the directories are
+searched in the order specified.
+Unlike the arguments to other flags of
+.IR make ,
+directories given with
+.B \-I
+flags may come directly after the flag:
+.BI \-I dir
+is allowed, as well as
+.BI "\-I " dir.
+This syntax is allowed for compatibility with the C
+preprocessor's
+.B \-I
+flag.
+.TP 0.5i
+\fB\-j\fR [\fIjobs\fR], \fB\-\-jobs\fR[=\fIjobs\fR]
+Specifies the number of
+.I jobs
+(commands) to run simultaneously.
+If there is more than one
+.B \-j
+option, the last one is effective.
+If the
+.B \-j
+option is given without an argument,
+.IR make
+will not limit the number of jobs that can run simultaneously.
+.TP 0.5i
+.BR \-k , " \-\-keep\-going"
+Continue as much as possible after an error.
+While the target that failed, and those that depend on it, cannot
+be remade, the other dependencies of these targets can be processed
+all the same.
+.TP 0.5i
+\fB\-l\fR [\fIload\fR], \fB\-\-load\-average\fR[=\fIload\fR]
+Specifies that no new jobs (commands) should be started if there are
+others jobs running and the load average is at least
+.I load
+(a floating-point number).
+With no argument, removes a previous load limit.
+.TP 0.5i
+.BR \-L , " \-\-check\-symlink\-times"
+Use the latest mtime between symlinks and target.
+.TP 0.5i
+.BR \-n , " \-\-just\-print" , " \-\-dry\-run" , " \-\-recon"
+Print the commands that would be executed, but do not execute them.
+.TP 0.5i
+\fB\-o\fR \fIfile\fR, \fB\-\-old\-file\fR=\fIfile\fR, \fB\-\-assume\-old\fR=\fIfile\fR
+Do not remake the file
+.I file
+even if it is older than its dependencies, and do not remake anything
+on account of changes in
+.IR file .
+Essentially the file is treated as very old and its rules are ignored.
+.TP 0.5i
+.BR \-p , " \-\-print\-data\-base"
+Print the data base (rules and variable values) that results from
+reading the makefiles; then execute as usual or as otherwise
+specified.
+This also prints the version information given by the
+.B \-v
+switch (see below).
+To print the data base without trying to remake any files, use
+.B make
+.B \-p
+.BI \-f /dev/null.
+.TP 0.5i
+.BR \-q , " \-\-question"
+``Question mode''.
+Do not run any commands, or print anything; just return an exit status
+that is zero if the specified targets are already up to date, nonzero
+otherwise.
+.TP 0.5i
+.BR \-r , " \-\-no\-builtin\-rules"
+Eliminate use of the built\-in implicit rules.
+Also clear out the default list of suffixes for suffix rules.
+.TP 0.5i
+.BR \-R , " \-\-no\-builtin\-variables"
+Don't define any built\-in variables.
+.TP 0.5i
+.BR \-s , " \-\-silent" , " \-\-quiet"
+Silent operation; do not print the commands as they are executed.
+.TP 0.5i
+.BR \-S , " \-\-no\-keep\-going" , " \-\-stop"
+Cancel the effect of the
+.B \-k
+option.
+This is never necessary except in a recursive
+.I make
+where
+.B \-k
+might be inherited from the top-level
+.I make
+via MAKEFLAGS or if you set
+.B \-k
+in MAKEFLAGS in your environment.
+.TP 0.5i
+.BR \-t , " \-\-touch"
+Touch files (mark them up to date without really changing them)
+instead of running their commands.
+This is used to pretend that the commands were done, in order to fool
+future invocations of
+.IR make .
+.TP 0.5i
+.BR \-v , " \-\-version"
+Print the version of the
+.I make
+program plus a copyright, a list of authors and a notice that there
+is no warranty.
+.TP 0.5i
+.BR \-w , " \-\-print\-directory"
+Print a message containing the working directory
+before and after other processing.
+This may be useful for tracking down errors from complicated nests of
+recursive
+.I make
+commands.
+.TP 0.5i
+.B \-\-no\-print\-directory
+Turn off
+.BR \-w ,
+even if it was turned on implicitly.
+.TP 0.5i
+\fB\-W\fR \fIfile\fR, \fB\-\-what\-if\fR=\fIfile\fR, \fB\-\-new\-file\fR=\fIfile\fR, \fB\-\-assume\-new\fR=\fIfile\fR
+Pretend that the target
+.I file
+has just been modified.
+When used with the
+.B \-n
+flag, this shows you what would happen if you were to modify that file.
+Without
+.BR \-n ,
+it is almost the same as running a
+.I touch
+command on the given file before running
+.IR make ,
+except that the modification time is changed only in the imagination of
+.IR make .
+.TP 0.5i
+.B \-\-warn\-undefined\-variables
+Warn when an undefined variable is referenced.
+.SH "EXIT STATUS"
+GNU
+.I make
+exits with a status of zero if all makefiles were successfully parsed
+and no targets that were built failed.  A status of one will be returned
+if the
+.B \-q
+flag was used and
+.I make
+determines that a target needs to be rebuilt.  A status of two will be
+returned if any errors were encountered.
+.SH "SEE ALSO"
+.I "The GNU Make Manual"
+.SH BUGS
+See the chapter `Problems and Bugs' in
+.IR "The GNU Make Manual" .
+.SH AUTHOR
+This manual page contributed by Dennis Morse of Stanford University.
+It has been reworked by Roland McGrath.  Further updates contributed by
+Mike Frysinger.
+.SH "COPYRIGHT"
+Copyright (C) 1992, 1993, 1996, 1999 Free Software Foundation, Inc.
+This file is part of GNU
+.IR make .
+.LP
+GNU
+.I make
+is free software; you can redistribute it and/or modify it under the
+terms of the GNU General Public License as published by the Free
+Software Foundation; either version 2, or (at your option) any later
+version.
+.LP
+GNU
+.I make
+is distributed in the hope that it will be useful, but WITHOUT ANY
+WARRANTY; without even the implied warranty of MERCHANTABILITY or
+FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
+for more details.
+.LP
+You should have received a copy of the GNU General Public License
+along with GNU
+.IR make ;
+see the file COPYING.  If not, write to the Free Software Foundation,
+Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301, USA.
diff --git a/install/script b/install/script
new file mode 100644
index 0000000..9dcdf6b
--- /dev/null
+++ b/install/script
@@ -0,0 +1,4 @@
+#!/bin/sh
+
+#./bin/qemu-system-i386 -m 64M -L ./qemu/share/qemu/ -nographic -kernel $HOME/linux-2.6.32.63/arch/x86/boot/bzImage -append “console=ttyS0,115200n8 console=tty0” -hda ../../QDGL/hda.img  
+./bin/qemu-system-i386 -m 64M -L ./qemu/share/qemu/ -nographic -hda ../../QDGL/hda.img  
diff --git a/install/share/doc/qemu/qemu-doc.html b/install/share/doc/qemu/qemu-doc.html
new file mode 100644
index 0000000..86e348d
--- /dev/null
+++ b/install/share/doc/qemu/qemu-doc.html
@@ -0,0 +1,7617 @@
+<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
+<html>
+<!-- Created by GNU Texinfo 5.1, http://www.gnu.org/software/texinfo/ -->
+<head>
+<title>QEMU Emulator User Documentation</title>
+
+<meta name="description" content="QEMU Emulator User Documentation">
+<meta name="keywords" content="QEMU Emulator User Documentation">
+<meta name="resource-type" content="document">
+<meta name="distribution" content="global">
+<meta name="Generator" content="makeinfo">
+<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
+<link href="#Top" rel="start" title="Top">
+<link href="#Index" rel="index" title="Index">
+<link href="#SEC_Contents" rel="contents" title="Table of Contents">
+<link href="dir.html#Top" rel="up" title="(dir)">
+<style type="text/css">
+<!--
+a.summary-letter {text-decoration: none}
+blockquote.smallquotation {font-size: smaller}
+div.display {margin-left: 3.2em}
+div.example {margin-left: 3.2em}
+div.indentedblock {margin-left: 3.2em}
+div.lisp {margin-left: 3.2em}
+div.smalldisplay {margin-left: 3.2em}
+div.smallexample {margin-left: 3.2em}
+div.smallindentedblock {margin-left: 3.2em; font-size: smaller}
+div.smalllisp {margin-left: 3.2em}
+kbd {font-style:oblique}
+pre.display {font-family: inherit}
+pre.format {font-family: inherit}
+pre.menu-comment {font-family: serif}
+pre.menu-preformatted {font-family: serif}
+pre.smalldisplay {font-family: inherit; font-size: smaller}
+pre.smallexample {font-size: smaller}
+pre.smallformat {font-family: inherit; font-size: smaller}
+pre.smalllisp {font-size: smaller}
+span.nocodebreak {white-space:nowrap}
+span.nolinebreak {white-space:nowrap}
+span.roman {font-family:serif; font-weight:normal}
+span.sansserif {font-family:sans-serif; font-weight:normal}
+ul.no-bullet {list-style: none}
+-->
+</style>
+
+
+</head>
+
+<body lang="en" bgcolor="#FFFFFF" text="#000000" link="#0000FF" vlink="#800080" alink="#FF0000">
+<h1 class="settitle" align="center">QEMU Emulator User Documentation</h1>
+
+
+
+
+
+<a name="Top"></a>
+<a name="SEC_Top"></a>
+
+
+<a name="SEC_Contents"></a>
+<h2 class="contents-heading">Table of Contents</h2>
+
+<div class="contents">
+
+<ul class="no-bullet">
+  <li><a name="toc-Introduction-1" href="#Introduction">1 Introduction</a>
+  <ul class="no-bullet">
+    <li><a name="toc-Features" href="#intro_005ffeatures">1.1 Features</a></li>
+  </ul></li>
+  <li><a name="toc-Installation-1" href="#Installation">2 Installation</a>
+  <ul class="no-bullet">
+    <li><a name="toc-Linux" href="#install_005flinux">2.1 Linux</a></li>
+    <li><a name="toc-Windows-1" href="#install_005fwindows">2.2 Windows</a></li>
+    <li><a name="toc-Mac-OS-X-1" href="#install_005fmac">2.3 Mac OS X</a></li>
+  </ul></li>
+  <li><a name="toc-QEMU-PC-System-emulator-1" href="#QEMU-PC-System-emulator">3 QEMU PC System emulator</a>
+  <ul class="no-bullet">
+    <li><a name="toc-Introduction-2" href="#pcsys_005fintroduction">3.1 Introduction</a></li>
+    <li><a name="toc-Quick-Start-1" href="#pcsys_005fquickstart">3.2 Quick Start</a></li>
+    <li><a name="toc-Invocation" href="#sec_005finvocation">3.3 Invocation</a></li>
+    <li><a name="toc-Keys" href="#pcsys_005fkeys">3.4 Keys</a></li>
+    <li><a name="toc-QEMU-Monitor" href="#pcsys_005fmonitor">3.5 QEMU Monitor</a>
+    <ul class="no-bullet">
+      <li><a name="toc-Commands" href="#Commands">3.5.1 Commands</a></li>
+      <li><a name="toc-Integer-expressions" href="#Integer-expressions">3.5.2 Integer expressions</a></li>
+    </ul></li>
+    <li><a name="toc-Disk-Images" href="#disk_005fimages">3.6 Disk Images</a>
+    <ul class="no-bullet">
+      <li><a name="toc-Quick-start-for-disk-image-creation" href="#disk_005fimages_005fquickstart">3.6.1 Quick start for disk image creation</a></li>
+      <li><a name="toc-Snapshot-mode" href="#disk_005fimages_005fsnapshot_005fmode">3.6.2 Snapshot mode</a></li>
+      <li><a name="toc-VM-snapshots" href="#vm_005fsnapshots">3.6.3 VM snapshots</a></li>
+      <li><a name="toc-qemu_002dimg-Invocation" href="#qemu_005fimg_005finvocation">3.6.4 <code>qemu-img</code> Invocation</a></li>
+      <li><a name="toc-qemu_002dnbd-Invocation" href="#qemu_005fnbd_005finvocation">3.6.5 <code>qemu-nbd</code> Invocation</a></li>
+      <li><a name="toc-Disk-image-file-formats" href="#disk_005fimages_005fformats">3.6.6 Disk image file formats</a>
+      <ul class="no-bullet">
+        <li><a name="toc-Read_002donly-formats" href="#Read_002donly-formats">3.6.6.1 Read-only formats</a></li>
+      </ul></li>
+      <li><a name="toc-Using-host-drives" href="#host_005fdrives">3.6.7 Using host drives</a>
+      <ul class="no-bullet">
+        <li><a name="toc-Linux-1" href="#Linux-1">3.6.7.1 Linux</a></li>
+        <li><a name="toc-Windows-2" href="#Windows-2">3.6.7.2 Windows</a></li>
+        <li><a name="toc-Mac-OS-X-2" href="#Mac-OS-X-2">3.6.7.3 Mac OS X</a></li>
+      </ul></li>
+      <li><a name="toc-Virtual-FAT-disk-images" href="#disk_005fimages_005ffat_005fimages">3.6.8 Virtual FAT disk images</a></li>
+      <li><a name="toc-NBD-access" href="#disk_005fimages_005fnbd">3.6.9 NBD access</a></li>
+      <li><a name="toc-Sheepdog-disk-images" href="#disk_005fimages_005fsheepdog">3.6.10 Sheepdog disk images</a></li>
+      <li><a name="toc-iSCSI-LUNs" href="#disk_005fimages_005fiscsi">3.6.11 iSCSI LUNs</a></li>
+      <li><a name="toc-GlusterFS-disk-images" href="#disk_005fimages_005fgluster">3.6.12 GlusterFS disk images</a></li>
+      <li><a name="toc-Secure-Shell-_0028ssh_0029-disk-images" href="#disk_005fimages_005fssh">3.6.13 Secure Shell (ssh) disk images</a></li>
+    </ul></li>
+    <li><a name="toc-Network-emulation" href="#pcsys_005fnetwork">3.7 Network emulation</a>
+    <ul class="no-bullet">
+      <li><a name="toc-VLANs" href="#VLANs">3.7.1 VLANs</a></li>
+      <li><a name="toc-Using-TAP-network-interfaces" href="#Using-TAP-network-interfaces">3.7.2 Using TAP network interfaces</a>
+      <ul class="no-bullet">
+        <li><a name="toc-Linux-host" href="#Linux-host">3.7.2.1 Linux host</a></li>
+        <li><a name="toc-Windows-host" href="#Windows-host">3.7.2.2 Windows host</a></li>
+      </ul></li>
+      <li><a name="toc-Using-the-user-mode-network-stack" href="#Using-the-user-mode-network-stack">3.7.3 Using the user mode network stack</a></li>
+      <li><a name="toc-Connecting-VLANs-between-QEMU-instances" href="#Connecting-VLANs-between-QEMU-instances">3.7.4 Connecting VLANs between QEMU instances</a></li>
+    </ul></li>
+    <li><a name="toc-Other-Devices" href="#pcsys_005fother_005fdevs">3.8 Other Devices</a>
+    <ul class="no-bullet">
+      <li><a name="toc-Inter_002dVM-Shared-Memory-device" href="#Inter_002dVM-Shared-Memory-device">3.8.1 Inter-VM Shared Memory device</a></li>
+    </ul></li>
+    <li><a name="toc-Direct-Linux-Boot" href="#direct_005flinux_005fboot">3.9 Direct Linux Boot</a></li>
+    <li><a name="toc-USB-emulation" href="#pcsys_005fusb">3.10 USB emulation</a>
+    <ul class="no-bullet">
+      <li><a name="toc-Connecting-USB-devices" href="#usb_005fdevices">3.10.1 Connecting USB devices</a></li>
+      <li><a name="toc-Using-host-USB-devices-on-a-Linux-host" href="#host_005fusb_005fdevices">3.10.2 Using host USB devices on a Linux host</a></li>
+    </ul></li>
+    <li><a name="toc-VNC-security" href="#vnc_005fsecurity">3.11 VNC security</a>
+    <ul class="no-bullet">
+      <li><a name="toc-Without-passwords" href="#vnc_005fsec_005fnone">3.11.1 Without passwords</a></li>
+      <li><a name="toc-With-passwords" href="#vnc_005fsec_005fpassword">3.11.2 With passwords</a></li>
+      <li><a name="toc-With-x509-certificates" href="#vnc_005fsec_005fcertificate">3.11.3 With x509 certificates</a></li>
+      <li><a name="toc-With-x509-certificates-and-client-verification" href="#vnc_005fsec_005fcertificate_005fverify">3.11.4 With x509 certificates and client verification</a></li>
+      <li><a name="toc-With-x509-certificates_002c-client-verification-and-passwords" href="#vnc_005fsec_005fcertificate_005fpw">3.11.5 With x509 certificates, client verification and passwords</a></li>
+      <li><a name="toc-With-SASL-authentication" href="#vnc_005fsec_005fsasl">3.11.6 With SASL authentication</a></li>
+      <li><a name="toc-With-x509-certificates-and-SASL-authentication" href="#vnc_005fsec_005fcertificate_005fsasl">3.11.7 With x509 certificates and SASL authentication</a></li>
+      <li><a name="toc-Generating-certificates-for-VNC" href="#vnc_005fgenerate_005fcert">3.11.8 Generating certificates for VNC</a>
+      <ul class="no-bullet">
+        <li><a name="toc-Setup-the-Certificate-Authority" href="#vnc_005fgenerate_005fca">3.11.8.1 Setup the Certificate Authority</a></li>
+        <li><a name="toc-Issuing-server-certificates" href="#vnc_005fgenerate_005fserver">3.11.8.2 Issuing server certificates</a></li>
+        <li><a name="toc-Issuing-client-certificates" href="#vnc_005fgenerate_005fclient">3.11.8.3 Issuing client certificates</a></li>
+      </ul></li>
+      <li><a name="toc-Configuring-SASL-mechanisms" href="#vnc_005fsetup_005fsasl">3.11.9 Configuring SASL mechanisms</a></li>
+    </ul></li>
+    <li><a name="toc-GDB-usage" href="#gdb_005fusage">3.12 GDB usage</a></li>
+    <li><a name="toc-Target-OS-specific-information" href="#pcsys_005fos_005fspecific">3.13 Target OS specific information</a>
+    <ul class="no-bullet">
+      <li><a name="toc-Linux-2" href="#Linux-2">3.13.1 Linux</a></li>
+      <li><a name="toc-Windows-3" href="#Windows-3">3.13.2 Windows</a>
+      <ul class="no-bullet">
+        <li><a name="toc-SVGA-graphic-modes-support" href="#SVGA-graphic-modes-support">3.13.2.1 SVGA graphic modes support</a></li>
+        <li><a name="toc-CPU-usage-reduction" href="#CPU-usage-reduction">3.13.2.2 CPU usage reduction</a></li>
+        <li><a name="toc-Windows-2000-disk-full-problem" href="#Windows-2000-disk-full-problem">3.13.2.3 Windows 2000 disk full problem</a></li>
+        <li><a name="toc-Windows-2000-shutdown" href="#Windows-2000-shutdown">3.13.2.4 Windows 2000 shutdown</a></li>
+        <li><a name="toc-Share-a-directory-between-Unix-and-Windows" href="#Share-a-directory-between-Unix-and-Windows">3.13.2.5 Share a directory between Unix and Windows</a></li>
+        <li><a name="toc-Windows-XP-security-problem" href="#Windows-XP-security-problem">3.13.2.6 Windows XP security problem</a></li>
+      </ul></li>
+      <li><a name="toc-MS_002dDOS-and-FreeDOS" href="#MS_002dDOS-and-FreeDOS">3.13.3 MS-DOS and FreeDOS</a>
+      <ul class="no-bullet">
+        <li><a name="toc-CPU-usage-reduction-1" href="#CPU-usage-reduction-1">3.13.3.1 CPU usage reduction</a></li>
+      </ul></li>
+    </ul></li>
+  </ul></li>
+  <li><a name="toc-QEMU-System-emulator-for-non-PC-targets-1" href="#QEMU-System-emulator-for-non-PC-targets">4 QEMU System emulator for non PC targets</a>
+  <ul class="no-bullet">
+    <li><a name="toc-PowerPC-System-emulator-1" href="#PowerPC-System-emulator">4.1 PowerPC System emulator</a></li>
+    <li><a name="toc-Sparc32-System-emulator-1" href="#Sparc32-System-emulator">4.2 Sparc32 System emulator</a></li>
+    <li><a name="toc-Sparc64-System-emulator-1" href="#Sparc64-System-emulator">4.3 Sparc64 System emulator</a></li>
+    <li><a name="toc-MIPS-System-emulator-1" href="#MIPS-System-emulator">4.4 MIPS System emulator</a></li>
+    <li><a name="toc-ARM-System-emulator-1" href="#ARM-System-emulator">4.5 ARM System emulator</a></li>
+    <li><a name="toc-ColdFire-System-emulator-1" href="#ColdFire-System-emulator">4.6 ColdFire System emulator</a></li>
+    <li><a name="toc-Cris-System-emulator-1" href="#Cris-System-emulator">4.7 Cris System emulator</a></li>
+    <li><a name="toc-Microblaze-System-emulator-1" href="#Microblaze-System-emulator">4.8 Microblaze System emulator</a></li>
+    <li><a name="toc-SH4-System-emulator-1" href="#SH4-System-emulator">4.9 SH4 System emulator</a></li>
+    <li><a name="toc-Xtensa-System-emulator-1" href="#Xtensa-System-emulator">4.10 Xtensa System emulator</a></li>
+  </ul></li>
+  <li><a name="toc-QEMU-User-space-emulator-1" href="#QEMU-User-space-emulator">5 QEMU User space emulator</a>
+  <ul class="no-bullet">
+    <li><a name="toc-Supported-Operating-Systems-1" href="#Supported-Operating-Systems">5.1 Supported Operating Systems</a></li>
+    <li><a name="toc-Linux-User-space-emulator-1" href="#Linux-User-space-emulator">5.2 Linux User space emulator</a>
+    <ul class="no-bullet">
+      <li><a name="toc-Quick-Start-2" href="#Quick-Start">5.2.1 Quick Start</a></li>
+      <li><a name="toc-Wine-launch-1" href="#Wine-launch">5.2.2 Wine launch</a></li>
+      <li><a name="toc-Command-line-options-1" href="#Command-line-options">5.2.3 Command line options</a></li>
+      <li><a name="toc-Other-binaries-1" href="#Other-binaries">5.2.4 Other binaries</a></li>
+    </ul></li>
+    <li><a name="toc-BSD-User-space-emulator-1" href="#BSD-User-space-emulator">5.3 BSD User space emulator</a>
+    <ul class="no-bullet">
+      <li><a name="toc-BSD-Status-1" href="#BSD-Status">5.3.1 BSD Status</a></li>
+      <li><a name="toc-Quick-Start-3" href="#BSD-Quick-Start">5.3.2 Quick Start</a></li>
+      <li><a name="toc-Command-line-options-2" href="#BSD-Command-line-options">5.3.3 Command line options</a></li>
+    </ul></li>
+  </ul></li>
+  <li><a name="toc-Compilation-from-the-sources" href="#compilation">6 Compilation from the sources</a>
+  <ul class="no-bullet">
+    <li><a name="toc-Linux_002fUnix-1" href="#Linux_002fUnix">6.1 Linux/Unix</a>
+    <ul class="no-bullet">
+      <li><a name="toc-Compilation" href="#Compilation">6.1.1 Compilation</a></li>
+    </ul></li>
+    <li><a name="toc-Windows-4" href="#Windows">6.2 Windows</a></li>
+    <li><a name="toc-Cross-compilation-for-Windows-with-Linux-1" href="#Cross-compilation-for-Windows-with-Linux">6.3 Cross compilation for Windows with Linux</a></li>
+    <li><a name="toc-Mac-OS-X-3" href="#Mac-OS-X">6.4 Mac OS X</a></li>
+    <li><a name="toc-Make-targets-1" href="#Make-targets">6.5 Make targets</a></li>
+  </ul></li>
+  <li><a name="toc-License-1" href="#License">Appendix A License</a></li>
+  <li><a name="toc-Index-1" href="#Index">Appendix B Index</a>
+  <ul class="no-bullet">
+    <li><a name="toc-Concept-Index-1" href="#Concept-Index">B.1 Concept Index</a></li>
+    <li><a name="toc-Function-Index-1" href="#Function-Index">B.2 Function Index</a></li>
+    <li><a name="toc-Keystroke-Index-1" href="#Keystroke-Index">B.3 Keystroke Index</a></li>
+    <li><a name="toc-Program-Index-1" href="#Program-Index">B.4 Program Index</a></li>
+    <li><a name="toc-Data-Type-Index-1" href="#Data-Type-Index">B.5 Data Type Index</a></li>
+    <li><a name="toc-Variable-Index-1" href="#Variable-Index">B.6 Variable Index</a></li>
+  </ul></li>
+</ul>
+</div>
+
+
+<hr>
+<a name="Introduction"></a>
+<a name="Introduction-1"></a>
+<h2 class="chapter">1 Introduction</h2>
+
+
+<hr>
+<a name="intro_005ffeatures"></a>
+<a name="Features"></a>
+<h3 class="section">1.1 Features</h3>
+
+<p>QEMU is a FAST! processor emulator using dynamic translation to
+achieve good emulation speed.
+</p>
+<p>QEMU has two operating modes:
+</p>
+<ul>
+<li><a name="index-operating-modes"></a>
+
+</li><li> <a name="index-system-emulation"></a>
+Full system emulation. In this mode, QEMU emulates a full system (for
+example a PC), including one or several processors and various
+peripherals. It can be used to launch different Operating Systems
+without rebooting the PC or to debug system code.
+
+</li><li> <a name="index-user-mode-emulation"></a>
+User mode emulation. In this mode, QEMU can launch
+processes compiled for one CPU on another CPU. It can be used to
+launch the Wine Windows API emulator (<a href="http://www.winehq.org">http://www.winehq.org</a>) or
+to ease cross-compilation and cross-debugging.
+
+</li></ul>
+
+<p>QEMU can run without a host kernel driver and yet gives acceptable
+performance.
+</p>
+<p>For system emulation, the following hardware targets are supported:
+</p><ul>
+<li> <a name="index-emulated-target-systems"></a>
+<a name="index-supported-target-systems"></a>
+PC (x86 or x86_64 processor)
+</li><li> ISA PC (old style PC without PCI bus)
+</li><li> PREP (PowerPC processor)
+</li><li> G3 Beige PowerMac (PowerPC processor)
+</li><li> Mac99 PowerMac (PowerPC processor, in progress)
+</li><li> Sun4m/Sun4c/Sun4d (32-bit Sparc processor)
+</li><li> Sun4u/Sun4v (64-bit Sparc processor, in progress)
+</li><li> Malta board (32-bit and 64-bit MIPS processors)
+</li><li> MIPS Magnum (64-bit MIPS processor)
+</li><li> ARM Integrator/CP (ARM)
+</li><li> ARM Versatile baseboard (ARM)
+</li><li> ARM RealView Emulation/Platform baseboard (ARM)
+</li><li> Spitz, Akita, Borzoi, Terrier and Tosa PDAs (PXA270 processor)
+</li><li> Luminary Micro LM3S811EVB (ARM Cortex-M3)
+</li><li> Luminary Micro LM3S6965EVB (ARM Cortex-M3)
+</li><li> Freescale MCF5208EVB (ColdFire V2).
+</li><li> Arnewsh MCF5206 evaluation board (ColdFire V2).
+</li><li> Palm Tungsten|E PDA (OMAP310 processor)
+</li><li> N800 and N810 tablets (OMAP2420 processor)
+</li><li> MusicPal (MV88W8618 ARM processor)
+</li><li> Gumstix &quot;Connex&quot; and &quot;Verdex&quot; motherboards (PXA255/270).
+</li><li> Siemens SX1 smartphone (OMAP310 processor)
+</li><li> AXIS-Devboard88 (CRISv32 ETRAX-FS).
+</li><li> Petalogix Spartan 3aDSP1800 MMU ref design (MicroBlaze).
+</li><li> Avnet LX60/LX110/LX200 boards (Xtensa)
+</li></ul>
+
+<a name="index-supported-user-mode-targets"></a>
+<p>For user emulation, x86 (32 and 64 bit), PowerPC (32 and 64 bit),
+ARM, MIPS (32 bit only), Sparc (32 and 64 bit),
+Alpha, ColdFire(m68k), CRISv32 and MicroBlaze CPUs are supported.
+</p>
+<hr>
+<a name="Installation"></a>
+<a name="Installation-1"></a>
+<h2 class="chapter">2 Installation</h2>
+
+<p>If you want to compile QEMU yourself, see <a href="#compilation">compilation</a>.
+</p>
+
+<hr>
+<a name="install_005flinux"></a>
+<a name="Linux"></a>
+<h3 class="section">2.1 Linux</h3>
+<a name="index-installation-_0028Linux_0029"></a>
+
+<p>If a precompiled package is available for your distribution - you just
+have to install it. Otherwise, see <a href="#compilation">compilation</a>.
+</p>
+<hr>
+<a name="install_005fwindows"></a>
+<a name="Windows-1"></a>
+<h3 class="section">2.2 Windows</h3>
+<a name="index-installation-_0028Windows_0029"></a>
+
+<p>Download the experimental binary installer at
+<a href="http://www.free.oszoo.org/download.html">http://www.free.oszoo.org/download.html</a>.
+TODO (no longer available)
+</p>
+<hr>
+<a name="install_005fmac"></a>
+<a name="Mac-OS-X-1"></a>
+<h3 class="section">2.3 Mac OS X</h3>
+
+<p>Download the experimental binary installer at
+<a href="http://www.free.oszoo.org/download.html">http://www.free.oszoo.org/download.html</a>.
+TODO (no longer available)
+</p>
+<hr>
+<a name="QEMU-PC-System-emulator"></a>
+<a name="QEMU-PC-System-emulator-1"></a>
+<h2 class="chapter">3 QEMU PC System emulator</h2>
+<a name="index-system-emulation-_0028PC_0029"></a>
+
+
+<hr>
+<a name="pcsys_005fintroduction"></a>
+<a name="Introduction-2"></a>
+<h3 class="section">3.1 Introduction</h3>
+
+
+<p>The QEMU PC System emulator simulates the
+following peripherals:
+</p>
+<ul class="no-bullet">
+<li>- i440FX host PCI bridge and PIIX3 PCI to ISA bridge
+</li><li>- Cirrus CLGD 5446 PCI VGA card or dummy VGA card with Bochs VESA
+extensions (hardware level, including all non standard modes).
+</li><li>- PS/2 mouse and keyboard
+</li><li>- 2 PCI IDE interfaces with hard disk and CD-ROM support
+</li><li>- Floppy disk
+</li><li>- PCI and ISA network adapters
+</li><li>- Serial ports
+</li><li>- Creative SoundBlaster 16 sound card
+</li><li>- ENSONIQ AudioPCI ES1370 sound card
+</li><li>- Intel 82801AA AC97 Audio compatible sound card
+</li><li>- Intel HD Audio Controller and HDA codec
+</li><li>- Adlib (OPL2) - Yamaha YM3812 compatible chip
+</li><li>- Gravis Ultrasound GF1 sound card
+</li><li>- CS4231A compatible sound card
+</li><li>- PCI UHCI USB controller and a virtual USB hub.
+</li></ul>
+
+<p>SMP is supported with up to 255 CPUs.
+</p>
+<p>QEMU uses the PC BIOS from the Seabios project and the Plex86/Bochs LGPL
+VGA BIOS.
+</p>
+<p>QEMU uses YM3812 emulation by Tatsuyuki Satoh.
+</p>
+<p>QEMU uses GUS emulation (GUSEMU32 <a href="http://www.deinmeister.de/gusemu/">http://www.deinmeister.de/gusemu/</a>)
+by Tibor &quot;TS&quot; Schütz.
+</p>
+<p>Note that, by default, GUS shares IRQ(7) with parallel ports and so
+QEMU must be told to not have parallel ports to have working GUS.
+</p>
+<div class="example">
+<pre class="example">qemu-system-i386 dos.img -soundhw gus -parallel none
+</pre></div>
+
+<p>Alternatively:
+</p><div class="example">
+<pre class="example">qemu-system-i386 dos.img -device gus,irq=5
+</pre></div>
+
+<p>Or some other unclaimed IRQ.
+</p>
+<p>CS4231A is the chip used in Windows Sound System and GUSMAX products
+</p>
+
+<hr>
+<a name="pcsys_005fquickstart"></a>
+<a name="Quick-Start-1"></a>
+<h3 class="section">3.2 Quick Start</h3>
+<a name="index-quick-start"></a>
+
+<p>Download and uncompress the linux image (<samp>linux.img</samp>) and type:
+</p>
+<div class="example">
+<pre class="example">qemu-system-i386 linux.img
+</pre></div>
+
+<p>Linux should boot and give you a prompt.
+</p>
+<hr>
+<a name="sec_005finvocation"></a>
+<a name="Invocation"></a>
+<h3 class="section">3.3 Invocation</h3>
+
+<div class="example">
+<pre class="example">usage: qemu-system-i386 [options] [<var>disk_image</var>]
+</pre></div>
+
+<p><var>disk_image</var> is a raw hard disk image for IDE hard disk 0. Some
+targets do not need a disk image.
+</p>
+<p>Standard options:
+</p><dl compact="compact">
+<dt><samp>-h</samp></dt>
+<dd><a name="index-_002dh"></a>
+<p>Display help and exit
+</p></dd>
+<dt><samp>-version</samp></dt>
+<dd><a name="index-_002dversion"></a>
+<p>Display version information and exit
+</p></dd>
+<dt><samp>-machine [type=]<var>name</var>[,prop=<var>value</var>[,...]]</samp></dt>
+<dd><a name="index-_002dmachine"></a>
+<p>Select the emulated machine by <var>name</var>. Use <code>-machine help</code> to list
+available machines. Supported machine properties are:
+</p><dl compact="compact">
+<dt><samp>accel=<var>accels1</var>[:<var>accels2</var>[:...]]</samp></dt>
+<dd><p>This is used to enable an accelerator. Depending on the target architecture,
+kvm, xen, or tcg can be available. By default, tcg is used. If there is more
+than one accelerator specified, the next one is used if the previous one fails
+to initialize.
+</p></dd>
+<dt><samp>kernel_irqchip=on|off</samp></dt>
+<dd><p>Enables in-kernel irqchip support for the chosen accelerator when available.
+</p></dd>
+<dt><samp>kvm_shadow_mem=size</samp></dt>
+<dd><p>Defines the size of the KVM shadow MMU.
+</p></dd>
+<dt><samp>dump-guest-core=on|off</samp></dt>
+<dd><p>Include guest memory in a core dump. The default is on.
+</p></dd>
+<dt><samp>mem-merge=on|off</samp></dt>
+<dd><p>Enables or disables memory merge support. This feature, when supported by
+the host, de-duplicates identical memory pages among VMs instances
+(enabled by default).
+</p></dd>
+</dl>
+</dd>
+<dt><samp>-cpu <var>model</var></samp></dt>
+<dd><a name="index-_002dcpu"></a>
+<p>Select CPU model (<code>-cpu help</code> for list and additional feature selection)
+</p></dd>
+<dt><samp>-smp [cpus=]<var>n</var>[,cores=<var>cores</var>][,threads=<var>threads</var>][,sockets=<var>sockets</var>][,maxcpus=<var>maxcpus</var>]</samp></dt>
+<dd><a name="index-_002dsmp"></a>
+<p>Simulate an SMP system with <var>n</var> CPUs. On the PC target, up to 255
+CPUs are supported. On Sparc32 target, Linux limits the number of usable CPUs
+to 4.
+For the PC target, the number of <var>cores</var> per socket, the number
+of <var>threads</var> per cores and the total number of <var>sockets</var> can be
+specified. Missing values will be computed. If any on the three values is
+given, the total number of CPUs <var>n</var> can be omitted. <var>maxcpus</var>
+specifies the maximum number of hotpluggable CPUs.
+</p></dd>
+<dt><samp>-numa node[,mem=<var>size</var>][,cpus=<var>cpu[-cpu]</var>][,nodeid=<var>node</var>]</samp></dt>
+<dt><samp>-numa node[,memdev=<var>id</var>][,cpus=<var>cpu[-cpu]</var>][,nodeid=<var>node</var>]</samp></dt>
+<dd><a name="index-_002dnuma"></a>
+<p>Simulate a multi node NUMA system. If &lsquo;<samp>mem</samp>&rsquo;, &lsquo;<samp>memdev</samp>&rsquo;
+and &lsquo;<samp>cpus</samp>&rsquo; are omitted, resources are split equally. Also, note
+that the -<samp>numa</samp> option doesn&rsquo;t allocate any of the specified
+resources. That is, it just assigns existing resources to NUMA nodes. This
+means that one still has to use the <samp>-m</samp>, <samp>-smp</samp> options
+to allocate RAM and VCPUs respectively, and possibly <samp>-object</samp>
+to specify the memory backend for the &lsquo;<samp>memdev</samp>&rsquo; suboption.
+</p>
+<p>&lsquo;<samp>mem</samp>&rsquo; and &lsquo;<samp>memdev</samp>&rsquo; are mutually exclusive.  Furthermore, if one
+node uses &lsquo;<samp>memdev</samp>&rsquo;, all of them have to use it.
+</p></dd>
+<dt><samp>-add-fd fd=<var>fd</var>,set=<var>set</var>[,opaque=<var>opaque</var>]</samp></dt>
+<dd><a name="index-_002dadd_002dfd"></a>
+
+<p>Add a file descriptor to an fd set.  Valid options are:
+</p>
+<dl compact="compact">
+<dt><samp>fd=<var>fd</var></samp></dt>
+<dd><p>This option defines the file descriptor of which a duplicate is added to fd set.
+The file descriptor cannot be stdin, stdout, or stderr.
+</p></dd>
+<dt><samp>set=<var>set</var></samp></dt>
+<dd><p>This option defines the ID of the fd set to add the file descriptor to.
+</p></dd>
+<dt><samp>opaque=<var>opaque</var></samp></dt>
+<dd><p>This option defines a free-form string that can be used to describe <var>fd</var>.
+</p></dd>
+</dl>
+
+<p>You can open an image using pre-opened file descriptors from an fd set:
+</p><div class="example">
+<pre class="example">qemu-system-i386
+-add-fd fd=3,set=2,opaque=&quot;rdwr:/path/to/file&quot;
+-add-fd fd=4,set=2,opaque=&quot;rdonly:/path/to/file&quot;
+-drive file=/dev/fdset/2,index=0,media=disk
+</pre></div>
+</dd>
+<dt><samp>-set <var>group</var>.<var>id</var>.<var>arg</var>=<var>value</var></samp></dt>
+<dd><a name="index-_002dset"></a>
+<p>Set parameter <var>arg</var> for item <var>id</var> of type <var>group</var>\n&quot;
+</p></dd>
+<dt><samp>-global <var>driver</var>.<var>prop</var>=<var>value</var></samp></dt>
+<dd><a name="index-_002dglobal"></a>
+<p>Set default value of <var>driver</var>&rsquo;s property <var>prop</var> to <var>value</var>, e.g.:
+</p>
+<div class="example">
+<pre class="example">qemu-system-i386 -global ide-drive.physical_block_size=4096 -drive file=file,if=ide,index=0,media=disk
+</pre></div>
+
+<p>In particular, you can use this to set driver properties for devices which are
+created automatically by the machine model. To create a device which is not
+created automatically and set properties on it, use -<samp>device</samp>.
+</p></dd>
+<dt><samp>-boot [order=<var>drives</var>][,once=<var>drives</var>][,menu=on|off][,splash=<var>sp_name</var>][,splash-time=<var>sp_time</var>][,reboot-timeout=<var>rb_timeout</var>][,strict=on|off]</samp></dt>
+<dd><a name="index-_002dboot"></a>
+<p>Specify boot order <var>drives</var> as a string of drive letters. Valid
+drive letters depend on the target achitecture. The x86 PC uses: a, b
+(floppy 1 and 2), c (first hard disk), d (first CD-ROM), n-p (Etherboot
+from network adapter 1-4), hard disk boot is the default. To apply a
+particular boot order only on the first startup, specify it via
+<samp>once</samp>.
+</p>
+<p>Interactive boot menus/prompts can be enabled via <samp>menu=on</samp> as far
+as firmware/BIOS supports them. The default is non-interactive boot.
+</p>
+<p>A splash picture could be passed to bios, enabling user to show it as logo,
+when option splash=<var>sp_name</var> is given and menu=on, If firmware/BIOS
+supports them. Currently Seabios for X86 system support it.
+limitation: The splash file could be a jpeg file or a BMP file in 24 BPP
+format(true color). The resolution should be supported by the SVGA mode, so
+the recommended is 320x240, 640x480, 800x640.
+</p>
+<p>A timeout could be passed to bios, guest will pause for <var>rb_timeout</var> ms
+when boot failed, then reboot. If <var>rb_timeout</var> is &rsquo;-1&rsquo;, guest will not
+reboot, qemu passes &rsquo;-1&rsquo; to bios by default. Currently Seabios for X86
+system support it.
+</p>
+<p>Do strict boot via <samp>strict=on</samp> as far as firmware/BIOS
+supports it. This only effects when boot priority is changed by
+bootindex options. The default is non-strict boot.
+</p>
+<div class="example">
+<pre class="example"># try to boot from network first, then from hard disk
+qemu-system-i386 -boot order=nc
+# boot from CD-ROM first, switch back to default order after reboot
+qemu-system-i386 -boot once=d
+# boot with a splash picture for 5 seconds.
+qemu-system-i386 -boot menu=on,splash=/root/boot.bmp,splash-time=5000
+</pre></div>
+
+<p>Note: The legacy format &rsquo;-boot <var>drives</var>&rsquo; is still supported but its
+use is discouraged as it may be removed from future versions.
+</p></dd>
+<dt><samp>-m [size=]<var>megs</var></samp></dt>
+<dd><a name="index-_002dm"></a>
+<p>Set virtual RAM size to <var>megs</var> megabytes. Default is 128 MiB.  Optionally,
+a suffix of &ldquo;M&rdquo; or &ldquo;G&rdquo; can be used to signify a value in megabytes or
+gigabytes respectively. Optional pair <var>slots</var>, <var>maxmem</var> could be used
+to set amount of hotluggable memory slots and possible maximum amount of memory.
+</p></dd>
+<dt><samp>-mem-path <var>path</var></samp></dt>
+<dd><a name="index-_002dmem_002dpath"></a>
+<p>Allocate guest RAM from a temporarily created file in <var>path</var>.
+</p></dd>
+<dt><samp>-mem-prealloc</samp></dt>
+<dd><a name="index-_002dmem_002dprealloc"></a>
+<p>Preallocate memory when using -mem-path.
+</p></dd>
+<dt><samp>-k <var>language</var></samp></dt>
+<dd><a name="index-_002dk"></a>
+<p>Use keyboard layout <var>language</var> (for example <code>fr</code> for
+French). This option is only needed where it is not easy to get raw PC
+keycodes (e.g. on Macs, with some X11 servers or with a VNC
+display). You don&rsquo;t normally need to use it on PC/Linux or PC/Windows
+hosts.
+</p>
+<p>The available layouts are:
+</p><div class="example">
+<pre class="example">ar  de-ch  es  fo     fr-ca  hu  ja  mk     no  pt-br  sv
+da  en-gb  et  fr     fr-ch  is  lt  nl     pl  ru     th
+de  en-us  fi  fr-be  hr     it  lv  nl-be  pt  sl     tr
+</pre></div>
+
+<p>The default is <code>en-us</code>.
+</p></dd>
+<dt><samp>-audio-help</samp></dt>
+<dd><a name="index-_002daudio_002dhelp"></a>
+<p>Will show the audio subsystem help: list of drivers, tunable
+parameters.
+</p></dd>
+<dt><samp>-soundhw <var>card1</var>[,<var>card2</var>,...] or -soundhw all</samp></dt>
+<dd><a name="index-_002dsoundhw"></a>
+<p>Enable audio and selected sound hardware. Use &rsquo;help&rsquo; to print all
+available sound hardware.
+</p>
+<div class="example">
+<pre class="example">qemu-system-i386 -soundhw sb16,adlib disk.img
+qemu-system-i386 -soundhw es1370 disk.img
+qemu-system-i386 -soundhw ac97 disk.img
+qemu-system-i386 -soundhw hda disk.img
+qemu-system-i386 -soundhw all disk.img
+qemu-system-i386 -soundhw help
+</pre></div>
+
+<p>Note that Linux&rsquo;s i810_audio OSS kernel (for AC97) module might
+require manually specifying clocking.
+</p>
+<div class="example">
+<pre class="example">modprobe i810_audio clocking=48000
+</pre></div>
+</dd>
+<dt><samp>-balloon none</samp></dt>
+<dd><a name="index-_002dballoon"></a>
+<p>Disable balloon device.
+</p></dd>
+<dt><samp>-balloon virtio[,addr=<var>addr</var>]</samp></dt>
+<dd><p>Enable virtio balloon device (default), optionally with PCI address
+<var>addr</var>.
+</p></dd>
+<dt><samp>-device <var>driver</var>[,<var>prop</var>[=<var>value</var>][,...]]</samp></dt>
+<dd><a name="index-_002ddevice"></a>
+<p>Add device <var>driver</var>.  <var>prop</var>=<var>value</var> sets driver
+properties.  Valid properties depend on the driver.  To get help on
+possible drivers and properties, use <code>-device help</code> and
+<code>-device <var>driver</var>,help</code>.
+</p></dd>
+<dt><samp>-name <var>name</var></samp></dt>
+<dd><a name="index-_002dname"></a>
+<p>Sets the <var>name</var> of the guest.
+This name will be displayed in the SDL window caption.
+The <var>name</var> will also be used for the VNC server.
+Also optionally set the top visible process name in Linux.
+Naming of individual threads can also be enabled on Linux to aid debugging.
+</p></dd>
+<dt><samp>-uuid <var>uuid</var></samp></dt>
+<dd><a name="index-_002duuid"></a>
+<p>Set system UUID.
+</p></dd>
+</dl>
+
+<p>Block device options:
+</p><dl compact="compact">
+<dt><samp>-fda <var>file</var></samp></dt>
+<dt><samp>-fdb <var>file</var></samp></dt>
+<dd><a name="index-_002dfda"></a>
+<a name="index-_002dfdb"></a>
+<p>Use <var>file</var> as floppy disk 0/1 image (see <a href="#disk_005fimages">disk_images</a>). You can
+use the host floppy by using <samp>/dev/fd0</samp> as filename (see <a href="#host_005fdrives">host_drives</a>).
+</p></dd>
+<dt><samp>-hda <var>file</var></samp></dt>
+<dt><samp>-hdb <var>file</var></samp></dt>
+<dt><samp>-hdc <var>file</var></samp></dt>
+<dt><samp>-hdd <var>file</var></samp></dt>
+<dd><a name="index-_002dhda"></a>
+<a name="index-_002dhdb"></a>
+<a name="index-_002dhdc"></a>
+<a name="index-_002dhdd"></a>
+<p>Use <var>file</var> as hard disk 0, 1, 2 or 3 image (see <a href="#disk_005fimages">disk_images</a>).
+</p></dd>
+<dt><samp>-cdrom <var>file</var></samp></dt>
+<dd><a name="index-_002dcdrom"></a>
+<p>Use <var>file</var> as CD-ROM image (you cannot use <samp>-hdc</samp> and
+<samp>-cdrom</samp> at the same time). You can use the host CD-ROM by
+using <samp>/dev/cdrom</samp> as filename (see <a href="#host_005fdrives">host_drives</a>).
+</p></dd>
+<dt><samp>-drive <var>option</var>[,<var>option</var>[,<var>option</var>[,...]]]</samp></dt>
+<dd><a name="index-_002ddrive"></a>
+
+<p>Define a new drive. Valid options are:
+</p>
+<dl compact="compact">
+<dt><samp>file=<var>file</var></samp></dt>
+<dd><p>This option defines which disk image (see <a href="#disk_005fimages">disk_images</a>) to use with
+this drive. If the filename contains comma, you must double it
+(for instance, &quot;file=my,,file&quot; to use file &quot;my,file&quot;).
+</p>
+<p>Special files such as iSCSI devices can be specified using protocol
+specific URLs. See the section for &quot;Device URL Syntax&quot; for more information.
+</p></dd>
+<dt><samp>if=<var>interface</var></samp></dt>
+<dd><p>This option defines on which type on interface the drive is connected.
+Available types are: ide, scsi, sd, mtd, floppy, pflash, virtio.
+</p></dd>
+<dt><samp>bus=<var>bus</var>,unit=<var>unit</var></samp></dt>
+<dd><p>These options define where is connected the drive by defining the bus number and
+the unit id.
+</p></dd>
+<dt><samp>index=<var>index</var></samp></dt>
+<dd><p>This option defines where is connected the drive by using an index in the list
+of available connectors of a given interface type.
+</p></dd>
+<dt><samp>media=<var>media</var></samp></dt>
+<dd><p>This option defines the type of the media: disk or cdrom.
+</p></dd>
+<dt><samp>cyls=<var>c</var>,heads=<var>h</var>,secs=<var>s</var>[,trans=<var>t</var>]</samp></dt>
+<dd><p>These options have the same definition as they have in <samp>-hdachs</samp>.
+</p></dd>
+<dt><samp>snapshot=<var>snapshot</var></samp></dt>
+<dd><p><var>snapshot</var> is &quot;on&quot; or &quot;off&quot; and controls snapshot mode for the given drive
+(see <samp>-snapshot</samp>).
+</p></dd>
+<dt><samp>cache=<var>cache</var></samp></dt>
+<dd><p><var>cache</var> is &quot;none&quot;, &quot;writeback&quot;, &quot;unsafe&quot;, &quot;directsync&quot; or &quot;writethrough&quot; and controls how the host cache is used to access block data.
+</p></dd>
+<dt><samp>aio=<var>aio</var></samp></dt>
+<dd><p><var>aio</var> is &quot;threads&quot;, or &quot;native&quot; and selects between pthread based disk I/O and native Linux AIO.
+</p></dd>
+<dt><samp>discard=<var>discard</var></samp></dt>
+<dd><p><var>discard</var> is one of &quot;ignore&quot; (or &quot;off&quot;) or &quot;unmap&quot; (or &quot;on&quot;) and controls whether <em>discard</em> (also known as <em>trim</em> or <em>unmap</em>) requests are ignored or passed to the filesystem.  Some machine types may not support discard requests.
+</p></dd>
+<dt><samp>format=<var>format</var></samp></dt>
+<dd><p>Specify which disk <var>format</var> will be used rather than detecting
+the format.  Can be used to specifiy format=raw to avoid interpreting
+an untrusted format header.
+</p></dd>
+<dt><samp>serial=<var>serial</var></samp></dt>
+<dd><p>This option specifies the serial number to assign to the device.
+</p></dd>
+<dt><samp>addr=<var>addr</var></samp></dt>
+<dd><p>Specify the controller&rsquo;s PCI address (if=virtio only).
+</p></dd>
+<dt><samp>werror=<var>action</var>,rerror=<var>action</var></samp></dt>
+<dd><p>Specify which <var>action</var> to take on write and read errors. Valid actions are:
+&quot;ignore&quot; (ignore the error and try to continue), &quot;stop&quot; (pause QEMU),
+&quot;report&quot; (report the error to the guest), &quot;enospc&quot; (pause QEMU only if the
+host disk is full; report the error to the guest otherwise).
+The default setting is <samp>werror=enospc</samp> and <samp>rerror=report</samp>.
+</p></dd>
+<dt><samp>readonly</samp></dt>
+<dd><p>Open drive <samp>file</samp> as read-only. Guest write attempts will fail.
+</p></dd>
+<dt><samp>copy-on-read=<var>copy-on-read</var></samp></dt>
+<dd><p><var>copy-on-read</var> is &quot;on&quot; or &quot;off&quot; and enables whether to copy read backing
+file sectors into the image file.
+</p></dd>
+<dt><samp>detect-zeroes=<var>detect-zeroes</var></samp></dt>
+<dd><p><var>detect-zeroes</var> is &quot;off&quot;, &quot;on&quot; or &quot;unmap&quot; and enables the automatic
+conversion of plain zero writes by the OS to driver specific optimized
+zero write commands. You may even choose &quot;unmap&quot; if <var>discard</var> is set
+to &quot;unmap&quot; to allow a zero write to be converted to an UNMAP operation.
+</p></dd>
+</dl>
+
+<p>By default, the <samp>cache=writeback</samp> mode is used. It will report data
+writes as completed as soon as the data is present in the host page cache.
+This is safe as long as your guest OS makes sure to correctly flush disk caches
+where needed. If your guest OS does not handle volatile disk write caches
+correctly and your host crashes or loses power, then the guest may experience
+data corruption.
+</p>
+<p>For such guests, you should consider using <samp>cache=writethrough</samp>. This
+means that the host page cache will be used to read and write data, but write
+notification will be sent to the guest only after QEMU has made sure to flush
+each write to the disk. Be aware that this has a major impact on performance.
+</p>
+<p>The host page cache can be avoided entirely with <samp>cache=none</samp>.  This will
+attempt to do disk IO directly to the guest&rsquo;s memory.  QEMU may still perform
+an internal copy of the data. Note that this is considered a writeback mode and
+the guest OS must handle the disk write cache correctly in order to avoid data
+corruption on host crashes.
+</p>
+<p>The host page cache can be avoided while only sending write notifications to
+the guest when the data has been flushed to the disk using
+<samp>cache=directsync</samp>.
+</p>
+<p>In case you don&rsquo;t care about data integrity over host failures, use
+<samp>cache=unsafe</samp>. This option tells QEMU that it never needs to write any
+data to the disk but can instead keep things in cache. If anything goes wrong,
+like your host losing power, the disk storage getting disconnected accidentally,
+etc. your image will most probably be rendered unusable.   When using
+the <samp>-snapshot</samp> option, unsafe caching is always used.
+</p>
+<p>Copy-on-read avoids accessing the same backing file sectors repeatedly and is
+useful when the backing file is over a slow network.  By default copy-on-read
+is off.
+</p>
+<p>Instead of <samp>-cdrom</samp> you can use:
+</p><div class="example">
+<pre class="example">qemu-system-i386 -drive file=file,index=2,media=cdrom
+</pre></div>
+
+<p>Instead of <samp>-hda</samp>, <samp>-hdb</samp>, <samp>-hdc</samp>, <samp>-hdd</samp>, you can
+use:
+</p><div class="example">
+<pre class="example">qemu-system-i386 -drive file=file,index=0,media=disk
+qemu-system-i386 -drive file=file,index=1,media=disk
+qemu-system-i386 -drive file=file,index=2,media=disk
+qemu-system-i386 -drive file=file,index=3,media=disk
+</pre></div>
+
+<p>You can open an image using pre-opened file descriptors from an fd set:
+</p><div class="example">
+<pre class="example">qemu-system-i386
+-add-fd fd=3,set=2,opaque=&quot;rdwr:/path/to/file&quot;
+-add-fd fd=4,set=2,opaque=&quot;rdonly:/path/to/file&quot;
+-drive file=/dev/fdset/2,index=0,media=disk
+</pre></div>
+
+<p>You can connect a CDROM to the slave of ide0:
+</p><div class="example">
+<pre class="example">qemu-system-i386 -drive file=file,if=ide,index=1,media=cdrom
+</pre></div>
+
+<p>If you don&rsquo;t specify the &quot;file=&quot; argument, you define an empty drive:
+</p><div class="example">
+<pre class="example">qemu-system-i386 -drive if=ide,index=1,media=cdrom
+</pre></div>
+
+<p>You can connect a SCSI disk with unit ID 6 on the bus #0:
+</p><div class="example">
+<pre class="example">qemu-system-i386 -drive file=file,if=scsi,bus=0,unit=6
+</pre></div>
+
+<p>Instead of <samp>-fda</samp>, <samp>-fdb</samp>, you can use:
+</p><div class="example">
+<pre class="example">qemu-system-i386 -drive file=file,index=0,if=floppy
+qemu-system-i386 -drive file=file,index=1,if=floppy
+</pre></div>
+
+<p>By default, <var>interface</var> is &quot;ide&quot; and <var>index</var> is automatically
+incremented:
+</p><div class="example">
+<pre class="example">qemu-system-i386 -drive file=a -drive file=b&quot;
+</pre></div>
+<p>is interpreted like:
+</p><div class="example">
+<pre class="example">qemu-system-i386 -hda a -hdb b
+</pre></div>
+</dd>
+<dt><samp>-mtdblock <var>file</var></samp></dt>
+<dd><a name="index-_002dmtdblock"></a>
+<p>Use <var>file</var> as on-board Flash memory image.
+</p></dd>
+<dt><samp>-sd <var>file</var></samp></dt>
+<dd><a name="index-_002dsd"></a>
+<p>Use <var>file</var> as SecureDigital card image.
+</p></dd>
+<dt><samp>-pflash <var>file</var></samp></dt>
+<dd><a name="index-_002dpflash"></a>
+<p>Use <var>file</var> as a parallel flash image.
+</p></dd>
+<dt><samp>-snapshot</samp></dt>
+<dd><a name="index-_002dsnapshot"></a>
+<p>Write to temporary files instead of disk image files. In this case,
+the raw disk image you use is not written back. You can however force
+the write back by pressing <tt class="key">C-a s</tt> (see <a href="#disk_005fimages">disk_images</a>).
+</p></dd>
+<dt><samp>-hdachs <var>c</var>,<var>h</var>,<var>s</var>,[,<var>t</var>]</samp></dt>
+<dd><a name="index-_002dhdachs"></a>
+<p>Force hard disk 0 physical geometry (1 &lt;= <var>c</var> &lt;= 16383, 1 &lt;=
+<var>h</var> &lt;= 16, 1 &lt;= <var>s</var> &lt;= 63) and optionally force the BIOS
+translation mode (<var>t</var>=none, lba or auto). Usually QEMU can guess
+all those parameters. This option is useful for old MS-DOS disk
+images.
+</p>
+</dd>
+<dt><samp>-fsdev <var>fsdriver</var>,id=<var>id</var>,path=<var>path</var>,[security_model=<var>security_model</var>][,writeout=<var>writeout</var>][,readonly][,socket=<var>socket</var>|sock_fd=<var>sock_fd</var>]</samp></dt>
+<dd><a name="index-_002dfsdev"></a>
+<p>Define a new file system device. Valid options are:
+</p><dl compact="compact">
+<dt><samp><var>fsdriver</var></samp></dt>
+<dd><p>This option specifies the fs driver backend to use.
+Currently &quot;local&quot;, &quot;handle&quot; and &quot;proxy&quot; file system drivers are supported.
+</p></dd>
+<dt><samp>id=<var>id</var></samp></dt>
+<dd><p>Specifies identifier for this device
+</p></dd>
+<dt><samp>path=<var>path</var></samp></dt>
+<dd><p>Specifies the export path for the file system device. Files under
+this path will be available to the 9p client on the guest.
+</p></dd>
+<dt><samp>security_model=<var>security_model</var></samp></dt>
+<dd><p>Specifies the security model to be used for this export path.
+Supported security models are &quot;passthrough&quot;, &quot;mapped-xattr&quot;, &quot;mapped-file&quot; and &quot;none&quot;.
+In &quot;passthrough&quot; security model, files are stored using the same
+credentials as they are created on the guest. This requires QEMU
+to run as root. In &quot;mapped-xattr&quot; security model, some of the file
+attributes like uid, gid, mode bits and link target are stored as
+file attributes. For &quot;mapped-file&quot; these attributes are stored in the
+hidden .virtfs_metadata directory. Directories exported by this security model cannot
+interact with other unix tools. &quot;none&quot; security model is same as
+passthrough except the sever won&rsquo;t report failures if it fails to
+set file attributes like ownership. Security model is mandatory
+only for local fsdriver. Other fsdrivers (like handle, proxy) don&rsquo;t take
+security model as a parameter.
+</p></dd>
+<dt><samp>writeout=<var>writeout</var></samp></dt>
+<dd><p>This is an optional argument. The only supported value is &quot;immediate&quot;.
+This means that host page cache will be used to read and write data but
+write notification will be sent to the guest only when the data has been
+reported as written by the storage subsystem.
+</p></dd>
+<dt><samp>readonly</samp></dt>
+<dd><p>Enables exporting 9p share as a readonly mount for guests. By default
+read-write access is given.
+</p></dd>
+<dt><samp>socket=<var>socket</var></samp></dt>
+<dd><p>Enables proxy filesystem driver to use passed socket file for communicating
+with virtfs-proxy-helper
+</p></dd>
+<dt><samp>sock_fd=<var>sock_fd</var></samp></dt>
+<dd><p>Enables proxy filesystem driver to use passed socket descriptor for
+communicating with virtfs-proxy-helper. Usually a helper like libvirt
+will create socketpair and pass one of the fds as sock_fd
+</p></dd>
+</dl>
+
+<p>-fsdev option is used along with -device driver &quot;virtio-9p-pci&quot;.
+</p></dd>
+<dt><samp>-device virtio-9p-pci,fsdev=<var>id</var>,mount_tag=<var>mount_tag</var></samp></dt>
+<dd><p>Options for virtio-9p-pci driver are:
+</p><dl compact="compact">
+<dt><samp>fsdev=<var>id</var></samp></dt>
+<dd><p>Specifies the id value specified along with -fsdev option
+</p></dd>
+<dt><samp>mount_tag=<var>mount_tag</var></samp></dt>
+<dd><p>Specifies the tag name to be used by the guest to mount this export point
+</p></dd>
+</dl>
+
+
+</dd>
+<dt><samp>-virtfs <var>fsdriver</var>[,path=<var>path</var>],mount_tag=<var>mount_tag</var>[,security_model=<var>security_model</var>][,writeout=<var>writeout</var>][,readonly][,socket=<var>socket</var>|sock_fd=<var>sock_fd</var>]</samp></dt>
+<dd><a name="index-_002dvirtfs"></a>
+
+<p>The general form of a Virtual File system pass-through options are:
+</p><dl compact="compact">
+<dt><samp><var>fsdriver</var></samp></dt>
+<dd><p>This option specifies the fs driver backend to use.
+Currently &quot;local&quot;, &quot;handle&quot; and &quot;proxy&quot; file system drivers are supported.
+</p></dd>
+<dt><samp>id=<var>id</var></samp></dt>
+<dd><p>Specifies identifier for this device
+</p></dd>
+<dt><samp>path=<var>path</var></samp></dt>
+<dd><p>Specifies the export path for the file system device. Files under
+this path will be available to the 9p client on the guest.
+</p></dd>
+<dt><samp>security_model=<var>security_model</var></samp></dt>
+<dd><p>Specifies the security model to be used for this export path.
+Supported security models are &quot;passthrough&quot;, &quot;mapped-xattr&quot;, &quot;mapped-file&quot; and &quot;none&quot;.
+In &quot;passthrough&quot; security model, files are stored using the same
+credentials as they are created on the guest. This requires QEMU
+to run as root. In &quot;mapped-xattr&quot; security model, some of the file
+attributes like uid, gid, mode bits and link target are stored as
+file attributes. For &quot;mapped-file&quot; these attributes are stored in the
+hidden .virtfs_metadata directory. Directories exported by this security model cannot
+interact with other unix tools. &quot;none&quot; security model is same as
+passthrough except the sever won&rsquo;t report failures if it fails to
+set file attributes like ownership. Security model is mandatory only
+for local fsdriver. Other fsdrivers (like handle, proxy) don&rsquo;t take security
+model as a parameter.
+</p></dd>
+<dt><samp>writeout=<var>writeout</var></samp></dt>
+<dd><p>This is an optional argument. The only supported value is &quot;immediate&quot;.
+This means that host page cache will be used to read and write data but
+write notification will be sent to the guest only when the data has been
+reported as written by the storage subsystem.
+</p></dd>
+<dt><samp>readonly</samp></dt>
+<dd><p>Enables exporting 9p share as a readonly mount for guests. By default
+read-write access is given.
+</p></dd>
+<dt><samp>socket=<var>socket</var></samp></dt>
+<dd><p>Enables proxy filesystem driver to use passed socket file for
+communicating with virtfs-proxy-helper. Usually a helper like libvirt
+will create socketpair and pass one of the fds as sock_fd
+</p></dd>
+<dt><samp>sock_fd</samp></dt>
+<dd><p>Enables proxy filesystem driver to use passed &rsquo;sock_fd&rsquo; as the socket
+descriptor for interfacing with virtfs-proxy-helper
+</p></dd>
+</dl>
+</dd>
+<dt><samp>-virtfs_synth</samp></dt>
+<dd><a name="index-_002dvirtfs_005fsynth"></a>
+<p>Create synthetic file system image
+</p></dd>
+</dl>
+
+<p>USB options:
+</p><dl compact="compact">
+<dt><samp>-usb</samp></dt>
+<dd><a name="index-_002dusb"></a>
+<p>Enable the USB driver (will be the default soon)
+</p>
+</dd>
+<dt><samp>-usbdevice <var>devname</var></samp></dt>
+<dd><a name="index-_002dusbdevice"></a>
+<p>Add the USB device <var>devname</var>. See <a href="#usb_005fdevices">usb_devices</a>.
+</p>
+<dl compact="compact">
+<dt><samp>mouse</samp></dt>
+<dd><p>Virtual Mouse. This will override the PS/2 mouse emulation when activated.
+</p>
+</dd>
+<dt><samp>tablet</samp></dt>
+<dd><p>Pointer device that uses absolute coordinates (like a touchscreen). This
+means QEMU is able to report the mouse position without having to grab the
+mouse. Also overrides the PS/2 mouse emulation when activated.
+</p>
+</dd>
+<dt><samp>disk:[format=<var>format</var>]:<var>file</var></samp></dt>
+<dd><p>Mass storage device based on file. The optional <var>format</var> argument
+will be used rather than detecting the format. Can be used to specifiy
+<code>format=raw</code> to avoid interpreting an untrusted format header.
+</p>
+</dd>
+<dt><samp>host:<var>bus</var>.<var>addr</var></samp></dt>
+<dd><p>Pass through the host device identified by <var>bus</var>.<var>addr</var> (Linux only).
+</p>
+</dd>
+<dt><samp>host:<var>vendor_id</var>:<var>product_id</var></samp></dt>
+<dd><p>Pass through the host device identified by <var>vendor_id</var>:<var>product_id</var>
+(Linux only).
+</p>
+</dd>
+<dt><samp>serial:[vendorid=<var>vendor_id</var>][,productid=<var>product_id</var>]:<var>dev</var></samp></dt>
+<dd><p>Serial converter to host character device <var>dev</var>, see <code>-serial</code> for the
+available devices.
+</p>
+</dd>
+<dt><samp>braille</samp></dt>
+<dd><p>Braille device.  This will use BrlAPI to display the braille output on a real
+or fake device.
+</p>
+</dd>
+<dt><samp>net:<var>options</var></samp></dt>
+<dd><p>Network adapter that supports CDC ethernet and RNDIS protocols.
+</p>
+</dd>
+</dl>
+</dd>
+</dl>
+
+<p>Display options:
+</p><dl compact="compact">
+<dt><samp>-display <var>type</var></samp></dt>
+<dd><a name="index-_002ddisplay"></a>
+<p>Select type of display to use. This option is a replacement for the
+old style -sdl/-curses/... options. Valid values for <var>type</var> are
+</p><dl compact="compact">
+<dt><samp>sdl</samp></dt>
+<dd><p>Display video output via SDL (usually in a separate graphics
+window; see the SDL documentation for other possibilities).
+</p></dd>
+<dt><samp>curses</samp></dt>
+<dd><p>Display video output via curses. For graphics device models which
+support a text mode, QEMU can display this output using a
+curses/ncurses interface. Nothing is displayed when the graphics
+device is in graphical mode or if the graphics device does not support
+a text mode. Generally only the VGA device models support text mode.
+</p></dd>
+<dt><samp>none</samp></dt>
+<dd><p>Do not display video output. The guest will still see an emulated
+graphics card, but its output will not be displayed to the QEMU
+user. This option differs from the -nographic option in that it
+only affects what is done with video output; -nographic also changes
+the destination of the serial and parallel port data.
+</p></dd>
+<dt><samp>gtk</samp></dt>
+<dd><p>Display video output in a GTK window. This interface provides drop-down
+menus and other UI elements to configure and control the VM during
+runtime.
+</p></dd>
+<dt><samp>vnc</samp></dt>
+<dd><p>Start a VNC server on display &lt;arg&gt;
+</p></dd>
+</dl>
+</dd>
+<dt><samp>-nographic</samp></dt>
+<dd><a name="index-_002dnographic"></a>
+<p>Normally, QEMU uses SDL to display the VGA output. With this option,
+you can totally disable graphical output so that QEMU is a simple
+command line application. The emulated serial port is redirected on
+the console and muxed with the monitor (unless redirected elsewhere
+explicitly). Therefore, you can still use QEMU to debug a Linux kernel
+with a serial console.  Use <tt class="key">C-a h</tt> for help on switching between
+the console and monitor.
+</p></dd>
+<dt><samp>-curses</samp></dt>
+<dd><a name="index-_002dcurses"></a>
+<p>Normally, QEMU uses SDL to display the VGA output.  With this option,
+QEMU can display the VGA output when in text mode using a
+curses/ncurses interface.  Nothing is displayed in graphical mode.
+</p></dd>
+<dt><samp>-no-frame</samp></dt>
+<dd><a name="index-_002dno_002dframe"></a>
+<p>Do not use decorations for SDL windows and start them using the whole
+available screen space. This makes the using QEMU in a dedicated desktop
+workspace more convenient.
+</p></dd>
+<dt><samp>-alt-grab</samp></dt>
+<dd><a name="index-_002dalt_002dgrab"></a>
+<p>Use Ctrl-Alt-Shift to grab mouse (instead of Ctrl-Alt). Note that this also
+affects the special keys (for fullscreen, monitor-mode switching, etc).
+</p></dd>
+<dt><samp>-ctrl-grab</samp></dt>
+<dd><a name="index-_002dctrl_002dgrab"></a>
+<p>Use Right-Ctrl to grab mouse (instead of Ctrl-Alt). Note that this also
+affects the special keys (for fullscreen, monitor-mode switching, etc).
+</p></dd>
+<dt><samp>-no-quit</samp></dt>
+<dd><a name="index-_002dno_002dquit"></a>
+<p>Disable SDL window close capability.
+</p></dd>
+<dt><samp>-sdl</samp></dt>
+<dd><a name="index-_002dsdl"></a>
+<p>Enable SDL.
+</p></dd>
+<dt><samp>-spice <var>option</var>[,<var>option</var>[,...]]</samp></dt>
+<dd><a name="index-_002dspice"></a>
+<p>Enable the spice remote desktop protocol. Valid options are
+</p>
+<dl compact="compact">
+<dt><samp>port=&lt;nr&gt;</samp></dt>
+<dd><p>Set the TCP port spice is listening on for plaintext channels.
+</p>
+</dd>
+<dt><samp>addr=&lt;addr&gt;</samp></dt>
+<dd><p>Set the IP address spice is listening on.  Default is any address.
+</p>
+</dd>
+<dt><samp>ipv4</samp></dt>
+<dt><samp>ipv6</samp></dt>
+<dd><p>Force using the specified IP version.
+</p>
+</dd>
+<dt><samp>password=&lt;secret&gt;</samp></dt>
+<dd><p>Set the password you need to authenticate.
+</p>
+</dd>
+<dt><samp>sasl</samp></dt>
+<dd><p>Require that the client use SASL to authenticate with the spice.
+The exact choice of authentication method used is controlled from the
+system / user&rsquo;s SASL configuration file for the &rsquo;qemu&rsquo; service. This
+is typically found in /etc/sasl2/qemu.conf. If running QEMU as an
+unprivileged user, an environment variable SASL_CONF_PATH can be used
+to make it search alternate locations for the service config.
+While some SASL auth methods can also provide data encryption (eg GSSAPI),
+it is recommended that SASL always be combined with the &rsquo;tls&rsquo; and
+&rsquo;x509&rsquo; settings to enable use of SSL and server certificates. This
+ensures a data encryption preventing compromise of authentication
+credentials.
+</p>
+</dd>
+<dt><samp>disable-ticketing</samp></dt>
+<dd><p>Allow client connects without authentication.
+</p>
+</dd>
+<dt><samp>disable-copy-paste</samp></dt>
+<dd><p>Disable copy paste between the client and the guest.
+</p>
+</dd>
+<dt><samp>disable-agent-file-xfer</samp></dt>
+<dd><p>Disable spice-vdagent based file-xfer between the client and the guest.
+</p>
+</dd>
+<dt><samp>tls-port=&lt;nr&gt;</samp></dt>
+<dd><p>Set the TCP port spice is listening on for encrypted channels.
+</p>
+</dd>
+<dt><samp>x509-dir=&lt;dir&gt;</samp></dt>
+<dd><p>Set the x509 file directory. Expects same filenames as -vnc $display,x509=$dir
+</p>
+</dd>
+<dt><samp>x509-key-file=&lt;file&gt;</samp></dt>
+<dt><samp>x509-key-password=&lt;file&gt;</samp></dt>
+<dt><samp>x509-cert-file=&lt;file&gt;</samp></dt>
+<dt><samp>x509-cacert-file=&lt;file&gt;</samp></dt>
+<dt><samp>x509-dh-key-file=&lt;file&gt;</samp></dt>
+<dd><p>The x509 file names can also be configured individually.
+</p>
+</dd>
+<dt><samp>tls-ciphers=&lt;list&gt;</samp></dt>
+<dd><p>Specify which ciphers to use.
+</p>
+</dd>
+<dt><samp>tls-channel=[main|display|cursor|inputs|record|playback]</samp></dt>
+<dt><samp>plaintext-channel=[main|display|cursor|inputs|record|playback]</samp></dt>
+<dd><p>Force specific channel to be used with or without TLS encryption.  The
+options can be specified multiple times to configure multiple
+channels.  The special name &quot;default&quot; can be used to set the default
+mode.  For channels which are not explicitly forced into one mode the
+spice client is allowed to pick tls/plaintext as he pleases.
+</p>
+</dd>
+<dt><samp>image-compression=[auto_glz|auto_lz|quic|glz|lz|off]</samp></dt>
+<dd><p>Configure image compression (lossless).
+Default is auto_glz.
+</p>
+</dd>
+<dt><samp>jpeg-wan-compression=[auto|never|always]</samp></dt>
+<dt><samp>zlib-glz-wan-compression=[auto|never|always]</samp></dt>
+<dd><p>Configure wan image compression (lossy for slow links).
+Default is auto.
+</p>
+</dd>
+<dt><samp>streaming-video=[off|all|filter]</samp></dt>
+<dd><p>Configure video stream detection.  Default is filter.
+</p>
+</dd>
+<dt><samp>agent-mouse=[on|off]</samp></dt>
+<dd><p>Enable/disable passing mouse events via vdagent.  Default is on.
+</p>
+</dd>
+<dt><samp>playback-compression=[on|off]</samp></dt>
+<dd><p>Enable/disable audio stream compression (using celt 0.5.1).  Default is on.
+</p>
+</dd>
+<dt><samp>seamless-migration=[on|off]</samp></dt>
+<dd><p>Enable/disable spice seamless migration. Default is off.
+</p>
+</dd>
+</dl>
+</dd>
+<dt><samp>-portrait</samp></dt>
+<dd><a name="index-_002dportrait"></a>
+<p>Rotate graphical output 90 deg left (only PXA LCD).
+</p></dd>
+<dt><samp>-rotate <var>deg</var></samp></dt>
+<dd><a name="index-_002drotate"></a>
+<p>Rotate graphical output some deg left (only PXA LCD).
+</p></dd>
+<dt><samp>-vga <var>type</var></samp></dt>
+<dd><a name="index-_002dvga"></a>
+<p>Select type of VGA card to emulate. Valid values for <var>type</var> are
+</p><dl compact="compact">
+<dt><samp>cirrus</samp></dt>
+<dd><p>Cirrus Logic GD5446 Video card. All Windows versions starting from
+Windows 95 should recognize and use this graphic card. For optimal
+performances, use 16 bit color depth in the guest and the host OS.
+(This one is the default)
+</p></dd>
+<dt><samp>std</samp></dt>
+<dd><p>Standard VGA card with Bochs VBE extensions.  If your guest OS
+supports the VESA 2.0 VBE extensions (e.g. Windows XP) and if you want
+to use high resolution modes (&gt;= 1280x1024x16) then you should use
+this option.
+</p></dd>
+<dt><samp>vmware</samp></dt>
+<dd><p>VMWare SVGA-II compatible adapter. Use it if you have sufficiently
+recent XFree86/XOrg server or Windows guest with a driver for this
+card.
+</p></dd>
+<dt><samp>qxl</samp></dt>
+<dd><p>QXL paravirtual graphic card.  It is VGA compatible (including VESA
+2.0 VBE support).  Works best with qxl guest drivers installed though.
+Recommended choice when using the spice protocol.
+</p></dd>
+<dt><samp>tcx</samp></dt>
+<dd><p>(sun4m only) Sun TCX framebuffer. This is the default framebuffer for
+sun4m machines and offers both 8-bit and 24-bit colour depths at a
+fixed resolution of 1024x768.
+</p></dd>
+<dt><samp>cg3</samp></dt>
+<dd><p>(sun4m only) Sun cgthree framebuffer. This is a simple 8-bit framebuffer
+for sun4m machines available in both 1024x768 (OpenBIOS) and 1152x900 (OBP)
+resolutions aimed at people wishing to run older Solaris versions.
+</p></dd>
+<dt><samp>none</samp></dt>
+<dd><p>Disable VGA card.
+</p></dd>
+</dl>
+</dd>
+<dt><samp>-full-screen</samp></dt>
+<dd><a name="index-_002dfull_002dscreen"></a>
+<p>Start in full screen.
+</p></dd>
+<dt><samp>-g <var>width</var>x<var>height</var>[x<var>depth</var>]</samp></dt>
+<dd><a name="index-_002dg"></a>
+<p>Set the initial graphical resolution and depth (PPC, SPARC only).
+</p></dd>
+<dt><samp>-vnc <var>display</var>[,<var>option</var>[,<var>option</var>[,...]]]</samp></dt>
+<dd><a name="index-_002dvnc"></a>
+<p>Normally, QEMU uses SDL to display the VGA output.  With this option,
+you can have QEMU listen on VNC display <var>display</var> and redirect the VGA
+display over the VNC session.  It is very useful to enable the usb
+tablet device when using this option (option <samp>-usbdevice
+tablet</samp>). When using the VNC display, you must use the <samp>-k</samp>
+parameter to set the keyboard layout if you are not using en-us. Valid
+syntax for the <var>display</var> is
+</p>
+<dl compact="compact">
+<dt><samp><var>host</var>:<var>d</var></samp></dt>
+<dd>
+<p>TCP connections will only be allowed from <var>host</var> on display <var>d</var>.
+By convention the TCP port is 5900+<var>d</var>. Optionally, <var>host</var> can
+be omitted in which case the server will accept connections from any host.
+</p>
+</dd>
+<dt><samp>unix:<var>path</var></samp></dt>
+<dd>
+<p>Connections will be allowed over UNIX domain sockets where <var>path</var> is the
+location of a unix socket to listen for connections on.
+</p>
+</dd>
+<dt><samp>none</samp></dt>
+<dd>
+<p>VNC is initialized but not started. The monitor <code>change</code> command
+can be used to later start the VNC server.
+</p>
+</dd>
+</dl>
+
+<p>Following the <var>display</var> value there may be one or more <var>option</var> flags
+separated by commas. Valid options are
+</p>
+<dl compact="compact">
+<dt><samp>reverse</samp></dt>
+<dd>
+<p>Connect to a listening VNC client via a &ldquo;reverse&rdquo; connection. The
+client is specified by the <var>display</var>. For reverse network
+connections (<var>host</var>:<var>d</var>,<code>reverse</code>), the <var>d</var> argument
+is a TCP port number, not a display number.
+</p>
+</dd>
+<dt><samp>websocket</samp></dt>
+<dd>
+<p>Opens an additional TCP listening port dedicated to VNC Websocket connections.
+By definition the Websocket port is 5700+<var>display</var>. If <var>host</var> is
+specified connections will only be allowed from this host.
+As an alternative the Websocket port could be specified by using
+<code>websocket</code>=<var>port</var>.
+TLS encryption for the Websocket connection is supported if the required
+certificates are specified with the VNC option <samp>x509</samp>.
+</p>
+</dd>
+<dt><samp>password</samp></dt>
+<dd>
+<p>Require that password based authentication is used for client connections.
+</p>
+<p>The password must be set separately using the <code>set_password</code> command in
+the <a href="#pcsys_005fmonitor">pcsys_monitor</a>. The syntax to change your password is:
+<code>set_password &lt;protocol&gt; &lt;password&gt;</code> where &lt;protocol&gt; could be either
+&quot;vnc&quot; or &quot;spice&quot;.
+</p>
+<p>If you would like to change &lt;protocol&gt; password expiration, you should use
+<code>expire_password &lt;protocol&gt; &lt;expiration-time&gt;</code> where expiration time could
+be one of the following options: now, never, +seconds or UNIX time of
+expiration, e.g. +60 to make password expire in 60 seconds, or 1335196800
+to make password expire on &quot;Mon Apr 23 12:00:00 EDT 2012&quot; (UNIX time for this
+date and time).
+</p>
+<p>You can also use keywords &quot;now&quot; or &quot;never&quot; for the expiration time to
+allow &lt;protocol&gt; password to expire immediately or never expire.
+</p>
+</dd>
+<dt><samp>tls</samp></dt>
+<dd>
+<p>Require that client use TLS when communicating with the VNC server. This
+uses anonymous TLS credentials so is susceptible to a man-in-the-middle
+attack. It is recommended that this option be combined with either the
+<samp>x509</samp> or <samp>x509verify</samp> options.
+</p>
+</dd>
+<dt><samp>x509=<var>/path/to/certificate/dir</var></samp></dt>
+<dd>
+<p>Valid if <samp>tls</samp> is specified. Require that x509 credentials are used
+for negotiating the TLS session. The server will send its x509 certificate
+to the client. It is recommended that a password be set on the VNC server
+to provide authentication of the client when this is used. The path following
+this option specifies where the x509 certificates are to be loaded from.
+See the <a href="#vnc_005fsecurity">vnc_security</a> section for details on generating certificates.
+</p>
+</dd>
+<dt><samp>x509verify=<var>/path/to/certificate/dir</var></samp></dt>
+<dd>
+<p>Valid if <samp>tls</samp> is specified. Require that x509 credentials are used
+for negotiating the TLS session. The server will send its x509 certificate
+to the client, and request that the client send its own x509 certificate.
+The server will validate the client&rsquo;s certificate against the CA certificate,
+and reject clients when validation fails. If the certificate authority is
+trusted, this is a sufficient authentication mechanism. You may still wish
+to set a password on the VNC server as a second authentication layer. The
+path following this option specifies where the x509 certificates are to
+be loaded from. See the <a href="#vnc_005fsecurity">vnc_security</a> section for details on generating
+certificates.
+</p>
+</dd>
+<dt><samp>sasl</samp></dt>
+<dd>
+<p>Require that the client use SASL to authenticate with the VNC server.
+The exact choice of authentication method used is controlled from the
+system / user&rsquo;s SASL configuration file for the &rsquo;qemu&rsquo; service. This
+is typically found in /etc/sasl2/qemu.conf. If running QEMU as an
+unprivileged user, an environment variable SASL_CONF_PATH can be used
+to make it search alternate locations for the service config.
+While some SASL auth methods can also provide data encryption (eg GSSAPI),
+it is recommended that SASL always be combined with the &rsquo;tls&rsquo; and
+&rsquo;x509&rsquo; settings to enable use of SSL and server certificates. This
+ensures a data encryption preventing compromise of authentication
+credentials. See the <a href="#vnc_005fsecurity">vnc_security</a> section for details on using
+SASL authentication.
+</p>
+</dd>
+<dt><samp>acl</samp></dt>
+<dd>
+<p>Turn on access control lists for checking of the x509 client certificate
+and SASL party. For x509 certs, the ACL check is made against the
+certificate&rsquo;s distinguished name. This is something that looks like
+<code>C=GB,O=ACME,L=Boston,CN=bob</code>. For SASL party, the ACL check is
+made against the username, which depending on the SASL plugin, may
+include a realm component, eg <code>bob</code> or <code>bob@EXAMPLE.COM</code>.
+When the <samp>acl</samp> flag is set, the initial access list will be
+empty, with a <code>deny</code> policy. Thus no one will be allowed to
+use the VNC server until the ACLs have been loaded. This can be
+achieved using the <code>acl</code> monitor command.
+</p>
+</dd>
+<dt><samp>lossy</samp></dt>
+<dd>
+<p>Enable lossy compression methods (gradient, JPEG, ...). If this
+option is set, VNC client may receive lossy framebuffer updates
+depending on its encoding settings. Enabling this option can save
+a lot of bandwidth at the expense of quality.
+</p>
+</dd>
+<dt><samp>non-adaptive</samp></dt>
+<dd>
+<p>Disable adaptive encodings. Adaptive encodings are enabled by default.
+An adaptive encoding will try to detect frequently updated screen regions,
+and send updates in these regions using a lossy encoding (like JPEG).
+This can be really helpful to save bandwidth when playing videos. Disabling
+adaptive encodings restores the original static behavior of encodings
+like Tight.
+</p>
+</dd>
+<dt><samp>share=[allow-exclusive|force-shared|ignore]</samp></dt>
+<dd>
+<p>Set display sharing policy.  &rsquo;allow-exclusive&rsquo; allows clients to ask
+for exclusive access.  As suggested by the rfb spec this is
+implemented by dropping other connections.  Connecting multiple
+clients in parallel requires all clients asking for a shared session
+(vncviewer: -shared switch).  This is the default.  &rsquo;force-shared&rsquo;
+disables exclusive client access.  Useful for shared desktop sessions,
+where you don&rsquo;t want someone forgetting specify -shared disconnect
+everybody else.  &rsquo;ignore&rsquo; completely ignores the shared flag and
+allows everybody connect unconditionally.  Doesn&rsquo;t conform to the rfb
+spec but is traditional QEMU behavior.
+</p>
+</dd>
+</dl>
+</dd>
+</dl>
+
+<p>i386 target only:
+</p><dl compact="compact">
+<dt><samp>-win2k-hack</samp></dt>
+<dd><a name="index-_002dwin2k_002dhack"></a>
+<p>Use it when installing Windows 2000 to avoid a disk full bug. After
+Windows 2000 is installed, you no longer need this option (this option
+slows down the IDE transfers).
+</p></dd>
+<dt><samp>-no-fd-bootchk</samp></dt>
+<dd><a name="index-_002dno_002dfd_002dbootchk"></a>
+<p>Disable boot signature checking for floppy disks in BIOS. May
+be needed to boot from old floppy disks.
+</p></dd>
+<dt><samp>-no-acpi</samp></dt>
+<dd><a name="index-_002dno_002dacpi"></a>
+<p>Disable ACPI (Advanced Configuration and Power Interface) support. Use
+it if your guest OS complains about ACPI problems (PC target machine
+only).
+</p></dd>
+<dt><samp>-no-hpet</samp></dt>
+<dd><a name="index-_002dno_002dhpet"></a>
+<p>Disable HPET support.
+</p></dd>
+<dt><samp>-acpitable [sig=<var>str</var>][,rev=<var>n</var>][,oem_id=<var>str</var>][,oem_table_id=<var>str</var>][,oem_rev=<var>n</var>] [,asl_compiler_id=<var>str</var>][,asl_compiler_rev=<var>n</var>][,data=<var>file1</var>[:<var>file2</var>]...]</samp></dt>
+<dd><a name="index-_002dacpitable"></a>
+<p>Add ACPI table with specified header fields and context from specified files.
+For file=, take whole ACPI table from the specified files, including all
+ACPI headers (possible overridden by other options).
+For data=, only data
+portion of the table is used, all header information is specified in the
+command line.
+</p></dd>
+<dt><samp>-smbios file=<var>binary</var></samp></dt>
+<dd><a name="index-_002dsmbios"></a>
+<p>Load SMBIOS entry from binary file.
+</p>
+</dd>
+<dt><samp>-smbios type=0[,vendor=<var>str</var>][,version=<var>str</var>][,date=<var>str</var>][,release=<var>%d.%d</var>][,uefi=on|off]</samp></dt>
+<dd><p>Specify SMBIOS type 0 fields
+</p>
+</dd>
+<dt><samp>-smbios type=1[,manufacturer=<var>str</var>][,product=<var>str</var>] [,version=<var>str</var>][,serial=<var>str</var>][,uuid=<var>uuid</var>][,sku=<var>str</var>] [,family=<var>str</var>]</samp></dt>
+<dd><p>Specify SMBIOS type 1 fields
+</p></dd>
+</dl>
+
+<p>Network options:
+</p><dl compact="compact">
+<dt><samp>-net nic[,vlan=<var>n</var>][,macaddr=<var>mac</var>][,model=<var>type</var>] [,name=<var>name</var>][,addr=<var>addr</var>][,vectors=<var>v</var>]</samp></dt>
+<dd><a name="index-_002dnet"></a>
+<p>Create a new Network Interface Card and connect it to VLAN <var>n</var> (<var>n</var>
+= 0 is the default). The NIC is an e1000 by default on the PC
+target. Optionally, the MAC address can be changed to <var>mac</var>, the
+device address set to <var>addr</var> (PCI cards only),
+and a <var>name</var> can be assigned for use in monitor commands.
+Optionally, for PCI cards, you can specify the number <var>v</var> of MSI-X vectors
+that the card should have; this option currently only affects virtio cards; set
+<var>v</var> = 0 to disable MSI-X. If no <samp>-net</samp> option is specified, a single
+NIC is created.  QEMU can emulate several different models of network card.
+Valid values for <var>type</var> are
+<code>virtio</code>, <code>i82551</code>, <code>i82557b</code>, <code>i82559er</code>,
+<code>ne2k_pci</code>, <code>ne2k_isa</code>, <code>pcnet</code>, <code>rtl8139</code>,
+<code>e1000</code>, <code>smc91c111</code>, <code>lance</code> and <code>mcf_fec</code>.
+Not all devices are supported on all targets.  Use <code>-net nic,model=help</code>
+for a list of available devices for your target.
+</p>
+</dd>
+<dt><samp>-netdev user,id=<var>id</var>[,<var>option</var>][,<var>option</var>][,...]</samp></dt>
+<dd><a name="index-_002dnetdev"></a>
+</dd>
+<dt><samp>-net user[,<var>option</var>][,<var>option</var>][,...]</samp></dt>
+<dd><p>Use the user mode network stack which requires no administrator
+privilege to run. Valid options are:
+</p>
+<dl compact="compact">
+<dt><samp>vlan=<var>n</var></samp></dt>
+<dd><p>Connect user mode stack to VLAN <var>n</var> (<var>n</var> = 0 is the default).
+</p>
+</dd>
+<dt><samp>id=<var>id</var></samp></dt>
+<dt><samp>name=<var>name</var></samp></dt>
+<dd><p>Assign symbolic name for use in monitor commands.
+</p>
+</dd>
+<dt><samp>net=<var>addr</var>[/<var>mask</var>]</samp></dt>
+<dd><p>Set IP network address the guest will see. Optionally specify the netmask,
+either in the form a.b.c.d or as number of valid top-most bits. Default is
+10.0.2.0/24.
+</p>
+</dd>
+<dt><samp>host=<var>addr</var></samp></dt>
+<dd><p>Specify the guest-visible address of the host. Default is the 2nd IP in the
+guest network, i.e. x.x.x.2.
+</p>
+</dd>
+<dt><samp>restrict=on|off</samp></dt>
+<dd><p>If this option is enabled, the guest will be isolated, i.e. it will not be
+able to contact the host and no guest IP packets will be routed over the host
+to the outside. This option does not affect any explicitly set forwarding rules.
+</p>
+</dd>
+<dt><samp>hostname=<var>name</var></samp></dt>
+<dd><p>Specifies the client hostname reported by the built-in DHCP server.
+</p>
+</dd>
+<dt><samp>dhcpstart=<var>addr</var></samp></dt>
+<dd><p>Specify the first of the 16 IPs the built-in DHCP server can assign. Default
+is the 15th to 31st IP in the guest network, i.e. x.x.x.15 to x.x.x.31.
+</p>
+</dd>
+<dt><samp>dns=<var>addr</var></samp></dt>
+<dd><p>Specify the guest-visible address of the virtual nameserver. The address must
+be different from the host address. Default is the 3rd IP in the guest network,
+i.e. x.x.x.3.
+</p>
+</dd>
+<dt><samp>dnssearch=<var>domain</var></samp></dt>
+<dd><p>Provides an entry for the domain-search list sent by the built-in
+DHCP server. More than one domain suffix can be transmitted by specifying
+this option multiple times. If supported, this will cause the guest to
+automatically try to append the given domain suffix(es) in case a domain name
+can not be resolved.
+</p>
+<p>Example:
+</p><div class="example">
+<pre class="example">qemu -net user,dnssearch=mgmt.example.org,dnssearch=example.org [...]
+</pre></div>
+
+</dd>
+<dt><samp>tftp=<var>dir</var></samp></dt>
+<dd><p>When using the user mode network stack, activate a built-in TFTP
+server. The files in <var>dir</var> will be exposed as the root of a TFTP server.
+The TFTP client on the guest must be configured in binary mode (use the command
+<code>bin</code> of the Unix TFTP client).
+</p>
+</dd>
+<dt><samp>bootfile=<var>file</var></samp></dt>
+<dd><p>When using the user mode network stack, broadcast <var>file</var> as the BOOTP
+filename. In conjunction with <samp>tftp</samp>, this can be used to network boot
+a guest from a local directory.
+</p>
+<p>Example (using pxelinux):
+</p><div class="example">
+<pre class="example">qemu-system-i386 -hda linux.img -boot n -net user,tftp=/path/to/tftp/files,bootfile=/pxelinux.0
+</pre></div>
+
+</dd>
+<dt><samp>smb=<var>dir</var>[,smbserver=<var>addr</var>]</samp></dt>
+<dd><p>When using the user mode network stack, activate a built-in SMB
+server so that Windows OSes can access to the host files in <samp><var>dir</var></samp>
+transparently. The IP address of the SMB server can be set to <var>addr</var>. By
+default the 4th IP in the guest network is used, i.e. x.x.x.4.
+</p>
+<p>In the guest Windows OS, the line:
+</p><div class="example">
+<pre class="example">10.0.2.4 smbserver
+</pre></div>
+<p>must be added in the file <samp>C:\WINDOWS\LMHOSTS</samp> (for windows 9x/Me)
+or <samp>C:\WINNT\SYSTEM32\DRIVERS\ETC\LMHOSTS</samp> (Windows NT/2000).
+</p>
+<p>Then <samp><var>dir</var></samp> can be accessed in <samp>\\smbserver\qemu</samp>.
+</p>
+<p>Note that a SAMBA server must be installed on the host OS.
+QEMU was tested successfully with smbd versions from Red Hat 9,
+Fedora Core 3 and OpenSUSE 11.x.
+</p>
+</dd>
+<dt><samp>hostfwd=[tcp|udp]:[<var>hostaddr</var>]:<var>hostport</var>-[<var>guestaddr</var>]:<var>guestport</var></samp></dt>
+<dd><p>Redirect incoming TCP or UDP connections to the host port <var>hostport</var> to
+the guest IP address <var>guestaddr</var> on guest port <var>guestport</var>. If
+<var>guestaddr</var> is not specified, its value is x.x.x.15 (default first address
+given by the built-in DHCP server). By specifying <var>hostaddr</var>, the rule can
+be bound to a specific host interface. If no connection type is set, TCP is
+used. This option can be given multiple times.
+</p>
+<p>For example, to redirect host X11 connection from screen 1 to guest
+screen 0, use the following:
+</p>
+<div class="example">
+<pre class="example"># on the host
+qemu-system-i386 -net user,hostfwd=tcp:127.0.0.1:6001-:6000 [...]
+# this host xterm should open in the guest X11 server
+xterm -display :1
+</pre></div>
+
+<p>To redirect telnet connections from host port 5555 to telnet port on
+the guest, use the following:
+</p>
+<div class="example">
+<pre class="example"># on the host
+qemu-system-i386 -net user,hostfwd=tcp::5555-:23 [...]
+telnet localhost 5555
+</pre></div>
+
+<p>Then when you use on the host <code>telnet localhost 5555</code>, you
+connect to the guest telnet server.
+</p>
+</dd>
+<dt><samp>guestfwd=[tcp]:<var>server</var>:<var>port</var>-<var>dev</var></samp></dt>
+<dt><samp>guestfwd=[tcp]:<var>server</var>:<var>port</var>-<var>cmd:command</var></samp></dt>
+<dd><p>Forward guest TCP connections to the IP address <var>server</var> on port <var>port</var>
+to the character device <var>dev</var> or to a program executed by <var>cmd:command</var>
+which gets spawned for each connection. This option can be given multiple times.
+</p>
+<p>You can either use a chardev directly and have that one used throughout QEMU&rsquo;s
+lifetime, like in the following example:
+</p>
+<div class="example">
+<pre class="example"># open 10.10.1.1:4321 on bootup, connect 10.0.2.100:1234 to it whenever
+# the guest accesses it
+qemu -net user,guestfwd=tcp:10.0.2.100:1234-tcp:10.10.1.1:4321 [...]
+</pre></div>
+
+<p>Or you can execute a command on every TCP connection established by the guest,
+so that QEMU behaves similar to an inetd process for that virtual server:
+</p>
+<div class="example">
+<pre class="example"># call &quot;netcat 10.10.1.1 4321&quot; on every TCP connection to 10.0.2.100:1234
+# and connect the TCP stream to its stdin/stdout
+qemu -net 'user,guestfwd=tcp:10.0.2.100:1234-cmd:netcat 10.10.1.1 4321'
+</pre></div>
+
+</dd>
+</dl>
+
+<p>Note: Legacy stand-alone options -tftp, -bootp, -smb and -redir are still
+processed and applied to -net user. Mixing them with the new configuration
+syntax gives undefined results. Their use for new applications is discouraged
+as they will be removed from future versions.
+</p>
+</dd>
+<dt><samp>-netdev tap,id=<var>id</var>[,fd=<var>h</var>][,ifname=<var>name</var>][,script=<var>file</var>][,downscript=<var>dfile</var>][,helper=<var>helper</var>]</samp></dt>
+<dt><samp>-net tap[,vlan=<var>n</var>][,name=<var>name</var>][,fd=<var>h</var>][,ifname=<var>name</var>][,script=<var>file</var>][,downscript=<var>dfile</var>][,helper=<var>helper</var>]</samp></dt>
+<dd><p>Connect the host TAP network interface <var>name</var> to VLAN <var>n</var>.
+</p>
+<p>Use the network script <var>file</var> to configure it and the network script
+<var>dfile</var> to deconfigure it. If <var>name</var> is not provided, the OS
+automatically provides one. The default network configure script is
+<samp>/etc/qemu-ifup</samp> and the default network deconfigure script is
+<samp>/etc/qemu-ifdown</samp>. Use <samp>script=no</samp> or <samp>downscript=no</samp>
+to disable script execution.
+</p>
+<p>If running QEMU as an unprivileged user, use the network helper
+<var>helper</var> to configure the TAP interface. The default network
+helper executable is <samp>/path/to/qemu-bridge-helper</samp>.
+</p>
+<p><samp>fd</samp>=<var>h</var> can be used to specify the handle of an already
+opened host TAP interface.
+</p>
+<p>Examples:
+</p>
+<div class="example">
+<pre class="example">#launch a QEMU instance with the default network script
+qemu-system-i386 linux.img -net nic -net tap
+</pre></div>
+
+<div class="example">
+<pre class="example">#launch a QEMU instance with two NICs, each one connected
+#to a TAP device
+qemu-system-i386 linux.img \
+-net nic,vlan=0 -net tap,vlan=0,ifname=tap0 \
+-net nic,vlan=1 -net tap,vlan=1,ifname=tap1
+</pre></div>
+
+<div class="example">
+<pre class="example">#launch a QEMU instance with the default network helper to
+#connect a TAP device to bridge br0
+qemu-system-i386 linux.img \
+-net nic -net tap,&quot;helper=/path/to/qemu-bridge-helper&quot;
+</pre></div>
+
+</dd>
+<dt><samp>-netdev bridge,id=<var>id</var>[,br=<var>bridge</var>][,helper=<var>helper</var>]</samp></dt>
+<dt><samp>-net bridge[,vlan=<var>n</var>][,name=<var>name</var>][,br=<var>bridge</var>][,helper=<var>helper</var>]</samp></dt>
+<dd><p>Connect a host TAP network interface to a host bridge device.
+</p>
+<p>Use the network helper <var>helper</var> to configure the TAP interface and
+attach it to the bridge. The default network helper executable is
+<samp>/path/to/qemu-bridge-helper</samp> and the default bridge
+device is <samp>br0</samp>.
+</p>
+<p>Examples:
+</p>
+<div class="example">
+<pre class="example">#launch a QEMU instance with the default network helper to
+#connect a TAP device to bridge br0
+qemu-system-i386 linux.img -net bridge -net nic,model=virtio
+</pre></div>
+
+<div class="example">
+<pre class="example">#launch a QEMU instance with the default network helper to
+#connect a TAP device to bridge qemubr0
+qemu-system-i386 linux.img -net bridge,br=qemubr0 -net nic,model=virtio
+</pre></div>
+
+</dd>
+<dt><samp>-netdev socket,id=<var>id</var>[,fd=<var>h</var>][,listen=[<var>host</var>]:<var>port</var>][,connect=<var>host</var>:<var>port</var>]</samp></dt>
+<dt><samp>-net socket[,vlan=<var>n</var>][,name=<var>name</var>][,fd=<var>h</var>] [,listen=[<var>host</var>]:<var>port</var>][,connect=<var>host</var>:<var>port</var>]</samp></dt>
+<dd>
+<p>Connect the VLAN <var>n</var> to a remote VLAN in another QEMU virtual
+machine using a TCP socket connection. If <samp>listen</samp> is
+specified, QEMU waits for incoming connections on <var>port</var>
+(<var>host</var> is optional). <samp>connect</samp> is used to connect to
+another QEMU instance using the <samp>listen</samp> option. <samp>fd</samp>=<var>h</var>
+specifies an already opened TCP socket.
+</p>
+<p>Example:
+</p><div class="example">
+<pre class="example"># launch a first QEMU instance
+qemu-system-i386 linux.img \
+-net nic,macaddr=52:54:00:12:34:56 \
+-net socket,listen=:1234
+# connect the VLAN 0 of this instance to the VLAN 0
+# of the first instance
+qemu-system-i386 linux.img \
+-net nic,macaddr=52:54:00:12:34:57 \
+-net socket,connect=127.0.0.1:1234
+</pre></div>
+
+</dd>
+<dt><samp>-netdev socket,id=<var>id</var>[,fd=<var>h</var>][,mcast=<var>maddr</var>:<var>port</var>[,localaddr=<var>addr</var>]]</samp></dt>
+<dt><samp>-net socket[,vlan=<var>n</var>][,name=<var>name</var>][,fd=<var>h</var>][,mcast=<var>maddr</var>:<var>port</var>[,localaddr=<var>addr</var>]]</samp></dt>
+<dd>
+<p>Create a VLAN <var>n</var> shared with another QEMU virtual
+machines using a UDP multicast socket, effectively making a bus for
+every QEMU with same multicast address <var>maddr</var> and <var>port</var>.
+NOTES:
+</p><ol>
+<li> Several QEMU can be running on different hosts and share same bus (assuming
+correct multicast setup for these hosts).
+</li><li> mcast support is compatible with User Mode Linux (argument <samp>eth<var>N</var>=mcast</samp>), see
+<a href="http://user-mode-linux.sf.net">http://user-mode-linux.sf.net</a>.
+</li><li> Use <samp>fd=h</samp> to specify an already opened UDP multicast socket.
+</li></ol>
+
+<p>Example:
+</p><div class="example">
+<pre class="example"># launch one QEMU instance
+qemu-system-i386 linux.img \
+-net nic,macaddr=52:54:00:12:34:56 \
+-net socket,mcast=230.0.0.1:1234
+# launch another QEMU instance on same &quot;bus&quot;
+qemu-system-i386 linux.img \
+-net nic,macaddr=52:54:00:12:34:57 \
+-net socket,mcast=230.0.0.1:1234
+# launch yet another QEMU instance on same &quot;bus&quot;
+qemu-system-i386 linux.img \
+-net nic,macaddr=52:54:00:12:34:58 \
+-net socket,mcast=230.0.0.1:1234
+</pre></div>
+
+<p>Example (User Mode Linux compat.):
+</p><div class="example">
+<pre class="example"># launch QEMU instance (note mcast address selected
+# is UML's default)
+qemu-system-i386 linux.img \
+-net nic,macaddr=52:54:00:12:34:56 \
+-net socket,mcast=239.192.168.1:1102
+# launch UML
+/path/to/linux ubd0=/path/to/root_fs eth0=mcast
+</pre></div>
+
+<p>Example (send packets from host&rsquo;s 1.2.3.4):
+</p><div class="example">
+<pre class="example">qemu-system-i386 linux.img \
+-net nic,macaddr=52:54:00:12:34:56 \
+-net socket,mcast=239.192.168.1:1102,localaddr=1.2.3.4
+</pre></div>
+
+</dd>
+<dt><samp>-netdev l2tpv3,id=<var>id</var>,src=<var>srcaddr</var>,dst=<var>dstaddr</var>[,srcport=<var>srcport</var>][,dstport=<var>dstport</var>],txsession=<var>txsession</var>[,rxsession=<var>rxsession</var>][,ipv6][,udp][,cookie64][,counter][,pincounter][,txcookie=<var>txcookie</var>][,rxcookie=<var>rxcookie</var>][,offset=<var>offset</var>]</samp></dt>
+<dt><samp>-net l2tpv3[,vlan=<var>n</var>][,name=<var>name</var>],src=<var>srcaddr</var>,dst=<var>dstaddr</var>[,srcport=<var>srcport</var>][,dstport=<var>dstport</var>],txsession=<var>txsession</var>[,rxsession=<var>rxsession</var>][,ipv6][,udp][,cookie64][,counter][,pincounter][,txcookie=<var>txcookie</var>][,rxcookie=<var>rxcookie</var>][,offset=<var>offset</var>]</samp></dt>
+<dd><p>Connect VLAN <var>n</var> to L2TPv3 pseudowire. L2TPv3 (RFC3391) is a popular
+protocol to transport Ethernet (and other Layer 2) data frames between
+two systems. It is present in routers, firewalls and the Linux kernel
+(from version 3.3 onwards).
+</p>
+<p>This transport allows a VM to communicate to another VM, router or firewall directly.
+</p>
+</dd>
+<dt><samp>src=<var>srcaddr</var></samp></dt>
+<dd><p>source address (mandatory)
+</p></dd>
+<dt><samp>dst=<var>dstaddr</var></samp></dt>
+<dd><p>destination address (mandatory)
+</p></dd>
+<dt><samp>udp</samp></dt>
+<dd><p>select udp encapsulation (default is ip).
+</p></dd>
+<dt><samp>srcport=<var>srcport</var></samp></dt>
+<dd><p>source udp port.
+</p></dd>
+<dt><samp>dstport=<var>dstport</var></samp></dt>
+<dd><p>destination udp port.
+</p></dd>
+<dt><samp>ipv6</samp></dt>
+<dd><p>force v6, otherwise defaults to v4.
+</p></dd>
+<dt><samp>rxcookie=<var>rxcookie</var></samp></dt>
+<dt><samp>txcookie=<var>txcookie</var></samp></dt>
+<dd><p>Cookies are a weak form of security in the l2tpv3 specification.
+Their function is mostly to prevent misconfiguration. By default they are 32
+bit.
+</p></dd>
+<dt><samp>cookie64</samp></dt>
+<dd><p>Set cookie size to 64 bit instead of the default 32
+</p></dd>
+<dt><samp>counter=off</samp></dt>
+<dd><p>Force a &rsquo;cut-down&rsquo; L2TPv3 with no counter as in
+draft-mkonstan-l2tpext-keyed-ipv6-tunnel-00
+</p></dd>
+<dt><samp>pincounter=on</samp></dt>
+<dd><p>Work around broken counter handling in peer. This may also help on
+networks which have packet reorder.
+</p></dd>
+<dt><samp>offset=<var>offset</var></samp></dt>
+<dd><p>Add an extra offset between header and data
+</p>
+<p>For example, to attach a VM running on host 4.3.2.1 via L2TPv3 to the bridge br-lan
+on the remote Linux host 1.2.3.4:
+</p><div class="example">
+<pre class="example"># Setup tunnel on linux host using raw ip as encapsulation
+# on 1.2.3.4
+ip l2tp add tunnel remote 4.3.2.1 local 1.2.3.4 tunnel_id 1 peer_tunnel_id 1 \
+encap udp udp_sport 16384 udp_dport 16384
+ip l2tp add session tunnel_id 1 name vmtunnel0 session_id \
+0xFFFFFFFF peer_session_id 0xFFFFFFFF
+ifconfig vmtunnel0 mtu 1500
+ifconfig vmtunnel0 up
+brctl addif br-lan vmtunnel0
+
+
+# on 4.3.2.1
+# launch QEMU instance - if your network has reorder or is very lossy add ,pincounter
+
+qemu-system-i386 linux.img -net nic -net l2tpv3,src=4.2.3.1,dst=1.2.3.4,udp,srcport=16384,dstport=16384,rxsession=0xffffffff,txsession=0xffffffff,counter
+
+
+</pre></div>
+
+</dd>
+<dt><samp>-netdev vde,id=<var>id</var>[,sock=<var>socketpath</var>][,port=<var>n</var>][,group=<var>groupname</var>][,mode=<var>octalmode</var>]</samp></dt>
+<dt><samp>-net vde[,vlan=<var>n</var>][,name=<var>name</var>][,sock=<var>socketpath</var>] [,port=<var>n</var>][,group=<var>groupname</var>][,mode=<var>octalmode</var>]</samp></dt>
+<dd><p>Connect VLAN <var>n</var> to PORT <var>n</var> of a vde switch running on host and
+listening for incoming connections on <var>socketpath</var>. Use GROUP <var>groupname</var>
+and MODE <var>octalmode</var> to change default ownership and permissions for
+communication port. This option is only available if QEMU has been compiled
+with vde support enabled.
+</p>
+<p>Example:
+</p><div class="example">
+<pre class="example"># launch vde switch
+vde_switch -F -sock /tmp/myswitch
+# launch QEMU instance
+qemu-system-i386 linux.img -net nic -net vde,sock=/tmp/myswitch
+</pre></div>
+
+</dd>
+<dt><samp>-netdev hubport,id=<var>id</var>,hubid=<var>hubid</var></samp></dt>
+<dd>
+<p>Create a hub port on QEMU &quot;vlan&quot; <var>hubid</var>.
+</p>
+<p>The hubport netdev lets you connect a NIC to a QEMU &quot;vlan&quot; instead of a single
+netdev.  <code>-net</code> and <code>-device</code> with parameter <samp>vlan</samp> create the
+required hub automatically.
+</p>
+</dd>
+<dt><samp>-netdev vhost-user,chardev=<var>id</var>[,vhostforce=on|off]</samp></dt>
+<dd>
+<p>Establish a vhost-user netdev, backed by a chardev <var>id</var>. The chardev should
+be a unix domain socket backed one. The vhost-user uses a specifically defined
+protocol to pass vhost ioctl replacement messages to an application on the other
+end of the socket. On non-MSIX guests, the feature can be forced with
+<var>vhostforce</var>.
+</p>
+<p>Example:
+</p><div class="example">
+<pre class="example">qemu -m 512 -object memory-backend-file,id=mem,size=512M,mem-path=/hugetlbfs,share=on \
+-numa node,memdev=mem \
+-chardev socket,path=/path/to/socket \
+-netdev type=vhost-user,id=net0,chardev=chr0 \
+-device virtio-net-pci,netdev=net0
+</pre></div>
+
+</dd>
+<dt><samp>-net dump[,vlan=<var>n</var>][,file=<var>file</var>][,len=<var>len</var>]</samp></dt>
+<dd><p>Dump network traffic on VLAN <var>n</var> to file <var>file</var> (<samp>qemu-vlan0.pcap</samp> by default).
+At most <var>len</var> bytes (64k by default) per packet are stored. The file format is
+libpcap, so it can be analyzed with tools such as tcpdump or Wireshark.
+</p>
+</dd>
+<dt><samp>-net none</samp></dt>
+<dd><p>Indicate that no network devices should be configured. It is used to
+override the default configuration (<samp>-net nic -net user</samp>) which
+is activated if no <samp>-net</samp> options are provided.
+</p></dd>
+</dl>
+
+<p>Character device options:
+</p>
+<p>The general form of a character device option is:
+</p><dl compact="compact">
+<dt><samp>-chardev <var>backend</var> ,id=<var>id</var> [,mux=on|off] [,<var>options</var>]</samp></dt>
+<dd><a name="index-_002dchardev"></a>
+<p>Backend is one of:
+<samp>null</samp>,
+<samp>socket</samp>,
+<samp>udp</samp>,
+<samp>msmouse</samp>,
+<samp>vc</samp>,
+<samp>ringbuf</samp>,
+<samp>file</samp>,
+<samp>pipe</samp>,
+<samp>console</samp>,
+<samp>serial</samp>,
+<samp>pty</samp>,
+<samp>stdio</samp>,
+<samp>braille</samp>,
+<samp>tty</samp>,
+<samp>parallel</samp>,
+<samp>parport</samp>,
+<samp>spicevmc</samp>.
+<samp>spiceport</samp>.
+The specific backend will determine the applicable options.
+</p>
+<p>All devices must have an id, which can be any string up to 127 characters long.
+It is used to uniquely identify this device in other command line directives.
+</p>
+<p>A character device may be used in multiplexing mode by multiple front-ends.
+The key sequence of <tt class="key">Control-a</tt> and <tt class="key">c</tt> will rotate the input focus
+between attached front-ends. Specify <samp>mux=on</samp> to enable this mode.
+</p>
+<p>Options to each backend are described below.
+</p>
+</dd>
+<dt><samp>-chardev null ,id=<var>id</var></samp></dt>
+<dd><p>A void device. This device will not emit any data, and will drop any data it
+receives. The null backend does not take any options.
+</p>
+</dd>
+<dt><samp>-chardev socket ,id=<var>id</var> [<var>TCP options</var> or <var>unix options</var>] [,server] [,nowait] [,telnet]</samp></dt>
+<dd>
+<p>Create a two-way stream socket, which can be either a TCP or a unix socket. A
+unix socket will be created if <samp>path</samp> is specified. Behaviour is
+undefined if TCP options are specified for a unix socket.
+</p>
+<p><samp>server</samp> specifies that the socket shall be a listening socket.
+</p>
+<p><samp>nowait</samp> specifies that QEMU should not block waiting for a client to
+connect to a listening socket.
+</p>
+<p><samp>telnet</samp> specifies that traffic on the socket should interpret telnet
+escape sequences.
+</p>
+<p>TCP and unix socket options are given below:
+</p>
+<dl compact="compact">
+<dt><samp>TCP options: port=<var>port</var> [,host=<var>host</var>] [,to=<var>to</var>] [,ipv4] [,ipv6] [,nodelay]</samp></dt>
+<dd>
+<p><samp>host</samp> for a listening socket specifies the local address to be bound.
+For a connecting socket species the remote host to connect to. <samp>host</samp> is
+optional for listening sockets. If not specified it defaults to <code>0.0.0.0</code>.
+</p>
+<p><samp>port</samp> for a listening socket specifies the local port to be bound. For a
+connecting socket specifies the port on the remote host to connect to.
+<samp>port</samp> can be given as either a port number or a service name.
+<samp>port</samp> is required.
+</p>
+<p><samp>to</samp> is only relevant to listening sockets. If it is specified, and
+<samp>port</samp> cannot be bound, QEMU will attempt to bind to subsequent ports up
+to and including <samp>to</samp> until it succeeds. <samp>to</samp> must be specified
+as a port number.
+</p>
+<p><samp>ipv4</samp> and <samp>ipv6</samp> specify that either IPv4 or IPv6 must be used.
+If neither is specified the socket may use either protocol.
+</p>
+<p><samp>nodelay</samp> disables the Nagle algorithm.
+</p>
+</dd>
+<dt><samp>unix options: path=<var>path</var></samp></dt>
+<dd>
+<p><samp>path</samp> specifies the local path of the unix socket. <samp>path</samp> is
+required.
+</p>
+</dd>
+</dl>
+
+</dd>
+<dt><samp>-chardev udp ,id=<var>id</var> [,host=<var>host</var>] ,port=<var>port</var> [,localaddr=<var>localaddr</var>] [,localport=<var>localport</var>] [,ipv4] [,ipv6]</samp></dt>
+<dd>
+<p>Sends all traffic from the guest to a remote host over UDP.
+</p>
+<p><samp>host</samp> specifies the remote host to connect to. If not specified it
+defaults to <code>localhost</code>.
+</p>
+<p><samp>port</samp> specifies the port on the remote host to connect to. <samp>port</samp>
+is required.
+</p>
+<p><samp>localaddr</samp> specifies the local address to bind to. If not specified it
+defaults to <code>0.0.0.0</code>.
+</p>
+<p><samp>localport</samp> specifies the local port to bind to. If not specified any
+available local port will be used.
+</p>
+<p><samp>ipv4</samp> and <samp>ipv6</samp> specify that either IPv4 or IPv6 must be used.
+If neither is specified the device may use either protocol.
+</p>
+</dd>
+<dt><samp>-chardev msmouse ,id=<var>id</var></samp></dt>
+<dd>
+<p>Forward QEMU&rsquo;s emulated msmouse events to the guest. <samp>msmouse</samp> does not
+take any options.
+</p>
+</dd>
+<dt><samp>-chardev vc ,id=<var>id</var> [[,width=<var>width</var>] [,height=<var>height</var>]] [[,cols=<var>cols</var>] [,rows=<var>rows</var>]]</samp></dt>
+<dd>
+<p>Connect to a QEMU text console. <samp>vc</samp> may optionally be given a specific
+size.
+</p>
+<p><samp>width</samp> and <samp>height</samp> specify the width and height respectively of
+the console, in pixels.
+</p>
+<p><samp>cols</samp> and <samp>rows</samp> specify that the console be sized to fit a text
+console with the given dimensions.
+</p>
+</dd>
+<dt><samp>-chardev ringbuf ,id=<var>id</var> [,size=<var>size</var>]</samp></dt>
+<dd>
+<p>Create a ring buffer with fixed size <samp>size</samp>.
+<var>size</var> must be a power of two, and defaults to <code>64K</code>).
+</p>
+</dd>
+<dt><samp>-chardev file ,id=<var>id</var> ,path=<var>path</var></samp></dt>
+<dd>
+<p>Log all traffic received from the guest to a file.
+</p>
+<p><samp>path</samp> specifies the path of the file to be opened. This file will be
+created if it does not already exist, and overwritten if it does. <samp>path</samp>
+is required.
+</p>
+</dd>
+<dt><samp>-chardev pipe ,id=<var>id</var> ,path=<var>path</var></samp></dt>
+<dd>
+<p>Create a two-way connection to the guest. The behaviour differs slightly between
+Windows hosts and other hosts:
+</p>
+<p>On Windows, a single duplex pipe will be created at
+<samp>\\.pipe\<samp>path</samp></samp>.
+</p>
+<p>On other hosts, 2 pipes will be created called <samp><samp>path</samp>.in</samp> and
+<samp><samp>path</samp>.out</samp>. Data written to <samp><samp>path</samp>.in</samp> will be
+received by the guest. Data written by the guest can be read from
+<samp><samp>path</samp>.out</samp>. QEMU will not create these fifos, and requires them to
+be present.
+</p>
+<p><samp>path</samp> forms part of the pipe path as described above. <samp>path</samp> is
+required.
+</p>
+</dd>
+<dt><samp>-chardev console ,id=<var>id</var></samp></dt>
+<dd>
+<p>Send traffic from the guest to QEMU&rsquo;s standard output. <samp>console</samp> does not
+take any options.
+</p>
+<p><samp>console</samp> is only available on Windows hosts.
+</p>
+</dd>
+<dt><samp>-chardev serial ,id=<var>id</var> ,path=<samp>path</samp></samp></dt>
+<dd>
+<p>Send traffic from the guest to a serial device on the host.
+</p>
+<p>On Unix hosts serial will actually accept any tty device,
+not only serial lines.
+</p>
+<p><samp>path</samp> specifies the name of the serial device to open.
+</p>
+</dd>
+<dt><samp>-chardev pty ,id=<var>id</var></samp></dt>
+<dd>
+<p>Create a new pseudo-terminal on the host and connect to it. <samp>pty</samp> does
+not take any options.
+</p>
+<p><samp>pty</samp> is not available on Windows hosts.
+</p>
+</dd>
+<dt><samp>-chardev stdio ,id=<var>id</var> [,signal=on|off]</samp></dt>
+<dd><p>Connect to standard input and standard output of the QEMU process.
+</p>
+<p><samp>signal</samp> controls if signals are enabled on the terminal, that includes
+exiting QEMU with the key sequence <tt class="key">Control-c</tt>. This option is enabled by
+default, use <samp>signal=off</samp> to disable it.
+</p>
+<p><samp>stdio</samp> is not available on Windows hosts.
+</p>
+</dd>
+<dt><samp>-chardev braille ,id=<var>id</var></samp></dt>
+<dd>
+<p>Connect to a local BrlAPI server. <samp>braille</samp> does not take any options.
+</p>
+</dd>
+<dt><samp>-chardev tty ,id=<var>id</var> ,path=<var>path</var></samp></dt>
+<dd>
+<p><samp>tty</samp> is only available on Linux, Sun, FreeBSD, NetBSD, OpenBSD and
+DragonFlyBSD hosts.  It is an alias for <samp>serial</samp>.
+</p>
+<p><samp>path</samp> specifies the path to the tty. <samp>path</samp> is required.
+</p>
+</dd>
+<dt><samp>-chardev parallel ,id=<var>id</var> ,path=<var>path</var></samp></dt>
+<dt><samp>-chardev parport ,id=<var>id</var> ,path=<var>path</var></samp></dt>
+<dd>
+<p><samp>parallel</samp> is only available on Linux, FreeBSD and DragonFlyBSD hosts.
+</p>
+<p>Connect to a local parallel port.
+</p>
+<p><samp>path</samp> specifies the path to the parallel port device. <samp>path</samp> is
+required.
+</p>
+</dd>
+<dt><samp>-chardev spicevmc ,id=<var>id</var> ,debug=<var>debug</var>, name=<var>name</var></samp></dt>
+<dd>
+<p><samp>spicevmc</samp> is only available when spice support is built in.
+</p>
+<p><samp>debug</samp> debug level for spicevmc
+</p>
+<p><samp>name</samp> name of spice channel to connect to
+</p>
+<p>Connect to a spice virtual machine channel, such as vdiport.
+</p>
+</dd>
+<dt><samp>-chardev spiceport ,id=<var>id</var> ,debug=<var>debug</var>, name=<var>name</var></samp></dt>
+<dd>
+<p><samp>spiceport</samp> is only available when spice support is built in.
+</p>
+<p><samp>debug</samp> debug level for spicevmc
+</p>
+<p><samp>name</samp> name of spice port to connect to
+</p>
+<p>Connect to a spice port, allowing a Spice client to handle the traffic
+identified by a name (preferably a fqdn).
+</p></dd>
+</dl>
+
+<p>Device URL Syntax:
+</p>
+<p>In addition to using normal file images for the emulated storage devices,
+QEMU can also use networked resources such as iSCSI devices. These are
+specified using a special URL syntax.
+</p>
+<dl compact="compact">
+<dt><samp>iSCSI</samp></dt>
+<dd><p>iSCSI support allows QEMU to access iSCSI resources directly and use as
+images for the guest storage. Both disk and cdrom images are supported.
+</p>
+<p>Syntax for specifying iSCSI LUNs is
+&ldquo;iscsi://&lt;target-ip&gt;[:&lt;port&gt;]/&lt;target-iqn&gt;/&lt;lun&gt;&rdquo;
+</p>
+<p>By default qemu will use the iSCSI initiator-name
+&rsquo;iqn.2008-11.org.linux-kvm[:&lt;name&gt;]&rsquo; but this can also be set from the command
+line or a configuration file.
+</p>
+
+<p>Example (without authentication):
+</p><div class="example">
+<pre class="example">qemu-system-i386 -iscsi initiator-name=iqn.2001-04.com.example:my-initiator \
+-cdrom iscsi://192.0.2.1/iqn.2001-04.com.example/2 \
+-drive file=iscsi://192.0.2.1/iqn.2001-04.com.example/1
+</pre></div>
+
+<p>Example (CHAP username/password via URL):
+</p><div class="example">
+<pre class="example">qemu-system-i386 -drive file=iscsi://user%password@192.0.2.1/iqn.2001-04.com.example/1
+</pre></div>
+
+<p>Example (CHAP username/password via environment variables):
+</p><div class="example">
+<pre class="example">LIBISCSI_CHAP_USERNAME=&quot;user&quot; \
+LIBISCSI_CHAP_PASSWORD=&quot;password&quot; \
+qemu-system-i386 -drive file=iscsi://192.0.2.1/iqn.2001-04.com.example/1
+</pre></div>
+
+<p>iSCSI support is an optional feature of QEMU and only available when
+compiled and linked against libiscsi.
+</p>
+<p>iSCSI parameters such as username and password can also be specified via
+a configuration file. See qemu-doc for more information and examples.
+</p>
+</dd>
+<dt><samp>NBD</samp></dt>
+<dd><p>QEMU supports NBD (Network Block Devices) both using TCP protocol as well
+as Unix Domain Sockets.
+</p>
+<p>Syntax for specifying a NBD device using TCP
+&ldquo;nbd:&lt;server-ip&gt;:&lt;port&gt;[:exportname=&lt;export&gt;]&rdquo;
+</p>
+<p>Syntax for specifying a NBD device using Unix Domain Sockets
+&ldquo;nbd:unix:&lt;domain-socket&gt;[:exportname=&lt;export&gt;]&rdquo;
+</p>
+
+<p>Example for TCP
+</p><div class="example">
+<pre class="example">qemu-system-i386 --drive file=nbd:192.0.2.1:30000
+</pre></div>
+
+<p>Example for Unix Domain Sockets
+</p><div class="example">
+<pre class="example">qemu-system-i386 --drive file=nbd:unix:/tmp/nbd-socket
+</pre></div>
+
+</dd>
+<dt><samp>SSH</samp></dt>
+<dd><p>QEMU supports SSH (Secure Shell) access to remote disks.
+</p>
+<p>Examples:
+</p><div class="example">
+<pre class="example">qemu-system-i386 -drive file=ssh://user@host/path/to/disk.img
+qemu-system-i386 -drive file.driver=ssh,file.user=user,file.host=host,file.port=22,file.path=/path/to/disk.img
+</pre></div>
+
+<p>Currently authentication must be done using ssh-agent.  Other
+authentication methods may be supported in future.
+</p>
+</dd>
+<dt><samp>Sheepdog</samp></dt>
+<dd><p>Sheepdog is a distributed storage system for QEMU.
+QEMU supports using either local sheepdog devices or remote networked
+devices.
+</p>
+<p>Syntax for specifying a sheepdog device
+</p><div class="example">
+<pre class="example">sheepdog[+tcp|+unix]://[host:port]/vdiname[?socket=path][#snapid|#tag]
+</pre></div>
+
+<p>Example
+</p><div class="example">
+<pre class="example">qemu-system-i386 --drive file=sheepdog://192.0.2.1:30000/MyVirtualMachine
+</pre></div>
+
+<p>See also <a href="http://http://www.osrg.net/sheepdog/">http://http://www.osrg.net/sheepdog/</a>.
+</p>
+</dd>
+<dt><samp>GlusterFS</samp></dt>
+<dd><p>GlusterFS is an user space distributed file system.
+QEMU supports the use of GlusterFS volumes for hosting VM disk images using
+TCP, Unix Domain Sockets and RDMA transport protocols.
+</p>
+<p>Syntax for specifying a VM disk image on GlusterFS volume is
+</p><div class="example">
+<pre class="example">gluster[+transport]://[server[:port]]/volname/image[?socket=...]
+</pre></div>
+
+
+<p>Example
+</p><div class="example">
+<pre class="example">qemu-system-x86_64 --drive file=gluster://192.0.2.1/testvol/a.img
+</pre></div>
+
+<p>See also <a href="http://www.gluster.org">http://www.gluster.org</a>.
+</p>
+</dd>
+<dt><samp>HTTP/HTTPS/FTP/FTPS/TFTP</samp></dt>
+<dd><p>QEMU supports read-only access to files accessed over http(s), ftp(s) and tftp.
+</p>
+<p>Syntax using a single filename:
+</p><div class="example">
+<pre class="example">&lt;protocol&gt;://[&lt;username&gt;[:&lt;password&gt;]@]&lt;host&gt;/&lt;path&gt;
+</pre></div>
+
+<p>where:
+</p><dl compact="compact">
+<dt><samp>protocol</samp></dt>
+<dd><p>&rsquo;http&rsquo;, &rsquo;https&rsquo;, &rsquo;ftp&rsquo;, &rsquo;ftps&rsquo;, or &rsquo;tftp&rsquo;.
+</p>
+</dd>
+<dt><samp>username</samp></dt>
+<dd><p>Optional username for authentication to the remote server.
+</p>
+</dd>
+<dt><samp>password</samp></dt>
+<dd><p>Optional password for authentication to the remote server.
+</p>
+</dd>
+<dt><samp>host</samp></dt>
+<dd><p>Address of the remote server.
+</p>
+</dd>
+<dt><samp>path</samp></dt>
+<dd><p>Path on the remote server, including any query string.
+</p></dd>
+</dl>
+
+<p>The following options are also supported:
+</p><dl compact="compact">
+<dt><samp>url</samp></dt>
+<dd><p>The full URL when passing options to the driver explicitly.
+</p>
+</dd>
+<dt><samp>readahead</samp></dt>
+<dd><p>The amount of data to read ahead with each range request to the remote server.
+This value may optionally have the suffix &rsquo;T&rsquo;, &rsquo;G&rsquo;, &rsquo;M&rsquo;, &rsquo;K&rsquo;, &rsquo;k&rsquo; or &rsquo;b&rsquo;. If it
+does not have a suffix, it will be assumed to be in bytes. The value must be a
+multiple of 512 bytes. It defaults to 256k.
+</p>
+</dd>
+<dt><samp>sslverify</samp></dt>
+<dd><p>Whether to verify the remote server&rsquo;s certificate when connecting over SSL. It
+can have the value &rsquo;on&rsquo; or &rsquo;off&rsquo;. It defaults to &rsquo;on&rsquo;.
+</p></dd>
+</dl>
+
+<p>Note that when passing options to qemu explicitly, <samp>driver</samp> is the value
+of &lt;protocol&gt;.
+</p>
+<p>Example: boot from a remote Fedora 20 live ISO image
+</p><div class="example">
+<pre class="example">qemu-system-x86_64 --drive media=cdrom,file=http://dl.fedoraproject.org/pub/fedora/linux/releases/20/Live/x86_64/Fedora-Live-Desktop-x86_64-20-1.iso,readonly
+
+qemu-system-x86_64 --drive media=cdrom,file.driver=http,file.url=http://dl.fedoraproject.org/pub/fedora/linux/releases/20/Live/x86_64/Fedora-Live-Desktop-x86_64-20-1.iso,readonly
+</pre></div>
+
+<p>Example: boot from a remote Fedora 20 cloud image using a local overlay for
+writes, copy-on-read, and a readahead of 64k
+</p><div class="example">
+<pre class="example">qemu-img create -f qcow2 -o backing_file='json:{&quot;file.driver&quot;:&quot;http&quot;,, &quot;file.url&quot;:&quot;https://dl.fedoraproject.org/pub/fedora/linux/releases/20/Images/x86_64/Fedora-x86_64-20-20131211.1-sda.qcow2&quot;,, &quot;file.readahead&quot;:&quot;64k&quot;}' /tmp/Fedora-x86_64-20-20131211.1-sda.qcow2
+
+qemu-system-x86_64 -drive file=/tmp/Fedora-x86_64-20-20131211.1-sda.qcow2,copy-on-read=on
+</pre></div>
+
+<p>Example: boot from an image stored on a VMware vSphere server with a self-signed
+certificate using a local overlay for writes and a readahead of 64k
+</p><div class="example">
+<pre class="example">qemu-img create -f qcow2 -o backing_file='json:{&quot;file.driver&quot;:&quot;https&quot;,, &quot;file.url&quot;:&quot;https://user:password@vsphere.example.com/folder/test/test-flat.vmdk?dcPath=Datacenter&amp;dsName=datastore1&quot;,, &quot;file.sslverify&quot;:&quot;off&quot;,, &quot;file.readahead&quot;:&quot;64k&quot;}' /tmp/test.qcow2
+
+qemu-system-x86_64 -drive file=/tmp/test.qcow2
+</pre></div>
+</dd>
+</dl>
+<p>Bluetooth(R) options:
+</p><dl compact="compact">
+<dt><samp>-bt hci[...]</samp></dt>
+<dd><a name="index-_002dbt"></a>
+<p>Defines the function of the corresponding Bluetooth HCI.  -bt options
+are matched with the HCIs present in the chosen machine type.  For
+example when emulating a machine with only one HCI built into it, only
+the first <code>-bt hci[...]</code> option is valid and defines the HCI&rsquo;s
+logic.  The Transport Layer is decided by the machine type.  Currently
+the machines <code>n800</code> and <code>n810</code> have one HCI and all other
+machines have none.
+</p>
+<a name="bt_002dhcis"></a><p>The following three types are recognized:
+</p>
+<dl compact="compact">
+<dt><samp>-bt hci,null</samp></dt>
+<dd><p>(default) The corresponding Bluetooth HCI assumes no internal logic
+and will not respond to any HCI commands or emit events.
+</p>
+</dd>
+<dt><samp>-bt hci,host[:<var>id</var>]</samp></dt>
+<dd><p>(<code>bluez</code> only) The corresponding HCI passes commands / events
+to / from the physical HCI identified by the name <var>id</var> (default:
+<code>hci0</code>) on the computer running QEMU.  Only available on <code>bluez</code>
+capable systems like Linux.
+</p>
+</dd>
+<dt><samp>-bt hci[,vlan=<var>n</var>]</samp></dt>
+<dd><p>Add a virtual, standard HCI that will participate in the Bluetooth
+scatternet <var>n</var> (default <code>0</code>).  Similarly to <samp>-net</samp>
+VLANs, devices inside a bluetooth network <var>n</var> can only communicate
+with other devices in the same network (scatternet).
+</p></dd>
+</dl>
+
+</dd>
+<dt><samp>-bt vhci[,vlan=<var>n</var>]</samp></dt>
+<dd><p>(Linux-host only) Create a HCI in scatternet <var>n</var> (default 0) attached
+to the host bluetooth stack instead of to the emulated target.  This
+allows the host and target machines to participate in a common scatternet
+and communicate.  Requires the Linux <code>vhci</code> driver installed.  Can
+be used as following:
+</p>
+<div class="example">
+<pre class="example">qemu-system-i386 [...OPTIONS...] -bt hci,vlan=5 -bt vhci,vlan=5
+</pre></div>
+
+</dd>
+<dt><samp>-bt device:<var>dev</var>[,vlan=<var>n</var>]</samp></dt>
+<dd><p>Emulate a bluetooth device <var>dev</var> and place it in network <var>n</var>
+(default <code>0</code>).  QEMU can only emulate one type of bluetooth devices
+currently:
+</p>
+<dl compact="compact">
+<dt><samp>keyboard</samp></dt>
+<dd><p>Virtual wireless keyboard implementing the HIDP bluetooth profile.
+</p></dd>
+</dl>
+</dd>
+</dl>
+
+<p>TPM device options:
+</p>
+<p>The general form of a TPM device option is:
+</p><dl compact="compact">
+<dt><samp>-tpmdev <var>backend</var> ,id=<var>id</var> [,<var>options</var>]</samp></dt>
+<dd><a name="index-_002dtpmdev"></a>
+<p>Backend type must be:
+<samp>passthrough</samp>.
+</p>
+<p>The specific backend type will determine the applicable options.
+The <code>-tpmdev</code> option creates the TPM backend and requires a
+<code>-device</code> option that specifies the TPM frontend interface model.
+</p>
+<p>Options to each backend are described below.
+</p>
+<p>Use &rsquo;help&rsquo; to print all available TPM backend types.
+</p><div class="example">
+<pre class="example">qemu -tpmdev help
+</pre></div>
+
+</dd>
+<dt><samp>-tpmdev passthrough, id=<var>id</var>, path=<var>path</var>, cancel-path=<var>cancel-path</var></samp></dt>
+<dd>
+<p>(Linux-host only) Enable access to the host&rsquo;s TPM using the passthrough
+driver.
+</p>
+<p><samp>path</samp> specifies the path to the host&rsquo;s TPM device, i.e., on
+a Linux host this would be <code>/dev/tpm0</code>.
+<samp>path</samp> is optional and by default <code>/dev/tpm0</code> is used.
+</p>
+<p><samp>cancel-path</samp> specifies the path to the host TPM device&rsquo;s sysfs
+entry allowing for cancellation of an ongoing TPM command.
+<samp>cancel-path</samp> is optional and by default QEMU will search for the
+sysfs entry to use.
+</p>
+<p>Some notes about using the host&rsquo;s TPM with the passthrough driver:
+</p>
+<p>The TPM device accessed by the passthrough driver must not be
+used by any other application on the host.
+</p>
+<p>Since the host&rsquo;s firmware (BIOS/UEFI) has already initialized the TPM,
+the VM&rsquo;s firmware (BIOS/UEFI) will not be able to initialize the
+TPM again and may therefore not show a TPM-specific menu that would
+otherwise allow the user to configure the TPM, e.g., allow the user to
+enable/disable or activate/deactivate the TPM.
+Further, if TPM ownership is released from within a VM then the host&rsquo;s TPM
+will get disabled and deactivated. To enable and activate the
+TPM again afterwards, the host has to be rebooted and the user is
+required to enter the firmware&rsquo;s menu to enable and activate the TPM.
+If the TPM is left disabled and/or deactivated most TPM commands will fail.
+</p>
+<p>To create a passthrough TPM use the following two options:
+</p><div class="example">
+<pre class="example">-tpmdev passthrough,id=tpm0 -device tpm-tis,tpmdev=tpm0
+</pre></div>
+<p>Note that the <code>-tpmdev</code> id is <code>tpm0</code> and is referenced by
+<code>tpmdev=tpm0</code> in the device option.
+</p>
+</dd>
+</dl>
+
+
+<p>Linux/Multiboot boot specific:
+</p>
+<p>When using these options, you can use a given Linux or Multiboot
+kernel without installing it in the disk image. It can be useful
+for easier testing of various kernels.
+</p>
+<dl compact="compact">
+<dt><samp>-kernel <var>bzImage</var></samp></dt>
+<dd><a name="index-_002dkernel"></a>
+<p>Use <var>bzImage</var> as kernel image. The kernel can be either a Linux kernel
+or in multiboot format.
+</p></dd>
+<dt><samp>-append <var>cmdline</var></samp></dt>
+<dd><a name="index-_002dappend"></a>
+<p>Use <var>cmdline</var> as kernel command line
+</p></dd>
+<dt><samp>-initrd <var>file</var></samp></dt>
+<dd><a name="index-_002dinitrd"></a>
+<p>Use <var>file</var> as initial ram disk.
+</p>
+</dd>
+<dt><samp>-initrd &quot;<var>file1</var> arg=foo,<var>file2</var>&quot;</samp></dt>
+<dd>
+<p>This syntax is only available with multiboot.
+</p>
+<p>Use <var>file1</var> and <var>file2</var> as modules and pass arg=foo as parameter to the
+first module.
+</p></dd>
+<dt><samp>-dtb <var>file</var></samp></dt>
+<dd><a name="index-_002ddtb"></a>
+<p>Use <var>file</var> as a device tree binary (dtb) image and pass it to the kernel
+on boot.
+</p></dd>
+</dl>
+
+<p>Debug/Expert options:
+</p><dl compact="compact">
+<dt><samp>-serial <var>dev</var></samp></dt>
+<dd><a name="index-_002dserial"></a>
+<p>Redirect the virtual serial port to host character device
+<var>dev</var>. The default device is <code>vc</code> in graphical mode and
+<code>stdio</code> in non graphical mode.
+</p>
+<p>This option can be used several times to simulate up to 4 serial
+ports.
+</p>
+<p>Use <code>-serial none</code> to disable all serial ports.
+</p>
+<p>Available character devices are:
+</p><dl compact="compact">
+<dt><samp>vc[:<var>W</var>x<var>H</var>]</samp></dt>
+<dd><p>Virtual console. Optionally, a width and height can be given in pixel with
+</p><div class="example">
+<pre class="example">vc:800x600
+</pre></div>
+<p>It is also possible to specify width or height in characters:
+</p><div class="example">
+<pre class="example">vc:80Cx24C
+</pre></div>
+</dd>
+<dt><samp>pty</samp></dt>
+<dd><p>[Linux only] Pseudo TTY (a new PTY is automatically allocated)
+</p></dd>
+<dt><samp>none</samp></dt>
+<dd><p>No device is allocated.
+</p></dd>
+<dt><samp>null</samp></dt>
+<dd><p>void device
+</p></dd>
+<dt><samp>chardev:<var>id</var></samp></dt>
+<dd><p>Use a named character device defined with the <code>-chardev</code> option.
+</p></dd>
+<dt><samp>/dev/XXX</samp></dt>
+<dd><p>[Linux only] Use host tty, e.g. <samp>/dev/ttyS0</samp>. The host serial port
+parameters are set according to the emulated ones.
+</p></dd>
+<dt><samp>/dev/parport<var>N</var></samp></dt>
+<dd><p>[Linux only, parallel port only] Use host parallel port
+<var>N</var>. Currently SPP and EPP parallel port features can be used.
+</p></dd>
+<dt><samp>file:<var>filename</var></samp></dt>
+<dd><p>Write output to <var>filename</var>. No character can be read.
+</p></dd>
+<dt><samp>stdio</samp></dt>
+<dd><p>[Unix only] standard input/output
+</p></dd>
+<dt><samp>pipe:<var>filename</var></samp></dt>
+<dd><p>name pipe <var>filename</var>
+</p></dd>
+<dt><samp>COM<var>n</var></samp></dt>
+<dd><p>[Windows only] Use host serial port <var>n</var>
+</p></dd>
+<dt><samp>udp:[<var>remote_host</var>]:<var>remote_port</var>[@[<var>src_ip</var>]:<var>src_port</var>]</samp></dt>
+<dd><p>This implements UDP Net Console.
+When <var>remote_host</var> or <var>src_ip</var> are not specified
+they default to <code>0.0.0.0</code>.
+When not using a specified <var>src_port</var> a random port is automatically chosen.
+</p>
+<p>If you just want a simple readonly console you can use <code>netcat</code> or
+<code>nc</code>, by starting QEMU with: <code>-serial udp::4555</code> and nc as:
+<code>nc -u -l -p 4555</code>. Any time QEMU writes something to that port it
+will appear in the netconsole session.
+</p>
+<p>If you plan to send characters back via netconsole or you want to stop
+and start QEMU a lot of times, you should have QEMU use the same
+source port each time by using something like <code>-serial
+udp::4555@:4556</code> to QEMU. Another approach is to use a patched
+version of netcat which can listen to a TCP port and send and receive
+characters via udp.  If you have a patched version of netcat which
+activates telnet remote echo and single char transfer, then you can
+use the following options to step up a netcat redirector to allow
+telnet on port 5555 to access the QEMU port.
+</p><dl compact="compact">
+<dt><code>QEMU Options:</code></dt>
+<dd><p>-serial udp::4555@:4556
+</p></dd>
+<dt><code>netcat options:</code></dt>
+<dd><p>-u -P 4555 -L 0.0.0.0:4556 -t -p 5555 -I -T
+</p></dd>
+<dt><code>telnet options:</code></dt>
+<dd><p>localhost 5555
+</p></dd>
+</dl>
+
+</dd>
+<dt><samp>tcp:[<var>host</var>]:<var>port</var>[,<var>server</var>][,nowait][,nodelay]</samp></dt>
+<dd><p>The TCP Net Console has two modes of operation.  It can send the serial
+I/O to a location or wait for a connection from a location.  By default
+the TCP Net Console is sent to <var>host</var> at the <var>port</var>.  If you use
+the <var>server</var> option QEMU will wait for a client socket application
+to connect to the port before continuing, unless the <code>nowait</code>
+option was specified.  The <code>nodelay</code> option disables the Nagle buffering
+algorithm.  If <var>host</var> is omitted, 0.0.0.0 is assumed. Only
+one TCP connection at a time is accepted. You can use <code>telnet</code> to
+connect to the corresponding character device.
+</p><dl compact="compact">
+<dt><code>Example to send tcp console to 192.168.0.2 port 4444</code></dt>
+<dd><p>-serial tcp:192.168.0.2:4444
+</p></dd>
+<dt><code>Example to listen and wait on port 4444 for connection</code></dt>
+<dd><p>-serial tcp::4444,server
+</p></dd>
+<dt><code>Example to not wait and listen on ip 192.168.0.100 port 4444</code></dt>
+<dd><p>-serial tcp:192.168.0.100:4444,server,nowait
+</p></dd>
+</dl>
+
+</dd>
+<dt><samp>telnet:<var>host</var>:<var>port</var>[,server][,nowait][,nodelay]</samp></dt>
+<dd><p>The telnet protocol is used instead of raw tcp sockets.  The options
+work the same as if you had specified <code>-serial tcp</code>.  The
+difference is that the port acts like a telnet server or client using
+telnet option negotiation.  This will also allow you to send the
+MAGIC_SYSRQ sequence if you use a telnet that supports sending the break
+sequence.  Typically in unix telnet you do it with Control-] and then
+type &quot;send break&quot; followed by pressing the enter key.
+</p>
+</dd>
+<dt><samp>unix:<var>path</var>[,server][,nowait]</samp></dt>
+<dd><p>A unix domain socket is used instead of a tcp socket.  The option works the
+same as if you had specified <code>-serial tcp</code> except the unix domain socket
+<var>path</var> is used for connections.
+</p>
+</dd>
+<dt><samp>mon:<var>dev_string</var></samp></dt>
+<dd><p>This is a special option to allow the monitor to be multiplexed onto
+another serial port.  The monitor is accessed with key sequence of
+<tt class="key">Control-a</tt> and then pressing <tt class="key">c</tt>.
+<var>dev_string</var> should be any one of the serial devices specified
+above.  An example to multiplex the monitor onto a telnet server
+listening on port 4444 would be:
+</p><dl compact="compact">
+<dt><code>-serial mon:telnet::4444,server,nowait</code></dt>
+</dl>
+<p>When the monitor is multiplexed to stdio in this way, Ctrl+C will not terminate
+QEMU any more but will be passed to the guest instead.
+</p>
+</dd>
+<dt><samp>braille</samp></dt>
+<dd><p>Braille device.  This will use BrlAPI to display the braille output on a real
+or fake device.
+</p>
+</dd>
+<dt><samp>msmouse</samp></dt>
+<dd><p>Three button serial mouse. Configure the guest to use Microsoft protocol.
+</p></dd>
+</dl>
+</dd>
+<dt><samp>-parallel <var>dev</var></samp></dt>
+<dd><a name="index-_002dparallel"></a>
+<p>Redirect the virtual parallel port to host device <var>dev</var> (same
+devices as the serial port). On Linux hosts, <samp>/dev/parportN</samp> can
+be used to use hardware devices connected on the corresponding host
+parallel port.
+</p>
+<p>This option can be used several times to simulate up to 3 parallel
+ports.
+</p>
+<p>Use <code>-parallel none</code> to disable all parallel ports.
+</p></dd>
+<dt><samp>-monitor <var>dev</var></samp></dt>
+<dd><a name="index-_002dmonitor"></a>
+<p>Redirect the monitor to host device <var>dev</var> (same devices as the
+serial port).
+The default device is <code>vc</code> in graphical mode and <code>stdio</code> in
+non graphical mode.
+Use <code>-monitor none</code> to disable the default monitor.
+</p></dd>
+<dt><samp>-qmp <var>dev</var></samp></dt>
+<dd><a name="index-_002dqmp"></a>
+<p>Like -monitor but opens in &rsquo;control&rsquo; mode.
+</p></dd>
+<dt><samp>-mon [chardev=]name[,mode=readline|control][,default]</samp></dt>
+<dd><a name="index-_002dmon"></a>
+<p>Setup monitor on chardev <var>name</var>.
+</p></dd>
+<dt><samp>-debugcon <var>dev</var></samp></dt>
+<dd><a name="index-_002ddebugcon"></a>
+<p>Redirect the debug console to host device <var>dev</var> (same devices as the
+serial port).  The debug console is an I/O port which is typically port
+0xe9; writing to that I/O port sends output to this device.
+The default device is <code>vc</code> in graphical mode and <code>stdio</code> in
+non graphical mode.
+</p></dd>
+<dt><samp>-pidfile <var>file</var></samp></dt>
+<dd><a name="index-_002dpidfile"></a>
+<p>Store the QEMU process PID in <var>file</var>. It is useful if you launch QEMU
+from a script.
+</p></dd>
+<dt><samp>-singlestep</samp></dt>
+<dd><a name="index-_002dsinglestep"></a>
+<p>Run the emulation in single step mode.
+</p></dd>
+<dt><samp>-S</samp></dt>
+<dd><a name="index-_002dS"></a>
+<p>Do not start CPU at startup (you must type &rsquo;c&rsquo; in the monitor).
+</p></dd>
+<dt><samp>-realtime mlock=on|off</samp></dt>
+<dd><a name="index-_002drealtime"></a>
+<p>Run qemu with realtime features.
+mlocking qemu and guest memory can be enabled via <samp>mlock=on</samp>
+(enabled by default).
+</p></dd>
+<dt><samp>-gdb <var>dev</var></samp></dt>
+<dd><a name="index-_002dgdb"></a>
+<p>Wait for gdb connection on device <var>dev</var> (see <a href="#gdb_005fusage">gdb_usage</a>). Typical
+connections will likely be TCP-based, but also UDP, pseudo TTY, or even
+stdio are reasonable use case. The latter is allowing to start QEMU from
+within gdb and establish the connection via a pipe:
+</p><div class="example">
+<pre class="example">(gdb) target remote | exec qemu-system-i386 -gdb stdio ...
+</pre></div>
+</dd>
+<dt><samp>-s</samp></dt>
+<dd><a name="index-_002ds"></a>
+<p>Shorthand for -gdb tcp::1234, i.e. open a gdbserver on TCP port 1234
+(see <a href="#gdb_005fusage">gdb_usage</a>).
+</p></dd>
+<dt><samp>-d <var>item1</var>[,...]</samp></dt>
+<dd><a name="index-_002dd"></a>
+<p>Enable logging of specified items. Use &rsquo;-d help&rsquo; for a list of log items.
+</p></dd>
+<dt><samp>-D <var>logfile</var></samp></dt>
+<dd><a name="index-_002dD"></a>
+<p>Output log in <var>logfile</var> instead of to stderr
+</p></dd>
+<dt><samp>-L  <var>path</var></samp></dt>
+<dd><a name="index-_002dL"></a>
+<p>Set the directory for the BIOS, VGA BIOS and keymaps.
+</p></dd>
+<dt><samp>-bios <var>file</var></samp></dt>
+<dd><a name="index-_002dbios"></a>
+<p>Set the filename for the BIOS.
+</p></dd>
+<dt><samp>-enable-kvm</samp></dt>
+<dd><a name="index-_002denable_002dkvm"></a>
+<p>Enable KVM full virtualization support. This option is only available
+if KVM support is enabled when compiling.
+</p></dd>
+<dt><samp>-xen-domid <var>id</var></samp></dt>
+<dd><a name="index-_002dxen_002ddomid"></a>
+<p>Specify xen guest domain <var>id</var> (XEN only).
+</p></dd>
+<dt><samp>-xen-create</samp></dt>
+<dd><a name="index-_002dxen_002dcreate"></a>
+<p>Create domain using xen hypercalls, bypassing xend.
+Warning: should not be used when xend is in use (XEN only).
+</p></dd>
+<dt><samp>-xen-attach</samp></dt>
+<dd><a name="index-_002dxen_002dattach"></a>
+<p>Attach to existing xen domain.
+xend will use this when starting QEMU (XEN only).
+</p></dd>
+<dt><samp>-no-reboot</samp></dt>
+<dd><a name="index-_002dno_002dreboot"></a>
+<p>Exit instead of rebooting.
+</p></dd>
+<dt><samp>-no-shutdown</samp></dt>
+<dd><a name="index-_002dno_002dshutdown"></a>
+<p>Don&rsquo;t exit QEMU on guest shutdown, but instead only stop the emulation.
+This allows for instance switching to monitor to commit changes to the
+disk image.
+</p></dd>
+<dt><samp>-loadvm <var>file</var></samp></dt>
+<dd><a name="index-_002dloadvm"></a>
+<p>Start right away with a saved state (<code>loadvm</code> in monitor)
+</p></dd>
+<dt><samp>-daemonize</samp></dt>
+<dd><a name="index-_002ddaemonize"></a>
+<p>Daemonize the QEMU process after initialization.  QEMU will not detach from
+standard IO until it is ready to receive connections on any of its devices.
+This option is a useful way for external programs to launch QEMU without having
+to cope with initialization race conditions.
+</p></dd>
+<dt><samp>-option-rom <var>file</var></samp></dt>
+<dd><a name="index-_002doption_002drom"></a>
+<p>Load the contents of <var>file</var> as an option ROM.
+This option is useful to load things like EtherBoot.
+</p></dd>
+<dt><samp>-clock <var>method</var></samp></dt>
+<dd><a name="index-_002dclock"></a>
+<p>Force the use of the given methods for timer alarm. To see what timers
+are available use <code>-clock help</code>.
+</p>
+</dd>
+<dt><samp>-rtc [base=utc|localtime|<var>date</var>][,clock=host|vm][,driftfix=none|slew]</samp></dt>
+<dd><a name="index-_002drtc"></a>
+<p>Specify <samp>base</samp> as <code>utc</code> or <code>localtime</code> to let the RTC start at the current
+UTC or local time, respectively. <code>localtime</code> is required for correct date in
+MS-DOS or Windows. To start at a specific point in time, provide <var>date</var> in the
+format <code>2006-06-17T16:01:21</code> or <code>2006-06-17</code>. The default base is UTC.
+</p>
+<p>By default the RTC is driven by the host system time. This allows using of the
+RTC as accurate reference clock inside the guest, specifically if the host
+time is smoothly following an accurate external reference clock, e.g. via NTP.
+If you want to isolate the guest time from the host, you can set <samp>clock</samp>
+to <code>rt</code> instead.  To even prevent it from progressing during suspension,
+you can set it to <code>vm</code>.
+</p>
+<p>Enable <samp>driftfix</samp> (i386 targets only) if you experience time drift problems,
+specifically with Windows&rsquo; ACPI HAL. This option will try to figure out how
+many timer interrupts were not processed by the Windows guest and will
+re-inject them.
+</p></dd>
+<dt><samp>-icount [<var>N</var>|auto]</samp></dt>
+<dd><a name="index-_002dicount"></a>
+<p>Enable virtual instruction counter.  The virtual cpu will execute one
+instruction every 2^<var>N</var> ns of virtual time.  If <code>auto</code> is specified
+then the virtual cpu speed will be automatically adjusted to keep virtual
+time within a few seconds of real time.
+</p>
+<p>Note that while this option can give deterministic behavior, it does not
+provide cycle accurate emulation.  Modern CPUs contain superscalar out of
+order cores with complex cache hierarchies.  The number of instructions
+executed often has little or no correlation with actual performance.
+</p></dd>
+<dt><samp>-watchdog <var>model</var></samp></dt>
+<dd><a name="index-_002dwatchdog"></a>
+<p>Create a virtual hardware watchdog device.  Once enabled (by a guest
+action), the watchdog must be periodically polled by an agent inside
+the guest or else the guest will be restarted.
+</p>
+<p>The <var>model</var> is the model of hardware watchdog to emulate.  Choices
+for model are: <code>ib700</code> (iBASE 700) which is a very simple ISA
+watchdog with a single timer, or <code>i6300esb</code> (Intel 6300ESB I/O
+controller hub) which is a much more featureful PCI-based dual-timer
+watchdog.  Choose a model for which your guest has drivers.
+</p>
+<p>Use <code>-watchdog help</code> to list available hardware models.  Only one
+watchdog can be enabled for a guest.
+</p></dd>
+<dt><samp>-watchdog-action <var>action</var></samp></dt>
+<dd><a name="index-_002dwatchdog_002daction"></a>
+
+<p>The <var>action</var> controls what QEMU will do when the watchdog timer
+expires.
+The default is
+<code>reset</code> (forcefully reset the guest).
+Other possible actions are:
+<code>shutdown</code> (attempt to gracefully shutdown the guest),
+<code>poweroff</code> (forcefully poweroff the guest),
+<code>pause</code> (pause the guest),
+<code>debug</code> (print a debug message and continue), or
+<code>none</code> (do nothing).
+</p>
+<p>Note that the <code>shutdown</code> action requires that the guest responds
+to ACPI signals, which it may not be able to do in the sort of
+situations where the watchdog would have expired, and thus
+<code>-watchdog-action shutdown</code> is not recommended for production use.
+</p>
+<p>Examples:
+</p>
+<dl compact="compact">
+<dt><code>-watchdog i6300esb -watchdog-action pause</code></dt>
+<dt><code>-watchdog ib700</code></dt>
+</dl>
+
+</dd>
+<dt><samp>-echr <var>numeric_ascii_value</var></samp></dt>
+<dd><a name="index-_002dechr"></a>
+<p>Change the escape character used for switching to the monitor when using
+monitor and serial sharing.  The default is <code>0x01</code> when using the
+<code>-nographic</code> option.  <code>0x01</code> is equal to pressing
+<code>Control-a</code>.  You can select a different character from the ascii
+control keys where 1 through 26 map to Control-a through Control-z.  For
+instance you could use the either of the following to change the escape
+character to Control-t.
+</p><dl compact="compact">
+<dt><code>-echr 0x14</code></dt>
+<dt><code>-echr 20</code></dt>
+</dl>
+</dd>
+<dt><samp>-virtioconsole <var>c</var></samp></dt>
+<dd><a name="index-_002dvirtioconsole"></a>
+<p>Set virtio console.
+</p>
+<p>This option is maintained for backward compatibility.
+</p>
+<p>Please use <code>-device virtconsole</code> for the new way of invocation.
+</p></dd>
+<dt><samp>-show-cursor</samp></dt>
+<dd><a name="index-_002dshow_002dcursor"></a>
+<p>Show cursor.
+</p></dd>
+<dt><samp>-tb-size <var>n</var></samp></dt>
+<dd><a name="index-_002dtb_002dsize"></a>
+<p>Set TB size.
+</p></dd>
+<dt><samp>-incoming <var>port</var></samp></dt>
+<dd><a name="index-_002dincoming"></a>
+<p>Prepare for incoming migration, listen on <var>port</var>.
+</p></dd>
+<dt><samp>-nodefaults</samp></dt>
+<dd><a name="index-_002dnodefaults"></a>
+<p>Don&rsquo;t create default devices. Normally, QEMU sets the default devices like serial
+port, parallel port, virtual console, monitor device, VGA adapter, floppy and
+CD-ROM drive and others. The <code>-nodefaults</code> option will disable all those
+default devices.
+</p></dd>
+<dt><samp>-chroot <var>dir</var></samp></dt>
+<dd><a name="index-_002dchroot"></a>
+<p>Immediately before starting guest execution, chroot to the specified
+directory.  Especially useful in combination with -runas.
+</p></dd>
+<dt><samp>-runas <var>user</var></samp></dt>
+<dd><a name="index-_002drunas"></a>
+<p>Immediately before starting guest execution, drop root privileges, switching
+to the specified user.
+</p></dd>
+<dt><samp>-prom-env <var>variable</var>=<var>value</var></samp></dt>
+<dd><a name="index-_002dprom_002denv"></a>
+<p>Set OpenBIOS nvram <var>variable</var> to given <var>value</var> (PPC, SPARC only).
+</p></dd>
+<dt><samp>-semihosting</samp></dt>
+<dd><a name="index-_002dsemihosting"></a>
+<p>Semihosting mode (ARM, M68K, Xtensa only).
+</p></dd>
+<dt><samp>-old-param</samp></dt>
+<dd><a name="index-_002dold_002dparam-_0028ARM_0029"></a>
+<p>Old param mode (ARM only).
+</p></dd>
+<dt><samp>-sandbox <var>arg</var></samp></dt>
+<dd><a name="index-_002dsandbox"></a>
+<p>Enable Seccomp mode 2 system call filter. &rsquo;on&rsquo; will enable syscall filtering and &rsquo;off&rsquo; will
+disable it.  The default is &rsquo;off&rsquo;.
+</p></dd>
+<dt><samp>-readconfig <var>file</var></samp></dt>
+<dd><a name="index-_002dreadconfig"></a>
+<p>Read device configuration from <var>file</var>. This approach is useful when you want to spawn
+QEMU process with many command line options but you don&rsquo;t want to exceed the command line
+character limit.
+</p></dd>
+<dt><samp>-writeconfig <var>file</var></samp></dt>
+<dd><a name="index-_002dwriteconfig"></a>
+<p>Write device configuration to <var>file</var>. The <var>file</var> can be either filename to save
+command line and device configuration into file or dash <code>-</code>) character to print the
+output to stdout. This can be later used as input file for <code>-readconfig</code> option.
+</p></dd>
+<dt><samp>-nodefconfig</samp></dt>
+<dd><a name="index-_002dnodefconfig"></a>
+<p>Normally QEMU loads configuration files from <var>sysconfdir</var> and <var>datadir</var> at startup.
+The <code>-nodefconfig</code> option will prevent QEMU from loading any of those config files.
+</p></dd>
+<dt><samp>-no-user-config</samp></dt>
+<dd><a name="index-_002dno_002duser_002dconfig"></a>
+<p>The <code>-no-user-config</code> option makes QEMU not load any of the user-provided
+config files on <var>sysconfdir</var>, but won&rsquo;t make it skip the QEMU-provided config
+files from <var>datadir</var>.
+</p></dd>
+<dt><samp>-trace [events=<var>file</var>][,file=<var>file</var>]</samp></dt>
+<dd><a name="index-_002dtrace"></a>
+
+<p>Specify tracing options.
+</p>
+<dl compact="compact">
+<dt><samp>events=<var>file</var></samp></dt>
+<dd><p>Immediately enable events listed in <var>file</var>.
+The file must contain one event name (as listed in the <var>trace-events</var> file)
+per line.
+This option is only available if QEMU has been compiled with
+either <var>simple</var> or <var>stderr</var> tracing backend.
+</p></dd>
+<dt><samp>file=<var>file</var></samp></dt>
+<dd><p>Log output traces to <var>file</var>.
+</p>
+<p>This option is only available if QEMU has been compiled with
+the <var>simple</var> tracing backend.
+</p></dd>
+</dl>
+</dd>
+<dt><samp>-enable-fips</samp></dt>
+<dd><a name="index-_002denable_002dfips"></a>
+<p>Enable FIPS 140-2 compliance mode.
+</p></dd>
+<dt><samp>-object <var>typename</var>[,<var>prop1</var>=<var>value1</var>,...]</samp></dt>
+<dd><a name="index-_002dobject"></a>
+<p>Create an new object of type <var>typename</var> setting properties
+in the order they are specified.  Note that the &rsquo;id&rsquo;
+property must be set.  These objects are placed in the
+&rsquo;/objects&rsquo; path.
+</p></dd>
+<dt><samp>-msg timestamp[=on|off]</samp></dt>
+<dd><a name="index-_002dmsg"></a>
+<p>prepend a timestamp to each log message.(default:on)
+</p></dd>
+<dt><samp>-dump-vmstate <var>file</var></samp></dt>
+<dd><a name="index-_002ddump_002dvmstate"></a>
+<p>Dump json-encoded vmstate information for current machine type to file
+in <var>file</var>
+</p></dd>
+</dl>
+
+
+<hr>
+<a name="pcsys_005fkeys"></a>
+<a name="Keys"></a>
+<h3 class="section">3.4 Keys</h3>
+
+
+<p>During the graphical emulation, you can use special key combinations to change
+modes. The default key mappings are shown below, but if you use <code>-alt-grab</code>
+then the modifier is Ctrl-Alt-Shift (instead of Ctrl-Alt) and if you use
+<code>-ctrl-grab</code> then the modifier is the right Ctrl key (instead of Ctrl-Alt):
+</p>
+<dl compact="compact">
+<dt><tt class="key">Ctrl-Alt-f</tt></dt>
+<dd><a name="index-Ctrl_002dAlt_002df"></a>
+<p>Toggle full screen
+</p>
+</dd>
+<dt><tt class="key">Ctrl-Alt-+</tt></dt>
+<dd><a name="index-Ctrl_002dAlt_002d_002b"></a>
+<p>Enlarge the screen
+</p>
+</dd>
+<dt><tt class="key">Ctrl-Alt--</tt></dt>
+<dd><a name="index-Ctrl_002dAlt_002d_002d"></a>
+<p>Shrink the screen
+</p>
+</dd>
+<dt><tt class="key">Ctrl-Alt-u</tt></dt>
+<dd><a name="index-Ctrl_002dAlt_002du"></a>
+<p>Restore the screen&rsquo;s un-scaled dimensions
+</p>
+</dd>
+<dt><tt class="key">Ctrl-Alt-n</tt></dt>
+<dd><a name="index-Ctrl_002dAlt_002dn"></a>
+<p>Switch to virtual console &rsquo;n&rsquo;. Standard console mappings are:
+</p><dl compact="compact">
+<dt><em>1</em></dt>
+<dd><p>Target system display
+</p></dd>
+<dt><em>2</em></dt>
+<dd><p>Monitor
+</p></dd>
+<dt><em>3</em></dt>
+<dd><p>Serial port
+</p></dd>
+</dl>
+
+</dd>
+<dt><tt class="key">Ctrl-Alt</tt></dt>
+<dd><a name="index-Ctrl_002dAlt"></a>
+<p>Toggle mouse and keyboard grab.
+</p></dd>
+</dl>
+
+<a name="index-Ctrl_002dUp"></a>
+<a name="index-Ctrl_002dDown"></a>
+<a name="index-Ctrl_002dPageUp"></a>
+<a name="index-Ctrl_002dPageDown"></a>
+<p>In the virtual consoles, you can use <tt class="key">Ctrl-Up</tt>, <tt class="key">Ctrl-Down</tt>,
+<tt class="key">Ctrl-PageUp</tt> and <tt class="key">Ctrl-PageDown</tt> to move in the back log.
+</p>
+<a name="index-Ctrl_002da-h"></a>
+<p>During emulation, if you are using the <samp>-nographic</samp> option, use
+<tt class="key">Ctrl-a h</tt> to get terminal commands:
+</p>
+<dl compact="compact">
+<dt><tt class="key">Ctrl-a h</tt></dt>
+<dd><a name="index-Ctrl_002da-h-1"></a>
+</dd>
+<dt><tt class="key">Ctrl-a ?</tt></dt>
+<dd><a name="index-Ctrl_002da-_003f"></a>
+<p>Print this help
+</p></dd>
+<dt><tt class="key">Ctrl-a x</tt></dt>
+<dd><a name="index-Ctrl_002da-x"></a>
+<p>Exit emulator
+</p></dd>
+<dt><tt class="key">Ctrl-a s</tt></dt>
+<dd><a name="index-Ctrl_002da-s"></a>
+<p>Save disk data back to file (if -snapshot)
+</p></dd>
+<dt><tt class="key">Ctrl-a t</tt></dt>
+<dd><a name="index-Ctrl_002da-t"></a>
+<p>Toggle console timestamps
+</p></dd>
+<dt><tt class="key">Ctrl-a b</tt></dt>
+<dd><a name="index-Ctrl_002da-b"></a>
+<p>Send break (magic sysrq in Linux)
+</p></dd>
+<dt><tt class="key">Ctrl-a c</tt></dt>
+<dd><a name="index-Ctrl_002da-c"></a>
+<p>Switch between console and monitor
+</p></dd>
+<dt><tt class="key">Ctrl-a Ctrl-a</tt></dt>
+<dd><a name="index-Ctrl_002da-a"></a>
+<p>Send Ctrl-a
+</p></dd>
+</dl>
+
+
+<hr>
+<a name="pcsys_005fmonitor"></a>
+<a name="QEMU-Monitor"></a>
+<h3 class="section">3.5 QEMU Monitor</h3>
+<a name="index-QEMU-monitor"></a>
+
+<p>The QEMU monitor is used to give complex commands to the QEMU
+emulator. You can use it to:
+</p>
+<ul class="no-bullet">
+<li>- Remove or insert removable media images
+(such as CD-ROM or floppies).
+
+</li><li>- Freeze/unfreeze the Virtual Machine (VM) and save or restore its state
+from a disk file.
+
+</li><li>- Inspect the VM state without an external debugger.
+
+</li></ul>
+
+<a name="Commands"></a>
+<h4 class="subsection">3.5.1 Commands</h4>
+
+<p>The following commands are available:
+</p>
+<dl compact="compact">
+<dt><samp>help or ? [<var>cmd</var>]</samp></dt>
+<dd><a name="index-help"></a>
+<p>Show the help for all commands or just for command <var>cmd</var>.
+</p></dd>
+<dt><samp>commit</samp></dt>
+<dd><a name="index-commit"></a>
+<p>Commit changes to the disk images (if -snapshot is used) or backing files.
+If the backing file is smaller than the snapshot, then the backing file will be
+resized to be the same size as the snapshot.  If the snapshot is smaller than
+the backing file, the backing file will not be truncated.  If you want the
+backing file to match the size of the smaller snapshot, you can safely truncate
+it yourself once the commit operation successfully completes.
+</p></dd>
+<dt><samp>q or quit</samp></dt>
+<dd><a name="index-quit"></a>
+<p>Quit the emulator.
+</p></dd>
+<dt><samp>block_resize</samp></dt>
+<dd><a name="index-block_005fresize"></a>
+<p>Resize a block image while a guest is running.  Usually requires guest
+action to see the updated size.  Resize to a lower size is supported,
+but should be used with extreme caution.  Note that this command only
+resizes image files, it can not resize block devices like LVM volumes.
+</p></dd>
+<dt><samp>block_stream</samp></dt>
+<dd><a name="index-block_005fstream"></a>
+<p>Copy data from a backing file into a block device.
+</p></dd>
+<dt><samp>block_job_set_speed</samp></dt>
+<dd><a name="index-block_005fjob_005fset_005fspeed"></a>
+<p>Set maximum speed for a background block operation.
+</p></dd>
+<dt><samp>block_job_cancel</samp></dt>
+<dd><a name="index-block_005fjob_005fcancel"></a>
+<p>Stop an active background block operation (streaming, mirroring).
+</p></dd>
+<dt><samp>block_job_complete</samp></dt>
+<dd><a name="index-block_005fjob_005fcomplete"></a>
+<p>Manually trigger completion of an active background block operation.
+For mirroring, this will switch the device to the destination path.
+</p></dd>
+<dt><samp>block_job_pause</samp></dt>
+<dd><a name="index-block_005fjob_005fpause"></a>
+<p>Pause an active block streaming operation.
+</p></dd>
+<dt><samp>block_job_resume</samp></dt>
+<dd><a name="index-block_005fjob_005fresume"></a>
+<p>Resume a paused block streaming operation.
+</p></dd>
+<dt><samp>eject [-f] <var>device</var></samp></dt>
+<dd><a name="index-eject"></a>
+<p>Eject a removable medium (use -f to force it).
+</p></dd>
+<dt><samp>drive_del <var>device</var></samp></dt>
+<dd><a name="index-drive_005fdel"></a>
+<p>Remove host block device.  The result is that guest generated IO is no longer
+submitted against the host device underlying the disk.  Once a drive has
+been deleted, the QEMU Block layer returns -EIO which results in IO
+errors in the guest for applications that are reading/writing to the device.
+These errors are always reported to the guest, regardless of the drive&rsquo;s error
+actions (drive options rerror, werror).
+</p></dd>
+<dt><samp>change <var>device</var> <var>setting</var></samp></dt>
+<dd><a name="index-change"></a>
+
+<p>Change the configuration of a device.
+</p>
+<dl compact="compact">
+<dt><samp>change <var>diskdevice</var> <var>filename</var> [<var>format</var>]</samp></dt>
+<dd><p>Change the medium for a removable disk device to point to <var>filename</var>. eg
+</p>
+<div class="example">
+<pre class="example">(qemu) change ide1-cd0 /path/to/some.iso
+</pre></div>
+
+<p><var>format</var> is optional.
+</p>
+</dd>
+<dt><samp>change vnc <var>display</var>,<var>options</var></samp></dt>
+<dd><p>Change the configuration of the VNC server. The valid syntax for <var>display</var>
+and <var>options</var> are described at <a href="#sec_005finvocation">sec_invocation</a>. eg
+</p>
+<div class="example">
+<pre class="example">(qemu) change vnc localhost:1
+</pre></div>
+
+</dd>
+<dt><samp>change vnc password [<var>password</var>]</samp></dt>
+<dd>
+<p>Change the password associated with the VNC server. If the new password is not
+supplied, the monitor will prompt for it to be entered. VNC passwords are only
+significant up to 8 letters. eg
+</p>
+<div class="example">
+<pre class="example">(qemu) change vnc password
+Password: ********
+</pre></div>
+
+</dd>
+</dl>
+</dd>
+<dt><samp>screendump <var>filename</var></samp></dt>
+<dd><a name="index-screendump"></a>
+<p>Save screen into PPM image <var>filename</var>.
+</p></dd>
+<dt><samp>logfile <var>filename</var></samp></dt>
+<dd><a name="index-logfile"></a>
+<p>Output logs to <var>filename</var>.
+</p></dd>
+<dt><samp>trace-event</samp></dt>
+<dd><a name="index-trace_002devent"></a>
+<p>changes status of a trace event
+</p></dd>
+<dt><samp>trace-file on|off|flush</samp></dt>
+<dd><a name="index-trace_002dfile"></a>
+<p>Open, close, or flush the trace file.  If no argument is given, the status of the trace file is displayed.
+</p></dd>
+<dt><samp>log <var>item1</var>[,...]</samp></dt>
+<dd><a name="index-log"></a>
+<p>Activate logging of the specified items.
+</p></dd>
+<dt><samp>savevm [<var>tag</var>|<var>id</var>]</samp></dt>
+<dd><a name="index-savevm"></a>
+<p>Create a snapshot of the whole virtual machine. If <var>tag</var> is
+provided, it is used as human readable identifier. If there is already
+a snapshot with the same tag or ID, it is replaced. More info at
+<a href="#vm_005fsnapshots">vm_snapshots</a>.
+</p></dd>
+<dt><samp>loadvm <var>tag</var>|<var>id</var></samp></dt>
+<dd><a name="index-loadvm"></a>
+<p>Set the whole virtual machine to the snapshot identified by the tag
+<var>tag</var> or the unique snapshot ID <var>id</var>.
+</p></dd>
+<dt><samp>delvm <var>tag</var>|<var>id</var></samp></dt>
+<dd><a name="index-delvm"></a>
+<p>Delete the snapshot identified by <var>tag</var> or <var>id</var>.
+</p></dd>
+<dt><samp>singlestep [off]</samp></dt>
+<dd><a name="index-singlestep"></a>
+<p>Run the emulation in single step mode.
+If called with option off, the emulation returns to normal mode.
+</p></dd>
+<dt><samp>stop</samp></dt>
+<dd><a name="index-stop"></a>
+<p>Stop emulation.
+</p></dd>
+<dt><samp>c or cont</samp></dt>
+<dd><a name="index-cont"></a>
+<p>Resume emulation.
+</p></dd>
+<dt><samp>system_wakeup</samp></dt>
+<dd><a name="index-system_005fwakeup"></a>
+<p>Wakeup guest from suspend.
+</p></dd>
+<dt><samp>gdbserver [<var>port</var>]</samp></dt>
+<dd><a name="index-gdbserver"></a>
+<p>Start gdbserver session (default <var>port</var>=1234)
+</p></dd>
+<dt><samp>x/fmt <var>addr</var></samp></dt>
+<dd><a name="index-x"></a>
+<p>Virtual memory dump starting at <var>addr</var>.
+</p></dd>
+<dt><samp>xp /<var>fmt</var> <var>addr</var></samp></dt>
+<dd><a name="index-xp"></a>
+<p>Physical memory dump starting at <var>addr</var>.
+</p>
+<p><var>fmt</var> is a format which tells the command how to format the
+data. Its syntax is: <samp>/{count}{format}{size}</samp>
+</p>
+<dl compact="compact">
+<dt><var>count</var></dt>
+<dd><p>is the number of items to be dumped.
+</p>
+</dd>
+<dt><var>format</var></dt>
+<dd><p>can be x (hex), d (signed decimal), u (unsigned decimal), o (octal),
+c (char) or i (asm instruction).
+</p>
+</dd>
+<dt><var>size</var></dt>
+<dd><p>can be b (8 bits), h (16 bits), w (32 bits) or g (64 bits). On x86,
+<code>h</code> or <code>w</code> can be specified with the <code>i</code> format to
+respectively select 16 or 32 bit code instruction size.
+</p>
+</dd>
+</dl>
+
+<p>Examples:
+</p><ul>
+<li> Dump 10 instructions at the current instruction pointer:
+<div class="example">
+<pre class="example">(qemu) x/10i $eip
+0x90107063:  ret
+0x90107064:  sti
+0x90107065:  lea    0x0(%esi,1),%esi
+0x90107069:  lea    0x0(%edi,1),%edi
+0x90107070:  ret
+0x90107071:  jmp    0x90107080
+0x90107073:  nop
+0x90107074:  nop
+0x90107075:  nop
+0x90107076:  nop
+</pre></div>
+
+</li><li> Dump 80 16 bit values at the start of the video memory.
+<div class="smallexample">
+<pre class="smallexample">(qemu) xp/80hx 0xb8000
+0x000b8000: 0x0b50 0x0b6c 0x0b65 0x0b78 0x0b38 0x0b36 0x0b2f 0x0b42
+0x000b8010: 0x0b6f 0x0b63 0x0b68 0x0b73 0x0b20 0x0b56 0x0b47 0x0b41
+0x000b8020: 0x0b42 0x0b69 0x0b6f 0x0b73 0x0b20 0x0b63 0x0b75 0x0b72
+0x000b8030: 0x0b72 0x0b65 0x0b6e 0x0b74 0x0b2d 0x0b63 0x0b76 0x0b73
+0x000b8040: 0x0b20 0x0b30 0x0b35 0x0b20 0x0b4e 0x0b6f 0x0b76 0x0b20
+0x000b8050: 0x0b32 0x0b30 0x0b30 0x0b33 0x0720 0x0720 0x0720 0x0720
+0x000b8060: 0x0720 0x0720 0x0720 0x0720 0x0720 0x0720 0x0720 0x0720
+0x000b8070: 0x0720 0x0720 0x0720 0x0720 0x0720 0x0720 0x0720 0x0720
+0x000b8080: 0x0720 0x0720 0x0720 0x0720 0x0720 0x0720 0x0720 0x0720
+0x000b8090: 0x0720 0x0720 0x0720 0x0720 0x0720 0x0720 0x0720 0x0720
+</pre></div>
+</li></ul>
+</dd>
+<dt><samp>p or print/<var>fmt</var> <var>expr</var></samp></dt>
+<dd><a name="index-print"></a>
+
+<p>Print expression value. Only the <var>format</var> part of <var>fmt</var> is
+used.
+Read I/O port.
+Write to I/O port.
+</p></dd>
+<dt><samp>sendkey <var>keys</var></samp></dt>
+<dd><a name="index-sendkey"></a>
+
+<p>Send <var>keys</var> to the guest. <var>keys</var> could be the name of the
+key or the raw value in hexadecimal format. Use <code>-</code> to press
+several keys simultaneously. Example:
+</p><div class="example">
+<pre class="example">sendkey ctrl-alt-f1
+</pre></div>
+
+<p>This command is useful to send keys that your graphical user interface
+intercepts at low level, such as <code>ctrl-alt-f1</code> in X Window.
+</p></dd>
+<dt><samp>system_reset</samp></dt>
+<dd><a name="index-system_005freset"></a>
+
+<p>Reset the system.
+</p></dd>
+<dt><samp>system_powerdown</samp></dt>
+<dd><a name="index-system_005fpowerdown"></a>
+
+<p>Power down the system (if supported).
+</p></dd>
+<dt><samp>sum <var>addr</var> <var>size</var></samp></dt>
+<dd><a name="index-sum"></a>
+
+<p>Compute the checksum of a memory region.
+</p></dd>
+<dt><samp>usb_add <var>devname</var></samp></dt>
+<dd><a name="index-usb_005fadd"></a>
+
+<p>Add the USB device <var>devname</var>.  For details of available devices see
+<a href="#usb_005fdevices">usb_devices</a>
+</p></dd>
+<dt><samp>usb_del <var>devname</var></samp></dt>
+<dd><a name="index-usb_005fdel"></a>
+
+<p>Remove the USB device <var>devname</var> from the QEMU virtual USB
+hub. <var>devname</var> has the syntax <code>bus.addr</code>. Use the monitor
+command <code>info usb</code> to see the devices you can remove.
+</p></dd>
+<dt><samp>device_add <var>config</var></samp></dt>
+<dd><a name="index-device_005fadd"></a>
+
+<p>Add device.
+</p></dd>
+<dt><samp>device_del <var>id</var></samp></dt>
+<dd><a name="index-device_005fdel"></a>
+
+<p>Remove device <var>id</var>.
+</p></dd>
+<dt><samp>cpu <var>index</var></samp></dt>
+<dd><a name="index-cpu"></a>
+<p>Set the default CPU.
+</p></dd>
+<dt><samp>mouse_move <var>dx</var> <var>dy</var> [<var>dz</var>]</samp></dt>
+<dd><a name="index-mouse_005fmove"></a>
+<p>Move the active mouse to the specified coordinates <var>dx</var> <var>dy</var>
+with optional scroll axis <var>dz</var>.
+</p></dd>
+<dt><samp>mouse_button <var>val</var></samp></dt>
+<dd><a name="index-mouse_005fbutton"></a>
+<p>Change the active mouse button state <var>val</var> (1=L, 2=M, 4=R).
+</p></dd>
+<dt><samp>mouse_set <var>index</var></samp></dt>
+<dd><a name="index-mouse_005fset"></a>
+<p>Set which mouse device receives events at given <var>index</var>, index
+can be obtained with
+</p><div class="example">
+<pre class="example">info mice
+</pre></div>
+</dd>
+<dt><samp>wavcapture <var>filename</var> [<var>frequency</var> [<var>bits</var> [<var>channels</var>]]]</samp></dt>
+<dd><a name="index-wavcapture"></a>
+<p>Capture audio into <var>filename</var>. Using sample rate <var>frequency</var>
+bits per sample <var>bits</var> and number of channels <var>channels</var>.
+</p>
+<p>Defaults:
+</p><ul class="no-bullet">
+<li>- Sample rate = 44100 Hz - CD quality
+</li><li>- Bits = 16
+</li><li>- Number of channels = 2 - Stereo
+</li></ul>
+</dd>
+<dt><samp>stopcapture <var>index</var></samp></dt>
+<dd><a name="index-stopcapture"></a>
+<p>Stop capture with a given <var>index</var>, index can be obtained with
+</p><div class="example">
+<pre class="example">info capture
+</pre></div>
+</dd>
+<dt><samp>memsave <var>addr</var> <var>size</var> <var>file</var></samp></dt>
+<dd><a name="index-memsave"></a>
+<p>save to disk virtual memory dump starting at <var>addr</var> of size <var>size</var>.
+</p></dd>
+<dt><samp>pmemsave <var>addr</var> <var>size</var> <var>file</var></samp></dt>
+<dd><a name="index-pmemsave"></a>
+<p>save to disk physical memory dump starting at <var>addr</var> of size <var>size</var>.
+</p></dd>
+<dt><samp>boot_set <var>bootdevicelist</var></samp></dt>
+<dd><a name="index-boot_005fset"></a>
+
+<p>Define new values for the boot device list. Those values will override
+the values specified on the command line through the <code>-boot</code> option.
+</p>
+<p>The values that can be specified here depend on the machine type, but are
+the same that can be specified in the <code>-boot</code> command line option.
+</p></dd>
+<dt><samp>nmi <var>cpu</var></samp></dt>
+<dd><a name="index-nmi"></a>
+<p>Inject an NMI (x86) or RESTART (s390x) on the given CPU.
+</p>
+</dd>
+<dt><samp>ringbuf_write <var>device</var> <var>data</var></samp></dt>
+<dd><a name="index-ringbuf_005fwrite"></a>
+<p>Write <var>data</var> to ring buffer character device <var>device</var>.
+<var>data</var> must be a UTF-8 string.
+</p>
+</dd>
+<dt><samp>ringbuf_read <var>device</var></samp></dt>
+<dd><a name="index-ringbuf_005fread"></a>
+<p>Read and print up to <var>size</var> bytes from ring buffer character
+device <var>device</var>.
+Certain non-printable characters are printed \uXXXX, where XXXX is the
+character code in hexadecimal.  Character \ is printed \\.
+Bug: can screw up when the buffer contains invalid UTF-8 sequences,
+NUL characters, after the ring buffer lost data, and when reading
+stops because the size limit is reached.
+</p>
+</dd>
+<dt><samp>migrate [-d] [-b] [-i] <var>uri</var></samp></dt>
+<dd><a name="index-migrate"></a>
+<p>Migrate to <var>uri</var> (using -d to not wait for completion).
+-b for migration with full copy of disk
+-i for migration with incremental copy of disk (base image is shared)
+</p></dd>
+<dt><samp>migrate_cancel</samp></dt>
+<dd><a name="index-migrate_005fcancel"></a>
+<p>Cancel the current VM migration.
+</p>
+</dd>
+<dt><samp>migrate_set_cache_size <var>value</var></samp></dt>
+<dd><a name="index-migrate_005fset_005fcache_005fsize"></a>
+<p>Set cache size to <var>value</var> (in bytes) for xbzrle migrations.
+</p></dd>
+<dt><samp>migrate_set_speed <var>value</var></samp></dt>
+<dd><a name="index-migrate_005fset_005fspeed"></a>
+<p>Set maximum speed to <var>value</var> (in bytes) for migrations.
+</p></dd>
+<dt><samp>migrate_set_downtime <var>second</var></samp></dt>
+<dd><a name="index-migrate_005fset_005fdowntime"></a>
+<p>Set maximum tolerated downtime (in seconds) for migration.
+</p></dd>
+<dt><samp>migrate_set_capability <var>capability</var> <var>state</var></samp></dt>
+<dd><a name="index-migrate_005fset_005fcapability"></a>
+<p>Enable/Disable the usage of a capability <var>capability</var> for migration.
+</p></dd>
+<dt><samp>client_migrate_info <var>protocol</var> <var>hostname</var> <var>port</var> <var>tls-port</var> <var>cert-subject</var></samp></dt>
+<dd><a name="index-client_005fmigrate_005finfo"></a>
+<p>Set the spice/vnc connection info for the migration target.  The spice/vnc
+server will ask the spice/vnc client to automatically reconnect using the
+new parameters (if specified) once the vm migration finished successfully.
+</p></dd>
+<dt><samp>dump-guest-memory [-p] <var>filename</var> <var>begin</var> <var>length</var></samp></dt>
+<dt><samp>dump-guest-memory [-z|-l|-s] <var>filename</var></samp></dt>
+<dd><a name="index-dump_002dguest_002dmemory"></a>
+<p>Dump guest memory to <var>protocol</var>. The file can be processed with crash or
+gdb. Without -z|-l|-s, the dump format is ELF.
+-p: do paging to get guest&rsquo;s memory mapping.
+-z: dump in kdump-compressed format, with zlib compression.
+-l: dump in kdump-compressed format, with lzo compression.
+-s: dump in kdump-compressed format, with snappy compression.
+filename: dump file name.
+begin: the starting physical address. It&rsquo;s optional, and should be
+specified together with length.
+length: the memory size, in bytes. It&rsquo;s optional, and should be specified
+together with begin.
+</p></dd>
+<dt><samp>snapshot_blkdev</samp></dt>
+<dd><a name="index-snapshot_005fblkdev"></a>
+<p>Snapshot device, using snapshot file as target if provided
+</p></dd>
+<dt><samp>snapshot_blkdev_internal</samp></dt>
+<dd><a name="index-snapshot_005fblkdev_005finternal"></a>
+<p>Take an internal snapshot on device if it support
+</p></dd>
+<dt><samp>snapshot_delete_blkdev_internal</samp></dt>
+<dd><a name="index-snapshot_005fdelete_005fblkdev_005finternal"></a>
+<p>Delete an internal snapshot on device if it support
+</p></dd>
+<dt><samp>drive_mirror</samp></dt>
+<dd><a name="index-drive_005fmirror"></a>
+<p>Start mirroring a block device&rsquo;s writes to a new destination,
+using the specified target.
+</p></dd>
+<dt><samp>drive_backup</samp></dt>
+<dd><a name="index-drive_005fbackup"></a>
+<p>Start a point-in-time copy of a block device to a specificed target.
+</p></dd>
+<dt><samp>drive_add</samp></dt>
+<dd><a name="index-drive_005fadd"></a>
+<p>Add drive to PCI storage controller.
+</p></dd>
+<dt><samp>pci_add</samp></dt>
+<dd><a name="index-pci_005fadd"></a>
+<p>Hot-add PCI device.
+</p></dd>
+<dt><samp>pci_del</samp></dt>
+<dd><a name="index-pci_005fdel"></a>
+<p>Hot remove PCI device.
+</p></dd>
+<dt><samp>pcie_aer_inject_error</samp></dt>
+<dd><a name="index-pcie_005faer_005finject_005ferror"></a>
+<p>Inject PCIe AER error
+</p></dd>
+<dt><samp>host_net_add</samp></dt>
+<dd><a name="index-host_005fnet_005fadd"></a>
+<p>Add host VLAN client.
+</p></dd>
+<dt><samp>host_net_remove</samp></dt>
+<dd><a name="index-host_005fnet_005fremove"></a>
+<p>Remove host VLAN client.
+</p></dd>
+<dt><samp>netdev_add</samp></dt>
+<dd><a name="index-netdev_005fadd"></a>
+<p>Add host network device.
+</p></dd>
+<dt><samp>netdev_del</samp></dt>
+<dd><a name="index-netdev_005fdel"></a>
+<p>Remove host network device.
+</p></dd>
+<dt><samp>object_add</samp></dt>
+<dd><a name="index-object_005fadd"></a>
+<p>Create QOM object.
+</p></dd>
+<dt><samp>object_del</samp></dt>
+<dd><a name="index-object_005fdel"></a>
+<p>Destroy QOM object.
+</p></dd>
+<dt><samp>hostfwd_add</samp></dt>
+<dd><a name="index-hostfwd_005fadd"></a>
+<p>Redirect TCP or UDP connections from host to guest (requires -net user).
+</p></dd>
+<dt><samp>hostfwd_remove</samp></dt>
+<dd><a name="index-hostfwd_005fremove"></a>
+<p>Remove host-to-guest TCP or UDP redirection.
+</p></dd>
+<dt><samp>balloon <var>value</var></samp></dt>
+<dd><a name="index-balloon"></a>
+<p>Request VM to change its memory allocation to <var>value</var> (in MB).
+</p></dd>
+<dt><samp>set_link <var>name</var> [on|off]</samp></dt>
+<dd><a name="index-set_005flink"></a>
+<p>Switch link <var>name</var> on (i.e. up) or off (i.e. down).
+</p></dd>
+<dt><samp>watchdog_action</samp></dt>
+<dd><a name="index-watchdog_005faction"></a>
+<p>Change watchdog action.
+</p></dd>
+<dt><samp>acl_show <var>aclname</var></samp></dt>
+<dd><a name="index-acl_005fshow"></a>
+<p>List all the matching rules in the access control list, and the default
+policy. There are currently two named access control lists,
+<var>vnc.x509dname</var> and <var>vnc.username</var> matching on the x509 client
+certificate distinguished name, and SASL username respectively.
+</p></dd>
+<dt><samp>acl_policy <var>aclname</var> <code>allow|deny</code></samp></dt>
+<dd><a name="index-acl_005fpolicy"></a>
+<p>Set the default access control list policy, used in the event that
+none of the explicit rules match. The default policy at startup is
+always <code>deny</code>.
+</p></dd>
+<dt><samp>acl_add <var>aclname</var> <var>match</var> <code>allow|deny</code> [<var>index</var>]</samp></dt>
+<dd><a name="index-acl_005fadd"></a>
+<p>Add a match rule to the access control list, allowing or denying access.
+The match will normally be an exact username or x509 distinguished name,
+but can optionally include wildcard globs. eg <code>*@EXAMPLE.COM</code> to
+allow all users in the <code>EXAMPLE.COM</code> kerberos realm. The match will
+normally be appended to the end of the ACL, but can be inserted
+earlier in the list if the optional <var>index</var> parameter is supplied.
+</p></dd>
+<dt><samp>acl_remove <var>aclname</var> <var>match</var></samp></dt>
+<dd><a name="index-acl_005fremove"></a>
+<p>Remove the specified match rule from the access control list.
+</p></dd>
+<dt><samp>acl_reset <var>aclname</var></samp></dt>
+<dd><a name="index-acl_005freset"></a>
+<p>Remove all matches from the access control list, and set the default
+policy back to <code>deny</code>.
+</p></dd>
+<dt><samp>nbd_server_start <var>host</var>:<var>port</var></samp></dt>
+<dd><a name="index-nbd_005fserver_005fstart"></a>
+<p>Start an NBD server on the given host and/or port.  If the <samp>-a</samp>
+option is included, all of the virtual machine&rsquo;s block devices that
+have an inserted media on them are automatically exported; in this case,
+the <samp>-w</samp> option makes the devices writable too.
+</p></dd>
+<dt><samp>nbd_server_add <var>device</var></samp></dt>
+<dd><a name="index-nbd_005fserver_005fadd"></a>
+<p>Export a block device through QEMU&rsquo;s NBD server, which must be started
+beforehand with <code>nbd_server_start</code>.  The <samp>-w</samp> option makes the
+exported device writable too.
+</p></dd>
+<dt><samp>nbd_server_stop</samp></dt>
+<dd><a name="index-nbd_005fserver_005fstop"></a>
+<p>Stop the QEMU embedded NBD server.
+</p></dd>
+<dt><samp>mce <var>cpu</var> <var>bank</var> <var>status</var> <var>mcgstatus</var> <var>addr</var> <var>misc</var></samp></dt>
+<dd><a name="index-mce-_0028x86_0029"></a>
+<p>Inject an MCE on the given CPU (x86 only).
+</p></dd>
+<dt><samp>getfd <var>fdname</var></samp></dt>
+<dd><a name="index-getfd"></a>
+<p>If a file descriptor is passed alongside this command using the SCM_RIGHTS
+mechanism on unix sockets, it is stored using the name <var>fdname</var> for
+later use by other monitor commands.
+</p></dd>
+<dt><samp>closefd <var>fdname</var></samp></dt>
+<dd><a name="index-closefd"></a>
+<p>Close the file descriptor previously assigned to <var>fdname</var> using the
+<code>getfd</code> command. This is only needed if the file descriptor was never
+used by another monitor command.
+</p></dd>
+<dt><samp>block_set_io_throttle <var>device</var> <var>bps</var> <var>bps_rd</var> <var>bps_wr</var> <var>iops</var> <var>iops_rd</var> <var>iops_wr</var></samp></dt>
+<dd><a name="index-block_005fset_005fio_005fthrottle"></a>
+<p>Change I/O throttle limits for a block drive to <var>bps</var> <var>bps_rd</var> <var>bps_wr</var> <var>iops</var> <var>iops_rd</var> <var>iops_wr</var>
+</p></dd>
+<dt><samp>block_passwd <var>device</var> <var>password</var></samp></dt>
+<dd><a name="index-block_005fpasswd"></a>
+<p>Set the encrypted device <var>device</var> password to <var>password</var>
+</p></dd>
+<dt><samp>set_password [ vnc | spice ] password [ action-if-connected ]</samp></dt>
+<dd><a name="index-set_005fpassword"></a>
+
+<p>Change spice/vnc password.  Use zero to make the password stay valid
+forever.  <var>action-if-connected</var> specifies what should happen in
+case a connection is established: <var>fail</var> makes the password change
+fail.  <var>disconnect</var> changes the password and disconnects the
+client.  <var>keep</var> changes the password and keeps the connection up.
+<var>keep</var> is the default.
+</p></dd>
+<dt><samp>expire_password [ vnc | spice ] expire-time</samp></dt>
+<dd><a name="index-expire_005fpassword"></a>
+
+<p>Specify when a password for spice/vnc becomes
+invalid. <var>expire-time</var> accepts:
+</p>
+<dl compact="compact">
+<dt><var>now</var></dt>
+<dd><p>Invalidate password instantly.
+</p>
+</dd>
+<dt><var>never</var></dt>
+<dd><p>Password stays valid forever.
+</p>
+</dd>
+<dt><var>+nsec</var></dt>
+<dd><p>Password stays valid for <var>nsec</var> seconds starting now.
+</p>
+</dd>
+<dt><var>nsec</var></dt>
+<dd><p>Password is invalidated at the given time.  <var>nsec</var> are the seconds
+passed since 1970, i.e. unix epoch.
+</p>
+</dd>
+</dl>
+</dd>
+<dt><samp>chardev_add args</samp></dt>
+<dd><a name="index-chardev_005fadd"></a>
+
+<p>chardev_add accepts the same parameters as the -chardev command line switch.
+</p>
+</dd>
+<dt><samp>chardev_remove id</samp></dt>
+<dd><a name="index-chardev_005fremove"></a>
+
+<p>Removes the chardev <var>id</var>.
+</p>
+</dd>
+<dt><samp>qemu-io <var>device</var> <var>command</var></samp></dt>
+<dd><a name="index-qemu_002dio"></a>
+
+<p>Executes a qemu-io command on the given block device.
+</p>
+</dd>
+<dt><samp>cpu-add <var>id</var></samp></dt>
+<dd><p>Add CPU with id <var>id</var>
+</p></dd>
+<dt><samp>info <var>subcommand</var></samp></dt>
+<dd><a name="index-info"></a>
+<p>Show various information about the system state.
+</p>
+<dl compact="compact">
+<dt><samp>info version</samp></dt>
+<dd><p>show the version of QEMU
+</p></dd>
+<dt><samp>info network</samp></dt>
+<dd><p>show the various VLANs and the associated devices
+</p></dd>
+<dt><samp>info chardev</samp></dt>
+<dd><p>show the character devices
+</p></dd>
+<dt><samp>info block</samp></dt>
+<dd><p>show the block devices
+</p></dd>
+<dt><samp>info blockstats</samp></dt>
+<dd><p>show block device statistics
+</p></dd>
+<dt><samp>info registers</samp></dt>
+<dd><p>show the cpu registers
+</p></dd>
+<dt><samp>info cpus</samp></dt>
+<dd><p>show infos for each CPU
+</p></dd>
+<dt><samp>info history</samp></dt>
+<dd><p>show the command line history
+</p></dd>
+<dt><samp>info irq</samp></dt>
+<dd><p>show the interrupts statistics (if available)
+</p></dd>
+<dt><samp>info pic</samp></dt>
+<dd><p>show i8259 (PIC) state
+</p></dd>
+<dt><samp>info pci</samp></dt>
+<dd><p>show emulated PCI device info
+</p></dd>
+<dt><samp>info tlb</samp></dt>
+<dd><p>show virtual to physical memory mappings (i386, SH4, SPARC, PPC, and Xtensa only)
+</p></dd>
+<dt><samp>info mem</samp></dt>
+<dd><p>show the active virtual memory mappings (i386 only)
+</p></dd>
+<dt><samp>info jit</samp></dt>
+<dd><p>show dynamic compiler info
+</p></dd>
+<dt><samp>info numa</samp></dt>
+<dd><p>show NUMA information
+</p></dd>
+<dt><samp>info kvm</samp></dt>
+<dd><p>show KVM information
+</p></dd>
+<dt><samp>info usb</samp></dt>
+<dd><p>show USB devices plugged on the virtual USB hub
+</p></dd>
+<dt><samp>info usbhost</samp></dt>
+<dd><p>show all USB host devices
+</p></dd>
+<dt><samp>info profile</samp></dt>
+<dd><p>show profiling information
+</p></dd>
+<dt><samp>info capture</samp></dt>
+<dd><p>show information about active capturing
+</p></dd>
+<dt><samp>info snapshots</samp></dt>
+<dd><p>show list of VM snapshots
+</p></dd>
+<dt><samp>info status</samp></dt>
+<dd><p>show the current VM status (running|paused)
+</p></dd>
+<dt><samp>info pcmcia</samp></dt>
+<dd><p>show guest PCMCIA status
+</p></dd>
+<dt><samp>info mice</samp></dt>
+<dd><p>show which guest mouse is receiving events
+</p></dd>
+<dt><samp>info vnc</samp></dt>
+<dd><p>show the vnc server status
+</p></dd>
+<dt><samp>info name</samp></dt>
+<dd><p>show the current VM name
+</p></dd>
+<dt><samp>info uuid</samp></dt>
+<dd><p>show the current VM UUID
+</p></dd>
+<dt><samp>info cpustats</samp></dt>
+<dd><p>show CPU statistics
+</p></dd>
+<dt><samp>info usernet</samp></dt>
+<dd><p>show user network stack connection states
+</p></dd>
+<dt><samp>info migrate</samp></dt>
+<dd><p>show migration status
+</p></dd>
+<dt><samp>info migrate_capabilities</samp></dt>
+<dd><p>show current migration capabilities
+</p></dd>
+<dt><samp>info migrate_cache_size</samp></dt>
+<dd><p>show current migration XBZRLE cache size
+</p></dd>
+<dt><samp>info balloon</samp></dt>
+<dd><p>show balloon information
+</p></dd>
+<dt><samp>info qtree</samp></dt>
+<dd><p>show device tree
+</p></dd>
+<dt><samp>info qdm</samp></dt>
+<dd><p>show qdev device model list
+</p></dd>
+<dt><samp>info roms</samp></dt>
+<dd><p>show roms
+</p></dd>
+<dt><samp>info tpm</samp></dt>
+<dd><p>show the TPM device
+</p></dd>
+</dl>
+</dd>
+<dt><samp>info trace-events</samp></dt>
+<dd><p>show available trace events and their state
+</p></dd>
+</dl>
+
+<a name="Integer-expressions"></a>
+<h4 class="subsection">3.5.2 Integer expressions</h4>
+
+<p>The monitor understands integers expressions for every integer
+argument. You can use register names to get the value of specifics
+CPU registers by prefixing them with <em>$</em>.
+</p>
+<hr>
+<a name="disk_005fimages"></a>
+<a name="Disk-Images"></a>
+<h3 class="section">3.6 Disk Images</h3>
+
+<p>Since version 0.6.1, QEMU supports many disk image formats, including
+growable disk images (their size increase as non empty sectors are
+written), compressed and encrypted disk images. Version 0.8.3 added
+the new qcow2 disk image format which is essential to support VM
+snapshots.
+</p>
+
+<hr>
+<a name="disk_005fimages_005fquickstart"></a>
+<a name="Quick-start-for-disk-image-creation"></a>
+<h4 class="subsection">3.6.1 Quick start for disk image creation</h4>
+
+<p>You can create a disk image with the command:
+</p><div class="example">
+<pre class="example">qemu-img create myimage.img mysize
+</pre></div>
+<p>where <var>myimage.img</var> is the disk image filename and <var>mysize</var> is its
+size in kilobytes. You can add an <code>M</code> suffix to give the size in
+megabytes and a <code>G</code> suffix for gigabytes.
+</p>
+<p>See <a href="#qemu_005fimg_005finvocation">qemu_img_invocation</a> for more information.
+</p>
+<hr>
+<a name="disk_005fimages_005fsnapshot_005fmode"></a>
+<a name="Snapshot-mode"></a>
+<h4 class="subsection">3.6.2 Snapshot mode</h4>
+
+<p>If you use the option <samp>-snapshot</samp>, all disk images are
+considered as read only. When sectors in written, they are written in
+a temporary file created in <samp>/tmp</samp>. You can however force the
+write back to the raw disk images by using the <code>commit</code> monitor
+command (or <tt class="key">C-a s</tt> in the serial console).
+</p>
+<hr>
+<a name="vm_005fsnapshots"></a>
+<a name="VM-snapshots"></a>
+<h4 class="subsection">3.6.3 VM snapshots</h4>
+
+<p>VM snapshots are snapshots of the complete virtual machine including
+CPU state, RAM, device state and the content of all the writable
+disks. In order to use VM snapshots, you must have at least one non
+removable and writable block device using the <code>qcow2</code> disk image
+format. Normally this device is the first virtual hard drive.
+</p>
+<p>Use the monitor command <code>savevm</code> to create a new VM snapshot or
+replace an existing one. A human readable name can be assigned to each
+snapshot in addition to its numerical ID.
+</p>
+<p>Use <code>loadvm</code> to restore a VM snapshot and <code>delvm</code> to remove
+a VM snapshot. <code>info snapshots</code> lists the available snapshots
+with their associated information:
+</p>
+<div class="example">
+<pre class="example">(qemu) info snapshots
+Snapshot devices: hda
+Snapshot list (from hda):
+ID        TAG                 VM SIZE                DATE       VM CLOCK
+1         start                   41M 2006-08-06 12:38:02   00:00:14.954
+2                                 40M 2006-08-06 12:43:29   00:00:18.633
+3         msys                    40M 2006-08-06 12:44:04   00:00:23.514
+</pre></div>
+
+<p>A VM snapshot is made of a VM state info (its size is shown in
+<code>info snapshots</code>) and a snapshot of every writable disk image.
+The VM state info is stored in the first <code>qcow2</code> non removable
+and writable block device. The disk image snapshots are stored in
+every disk image. The size of a snapshot in a disk image is difficult
+to evaluate and is not shown by <code>info snapshots</code> because the
+associated disk sectors are shared among all the snapshots to save
+disk space (otherwise each snapshot would need a full copy of all the
+disk images).
+</p>
+<p>When using the (unrelated) <code>-snapshot</code> option
+(<a href="#disk_005fimages_005fsnapshot_005fmode">disk_images_snapshot_mode</a>), you can always make VM snapshots,
+but they are deleted as soon as you exit QEMU.
+</p>
+<p>VM snapshots currently have the following known limitations:
+</p><ul>
+<li> They cannot cope with removable devices if they are removed or
+inserted after a snapshot is done.
+</li><li> A few device drivers still have incomplete snapshot support so their
+state is not saved or restored properly (in particular USB).
+</li></ul>
+
+<hr>
+<a name="qemu_005fimg_005finvocation"></a>
+<a name="qemu_002dimg-Invocation"></a>
+<h4 class="subsection">3.6.4 <code>qemu-img</code> Invocation</h4>
+
+<div class="example">
+<pre class="example">usage: qemu-img command [command options]
+</pre></div>
+
+<p>qemu-img allows you to create, convert and modify images offline. It can handle
+all image formats supported by QEMU.
+</p>
+<p><b>Warning:</b> Never use qemu-img to modify images in use by a running virtual
+machine or any other process; this may destroy the image. Also, be aware that
+querying an image that is being modified by another process may encounter
+inconsistent state.
+</p>
+
+<p>The following commands are supported:
+</p>
+<dl compact="compact">
+<dt><samp>check [-q] [-f <var>fmt</var>] [--output=<var>ofmt</var>] [-r [leaks | all]] <var>filename</var></samp></dt>
+<dt><samp>create [-q] [-f <var>fmt</var>] [-o <var>options</var>] <var>filename</var> [<var>size</var>]</samp></dt>
+<dt><samp>commit [-q] [-f <var>fmt</var>] [-t <var>cache</var>] <var>filename</var></samp></dt>
+<dt><samp>compare [-f <var>fmt</var>] [-F <var>fmt</var>] [-p] [-q] [-s] <var>filename1</var> <var>filename2</var></samp></dt>
+<dt><samp>convert [-c] [-p] [-q] [-n] [-f <var>fmt</var>] [-t <var>cache</var>] [-O <var>output_fmt</var>] [-o <var>options</var>] [-s <var>snapshot_id_or_name</var>] [-l <var>snapshot_param</var>] [-S <var>sparse_size</var>] <var>filename</var> [<var>filename2</var> [...]] <var>output_filename</var></samp></dt>
+<dt><samp>info [-f <var>fmt</var>] [--output=<var>ofmt</var>] [--backing-chain] <var>filename</var></samp></dt>
+<dt><samp>map [-f <var>fmt</var>] [--output=<var>ofmt</var>] <var>filename</var></samp></dt>
+<dt><samp>snapshot [-q] [-l | -a <var>snapshot</var> | -c <var>snapshot</var> | -d <var>snapshot</var>] <var>filename</var></samp></dt>
+<dt><samp>rebase [-q] [-f <var>fmt</var>] [-t <var>cache</var>] [-p] [-u] -b <var>backing_file</var> [-F <var>backing_fmt</var>] <var>filename</var></samp></dt>
+<dt><samp>resize [-q] <var>filename</var> [+ | -]<var>size</var></samp></dt>
+<dt><samp>amend [-q] [-f <var>fmt</var>] -o <var>options</var> <var>filename</var></samp></dt>
+</dl>
+
+<p>Command parameters:
+</p><dl compact="compact">
+<dt><var>filename</var></dt>
+<dd><p>is a disk image filename
+</p></dd>
+<dt><var>fmt</var></dt>
+<dd><p>is the disk image format. It is guessed automatically in most cases. See below
+for a description of the supported disk formats.
+</p>
+</dd>
+<dt><var>&ndash;backing-chain</var></dt>
+<dd><p>will enumerate information about backing files in a disk image chain. Refer
+below for further description.
+</p>
+</dd>
+<dt><var>size</var></dt>
+<dd><p>is the disk image size in bytes. Optional suffixes <code>k</code> or <code>K</code>
+(kilobyte, 1024) <code>M</code> (megabyte, 1024k) and <code>G</code> (gigabyte, 1024M)
+and T (terabyte, 1024G) are supported.  <code>b</code> is ignored.
+</p>
+</dd>
+<dt><var>output_filename</var></dt>
+<dd><p>is the destination disk image filename
+</p>
+</dd>
+<dt><var>output_fmt</var></dt>
+<dd><p>is the destination format
+</p></dd>
+<dt><var>options</var></dt>
+<dd><p>is a comma separated list of format specific options in a
+name=value format. Use <code>-o ?</code> for an overview of the options supported
+by the used format or see the format descriptions below for details.
+</p></dd>
+<dt><var>snapshot_param</var></dt>
+<dd><p>is param used for internal snapshot, format is
+&rsquo;snapshot.id=[ID],snapshot.name=[NAME]&rsquo; or &rsquo;[ID_OR_NAME]&rsquo;
+</p></dd>
+<dt><var>snapshot_id_or_name</var></dt>
+<dd><p>is deprecated, use snapshot_param instead
+</p>
+</dd>
+<dt><var>-c</var></dt>
+<dd><p>indicates that target image must be compressed (qcow format only)
+</p></dd>
+<dt><var>-h</var></dt>
+<dd><p>with or without a command shows help and lists the supported formats
+</p></dd>
+<dt><var>-p</var></dt>
+<dd><p>display progress bar (compare, convert and rebase commands only).
+If the <var>-p</var> option is not used for a command that supports it, the
+progress is reported when the process receives a <code>SIGUSR1</code> signal.
+</p></dd>
+<dt><var>-q</var></dt>
+<dd><p>Quiet mode - do not print any output (except errors). There&rsquo;s no progress bar
+in case both <var>-q</var> and <var>-p</var> options are used.
+</p></dd>
+<dt><var>-S <var>size</var></var></dt>
+<dd><p>indicates the consecutive number of bytes that must contain only zeros
+for qemu-img to create a sparse image during conversion. This value is rounded
+down to the nearest 512 bytes. You may use the common size suffixes like
+<code>k</code> for kilobytes.
+</p></dd>
+<dt><var>-t <var>cache</var></var></dt>
+<dd><p>specifies the cache mode that should be used with the (destination) file. See
+the documentation of the emulator&rsquo;s <code>-drive cache=...</code> option for allowed
+values.
+</p></dd>
+</dl>
+
+<p>Parameters to snapshot subcommand:
+</p>
+<dl compact="compact">
+<dt><samp>snapshot</samp></dt>
+<dd><p>is the name of the snapshot to create, apply or delete
+</p></dd>
+<dt><samp>-a</samp></dt>
+<dd><p>applies a snapshot (revert disk to saved state)
+</p></dd>
+<dt><samp>-c</samp></dt>
+<dd><p>creates a snapshot
+</p></dd>
+<dt><samp>-d</samp></dt>
+<dd><p>deletes a snapshot
+</p></dd>
+<dt><samp>-l</samp></dt>
+<dd><p>lists all snapshots in the given image
+</p></dd>
+</dl>
+
+<p>Parameters to compare subcommand:
+</p>
+<dl compact="compact">
+<dt><samp>-f</samp></dt>
+<dd><p>First image format
+</p></dd>
+<dt><samp>-F</samp></dt>
+<dd><p>Second image format
+</p></dd>
+<dt><samp>-s</samp></dt>
+<dd><p>Strict mode - fail on on different image size or sector allocation
+</p></dd>
+</dl>
+
+<p>Parameters to convert subcommand:
+</p>
+<dl compact="compact">
+<dt><samp>-n</samp></dt>
+<dd><p>Skip the creation of the target volume
+</p></dd>
+</dl>
+
+<p>Command description:
+</p>
+<dl compact="compact">
+<dt><samp>check [-f <var>fmt</var>] [--output=<var>ofmt</var>] [-r [leaks | all]] <var>filename</var></samp></dt>
+<dd>
+<p>Perform a consistency check on the disk image <var>filename</var>. The command can
+output in the format <var>ofmt</var> which is either <code>human</code> or <code>json</code>.
+</p>
+<p>If <code>-r</code> is specified, qemu-img tries to repair any inconsistencies found
+during the check. <code>-r leaks</code> repairs only cluster leaks, whereas
+<code>-r all</code> fixes all kinds of errors, with a higher risk of choosing the
+wrong fix or hiding corruption that has already occurred.
+</p>
+<p>Only the formats <code>qcow2</code>, <code>qed</code> and <code>vdi</code> support
+consistency checks.
+</p>
+<p>In case the image does not have any inconsistencies, check exits with <code>0</code>.
+Other exit codes indicate the kind of inconsistency found or if another error
+occurred. The following table summarizes all exit codes of the check subcommand:
+</p>
+<dl compact="compact">
+<dt><samp>0</samp></dt>
+<dd><p>Check completed, the image is (now) consistent
+</p></dd>
+<dt><samp>1</samp></dt>
+<dd><p>Check not completed because of internal errors
+</p></dd>
+<dt><samp>2</samp></dt>
+<dd><p>Check completed, image is corrupted
+</p></dd>
+<dt><samp>3</samp></dt>
+<dd><p>Check completed, image has leaked clusters, but is not corrupted
+</p></dd>
+<dt><samp>63</samp></dt>
+<dd><p>Checks are not supported by the image format
+</p>
+</dd>
+</dl>
+
+<p>If <code>-r</code> is specified, exit codes representing the image state refer to the
+state after (the attempt at) repairing it. That is, a successful <code>-r all</code>
+will yield the exit code 0, independently of the image state before.
+</p>
+</dd>
+<dt><samp>create [-f <var>fmt</var>] [-o <var>options</var>] <var>filename</var> [<var>size</var>]</samp></dt>
+<dd>
+<p>Create the new disk image <var>filename</var> of size <var>size</var> and format
+<var>fmt</var>. Depending on the file format, you can add one or more <var>options</var>
+that enable additional features of this format.
+</p>
+<p>If the option <var>backing_file</var> is specified, then the image will record
+only the differences from <var>backing_file</var>. No size needs to be specified in
+this case. <var>backing_file</var> will never be modified unless you use the
+<code>commit</code> monitor command (or qemu-img commit).
+</p>
+<p>The size can also be specified using the <var>size</var> option with <code>-o</code>,
+it doesn&rsquo;t need to be specified separately in this case.
+</p>
+</dd>
+<dt><samp>commit [-f <var>fmt</var>] [-t <var>cache</var>] <var>filename</var></samp></dt>
+<dd>
+<p>Commit the changes recorded in <var>filename</var> in its base image or backing file.
+If the backing file is smaller than the snapshot, then the backing file will be
+resized to be the same size as the snapshot.  If the snapshot is smaller than
+the backing file, the backing file will not be truncated.  If you want the
+backing file to match the size of the smaller snapshot, you can safely truncate
+it yourself once the commit operation successfully completes.
+</p>
+</dd>
+<dt><samp>compare [-f <var>fmt</var>] [-F <var>fmt</var>] [-p] [-s] [-q] <var>filename1</var> <var>filename2</var></samp></dt>
+<dd>
+<p>Check if two images have the same content. You can compare images with
+different format or settings.
+</p>
+<p>The format is probed unless you specify it by <var>-f</var> (used for
+<var>filename1</var>) and/or <var>-F</var> (used for <var>filename2</var>) option.
+</p>
+<p>By default, images with different size are considered identical if the larger
+image contains only unallocated and/or zeroed sectors in the area after the end
+of the other image. In addition, if any sector is not allocated in one image
+and contains only zero bytes in the second one, it is evaluated as equal. You
+can use Strict mode by specifying the <var>-s</var> option. When compare runs in
+Strict mode, it fails in case image size differs or a sector is allocated in
+one image and is not allocated in the second one.
+</p>
+<p>By default, compare prints out a result message. This message displays
+information that both images are same or the position of the first different
+byte. In addition, result message can report different image size in case
+Strict mode is used.
+</p>
+<p>Compare exits with <code>0</code> in case the images are equal and with <code>1</code>
+in case the images differ. Other exit codes mean an error occurred during
+execution and standard error output should contain an error message.
+The following table sumarizes all exit codes of the compare subcommand:
+</p>
+<dl compact="compact">
+<dt><samp>0</samp></dt>
+<dd><p>Images are identical
+</p></dd>
+<dt><samp>1</samp></dt>
+<dd><p>Images differ
+</p></dd>
+<dt><samp>2</samp></dt>
+<dd><p>Error on opening an image
+</p></dd>
+<dt><samp>3</samp></dt>
+<dd><p>Error on checking a sector allocation
+</p></dd>
+<dt><samp>4</samp></dt>
+<dd><p>Error on reading data
+</p>
+</dd>
+</dl>
+
+</dd>
+<dt><samp>convert [-c] [-p] [-n] [-f <var>fmt</var>] [-t <var>cache</var>] [-O <var>output_fmt</var>] [-o <var>options</var>] [-s <var>snapshot_id_or_name</var>] [-l <var>snapshot_param</var>] [-S <var>sparse_size</var>] <var>filename</var> [<var>filename2</var> [...]] <var>output_filename</var></samp></dt>
+<dd>
+<p>Convert the disk image <var>filename</var> or a snapshot <var>snapshot_param</var>(<var>snapshot_id_or_name</var> is deprecated)
+to disk image <var>output_filename</var> using format <var>output_fmt</var>. It can be optionally compressed (<code>-c</code>
+option) or use any format specific options like encryption (<code>-o</code> option).
+</p>
+<p>Only the formats <code>qcow</code> and <code>qcow2</code> support compression. The
+compression is read-only. It means that if a compressed sector is
+rewritten, then it is rewritten as uncompressed data.
+</p>
+<p>Image conversion is also useful to get smaller image when using a
+growable format such as <code>qcow</code> or <code>cow</code>: the empty sectors
+are detected and suppressed from the destination image.
+</p>
+<p><var>sparse_size</var> indicates the consecutive number of bytes (defaults to 4k)
+that must contain only zeros for qemu-img to create a sparse image during
+conversion. If <var>sparse_size</var> is 0, the source will not be scanned for
+unallocated or zero sectors, and the destination image will always be
+fully allocated.
+</p>
+<p>You can use the <var>backing_file</var> option to force the output image to be
+created as a copy on write image of the specified base image; the
+<var>backing_file</var> should have the same content as the input&rsquo;s base image,
+however the path, image format, etc may differ.
+</p>
+<p>If the <code>-n</code> option is specified, the target volume creation will be
+skipped. This is useful for formats such as <code>rbd</code> if the target
+volume has already been created with site specific options that cannot
+be supplied through qemu-img.
+</p>
+</dd>
+<dt><samp>info [-f <var>fmt</var>] [--output=<var>ofmt</var>] [--backing-chain] <var>filename</var></samp></dt>
+<dd>
+<p>Give information about the disk image <var>filename</var>. Use it in
+particular to know the size reserved on disk which can be different
+from the displayed size. If VM snapshots are stored in the disk image,
+they are displayed too. The command can output in the format <var>ofmt</var>
+which is either <code>human</code> or <code>json</code>.
+</p>
+<p>If a disk image has a backing file chain, information about each disk image in
+the chain can be recursively enumerated by using the option <code>--backing-chain</code>.
+</p>
+<p>For instance, if you have an image chain like:
+</p>
+<div class="example">
+<pre class="example">base.qcow2 &lt;- snap1.qcow2 &lt;- snap2.qcow2
+</pre></div>
+
+<p>To enumerate information about each disk image in the above chain, starting from top to base, do:
+</p>
+<div class="example">
+<pre class="example">qemu-img info --backing-chain snap2.qcow2
+</pre></div>
+
+</dd>
+<dt><samp>map [-f <var>fmt</var>] [--output=<var>ofmt</var>] <var>filename</var></samp></dt>
+<dd>
+<p>Dump the metadata of image <var>filename</var> and its backing file chain.
+In particular, this commands dumps the allocation state of every sector
+of <var>filename</var>, together with the topmost file that allocates it in
+the backing file chain.
+</p>
+<p>Two option formats are possible.  The default format (<code>human</code>)
+only dumps known-nonzero areas of the file.  Known-zero parts of the
+file are omitted altogether, and likewise for parts that are not allocated
+throughout the chain.  <code>qemu-img</code> output will identify a file
+from where the data can be read, and the offset in the file.  Each line
+will include four fields, the first three of which are hexadecimal
+numbers.  For example the first line of:
+</p><div class="example">
+<pre class="example">Offset          Length          Mapped to       File
+0               0x20000         0x50000         /tmp/overlay.qcow2
+0x100000        0x10000         0x95380000      /tmp/backing.qcow2
+</pre></div>
+<p>means that 0x20000 (131072) bytes starting at offset 0 in the image are
+available in /tmp/overlay.qcow2 (opened in <code>raw</code> format) starting
+at offset 0x50000 (327680).  Data that is compressed, encrypted, or
+otherwise not available in raw format will cause an error if <code>human</code>
+format is in use.  Note that file names can include newlines, thus it is
+not safe to parse this output format in scripts.
+</p>
+<p>The alternative format <code>json</code> will return an array of dictionaries
+in JSON format.  It will include similar information in
+the <code>start</code>, <code>length</code>, <code>offset</code> fields;
+it will also include other more specific information:
+</p><ul class="no-bullet">
+<li>- whether the sectors contain actual data or not (boolean field <code>data</code>;
+if false, the sectors are either unallocated or stored as optimized
+all-zero clusters);
+
+</li><li>- whether the data is known to read as zero (boolean field <code>zero</code>);
+
+</li><li>- in order to make the output shorter, the target file is expressed as
+a <code>depth</code>; for example, a depth of 2 refers to the backing file
+of the backing file of <var>filename</var>.
+</li></ul>
+
+<p>In JSON format, the <code>offset</code> field is optional; it is absent in
+cases where <code>human</code> format would omit the entry or exit with an error.
+If <code>data</code> is false and the <code>offset</code> field is present, the
+corresponding sectors in the file are not yet in use, but they are
+preallocated.
+</p>
+<p>For more information, consult <samp>include/block/block.h</samp> in QEMU&rsquo;s
+source code.
+</p>
+</dd>
+<dt><samp>snapshot [-l | -a <var>snapshot</var> | -c <var>snapshot</var> | -d <var>snapshot</var> ] <var>filename</var></samp></dt>
+<dd>
+<p>List, apply, create or delete snapshots in image <var>filename</var>.
+</p>
+</dd>
+<dt><samp>rebase [-f <var>fmt</var>] [-t <var>cache</var>] [-p] [-u] -b <var>backing_file</var> [-F <var>backing_fmt</var>] <var>filename</var></samp></dt>
+<dd>
+<p>Changes the backing file of an image. Only the formats <code>qcow2</code> and
+<code>qed</code> support changing the backing file.
+</p>
+<p>The backing file is changed to <var>backing_file</var> and (if the image format of
+<var>filename</var> supports this) the backing file format is changed to
+<var>backing_fmt</var>. If <var>backing_file</var> is specified as &ldquo;&rdquo; (the empty
+string), then the image is rebased onto no backing file (i.e. it will exist
+independently of any backing file).
+</p>
+<p>There are two different modes in which <code>rebase</code> can operate:
+</p><dl compact="compact">
+<dt><samp>Safe mode</samp></dt>
+<dd><p>This is the default mode and performs a real rebase operation. The new backing
+file may differ from the old one and qemu-img rebase will take care of keeping
+the guest-visible content of <var>filename</var> unchanged.
+</p>
+<p>In order to achieve this, any clusters that differ between <var>backing_file</var>
+and the old backing file of <var>filename</var> are merged into <var>filename</var>
+before actually changing the backing file.
+</p>
+<p>Note that the safe mode is an expensive operation, comparable to converting
+an image. It only works if the old backing file still exists.
+</p>
+</dd>
+<dt><samp>Unsafe mode</samp></dt>
+<dd><p>qemu-img uses the unsafe mode if <code>-u</code> is specified. In this mode, only the
+backing file name and format of <var>filename</var> is changed without any checks
+on the file contents. The user must take care of specifying the correct new
+backing file, or the guest-visible content of the image will be corrupted.
+</p>
+<p>This mode is useful for renaming or moving the backing file to somewhere else.
+It can be used without an accessible old backing file, i.e. you can use it to
+fix an image whose backing file has already been moved/renamed.
+</p></dd>
+</dl>
+
+<p>You can use <code>rebase</code> to perform a &ldquo;diff&rdquo; operation on two
+disk images.  This can be useful when you have copied or cloned
+a guest, and you want to get back to a thin image on top of a
+template or base image.
+</p>
+<p>Say that <code>base.img</code> has been cloned as <code>modified.img</code> by
+copying it, and that the <code>modified.img</code> guest has run so there
+are now some changes compared to <code>base.img</code>.  To construct a thin
+image called <code>diff.qcow2</code> that contains just the differences, do:
+</p>
+<div class="example">
+<pre class="example">qemu-img create -f qcow2 -b modified.img diff.qcow2
+qemu-img rebase -b base.img diff.qcow2
+</pre></div>
+
+<p>At this point, <code>modified.img</code> can be discarded, since
+<code>base.img + diff.qcow2</code> contains the same information.
+</p>
+</dd>
+<dt><samp>resize <var>filename</var> [+ | -]<var>size</var></samp></dt>
+<dd>
+<p>Change the disk image as if it had been created with <var>size</var>.
+</p>
+<p>Before using this command to shrink a disk image, you MUST use file system and
+partitioning tools inside the VM to reduce allocated file systems and partition
+sizes accordingly.  Failure to do so will result in data loss!
+</p>
+<p>After using this command to grow a disk image, you must use file system and
+partitioning tools inside the VM to actually begin using the new space on the
+device.
+</p>
+</dd>
+<dt><samp>amend [-f <var>fmt</var>] -o <var>options</var> <var>filename</var></samp></dt>
+<dd>
+<p>Amends the image format specific <var>options</var> for the image file
+<var>filename</var>. Not all file formats support this operation.
+</p></dd>
+</dl>
+
+
+<hr>
+<a name="qemu_005fnbd_005finvocation"></a>
+<a name="qemu_002dnbd-Invocation"></a>
+<h4 class="subsection">3.6.5 <code>qemu-nbd</code> Invocation</h4>
+
+<div class="example">
+<pre class="example">usage: qemu-nbd [OPTION]...  <var>filename</var>
+</pre></div>
+
+
+<p>Export QEMU disk image using NBD protocol.
+</p>
+
+<dl compact="compact">
+<dt><samp><var>filename</var></samp></dt>
+<dd><p>is a disk image filename
+</p></dd>
+<dt><samp>-p, --port=<var>port</var></samp></dt>
+<dd><p>port to listen on (default &lsquo;<samp>10809</samp>&rsquo;)
+</p></dd>
+<dt><samp>-o, --offset=<var>offset</var></samp></dt>
+<dd><p>offset into the image
+</p></dd>
+<dt><samp>-b, --bind=<var>iface</var></samp></dt>
+<dd><p>interface to bind to (default &lsquo;<samp>0.0.0.0</samp>&rsquo;)
+</p></dd>
+<dt><samp>-k, --socket=<var>path</var></samp></dt>
+<dd><p>Use a unix socket with path <var>path</var>
+</p></dd>
+<dt><samp>-f, --format=<var>format</var></samp></dt>
+<dd><p>Set image format as <var>format</var>
+</p></dd>
+<dt><samp>-r, --read-only</samp></dt>
+<dd><p>export read-only
+</p></dd>
+<dt><samp>-P, --partition=<var>num</var></samp></dt>
+<dd><p>only expose partition <var>num</var>
+</p></dd>
+<dt><samp>-s, --snapshot</samp></dt>
+<dd><p>use <var>filename</var> as an external snapshot, create a temporary
+  file with backing_file=<var>filename</var>, redirect the write to
+  the temporary one
+</p></dd>
+<dt><samp>-l, --load-snapshot=<var>snapshot_param</var></samp></dt>
+<dd><p>load an internal snapshot inside <var>filename</var> and export it
+  as an read-only device, <var>snapshot_param</var> format is
+  &rsquo;snapshot.id=[ID],snapshot.name=[NAME]&rsquo; or &rsquo;[ID_OR_NAME]&rsquo;
+</p></dd>
+<dt><samp>-n, --nocache</samp></dt>
+<dt><samp>--cache=<var>cache</var></samp></dt>
+<dd><p>set cache mode to be used with the file.  See the documentation of
+  the emulator&rsquo;s <code>-drive cache=...</code> option for allowed values.
+</p></dd>
+<dt><samp>--aio=<var>aio</var></samp></dt>
+<dd><p>choose asynchronous I/O mode between &lsquo;<samp>threads</samp>&rsquo; (the default)
+  and &lsquo;<samp>native</samp>&rsquo; (Linux only).
+</p></dd>
+<dt><samp>--discard=<var>discard</var></samp></dt>
+<dd><p>toggles whether <em>discard</em> (also known as <em>trim</em> or <em>unmap</em>)
+  requests are ignored or passed to the filesystem.  The default is no
+  (&lsquo;<samp>--discard=ignore</samp>&rsquo;).
+</p></dd>
+<dt><samp>-c, --connect=<var>dev</var></samp></dt>
+<dd><p>connect <var>filename</var> to NBD device <var>dev</var>
+</p></dd>
+<dt><samp>-d, --disconnect</samp></dt>
+<dd><p>disconnect the specified device
+</p></dd>
+<dt><samp>-e, --shared=<var>num</var></samp></dt>
+<dd><p>device can be shared by <var>num</var> clients (default &lsquo;<samp>1</samp>&rsquo;)
+</p></dd>
+<dt><samp>-f, --format=<var>fmt</var></samp></dt>
+<dd><p>force block driver for format <var>fmt</var> instead of auto-detecting
+</p></dd>
+<dt><samp>-t, --persistent</samp></dt>
+<dd><p>don&rsquo;t exit on the last connection
+</p></dd>
+<dt><samp>-v, --verbose</samp></dt>
+<dd><p>display extra debugging information
+</p></dd>
+<dt><samp>-h, --help</samp></dt>
+<dd><p>display this help and exit
+</p></dd>
+<dt><samp>-V, --version</samp></dt>
+<dd><p>output version information and exit
+</p></dd>
+</dl>
+
+
+
+<hr>
+<a name="disk_005fimages_005fformats"></a>
+<a name="Disk-image-file-formats"></a>
+<h4 class="subsection">3.6.6 Disk image file formats</h4>
+
+<p>QEMU supports many image file formats that can be used with VMs as well as with
+any of the tools (like <code>qemu-img</code>). This includes the preferred formats
+raw and qcow2 as well as formats that are supported for compatibility with
+older QEMU versions or other hypervisors.
+</p>
+<p>Depending on the image format, different options can be passed to
+<code>qemu-img create</code> and <code>qemu-img convert</code> using the <code>-o</code> option.
+This section describes each format and the options that are supported for it.
+</p>
+<dl compact="compact">
+<dt><samp>raw</samp></dt>
+<dd>
+<p>Raw disk image format. This format has the advantage of
+being simple and easily exportable to all other emulators. If your
+file system supports <em>holes</em> (for example in ext2 or ext3 on
+Linux or NTFS on Windows), then only the written sectors will reserve
+space. Use <code>qemu-img info</code> to know the real size used by the
+image or <code>ls -ls</code> on Unix/Linux.
+</p>
+</dd>
+<dt><samp>qcow2</samp></dt>
+<dd><p>QEMU image format, the most versatile format. Use it to have smaller
+images (useful if your filesystem does not supports holes, for example
+on Windows), optional AES encryption, zlib based compression and
+support of multiple VM snapshots.
+</p>
+<p>Supported options:
+</p><dl compact="compact">
+<dt><code>compat</code></dt>
+<dd><p>Determines the qcow2 version to use. <code>compat=0.10</code> uses the
+traditional image format that can be read by any QEMU since 0.10.
+<code>compat=1.1</code> enables image format extensions that only QEMU 1.1 and
+newer understand (this is the default). Amongst others, this includes
+zero clusters, which allow efficient copy-on-read for sparse images.
+</p>
+</dd>
+<dt><code>backing_file</code></dt>
+<dd><p>File name of a base image (see <samp>create</samp> subcommand)
+</p></dd>
+<dt><code>backing_fmt</code></dt>
+<dd><p>Image format of the base image
+</p></dd>
+<dt><code>encryption</code></dt>
+<dd><p>If this option is set to <code>on</code>, the image is encrypted with 128-bit AES-CBC.
+</p>
+<p>The use of encryption in qcow and qcow2 images is considered to be flawed by
+modern cryptography standards, suffering from a number of design problems:
+</p>
+<ul class="no-bullet">
+<li>- The AES-CBC cipher is used with predictable initialization vectors based
+on the sector number. This makes it vulnerable to chosen plaintext attacks
+which can reveal the existence of encrypted data.
+</li><li>- The user passphrase is directly used as the encryption key. A poorly
+chosen or short passphrase will compromise the security of the encryption.
+</li><li>- In the event of the passphrase being compromised there is no way to
+change the passphrase to protect data in any qcow images. The files must
+be cloned, using a different encryption passphrase in the new file. The
+original file must then be securely erased using a program like shred,
+though even this is ineffective with many modern storage technologies.
+</li></ul>
+
+<p>Use of qcow / qcow2 encryption is thus strongly discouraged. Users are
+recommended to use an alternative encryption technology such as the
+Linux dm-crypt / LUKS system.
+</p>
+</dd>
+<dt><code>cluster_size</code></dt>
+<dd><p>Changes the qcow2 cluster size (must be between 512 and 2M). Smaller cluster
+sizes can improve the image file size whereas larger cluster sizes generally
+provide better performance.
+</p>
+</dd>
+<dt><code>preallocation</code></dt>
+<dd><p>Preallocation mode (allowed values: off, metadata). An image with preallocated
+metadata is initially larger but can improve performance when the image needs
+to grow.
+</p>
+</dd>
+<dt><code>lazy_refcounts</code></dt>
+<dd><p>If this option is set to <code>on</code>, reference count updates are postponed with
+the goal of avoiding metadata I/O and improving performance. This is
+particularly interesting with <samp>cache=writethrough</samp> which doesn&rsquo;t batch
+metadata updates. The tradeoff is that after a host crash, the reference count
+tables must be rebuilt, i.e. on the next open an (automatic) <code>qemu-img
+check -r all</code> is required, which may take some time.
+</p>
+<p>This option can only be enabled if <code>compat=1.1</code> is specified.
+</p>
+</dd>
+<dt><code>nocow</code></dt>
+<dd><p>If this option is set to <code>on</code>, it will turn off COW of the file. It&rsquo;s only
+valid on btrfs, no effect on other file systems.
+</p>
+<p>Btrfs has low performance when hosting a VM image file, even more when the guest
+on the VM also using btrfs as file system. Turning off COW is a way to mitigate
+this bad performance. Generally there are two ways to turn off COW on btrfs:
+a) Disable it by mounting with nodatacow, then all newly created files will be
+NOCOW. b) For an empty file, add the NOCOW file attribute. That&rsquo;s what this option
+does.
+</p>
+<p>Note: this option is only valid to new or empty files. If there is an existing
+file which is COW and has data blocks already, it couldn&rsquo;t be changed to NOCOW
+by setting <code>nocow=on</code>. One can issue <code>lsattr filename</code> to check if
+the NOCOW flag is set or not (Capital &rsquo;C&rsquo; is NOCOW flag).
+</p>
+</dd>
+</dl>
+
+</dd>
+<dt><samp>qed</samp></dt>
+<dd><p>Old QEMU image format with support for backing files and compact image files
+(when your filesystem or transport medium does not support holes).
+</p>
+<p>When converting QED images to qcow2, you might want to consider using the
+<code>lazy_refcounts=on</code> option to get a more QED-like behaviour.
+</p>
+<p>Supported options:
+</p><dl compact="compact">
+<dt><code>backing_file</code></dt>
+<dd><p>File name of a base image (see <samp>create</samp> subcommand).
+</p></dd>
+<dt><code>backing_fmt</code></dt>
+<dd><p>Image file format of backing file (optional).  Useful if the format cannot be
+autodetected because it has no header, like some vhd/vpc files.
+</p></dd>
+<dt><code>cluster_size</code></dt>
+<dd><p>Changes the cluster size (must be power-of-2 between 4K and 64K). Smaller
+cluster sizes can improve the image file size whereas larger cluster sizes
+generally provide better performance.
+</p></dd>
+<dt><code>table_size</code></dt>
+<dd><p>Changes the number of clusters per L1/L2 table (must be power-of-2 between 1
+and 16).  There is normally no need to change this value but this option can be
+used for performance benchmarking.
+</p></dd>
+</dl>
+
+</dd>
+<dt><samp>qcow</samp></dt>
+<dd><p>Old QEMU image format with support for backing files, compact image files,
+encryption and compression.
+</p>
+<p>Supported options:
+</p><dl compact="compact">
+<dt><code>backing_file</code></dt>
+<dd><p>File name of a base image (see <samp>create</samp> subcommand)
+</p></dd>
+<dt><code>encryption</code></dt>
+<dd><p>If this option is set to <code>on</code>, the image is encrypted.
+</p></dd>
+</dl>
+
+</dd>
+<dt><samp>cow</samp></dt>
+<dd><p>User Mode Linux Copy On Write image format. It is supported only for
+compatibility with previous versions.
+Supported options:
+</p><dl compact="compact">
+<dt><code>backing_file</code></dt>
+<dd><p>File name of a base image (see <samp>create</samp> subcommand)
+</p></dd>
+</dl>
+
+</dd>
+<dt><samp>vdi</samp></dt>
+<dd><p>VirtualBox 1.1 compatible image format.
+Supported options:
+</p><dl compact="compact">
+<dt><code>static</code></dt>
+<dd><p>If this option is set to <code>on</code>, the image is created with metadata
+preallocation.
+</p></dd>
+</dl>
+
+</dd>
+<dt><samp>vmdk</samp></dt>
+<dd><p>VMware 3 and 4 compatible image format.
+</p>
+<p>Supported options:
+</p><dl compact="compact">
+<dt><code>backing_file</code></dt>
+<dd><p>File name of a base image (see <samp>create</samp> subcommand).
+</p></dd>
+<dt><code>compat6</code></dt>
+<dd><p>Create a VMDK version 6 image (instead of version 4)
+</p></dd>
+<dt><code>subformat</code></dt>
+<dd><p>Specifies which VMDK subformat to use. Valid options are
+<code>monolithicSparse</code> (default),
+<code>monolithicFlat</code>,
+<code>twoGbMaxExtentSparse</code>,
+<code>twoGbMaxExtentFlat</code> and
+<code>streamOptimized</code>.
+</p></dd>
+</dl>
+
+</dd>
+<dt><samp>vpc</samp></dt>
+<dd><p>VirtualPC compatible image format (VHD).
+Supported options:
+</p><dl compact="compact">
+<dt><code>subformat</code></dt>
+<dd><p>Specifies which VHD subformat to use. Valid options are
+<code>dynamic</code> (default) and <code>fixed</code>.
+</p></dd>
+</dl>
+
+</dd>
+<dt><samp>VHDX</samp></dt>
+<dd><p>Hyper-V compatible image format (VHDX).
+Supported options:
+</p><dl compact="compact">
+<dt><code>subformat</code></dt>
+<dd><p>Specifies which VHDX subformat to use. Valid options are
+<code>dynamic</code> (default) and <code>fixed</code>.
+</p></dd>
+<dt><code>block_state_zero</code></dt>
+<dd><p>Force use of payload blocks of type &rsquo;ZERO&rsquo;.
+</p></dd>
+<dt><code>block_size</code></dt>
+<dd><p>Block size; min 1 MB, max 256 MB.  0 means auto-calculate based on image size.
+</p></dd>
+<dt><code>log_size</code></dt>
+<dd><p>Log size; min 1 MB.
+</p></dd>
+</dl>
+</dd>
+</dl>
+
+<a name="Read_002donly-formats"></a>
+<h4 class="subsubsection">3.6.6.1 Read-only formats</h4>
+<p>More disk image file formats are supported in a read-only mode.
+</p><dl compact="compact">
+<dt><samp>bochs</samp></dt>
+<dd><p>Bochs images of <code>growing</code> type.
+</p></dd>
+<dt><samp>cloop</samp></dt>
+<dd><p>Linux Compressed Loop image, useful only to reuse directly compressed
+CD-ROM images present for example in the Knoppix CD-ROMs.
+</p></dd>
+<dt><samp>dmg</samp></dt>
+<dd><p>Apple disk image.
+</p></dd>
+<dt><samp>parallels</samp></dt>
+<dd><p>Parallels disk image format.
+</p></dd>
+</dl>
+
+
+<hr>
+<a name="host_005fdrives"></a>
+<a name="Using-host-drives"></a>
+<h4 class="subsection">3.6.7 Using host drives</h4>
+
+<p>In addition to disk image files, QEMU can directly access host
+devices. We describe here the usage for QEMU version &gt;= 0.8.3.
+</p>
+<a name="Linux-1"></a>
+<h4 class="subsubsection">3.6.7.1 Linux</h4>
+
+<p>On Linux, you can directly use the host device filename instead of a
+disk image filename provided you have enough privileges to access
+it. For example, use <samp>/dev/cdrom</samp> to access to the CDROM or
+<samp>/dev/fd0</samp> for the floppy.
+</p>
+<dl compact="compact">
+<dt><code>CD</code></dt>
+<dd><p>You can specify a CDROM device even if no CDROM is loaded. QEMU has
+specific code to detect CDROM insertion or removal. CDROM ejection by
+the guest OS is supported. Currently only data CDs are supported.
+</p></dd>
+<dt><code>Floppy</code></dt>
+<dd><p>You can specify a floppy device even if no floppy is loaded. Floppy
+removal is currently not detected accurately (if you change floppy
+without doing floppy access while the floppy is not loaded, the guest
+OS will think that the same floppy is loaded).
+</p></dd>
+<dt><code>Hard disks</code></dt>
+<dd><p>Hard disks can be used. Normally you must specify the whole disk
+(<samp>/dev/hdb</samp> instead of <samp>/dev/hdb1</samp>) so that the guest OS can
+see it as a partitioned disk. WARNING: unless you know what you do, it
+is better to only make READ-ONLY accesses to the hard disk otherwise
+you may corrupt your host data (use the <samp>-snapshot</samp> command
+line option or modify the device permissions accordingly).
+</p></dd>
+</dl>
+
+<a name="Windows-2"></a>
+<h4 class="subsubsection">3.6.7.2 Windows</h4>
+
+<dl compact="compact">
+<dt><code>CD</code></dt>
+<dd><p>The preferred syntax is the drive letter (e.g. <samp>d:</samp>). The
+alternate syntax <samp>\\.\d:</samp> is supported. <samp>/dev/cdrom</samp> is
+supported as an alias to the first CDROM drive.
+</p>
+<p>Currently there is no specific code to handle removable media, so it
+is better to use the <code>change</code> or <code>eject</code> monitor commands to
+change or eject media.
+</p></dd>
+<dt><code>Hard disks</code></dt>
+<dd><p>Hard disks can be used with the syntax: <samp>\\.\PhysicalDrive<var>N</var></samp>
+where <var>N</var> is the drive number (0 is the first hard disk).
+</p>
+<p>WARNING: unless you know what you do, it is better to only make
+READ-ONLY accesses to the hard disk otherwise you may corrupt your
+host data (use the <samp>-snapshot</samp> command line so that the
+modifications are written in a temporary file).
+</p></dd>
+</dl>
+
+
+<a name="Mac-OS-X-2"></a>
+<h4 class="subsubsection">3.6.7.3 Mac OS X</h4>
+
+<p><samp>/dev/cdrom</samp> is an alias to the first CDROM.
+</p>
+<p>Currently there is no specific code to handle removable media, so it
+is better to use the <code>change</code> or <code>eject</code> monitor commands to
+change or eject media.
+</p>
+<hr>
+<a name="disk_005fimages_005ffat_005fimages"></a>
+<a name="Virtual-FAT-disk-images"></a>
+<h4 class="subsection">3.6.8 Virtual FAT disk images</h4>
+
+<p>QEMU can automatically create a virtual FAT disk image from a
+directory tree. In order to use it, just type:
+</p>
+<div class="example">
+<pre class="example">qemu-system-i386 linux.img -hdb fat:/my_directory
+</pre></div>
+
+<p>Then you access access to all the files in the <samp>/my_directory</samp>
+directory without having to copy them in a disk image or to export
+them via SAMBA or NFS. The default access is <em>read-only</em>.
+</p>
+<p>Floppies can be emulated with the <code>:floppy:</code> option:
+</p>
+<div class="example">
+<pre class="example">qemu-system-i386 linux.img -fda fat:floppy:/my_directory
+</pre></div>
+
+<p>A read/write support is available for testing (beta stage) with the
+<code>:rw:</code> option:
+</p>
+<div class="example">
+<pre class="example">qemu-system-i386 linux.img -fda fat:floppy:rw:/my_directory
+</pre></div>
+
+<p>What you should <em>never</em> do:
+</p><ul>
+<li> use non-ASCII filenames ;
+</li><li> use &quot;-snapshot&quot; together with &quot;:rw:&quot; ;
+</li><li> expect it to work when loadvm&rsquo;ing ;
+</li><li> write to the FAT directory on the host system while accessing it with the guest system.
+</li></ul>
+
+<hr>
+<a name="disk_005fimages_005fnbd"></a>
+<a name="NBD-access"></a>
+<h4 class="subsection">3.6.9 NBD access</h4>
+
+<p>QEMU can access directly to block device exported using the Network Block Device
+protocol.
+</p>
+<div class="example">
+<pre class="example">qemu-system-i386 linux.img -hdb nbd://my_nbd_server.mydomain.org:1024/
+</pre></div>
+
+<p>If the NBD server is located on the same host, you can use an unix socket instead
+of an inet socket:
+</p>
+<div class="example">
+<pre class="example">qemu-system-i386 linux.img -hdb nbd+unix://?socket=/tmp/my_socket
+</pre></div>
+
+<p>In this case, the block device must be exported using qemu-nbd:
+</p>
+<div class="example">
+<pre class="example">qemu-nbd --socket=/tmp/my_socket my_disk.qcow2
+</pre></div>
+
+<p>The use of qemu-nbd allows sharing of a disk between several guests:
+</p><div class="example">
+<pre class="example">qemu-nbd --socket=/tmp/my_socket --share=2 my_disk.qcow2
+</pre></div>
+
+<p>and then you can use it with two guests:
+</p><div class="example">
+<pre class="example">qemu-system-i386 linux1.img -hdb nbd+unix://?socket=/tmp/my_socket
+qemu-system-i386 linux2.img -hdb nbd+unix://?socket=/tmp/my_socket
+</pre></div>
+
+<p>If the nbd-server uses named exports (supported since NBD 2.9.18, or with QEMU&rsquo;s
+own embedded NBD server), you must specify an export name in the URI:
+</p><div class="example">
+<pre class="example">qemu-system-i386 -cdrom nbd://localhost/debian-500-ppc-netinst
+qemu-system-i386 -cdrom nbd://localhost/openSUSE-11.1-ppc-netinst
+</pre></div>
+
+<p>The URI syntax for NBD is supported since QEMU 1.3.  An alternative syntax is
+also available.  Here are some example of the older syntax:
+</p><div class="example">
+<pre class="example">qemu-system-i386 linux.img -hdb nbd:my_nbd_server.mydomain.org:1024
+qemu-system-i386 linux2.img -hdb nbd:unix:/tmp/my_socket
+qemu-system-i386 -cdrom nbd:localhost:10809:exportname=debian-500-ppc-netinst
+</pre></div>
+
+<hr>
+<a name="disk_005fimages_005fsheepdog"></a>
+<a name="Sheepdog-disk-images"></a>
+<h4 class="subsection">3.6.10 Sheepdog disk images</h4>
+
+<p>Sheepdog is a distributed storage system for QEMU.  It provides highly
+available block level storage volumes that can be attached to
+QEMU-based virtual machines.
+</p>
+<p>You can create a Sheepdog disk image with the command:
+</p><div class="example">
+<pre class="example">qemu-img create sheepdog:///<var>image</var> <var>size</var>
+</pre></div>
+<p>where <var>image</var> is the Sheepdog image name and <var>size</var> is its
+size.
+</p>
+<p>To import the existing <var>filename</var> to Sheepdog, you can use a
+convert command.
+</p><div class="example">
+<pre class="example">qemu-img convert <var>filename</var> sheepdog:///<var>image</var>
+</pre></div>
+
+<p>You can boot from the Sheepdog disk image with the command:
+</p><div class="example">
+<pre class="example">qemu-system-i386 sheepdog:///<var>image</var>
+</pre></div>
+
+<p>You can also create a snapshot of the Sheepdog image like qcow2.
+</p><div class="example">
+<pre class="example">qemu-img snapshot -c <var>tag</var> sheepdog:///<var>image</var>
+</pre></div>
+<p>where <var>tag</var> is a tag name of the newly created snapshot.
+</p>
+<p>To boot from the Sheepdog snapshot, specify the tag name of the
+snapshot.
+</p><div class="example">
+<pre class="example">qemu-system-i386 sheepdog:///<var>image</var>#<var>tag</var>
+</pre></div>
+
+<p>You can create a cloned image from the existing snapshot.
+</p><div class="example">
+<pre class="example">qemu-img create -b sheepdog:///<var>base</var>#<var>tag</var> sheepdog:///<var>image</var>
+</pre></div>
+<p>where <var>base</var> is a image name of the source snapshot and <var>tag</var>
+is its tag name.
+</p>
+<p>You can use an unix socket instead of an inet socket:
+</p>
+<div class="example">
+<pre class="example">qemu-system-i386 sheepdog+unix:///<var>image</var>?socket=<var>path</var>
+</pre></div>
+
+<p>If the Sheepdog daemon doesn&rsquo;t run on the local host, you need to
+specify one of the Sheepdog servers to connect to.
+</p><div class="example">
+<pre class="example">qemu-img create sheepdog://<var>hostname</var>:<var>port</var>/<var>image</var> <var>size</var>
+qemu-system-i386 sheepdog://<var>hostname</var>:<var>port</var>/<var>image</var>
+</pre></div>
+
+<hr>
+<a name="disk_005fimages_005fiscsi"></a>
+<a name="iSCSI-LUNs"></a>
+<h4 class="subsection">3.6.11 iSCSI LUNs</h4>
+
+<p>iSCSI is a popular protocol used to access SCSI devices across a computer
+network.
+</p>
+<p>There are two different ways iSCSI devices can be used by QEMU.
+</p>
+<p>The first method is to mount the iSCSI LUN on the host, and make it appear as
+any other ordinary SCSI device on the host and then to access this device as a
+/dev/sd device from QEMU. How to do this differs between host OSes.
+</p>
+<p>The second method involves using the iSCSI initiator that is built into
+QEMU. This provides a mechanism that works the same way regardless of which
+host OS you are running QEMU on. This section will describe this second method
+of using iSCSI together with QEMU.
+</p>
+<p>In QEMU, iSCSI devices are described using special iSCSI URLs
+</p>
+<div class="example">
+<pre class="example">URL syntax:
+iscsi://[&lt;username&gt;[%&lt;password&gt;]@]&lt;host&gt;[:&lt;port&gt;]/&lt;target-iqn-name&gt;/&lt;lun&gt;
+</pre></div>
+
+<p>Username and password are optional and only used if your target is set up
+using CHAP authentication for access control.
+Alternatively the username and password can also be set via environment
+variables to have these not show up in the process list
+</p>
+<div class="example">
+<pre class="example">export LIBISCSI_CHAP_USERNAME=&lt;username&gt;
+export LIBISCSI_CHAP_PASSWORD=&lt;password&gt;
+iscsi://&lt;host&gt;/&lt;target-iqn-name&gt;/&lt;lun&gt;
+</pre></div>
+
+<p>Various session related parameters can be set via special options, either
+in a configuration file provided via &rsquo;-readconfig&rsquo; or directly on the
+command line.
+</p>
+<p>If the initiator-name is not specified qemu will use a default name
+of &rsquo;iqn.2008-11.org.linux-kvm[:&lt;name&gt;&rsquo;] where &lt;name&gt; is the name of the
+virtual machine.
+</p>
+
+<div class="example">
+<pre class="example">Setting a specific initiator name to use when logging in to the target
+-iscsi initiator-name=iqn.qemu.test:my-initiator
+</pre></div>
+
+<div class="example">
+<pre class="example">Controlling which type of header digest to negotiate with the target
+-iscsi header-digest=CRC32C|CRC32C-NONE|NONE-CRC32C|NONE
+</pre></div>
+
+<p>These can also be set via a configuration file
+</p><div class="example">
+<pre class="example">[iscsi]
+  user = &quot;CHAP username&quot;
+  password = &quot;CHAP password&quot;
+  initiator-name = &quot;iqn.qemu.test:my-initiator&quot;
+  # header digest is one of CRC32C|CRC32C-NONE|NONE-CRC32C|NONE
+  header-digest = &quot;CRC32C&quot;
+</pre></div>
+
+
+<p>Setting the target name allows different options for different targets
+</p><div class="example">
+<pre class="example">[iscsi &quot;iqn.target.name&quot;]
+  user = &quot;CHAP username&quot;
+  password = &quot;CHAP password&quot;
+  initiator-name = &quot;iqn.qemu.test:my-initiator&quot;
+  # header digest is one of CRC32C|CRC32C-NONE|NONE-CRC32C|NONE
+  header-digest = &quot;CRC32C&quot;
+</pre></div>
+
+
+<p>Howto use a configuration file to set iSCSI configuration options:
+</p><div class="example">
+<pre class="example">cat &gt;iscsi.conf &lt;&lt;EOF
+[iscsi]
+  user = &quot;me&quot;
+  password = &quot;my password&quot;
+  initiator-name = &quot;iqn.qemu.test:my-initiator&quot;
+  header-digest = &quot;CRC32C&quot;
+EOF
+
+qemu-system-i386 -drive file=iscsi://127.0.0.1/iqn.qemu.test/1 \
+    -readconfig iscsi.conf
+</pre></div>
+
+
+<p>Howto set up a simple iSCSI target on loopback and accessing it via QEMU:
+</p><div class="example">
+<pre class="example">This example shows how to set up an iSCSI target with one CDROM and one DISK
+using the Linux STGT software target. This target is available on Red Hat based
+systems as the package 'scsi-target-utils'.
+
+tgtd --iscsi portal=127.0.0.1:3260
+tgtadm --lld iscsi --op new --mode target --tid 1 -T iqn.qemu.test
+tgtadm --lld iscsi --mode logicalunit --op new --tid 1 --lun 1 \
+    -b /IMAGES/disk.img --device-type=disk
+tgtadm --lld iscsi --mode logicalunit --op new --tid 1 --lun 2 \
+    -b /IMAGES/cd.iso --device-type=cd
+tgtadm --lld iscsi --op bind --mode target --tid 1 -I ALL
+
+qemu-system-i386 -iscsi initiator-name=iqn.qemu.test:my-initiator \
+    -boot d -drive file=iscsi://127.0.0.1/iqn.qemu.test/1 \
+    -cdrom iscsi://127.0.0.1/iqn.qemu.test/2
+</pre></div>
+
+<hr>
+<a name="disk_005fimages_005fgluster"></a>
+<a name="GlusterFS-disk-images"></a>
+<h4 class="subsection">3.6.12 GlusterFS disk images</h4>
+
+<p>GlusterFS is an user space distributed file system.
+</p>
+<p>You can boot from the GlusterFS disk image with the command:
+</p><div class="example">
+<pre class="example">qemu-system-x86_64 -drive file=gluster[+<var>transport</var>]://[<var>server</var>[:<var>port</var>]]/<var>volname</var>/<var>image</var>[?socket=...]
+</pre></div>
+
+<p><var>gluster</var> is the protocol.
+</p>
+<p><var>transport</var> specifies the transport type used to connect to gluster
+management daemon (glusterd). Valid transport types are
+tcp, unix and rdma. If a transport type isn&rsquo;t specified, then tcp
+type is assumed.
+</p>
+<p><var>server</var> specifies the server where the volume file specification for
+the given volume resides. This can be either hostname, ipv4 address
+or ipv6 address. ipv6 address needs to be within square brackets [ ].
+If transport type is unix, then <var>server</var> field should not be specifed.
+Instead <var>socket</var> field needs to be populated with the path to unix domain
+socket.
+</p>
+<p><var>port</var> is the port number on which glusterd is listening. This is optional
+and if not specified, QEMU will send 0 which will make gluster to use the
+default port. If the transport type is unix, then <var>port</var> should not be
+specified.
+</p>
+<p><var>volname</var> is the name of the gluster volume which contains the disk image.
+</p>
+<p><var>image</var> is the path to the actual disk image that resides on gluster volume.
+</p>
+<p>You can create a GlusterFS disk image with the command:
+</p><div class="example">
+<pre class="example">qemu-img create gluster://<var>server</var>/<var>volname</var>/<var>image</var> <var>size</var>
+</pre></div>
+
+<p>Examples
+</p><div class="example">
+<pre class="example">qemu-system-x86_64 -drive file=gluster://1.2.3.4/testvol/a.img
+qemu-system-x86_64 -drive file=gluster+tcp://1.2.3.4/testvol/a.img
+qemu-system-x86_64 -drive file=gluster+tcp://1.2.3.4:24007/testvol/dir/a.img
+qemu-system-x86_64 -drive file=gluster+tcp://[1:2:3:4:5:6:7:8]/testvol/dir/a.img
+qemu-system-x86_64 -drive file=gluster+tcp://[1:2:3:4:5:6:7:8]:24007/testvol/dir/a.img
+qemu-system-x86_64 -drive file=gluster+tcp://server.domain.com:24007/testvol/dir/a.img
+qemu-system-x86_64 -drive file=gluster+unix:///testvol/dir/a.img?socket=/tmp/glusterd.socket
+qemu-system-x86_64 -drive file=gluster+rdma://1.2.3.4:24007/testvol/a.img
+</pre></div>
+
+<hr>
+<a name="disk_005fimages_005fssh"></a>
+<a name="Secure-Shell-_0028ssh_0029-disk-images"></a>
+<h4 class="subsection">3.6.13 Secure Shell (ssh) disk images</h4>
+
+<p>You can access disk images located on a remote ssh server
+by using the ssh protocol:
+</p>
+<div class="example">
+<pre class="example">qemu-system-x86_64 -drive file=ssh://[<var>user</var>@]<var>server</var>[:<var>port</var>]/<var>path</var>[?host_key_check=<var>host_key_check</var>]
+</pre></div>
+
+<p>Alternative syntax using properties:
+</p>
+<div class="example">
+<pre class="example">qemu-system-x86_64 -drive file.driver=ssh[,file.user=<var>user</var>],file.host=<var>server</var>[,file.port=<var>port</var>],file.path=<var>path</var>[,file.host_key_check=<var>host_key_check</var>]
+</pre></div>
+
+<p><var>ssh</var> is the protocol.
+</p>
+<p><var>user</var> is the remote user.  If not specified, then the local
+username is tried.
+</p>
+<p><var>server</var> specifies the remote ssh server.  Any ssh server can be
+used, but it must implement the sftp-server protocol.  Most Unix/Linux
+systems should work without requiring any extra configuration.
+</p>
+<p><var>port</var> is the port number on which sshd is listening.  By default
+the standard ssh port (22) is used.
+</p>
+<p><var>path</var> is the path to the disk image.
+</p>
+<p>The optional <var>host_key_check</var> parameter controls how the remote
+host&rsquo;s key is checked.  The default is <code>yes</code> which means to use
+the local <samp>.ssh/known_hosts</samp> file.  Setting this to <code>no</code>
+turns off known-hosts checking.  Or you can check that the host key
+matches a specific fingerprint:
+<code>host_key_check=md5:78:45:8e:14:57:4f:d5:45:83:0a:0e:f3:49:82:c9:c8</code>
+(<code>sha1:</code> can also be used as a prefix, but note that OpenSSH
+tools only use MD5 to print fingerprints).
+</p>
+<p>Currently authentication must be done using ssh-agent.  Other
+authentication methods may be supported in future.
+</p>
+<p>Note: Many ssh servers do not support an <code>fsync</code>-style operation.
+The ssh driver cannot guarantee that disk flush requests are
+obeyed, and this causes a risk of disk corruption if the remote
+server or network goes down during writes.  The driver will
+print a warning when <code>fsync</code> is not supported:
+</p>
+<p>warning: ssh server <code>ssh.example.com:22</code> does not support fsync
+</p>
+<p>With sufficiently new versions of libssh2 and OpenSSH, <code>fsync</code> is
+supported.
+</p>
+<hr>
+<a name="pcsys_005fnetwork"></a>
+<a name="Network-emulation"></a>
+<h3 class="section">3.7 Network emulation</h3>
+
+<p>QEMU can simulate several network cards (PCI or ISA cards on the PC
+target) and can connect them to an arbitrary number of Virtual Local
+Area Networks (VLANs). Host TAP devices can be connected to any QEMU
+VLAN. VLAN can be connected between separate instances of QEMU to
+simulate large networks. For simpler usage, a non privileged user mode
+network stack can replace the TAP device to have a basic network
+connection.
+</p>
+<a name="VLANs"></a>
+<h4 class="subsection">3.7.1 VLANs</h4>
+
+<p>QEMU simulates several VLANs. A VLAN can be symbolised as a virtual
+connection between several network devices. These devices can be for
+example QEMU virtual Ethernet cards or virtual Host ethernet devices
+(TAP devices).
+</p>
+<a name="Using-TAP-network-interfaces"></a>
+<h4 class="subsection">3.7.2 Using TAP network interfaces</h4>
+
+<p>This is the standard way to connect QEMU to a real network. QEMU adds
+a virtual network device on your host (called <code>tapN</code>), and you
+can then configure it as if it was a real ethernet card.
+</p>
+<a name="Linux-host"></a>
+<h4 class="subsubsection">3.7.2.1 Linux host</h4>
+
+<p>As an example, you can download the <samp>linux-test-xxx.tar.gz</samp>
+archive and copy the script <samp>qemu-ifup</samp> in <samp>/etc</samp> and
+configure properly <code>sudo</code> so that the command <code>ifconfig</code>
+contained in <samp>qemu-ifup</samp> can be executed as root. You must verify
+that your host kernel supports the TAP network interfaces: the
+device <samp>/dev/net/tun</samp> must be present.
+</p>
+<p>See <a href="#sec_005finvocation">sec_invocation</a> to have examples of command lines using the
+TAP network interfaces.
+</p>
+<a name="Windows-host"></a>
+<h4 class="subsubsection">3.7.2.2 Windows host</h4>
+
+<p>There is a virtual ethernet driver for Windows 2000/XP systems, called
+TAP-Win32. But it is not included in standard QEMU for Windows,
+so you will need to get it separately. It is part of OpenVPN package,
+so download OpenVPN from : <a href="http://openvpn.net/">http://openvpn.net/</a>.
+</p>
+<a name="Using-the-user-mode-network-stack"></a>
+<h4 class="subsection">3.7.3 Using the user mode network stack</h4>
+
+<p>By using the option <samp>-net user</samp> (default configuration if no
+<samp>-net</samp> option is specified), QEMU uses a completely user mode
+network stack (you don&rsquo;t need root privilege to use the virtual
+network). The virtual network configuration is the following:
+</p>
+<div class="example">
+<pre class="example">
+         QEMU VLAN      &lt;------&gt;  Firewall/DHCP server &lt;-----&gt; Internet
+                           |          (10.0.2.2)
+                           |
+                           ----&gt;  DNS server (10.0.2.3)
+                           |
+                           ----&gt;  SMB server (10.0.2.4)
+</pre></div>
+
+<p>The QEMU VM behaves as if it was behind a firewall which blocks all
+incoming connections. You can use a DHCP client to automatically
+configure the network in the QEMU VM. The DHCP server assign addresses
+to the hosts starting from 10.0.2.15.
+</p>
+<p>In order to check that the user mode network is working, you can ping
+the address 10.0.2.2 and verify that you got an address in the range
+10.0.2.x from the QEMU virtual DHCP server.
+</p>
+<p>Note that ICMP traffic in general does not work with user mode networking.
+<code>ping</code>, aka. ICMP echo, to the local router (10.0.2.2) shall work,
+however. If you&rsquo;re using QEMU on Linux &gt;= 3.0, it can use unprivileged ICMP
+ping sockets to allow <code>ping</code> to the Internet. The host admin has to set
+the ping_group_range in order to grant access to those sockets. To allow ping
+for GID 100 (usually users group):
+</p>
+<div class="example">
+<pre class="example">echo 100 100 &gt; /proc/sys/net/ipv4/ping_group_range
+</pre></div>
+
+<p>When using the built-in TFTP server, the router is also the TFTP
+server.
+</p>
+<p>When using the <samp>-redir</samp> option, TCP or UDP connections can be
+redirected from the host to the guest. It allows for example to
+redirect X11, telnet or SSH connections.
+</p>
+<a name="Connecting-VLANs-between-QEMU-instances"></a>
+<h4 class="subsection">3.7.4 Connecting VLANs between QEMU instances</h4>
+
+<p>Using the <samp>-net socket</samp> option, it is possible to make VLANs
+that span several QEMU instances. See <a href="#sec_005finvocation">sec_invocation</a> to have a
+basic example.
+</p>
+<hr>
+<a name="pcsys_005fother_005fdevs"></a>
+<a name="Other-Devices"></a>
+<h3 class="section">3.8 Other Devices</h3>
+
+<a name="Inter_002dVM-Shared-Memory-device"></a>
+<h4 class="subsection">3.8.1 Inter-VM Shared Memory device</h4>
+
+<p>With KVM enabled on a Linux host, a shared memory device is available.  Guests
+map a POSIX shared memory region into the guest as a PCI device that enables
+zero-copy communication to the application level of the guests.  The basic
+syntax is:
+</p>
+<div class="example">
+<pre class="example">qemu-system-i386 -device ivshmem,size=&lt;size in format accepted by -m&gt;[,shm=&lt;shm name&gt;]
+</pre></div>
+
+<p>If desired, interrupts can be sent between guest VMs accessing the same shared
+memory region.  Interrupt support requires using a shared memory server and
+using a chardev socket to connect to it.  The code for the shared memory server
+is qemu.git/contrib/ivshmem-server.  An example syntax when using the shared
+memory server is:
+</p>
+<div class="example">
+<pre class="example">qemu-system-i386 -device ivshmem,size=&lt;size in format accepted by -m&gt;[,chardev=&lt;id&gt;]
+                 [,msi=on][,ioeventfd=on][,vectors=n][,role=peer|master]
+qemu-system-i386 -chardev socket,path=&lt;path&gt;,id=&lt;id&gt;
+</pre></div>
+
+<p>When using the server, the guest will be assigned a VM ID (&gt;=0) that allows guests
+using the same server to communicate via interrupts.  Guests can read their
+VM ID from a device register (see example code).  Since receiving the shared
+memory region from the server is asynchronous, there is a (small) chance the
+guest may boot before the shared memory is attached.  To allow an application
+to ensure shared memory is attached, the VM ID register will return -1 (an
+invalid VM ID) until the memory is attached.  Once the shared memory is
+attached, the VM ID will return the guest&rsquo;s valid VM ID.  With these semantics,
+the guest application can check to ensure the shared memory is attached to the
+guest before proceeding.
+</p>
+<p>The <samp>role</samp> argument can be set to either master or peer and will affect
+how the shared memory is migrated.  With <samp>role=master</samp>, the guest will
+copy the shared memory on migration to the destination host.  With
+<samp>role=peer</samp>, the guest will not be able to migrate with the device attached.
+With the <samp>peer</samp> case, the device should be detached and then reattached
+after migration using the PCI hotplug support.
+</p>
+<hr>
+<a name="direct_005flinux_005fboot"></a>
+<a name="Direct-Linux-Boot"></a>
+<h3 class="section">3.9 Direct Linux Boot</h3>
+
+<p>This section explains how to launch a Linux kernel inside QEMU without
+having to make a full bootable image. It is very useful for fast Linux
+kernel testing.
+</p>
+<p>The syntax is:
+</p><div class="example">
+<pre class="example">qemu-system-i386 -kernel arch/i386/boot/bzImage -hda root-2.4.20.img -append &quot;root=/dev/hda&quot;
+</pre></div>
+
+<p>Use <samp>-kernel</samp> to provide the Linux kernel image and
+<samp>-append</samp> to give the kernel command line arguments. The
+<samp>-initrd</samp> option can be used to provide an INITRD image.
+</p>
+<p>When using the direct Linux boot, a disk image for the first hard disk
+<samp>hda</samp> is required because its boot sector is used to launch the
+Linux kernel.
+</p>
+<p>If you do not need graphical output, you can disable it and redirect
+the virtual serial port and the QEMU monitor to the console with the
+<samp>-nographic</samp> option. The typical command line is:
+</p><div class="example">
+<pre class="example">qemu-system-i386 -kernel arch/i386/boot/bzImage -hda root-2.4.20.img \
+                 -append &quot;root=/dev/hda console=ttyS0&quot; -nographic
+</pre></div>
+
+<p>Use <tt class="key">Ctrl-a c</tt> to switch between the serial console and the
+monitor (see <a href="#pcsys_005fkeys">pcsys_keys</a>).
+</p>
+<hr>
+<a name="pcsys_005fusb"></a>
+<a name="USB-emulation"></a>
+<h3 class="section">3.10 USB emulation</h3>
+
+<p>QEMU emulates a PCI UHCI USB controller. You can virtually plug
+virtual USB devices or real host USB devices (experimental, works only
+on Linux hosts).  QEMU will automatically create and connect virtual USB hubs
+as necessary to connect multiple USB devices.
+</p>
+<hr>
+<a name="usb_005fdevices"></a>
+<a name="Connecting-USB-devices"></a>
+<h4 class="subsection">3.10.1 Connecting USB devices</h4>
+
+<p>USB devices can be connected with the <samp>-usbdevice</samp> commandline option
+or the <code>usb_add</code> monitor command.  Available devices are:
+</p>
+<dl compact="compact">
+<dt><code>mouse</code></dt>
+<dd><p>Virtual Mouse.  This will override the PS/2 mouse emulation when activated.
+</p></dd>
+<dt><code>tablet</code></dt>
+<dd><p>Pointer device that uses absolute coordinates (like a touchscreen).
+This means QEMU is able to report the mouse position without having
+to grab the mouse.  Also overrides the PS/2 mouse emulation when activated.
+</p></dd>
+<dt><code>disk:<var>file</var></code></dt>
+<dd><p>Mass storage device based on <var>file</var> (see <a href="#disk_005fimages">disk_images</a>)
+</p></dd>
+<dt><code>host:<var>bus.addr</var></code></dt>
+<dd><p>Pass through the host device identified by <var>bus.addr</var>
+(Linux only)
+</p></dd>
+<dt><code>host:<var>vendor_id:product_id</var></code></dt>
+<dd><p>Pass through the host device identified by <var>vendor_id:product_id</var>
+(Linux only)
+</p></dd>
+<dt><code>wacom-tablet</code></dt>
+<dd><p>Virtual Wacom PenPartner tablet.  This device is similar to the <code>tablet</code>
+above but it can be used with the tslib library because in addition to touch
+coordinates it reports touch pressure.
+</p></dd>
+<dt><code>keyboard</code></dt>
+<dd><p>Standard USB keyboard.  Will override the PS/2 keyboard (if present).
+</p></dd>
+<dt><code>serial:[vendorid=<var>vendor_id</var>][,product_id=<var>product_id</var>]:<var>dev</var></code></dt>
+<dd><p>Serial converter. This emulates an FTDI FT232BM chip connected to host character
+device <var>dev</var>. The available character devices are the same as for the
+<code>-serial</code> option. The <code>vendorid</code> and <code>productid</code> options can be
+used to override the default 0403:6001. For instance,
+</p><div class="example">
+<pre class="example">usb_add serial:productid=FA00:tcp:192.168.0.2:4444
+</pre></div>
+<p>will connect to tcp port 4444 of ip 192.168.0.2, and plug that to the virtual
+serial converter, faking a Matrix Orbital LCD Display (USB ID 0403:FA00).
+</p></dd>
+<dt><code>braille</code></dt>
+<dd><p>Braille device.  This will use BrlAPI to display the braille output on a real
+or fake device.
+</p></dd>
+<dt><code>net:<var>options</var></code></dt>
+<dd><p>Network adapter that supports CDC ethernet and RNDIS protocols.  <var>options</var>
+specifies NIC options as with <code>-net nic,</code><var>options</var> (see description).
+For instance, user-mode networking can be used with
+</p><div class="example">
+<pre class="example">qemu-system-i386 [...OPTIONS...] -net user,vlan=0 -usbdevice net:vlan=0
+</pre></div>
+<p>Currently this cannot be used in machines that support PCI NICs.
+</p></dd>
+<dt><code>bt[:<var>hci-type</var>]</code></dt>
+<dd><p>Bluetooth dongle whose type is specified in the same format as with
+the <samp>-bt hci</samp> option, see <a href="#bt_002dhcis">allowed HCI types</a>.  If
+no type is given, the HCI logic corresponds to <code>-bt hci,vlan=0</code>.
+This USB device implements the USB Transport Layer of HCI.  Example
+usage:
+</p><div class="example">
+<pre class="example">qemu-system-i386 [...OPTIONS...] -usbdevice bt:hci,vlan=3 -bt device:keyboard,vlan=3
+</pre></div>
+</dd>
+</dl>
+
+<hr>
+<a name="host_005fusb_005fdevices"></a>
+<a name="Using-host-USB-devices-on-a-Linux-host"></a>
+<h4 class="subsection">3.10.2 Using host USB devices on a Linux host</h4>
+
+<p>WARNING: this is an experimental feature. QEMU will slow down when
+using it. USB devices requiring real time streaming (i.e. USB Video
+Cameras) are not supported yet.
+</p>
+<ol>
+<li> If you use an early Linux 2.4 kernel, verify that no Linux driver
+is actually using the USB device. A simple way to do that is simply to
+disable the corresponding kernel module by renaming it from <samp>mydriver.o</samp>
+to <samp>mydriver.o.disabled</samp>.
+
+</li><li> Verify that <samp>/proc/bus/usb</samp> is working (most Linux distributions should enable it by default). You should see something like that:
+<div class="example">
+<pre class="example">ls /proc/bus/usb
+001  devices  drivers
+</pre></div>
+
+</li><li> Since only root can access to the USB devices directly, you can either launch QEMU as root or change the permissions of the USB devices you want to use. For testing, the following suffices:
+<div class="example">
+<pre class="example">chown -R myuid /proc/bus/usb
+</pre></div>
+
+</li><li> Launch QEMU and do in the monitor:
+<div class="example">
+<pre class="example">info usbhost
+  Device 1.2, speed 480 Mb/s
+    Class 00: USB device 1234:5678, USB DISK
+</pre></div>
+<p>You should see the list of the devices you can use (Never try to use
+hubs, it won&rsquo;t work).
+</p>
+</li><li> Add the device in QEMU by using:
+<div class="example">
+<pre class="example">usb_add host:1234:5678
+</pre></div>
+
+<p>Normally the guest OS should report that a new USB device is
+plugged. You can use the option <samp>-usbdevice</samp> to do the same.
+</p>
+</li><li> Now you can try to use the host USB device in QEMU.
+
+</li></ol>
+
+<p>When relaunching QEMU, you may have to unplug and plug again the USB
+device to make it work again (this is a bug).
+</p>
+<hr>
+<a name="vnc_005fsecurity"></a>
+<a name="VNC-security"></a>
+<h3 class="section">3.11 VNC security</h3>
+
+<p>The VNC server capability provides access to the graphical console
+of the guest VM across the network. This has a number of security
+considerations depending on the deployment scenarios.
+</p>
+<hr>
+<a name="vnc_005fsec_005fnone"></a>
+<a name="Without-passwords"></a>
+<h4 class="subsection">3.11.1 Without passwords</h4>
+
+<p>The simplest VNC server setup does not include any form of authentication.
+For this setup it is recommended to restrict it to listen on a UNIX domain
+socket only. For example
+</p>
+<div class="example">
+<pre class="example">qemu-system-i386 [...OPTIONS...] -vnc unix:/home/joebloggs/.qemu-myvm-vnc
+</pre></div>
+
+<p>This ensures that only users on local box with read/write access to that
+path can access the VNC server. To securely access the VNC server from a
+remote machine, a combination of netcat+ssh can be used to provide a secure
+tunnel.
+</p>
+<hr>
+<a name="vnc_005fsec_005fpassword"></a>
+<a name="With-passwords"></a>
+<h4 class="subsection">3.11.2 With passwords</h4>
+
+<p>The VNC protocol has limited support for password based authentication. Since
+the protocol limits passwords to 8 characters it should not be considered
+to provide high security. The password can be fairly easily brute-forced by
+a client making repeat connections. For this reason, a VNC server using password
+authentication should be restricted to only listen on the loopback interface
+or UNIX domain sockets. Password authentication is not supported when operating
+in FIPS 140-2 compliance mode as it requires the use of the DES cipher. Password
+authentication is requested with the <code>password</code> option, and then once QEMU
+is running the password is set with the monitor. Until the monitor is used to
+set the password all clients will be rejected.
+</p>
+<div class="example">
+<pre class="example">qemu-system-i386 [...OPTIONS...] -vnc :1,password -monitor stdio
+(qemu) change vnc password
+Password: ********
+(qemu)
+</pre></div>
+
+<hr>
+<a name="vnc_005fsec_005fcertificate"></a>
+<a name="With-x509-certificates"></a>
+<h4 class="subsection">3.11.3 With x509 certificates</h4>
+
+<p>The QEMU VNC server also implements the VeNCrypt extension allowing use of
+TLS for encryption of the session, and x509 certificates for authentication.
+The use of x509 certificates is strongly recommended, because TLS on its
+own is susceptible to man-in-the-middle attacks. Basic x509 certificate
+support provides a secure session, but no authentication. This allows any
+client to connect, and provides an encrypted session.
+</p>
+<div class="example">
+<pre class="example">qemu-system-i386 [...OPTIONS...] -vnc :1,tls,x509=/etc/pki/qemu -monitor stdio
+</pre></div>
+
+<p>In the above example <code>/etc/pki/qemu</code> should contain at least three files,
+<code>ca-cert.pem</code>, <code>server-cert.pem</code> and <code>server-key.pem</code>. Unprivileged
+users will want to use a private directory, for example <code>$HOME/.pki/qemu</code>.
+NB the <code>server-key.pem</code> file should be protected with file mode 0600 to
+only be readable by the user owning it.
+</p>
+<hr>
+<a name="vnc_005fsec_005fcertificate_005fverify"></a>
+<a name="With-x509-certificates-and-client-verification"></a>
+<h4 class="subsection">3.11.4 With x509 certificates and client verification</h4>
+
+<p>Certificates can also provide a means to authenticate the client connecting.
+The server will request that the client provide a certificate, which it will
+then validate against the CA certificate. This is a good choice if deploying
+in an environment with a private internal certificate authority.
+</p>
+<div class="example">
+<pre class="example">qemu-system-i386 [...OPTIONS...] -vnc :1,tls,x509verify=/etc/pki/qemu -monitor stdio
+</pre></div>
+
+
+<hr>
+<a name="vnc_005fsec_005fcertificate_005fpw"></a>
+<a name="With-x509-certificates_002c-client-verification-and-passwords"></a>
+<h4 class="subsection">3.11.5 With x509 certificates, client verification and passwords</h4>
+
+<p>Finally, the previous method can be combined with VNC password authentication
+to provide two layers of authentication for clients.
+</p>
+<div class="example">
+<pre class="example">qemu-system-i386 [...OPTIONS...] -vnc :1,password,tls,x509verify=/etc/pki/qemu -monitor stdio
+(qemu) change vnc password
+Password: ********
+(qemu)
+</pre></div>
+
+
+<hr>
+<a name="vnc_005fsec_005fsasl"></a>
+<a name="With-SASL-authentication"></a>
+<h4 class="subsection">3.11.6 With SASL authentication</h4>
+
+<p>The SASL authentication method is a VNC extension, that provides an
+easily extendable, pluggable authentication method. This allows for
+integration with a wide range of authentication mechanisms, such as
+PAM, GSSAPI/Kerberos, LDAP, SQL databases, one-time keys and more.
+The strength of the authentication depends on the exact mechanism
+configured. If the chosen mechanism also provides a SSF layer, then
+it will encrypt the datastream as well.
+</p>
+<p>Refer to the later docs on how to choose the exact SASL mechanism
+used for authentication, but assuming use of one supporting SSF,
+then QEMU can be launched with:
+</p>
+<div class="example">
+<pre class="example">qemu-system-i386 [...OPTIONS...] -vnc :1,sasl -monitor stdio
+</pre></div>
+
+<hr>
+<a name="vnc_005fsec_005fcertificate_005fsasl"></a>
+<a name="With-x509-certificates-and-SASL-authentication"></a>
+<h4 class="subsection">3.11.7 With x509 certificates and SASL authentication</h4>
+
+<p>If the desired SASL authentication mechanism does not supported
+SSF layers, then it is strongly advised to run it in combination
+with TLS and x509 certificates. This provides securely encrypted
+data stream, avoiding risk of compromising of the security
+credentials. This can be enabled, by combining the &rsquo;sasl&rsquo; option
+with the aforementioned TLS + x509 options:
+</p>
+<div class="example">
+<pre class="example">qemu-system-i386 [...OPTIONS...] -vnc :1,tls,x509,sasl -monitor stdio
+</pre></div>
+
+
+<hr>
+<a name="vnc_005fgenerate_005fcert"></a>
+<a name="Generating-certificates-for-VNC"></a>
+<h4 class="subsection">3.11.8 Generating certificates for VNC</h4>
+
+<p>The GNU TLS packages provides a command called <code>certtool</code> which can
+be used to generate certificates and keys in PEM format. At a minimum it
+is necessary to setup a certificate authority, and issue certificates to
+each server. If using certificates for authentication, then each client
+will also need to be issued a certificate. The recommendation is for the
+server to keep its certificates in either <code>/etc/pki/qemu</code> or for
+unprivileged users in <code>$HOME/.pki/qemu</code>.
+</p>
+<hr>
+<a name="vnc_005fgenerate_005fca"></a>
+<a name="Setup-the-Certificate-Authority"></a>
+<h4 class="subsubsection">3.11.8.1 Setup the Certificate Authority</h4>
+
+<p>This step only needs to be performed once per organization / organizational
+unit. First the CA needs a private key. This key must be kept VERY secret
+and secure. If this key is compromised the entire trust chain of the certificates
+issued with it is lost.
+</p>
+<div class="example">
+<pre class="example"># certtool --generate-privkey &gt; ca-key.pem
+</pre></div>
+
+<p>A CA needs to have a public certificate. For simplicity it can be a self-signed
+certificate, or one issue by a commercial certificate issuing authority. To
+generate a self-signed certificate requires one core piece of information, the
+name of the organization.
+</p>
+<div class="example">
+<pre class="example"># cat &gt; ca.info &lt;&lt;EOF
+cn = Name of your organization
+ca
+cert_signing_key
+EOF
+# certtool --generate-self-signed \
+           --load-privkey ca-key.pem
+           --template ca.info \
+           --outfile ca-cert.pem
+</pre></div>
+
+<p>The <code>ca-cert.pem</code> file should be copied to all servers and clients wishing to utilize
+TLS support in the VNC server. The <code>ca-key.pem</code> must not be disclosed/copied at all.
+</p>
+<hr>
+<a name="vnc_005fgenerate_005fserver"></a>
+<a name="Issuing-server-certificates"></a>
+<h4 class="subsubsection">3.11.8.2 Issuing server certificates</h4>
+
+<p>Each server (or host) needs to be issued with a key and certificate. When connecting
+the certificate is sent to the client which validates it against the CA certificate.
+The core piece of information for a server certificate is the hostname. This should
+be the fully qualified hostname that the client will connect with, since the client
+will typically also verify the hostname in the certificate. On the host holding the
+secure CA private key:
+</p>
+<div class="example">
+<pre class="example"># cat &gt; server.info &lt;&lt;EOF
+organization = Name  of your organization
+cn = server.foo.example.com
+tls_www_server
+encryption_key
+signing_key
+EOF
+# certtool --generate-privkey &gt; server-key.pem
+# certtool --generate-certificate \
+           --load-ca-certificate ca-cert.pem \
+           --load-ca-privkey ca-key.pem \
+           --load-privkey server server-key.pem \
+           --template server.info \
+           --outfile server-cert.pem
+</pre></div>
+
+<p>The <code>server-key.pem</code> and <code>server-cert.pem</code> files should now be securely copied
+to the server for which they were generated. The <code>server-key.pem</code> is security
+sensitive and should be kept protected with file mode 0600 to prevent disclosure.
+</p>
+<hr>
+<a name="vnc_005fgenerate_005fclient"></a>
+<a name="Issuing-client-certificates"></a>
+<h4 class="subsubsection">3.11.8.3 Issuing client certificates</h4>
+
+<p>If the QEMU VNC server is to use the <code>x509verify</code> option to validate client
+certificates as its authentication mechanism, each client also needs to be issued
+a certificate. The client certificate contains enough metadata to uniquely identify
+the client, typically organization, state, city, building, etc. On the host holding
+the secure CA private key:
+</p>
+<div class="example">
+<pre class="example"># cat &gt; client.info &lt;&lt;EOF
+country = GB
+state = London
+locality = London
+organiazation = Name of your organization
+cn = client.foo.example.com
+tls_www_client
+encryption_key
+signing_key
+EOF
+# certtool --generate-privkey &gt; client-key.pem
+# certtool --generate-certificate \
+           --load-ca-certificate ca-cert.pem \
+           --load-ca-privkey ca-key.pem \
+           --load-privkey client-key.pem \
+           --template client.info \
+           --outfile client-cert.pem
+</pre></div>
+
+<p>The <code>client-key.pem</code> and <code>client-cert.pem</code> files should now be securely
+copied to the client for which they were generated.
+</p>
+
+<hr>
+<a name="vnc_005fsetup_005fsasl"></a>
+
+<a name="Configuring-SASL-mechanisms"></a>
+<h4 class="subsection">3.11.9 Configuring SASL mechanisms</h4>
+
+<p>The following documentation assumes use of the Cyrus SASL implementation on a
+Linux host, but the principals should apply to any other SASL impl. When SASL
+is enabled, the mechanism configuration will be loaded from system default
+SASL service config /etc/sasl2/qemu.conf. If running QEMU as an
+unprivileged user, an environment variable SASL_CONF_PATH can be used
+to make it search alternate locations for the service config.
+</p>
+<p>The default configuration might contain
+</p>
+<div class="example">
+<pre class="example">mech_list: digest-md5
+sasldb_path: /etc/qemu/passwd.db
+</pre></div>
+
+<p>This says to use the &rsquo;Digest MD5&rsquo; mechanism, which is similar to the HTTP
+Digest-MD5 mechanism. The list of valid usernames &amp; passwords is maintained
+in the /etc/qemu/passwd.db file, and can be updated using the saslpasswd2
+command. While this mechanism is easy to configure and use, it is not
+considered secure by modern standards, so only suitable for developers /
+ad-hoc testing.
+</p>
+<p>A more serious deployment might use Kerberos, which is done with the &rsquo;gssapi&rsquo;
+mechanism
+</p>
+<div class="example">
+<pre class="example">mech_list: gssapi
+keytab: /etc/qemu/krb5.tab
+</pre></div>
+
+<p>For this to work the administrator of your KDC must generate a Kerberos
+principal for the server, with a name of  &rsquo;qemu/somehost.example.com@EXAMPLE.COM&rsquo;
+replacing &rsquo;somehost.example.com&rsquo; with the fully qualified host name of the
+machine running QEMU, and &rsquo;EXAMPLE.COM&rsquo; with the Kerberos Realm.
+</p>
+<p>Other configurations will be left as an exercise for the reader. It should
+be noted that only Digest-MD5 and GSSAPI provides a SSF layer for data
+encryption. For all other mechanisms, VNC should always be configured to
+use TLS and x509 certificates to protect security credentials from snooping.
+</p>
+<hr>
+<a name="gdb_005fusage"></a>
+<a name="GDB-usage"></a>
+<h3 class="section">3.12 GDB usage</h3>
+
+<p>QEMU has a primitive support to work with gdb, so that you can do
+&rsquo;Ctrl-C&rsquo; while the virtual machine is running and inspect its state.
+</p>
+<p>In order to use gdb, launch QEMU with the &rsquo;-s&rsquo; option. It will wait for a
+gdb connection:
+</p><div class="example">
+<pre class="example">qemu-system-i386 -s -kernel arch/i386/boot/bzImage -hda root-2.4.20.img \
+                    -append &quot;root=/dev/hda&quot;
+Connected to host network interface: tun0
+Waiting gdb connection on port 1234
+</pre></div>
+
+<p>Then launch gdb on the &rsquo;vmlinux&rsquo; executable:
+</p><div class="example">
+<pre class="example">&gt; gdb vmlinux
+</pre></div>
+
+<p>In gdb, connect to QEMU:
+</p><div class="example">
+<pre class="example">(gdb) target remote localhost:1234
+</pre></div>
+
+<p>Then you can use gdb normally. For example, type &rsquo;c&rsquo; to launch the kernel:
+</p><div class="example">
+<pre class="example">(gdb) c
+</pre></div>
+
+<p>Here are some useful tips in order to use gdb on system code:
+</p>
+<ol>
+<li> Use <code>info reg</code> to display all the CPU registers.
+</li><li> Use <code>x/10i $eip</code> to display the code at the PC position.
+</li><li> Use <code>set architecture i8086</code> to dump 16 bit code. Then use
+<code>x/10i $cs*16+$eip</code> to dump the code at the PC position.
+</li></ol>
+
+<p>Advanced debugging options:
+</p>
+<p>The default single stepping behavior is step with the IRQs and timer service routines off.  It is set this way because when gdb executes a single step it expects to advance beyond the current instruction.  With the IRQs and and timer service routines on, a single step might jump into the one of the interrupt or exception vectors instead of executing the current instruction. This means you may hit the same breakpoint a number of times before executing the instruction gdb wants to have executed.  Because there are rare circumstances where you want to single step into an interrupt vector the behavior can be controlled from GDB.  There are three commands you can query and set the single step behavior:
+</p><dl compact="compact">
+<dt><code>maintenance packet qqemu.sstepbits</code></dt>
+<dd>
+<p>This will display the MASK bits used to control the single stepping IE:
+</p><div class="example">
+<pre class="example">(gdb) maintenance packet qqemu.sstepbits
+sending: &quot;qqemu.sstepbits&quot;
+received: &quot;ENABLE=1,NOIRQ=2,NOTIMER=4&quot;
+</pre></div>
+</dd>
+<dt><code>maintenance packet qqemu.sstep</code></dt>
+<dd>
+<p>This will display the current value of the mask used when single stepping IE:
+</p><div class="example">
+<pre class="example">(gdb) maintenance packet qqemu.sstep
+sending: &quot;qqemu.sstep&quot;
+received: &quot;0x7&quot;
+</pre></div>
+</dd>
+<dt><code>maintenance packet Qqemu.sstep=HEX_VALUE</code></dt>
+<dd>
+<p>This will change the single step mask, so if wanted to enable IRQs on the single step, but not timers, you would use:
+</p><div class="example">
+<pre class="example">(gdb) maintenance packet Qqemu.sstep=0x5
+sending: &quot;qemu.sstep=0x5&quot;
+received: &quot;OK&quot;
+</pre></div>
+</dd>
+</dl>
+
+<hr>
+<a name="pcsys_005fos_005fspecific"></a>
+<a name="Target-OS-specific-information"></a>
+<h3 class="section">3.13 Target OS specific information</h3>
+
+<a name="Linux-2"></a>
+<h4 class="subsection">3.13.1 Linux</h4>
+
+<p>To have access to SVGA graphic modes under X11, use the <code>vesa</code> or
+the <code>cirrus</code> X11 driver. For optimal performances, use 16 bit
+color depth in the guest and the host OS.
+</p>
+<p>When using a 2.6 guest Linux kernel, you should add the option
+<code>clock=pit</code> on the kernel command line because the 2.6 Linux
+kernels make very strict real time clock checks by default that QEMU
+cannot simulate exactly.
+</p>
+<p>When using a 2.6 guest Linux kernel, verify that the 4G/4G patch is
+not activated because QEMU is slower with this patch. The QEMU
+Accelerator Module is also much slower in this case. Earlier Fedora
+Core 3 Linux kernel (&lt; 2.6.9-1.724_FC3) were known to incorporate this
+patch by default. Newer kernels don&rsquo;t have it.
+</p>
+<a name="Windows-3"></a>
+<h4 class="subsection">3.13.2 Windows</h4>
+
+<p>If you have a slow host, using Windows 95 is better as it gives the
+best speed. Windows 2000 is also a good choice.
+</p>
+<a name="SVGA-graphic-modes-support"></a>
+<h4 class="subsubsection">3.13.2.1 SVGA graphic modes support</h4>
+
+<p>QEMU emulates a Cirrus Logic GD5446 Video
+card. All Windows versions starting from Windows 95 should recognize
+and use this graphic card. For optimal performances, use 16 bit color
+depth in the guest and the host OS.
+</p>
+<p>If you are using Windows XP as guest OS and if you want to use high
+resolution modes which the Cirrus Logic BIOS does not support (i.e. &gt;=
+1280x1024x16), then you should use the VESA VBE virtual graphic card
+(option <samp>-std-vga</samp>).
+</p>
+<a name="CPU-usage-reduction"></a>
+<h4 class="subsubsection">3.13.2.2 CPU usage reduction</h4>
+
+<p>Windows 9x does not correctly use the CPU HLT
+instruction. The result is that it takes host CPU cycles even when
+idle. You can install the utility from
+<a href="http://www.user.cityline.ru/~maxamn/amnhltm.zip">http://www.user.cityline.ru/~maxamn/amnhltm.zip</a> to solve this
+problem. Note that no such tool is needed for NT, 2000 or XP.
+</p>
+<a name="Windows-2000-disk-full-problem"></a>
+<h4 class="subsubsection">3.13.2.3 Windows 2000 disk full problem</h4>
+
+<p>Windows 2000 has a bug which gives a disk full problem during its
+installation. When installing it, use the <samp>-win2k-hack</samp> QEMU
+option to enable a specific workaround. After Windows 2000 is
+installed, you no longer need this option (this option slows down the
+IDE transfers).
+</p>
+<a name="Windows-2000-shutdown"></a>
+<h4 class="subsubsection">3.13.2.4 Windows 2000 shutdown</h4>
+
+<p>Windows 2000 cannot automatically shutdown in QEMU although Windows 98
+can. It comes from the fact that Windows 2000 does not automatically
+use the APM driver provided by the BIOS.
+</p>
+<p>In order to correct that, do the following (thanks to Struan
+Bartlett): go to the Control Panel =&gt; Add/Remove Hardware &amp; Next =&gt;
+Add/Troubleshoot a device =&gt; Add a new device &amp; Next =&gt; No, select the
+hardware from a list &amp; Next =&gt; NT Apm/Legacy Support &amp; Next =&gt; Next
+(again) a few times. Now the driver is installed and Windows 2000 now
+correctly instructs QEMU to shutdown at the appropriate moment.
+</p>
+<a name="Share-a-directory-between-Unix-and-Windows"></a>
+<h4 class="subsubsection">3.13.2.5 Share a directory between Unix and Windows</h4>
+
+<p>See <a href="#sec_005finvocation">sec_invocation</a> about the help of the option <samp>-smb</samp>.
+</p>
+<a name="Windows-XP-security-problem"></a>
+<h4 class="subsubsection">3.13.2.6 Windows XP security problem</h4>
+
+<p>Some releases of Windows XP install correctly but give a security
+error when booting:
+</p><div class="example">
+<pre class="example">A problem is preventing Windows from accurately checking the
+license for this computer. Error code: 0x800703e6.
+</pre></div>
+
+<p>The workaround is to install a service pack for XP after a boot in safe
+mode. Then reboot, and the problem should go away. Since there is no
+network while in safe mode, its recommended to download the full
+installation of SP1 or SP2 and transfer that via an ISO or using the
+vvfat block device (&quot;-hdb fat:directory_which_holds_the_SP&quot;).
+</p>
+<a name="MS_002dDOS-and-FreeDOS"></a>
+<h4 class="subsection">3.13.3 MS-DOS and FreeDOS</h4>
+
+<a name="CPU-usage-reduction-1"></a>
+<h4 class="subsubsection">3.13.3.1 CPU usage reduction</h4>
+
+<p>DOS does not correctly use the CPU HLT instruction. The result is that
+it takes host CPU cycles even when idle. You can install the utility
+from <a href="http://www.vmware.com/software/dosidle210.zip">http://www.vmware.com/software/dosidle210.zip</a> to solve this
+problem.
+</p>
+<hr>
+<a name="QEMU-System-emulator-for-non-PC-targets"></a>
+<a name="QEMU-System-emulator-for-non-PC-targets-1"></a>
+<h2 class="chapter">4 QEMU System emulator for non PC targets</h2>
+
+<p>QEMU is a generic emulator and it emulates many non PC
+machines. Most of the options are similar to the PC emulator. The
+differences are mentioned in the following sections.
+</p>
+
+<hr>
+<a name="PowerPC-System-emulator"></a>
+<a name="PowerPC-System-emulator-1"></a>
+<h3 class="section">4.1 PowerPC System emulator</h3>
+<a name="index-system-emulation-_0028PowerPC_0029"></a>
+
+<p>Use the executable <samp>qemu-system-ppc</samp> to simulate a complete PREP
+or PowerMac PowerPC system.
+</p>
+<p>QEMU emulates the following PowerMac peripherals:
+</p>
+<ul class="no-bullet">
+<li>- UniNorth or Grackle PCI Bridge
+</li><li>- PCI VGA compatible card with VESA Bochs Extensions
+</li><li>- 2 PMAC IDE interfaces with hard disk and CD-ROM support
+</li><li>- NE2000 PCI adapters
+</li><li>- Non Volatile RAM
+</li><li>- VIA-CUDA with ADB keyboard and mouse.
+</li></ul>
+
+<p>QEMU emulates the following PREP peripherals:
+</p>
+<ul class="no-bullet">
+<li>- PCI Bridge
+</li><li>- PCI VGA compatible card with VESA Bochs Extensions
+</li><li>- 2 IDE interfaces with hard disk and CD-ROM support
+</li><li>- Floppy disk
+</li><li>- NE2000 network adapters
+</li><li>- Serial port
+</li><li>- PREP Non Volatile RAM
+</li><li>- PC compatible keyboard and mouse.
+</li></ul>
+
+<p>QEMU uses the Open Hack&rsquo;Ware Open Firmware Compatible BIOS available at
+<a href="http://perso.magic.fr/l_indien/OpenHackWare/index.htm">http://perso.magic.fr/l_indien/OpenHackWare/index.htm</a>.
+</p>
+<p>Since version 0.9.1, QEMU uses OpenBIOS <a href="http://www.openbios.org/">http://www.openbios.org/</a>
+for the g3beige and mac99 PowerMac machines. OpenBIOS is a free (GPL
+v2) portable firmware implementation. The goal is to implement a 100%
+IEEE 1275-1994 (referred to as Open Firmware) compliant firmware.
+</p>
+
+<p>The following options are specific to the PowerPC emulation:
+</p>
+<dl compact="compact">
+<dt><samp>-g <var>W</var>x<var>H</var>[x<var>DEPTH</var>]</samp></dt>
+<dd>
+<p>Set the initial VGA graphic mode. The default is 800x600x32.
+</p>
+</dd>
+<dt><samp>-prom-env <var>string</var></samp></dt>
+<dd>
+<p>Set OpenBIOS variables in NVRAM, for example:
+</p>
+<div class="example">
+<pre class="example">qemu-system-ppc -prom-env 'auto-boot?=false' \
+ -prom-env 'boot-device=hd:2,\yaboot' \
+ -prom-env 'boot-args=conf=hd:2,\yaboot.conf'
+</pre></div>
+
+<p>These variables are not used by Open Hack&rsquo;Ware.
+</p>
+</dd>
+</dl>
+
+
+
+<p>More information is available at
+<a href="http://perso.magic.fr/l_indien/qemu-ppc/">http://perso.magic.fr/l_indien/qemu-ppc/</a>.
+</p>
+<hr>
+<a name="Sparc32-System-emulator"></a>
+<a name="Sparc32-System-emulator-1"></a>
+<h3 class="section">4.2 Sparc32 System emulator</h3>
+<a name="index-system-emulation-_0028Sparc32_0029"></a>
+
+<p>Use the executable <samp>qemu-system-sparc</samp> to simulate the following
+Sun4m architecture machines:
+</p><ul class="no-bullet">
+<li>- SPARCstation 4
+</li><li>- SPARCstation 5
+</li><li>- SPARCstation 10
+</li><li>- SPARCstation 20
+</li><li>- SPARCserver 600MP
+</li><li>- SPARCstation LX
+</li><li>- SPARCstation Voyager
+</li><li>- SPARCclassic
+</li><li>- SPARCbook
+</li></ul>
+
+<p>The emulation is somewhat complete. SMP up to 16 CPUs is supported,
+but Linux limits the number of usable CPUs to 4.
+</p>
+<p>QEMU emulates the following sun4m peripherals:
+</p>
+<ul class="no-bullet">
+<li>- IOMMU
+</li><li>- TCX or cgthree Frame buffer
+</li><li>- Lance (Am7990) Ethernet
+</li><li>- Non Volatile RAM M48T02/M48T08
+</li><li>- Slave I/O: timers, interrupt controllers, Zilog serial ports, keyboard
+and power/reset logic
+</li><li>- ESP SCSI controller with hard disk and CD-ROM support
+</li><li>- Floppy drive (not on SS-600MP)
+</li><li>- CS4231 sound device (only on SS-5, not working yet)
+</li></ul>
+
+<p>The number of peripherals is fixed in the architecture.  Maximum
+memory size depends on the machine type, for SS-5 it is 256MB and for
+others 2047MB.
+</p>
+<p>Since version 0.8.2, QEMU uses OpenBIOS
+<a href="http://www.openbios.org/">http://www.openbios.org/</a>. OpenBIOS is a free (GPL v2) portable
+firmware implementation. The goal is to implement a 100% IEEE
+1275-1994 (referred to as Open Firmware) compliant firmware.
+</p>
+<p>A sample Linux 2.6 series kernel and ram disk image are available on
+the QEMU web site. There are still issues with NetBSD and OpenBSD, but
+some kernel versions work. Please note that currently older Solaris kernels
+don&rsquo;t work probably due to interface issues between OpenBIOS and
+Solaris.
+</p>
+
+<p>The following options are specific to the Sparc32 emulation:
+</p>
+<dl compact="compact">
+<dt><samp>-g <var>W</var>x<var>H</var>x[x<var>DEPTH</var>]</samp></dt>
+<dd>
+<p>Set the initial graphics mode. For TCX, the default is 1024x768x8 with the
+option of 1024x768x24. For cgthree, the default is 1024x768x8 with the option
+of 1152x900x8 for people who wish to use OBP.
+</p>
+</dd>
+<dt><samp>-prom-env <var>string</var></samp></dt>
+<dd>
+<p>Set OpenBIOS variables in NVRAM, for example:
+</p>
+<div class="example">
+<pre class="example">qemu-system-sparc -prom-env 'auto-boot?=false' \
+ -prom-env 'boot-device=sd(0,2,0):d' -prom-env 'boot-args=linux single'
+</pre></div>
+
+</dd>
+<dt><samp>-M [SS-4|SS-5|SS-10|SS-20|SS-600MP|LX|Voyager|SPARCClassic] [|SPARCbook]</samp></dt>
+<dd>
+<p>Set the emulated machine type. Default is SS-5.
+</p>
+</dd>
+</dl>
+
+
+<hr>
+<a name="Sparc64-System-emulator"></a>
+<a name="Sparc64-System-emulator-1"></a>
+<h3 class="section">4.3 Sparc64 System emulator</h3>
+<a name="index-system-emulation-_0028Sparc64_0029"></a>
+
+<p>Use the executable <samp>qemu-system-sparc64</samp> to simulate a Sun4u
+(UltraSPARC PC-like machine), Sun4v (T1 PC-like machine), or generic
+Niagara (T1) machine. The emulator is not usable for anything yet, but
+it can launch some kernels.
+</p>
+<p>QEMU emulates the following peripherals:
+</p>
+<ul class="no-bullet">
+<li>- UltraSparc IIi APB PCI Bridge
+</li><li>- PCI VGA compatible card with VESA Bochs Extensions
+</li><li>- PS/2 mouse and keyboard
+</li><li>- Non Volatile RAM M48T59
+</li><li>- PC-compatible serial ports
+</li><li>- 2 PCI IDE interfaces with hard disk and CD-ROM support
+</li><li>- Floppy disk
+</li></ul>
+
+
+<p>The following options are specific to the Sparc64 emulation:
+</p>
+<dl compact="compact">
+<dt><samp>-prom-env <var>string</var></samp></dt>
+<dd>
+<p>Set OpenBIOS variables in NVRAM, for example:
+</p>
+<div class="example">
+<pre class="example">qemu-system-sparc64 -prom-env 'auto-boot?=false'
+</pre></div>
+
+</dd>
+<dt><samp>-M [sun4u|sun4v|Niagara]</samp></dt>
+<dd>
+<p>Set the emulated machine type. The default is sun4u.
+</p>
+</dd>
+</dl>
+
+
+<hr>
+<a name="MIPS-System-emulator"></a>
+<a name="MIPS-System-emulator-1"></a>
+<h3 class="section">4.4 MIPS System emulator</h3>
+<a name="index-system-emulation-_0028MIPS_0029"></a>
+
+<p>Four executables cover simulation of 32 and 64-bit MIPS systems in
+both endian options, <samp>qemu-system-mips</samp>, <samp>qemu-system-mipsel</samp>
+<samp>qemu-system-mips64</samp> and <samp>qemu-system-mips64el</samp>.
+Five different machine types are emulated:
+</p>
+<ul class="no-bullet">
+<li>- A generic ISA PC-like machine &quot;mips&quot;
+</li><li>- The MIPS Malta prototype board &quot;malta&quot;
+</li><li>- An ACER Pica &quot;pica61&quot;. This machine needs the 64-bit emulator.
+</li><li>- MIPS emulator pseudo board &quot;mipssim&quot;
+</li><li>- A MIPS Magnum R4000 machine &quot;magnum&quot;. This machine needs the 64-bit emulator.
+</li></ul>
+
+<p>The generic emulation is supported by Debian &rsquo;Etch&rsquo; and is able to
+install Debian into a virtual disk image. The following devices are
+emulated:
+</p>
+<ul class="no-bullet">
+<li>- A range of MIPS CPUs, default is the 24Kf
+</li><li>- PC style serial port
+</li><li>- PC style IDE disk
+</li><li>- NE2000 network card
+</li></ul>
+
+<p>The Malta emulation supports the following devices:
+</p>
+<ul class="no-bullet">
+<li>- Core board with MIPS 24Kf CPU and Galileo system controller
+</li><li>- PIIX4 PCI/USB/SMbus controller
+</li><li>- The Multi-I/O chip&rsquo;s serial device
+</li><li>- PCI network cards (PCnet32 and others)
+</li><li>- Malta FPGA serial device
+</li><li>- Cirrus (default) or any other PCI VGA graphics card
+</li></ul>
+
+<p>The ACER Pica emulation supports:
+</p>
+<ul class="no-bullet">
+<li>- MIPS R4000 CPU
+</li><li>- PC-style IRQ and DMA controllers
+</li><li>- PC Keyboard
+</li><li>- IDE controller
+</li></ul>
+
+<p>The mipssim pseudo board emulation provides an environment similar
+to what the proprietary MIPS emulator uses for running Linux.
+It supports:
+</p>
+<ul class="no-bullet">
+<li>- A range of MIPS CPUs, default is the 24Kf
+</li><li>- PC style serial port
+</li><li>- MIPSnet network emulation
+</li></ul>
+
+<p>The MIPS Magnum R4000 emulation supports:
+</p>
+<ul class="no-bullet">
+<li>- MIPS R4000 CPU
+</li><li>- PC-style IRQ controller
+</li><li>- PC Keyboard
+</li><li>- SCSI controller
+</li><li>- G364 framebuffer
+</li></ul>
+
+
+<hr>
+<a name="ARM-System-emulator"></a>
+<a name="ARM-System-emulator-1"></a>
+<h3 class="section">4.5 ARM System emulator</h3>
+<a name="index-system-emulation-_0028ARM_0029"></a>
+
+<p>Use the executable <samp>qemu-system-arm</samp> to simulate a ARM
+machine. The ARM Integrator/CP board is emulated with the following
+devices:
+</p>
+<ul class="no-bullet">
+<li>- ARM926E, ARM1026E, ARM946E, ARM1136 or Cortex-A8 CPU
+</li><li>- Two PL011 UARTs
+</li><li>- SMC 91c111 Ethernet adapter
+</li><li>- PL110 LCD controller
+</li><li>- PL050 KMI with PS/2 keyboard and mouse.
+</li><li>- PL181 MultiMedia Card Interface with SD card.
+</li></ul>
+
+<p>The ARM Versatile baseboard is emulated with the following devices:
+</p>
+<ul class="no-bullet">
+<li>- ARM926E, ARM1136 or Cortex-A8 CPU
+</li><li>- PL190 Vectored Interrupt Controller
+</li><li>- Four PL011 UARTs
+</li><li>- SMC 91c111 Ethernet adapter
+</li><li>- PL110 LCD controller
+</li><li>- PL050 KMI with PS/2 keyboard and mouse.
+</li><li>- PCI host bridge.  Note the emulated PCI bridge only provides access to
+PCI memory space.  It does not provide access to PCI IO space.
+This means some devices (eg. ne2k_pci NIC) are not usable, and others
+(eg. rtl8139 NIC) are only usable when the guest drivers use the memory
+mapped control registers.
+</li><li>- PCI OHCI USB controller.
+</li><li>- LSI53C895A PCI SCSI Host Bus Adapter with hard disk and CD-ROM devices.
+</li><li>- PL181 MultiMedia Card Interface with SD card.
+</li></ul>
+
+<p>Several variants of the ARM RealView baseboard are emulated,
+including the EB, PB-A8 and PBX-A9.  Due to interactions with the
+bootloader, only certain Linux kernel configurations work out
+of the box on these boards.
+</p>
+<p>Kernels for the PB-A8 board should have CONFIG_REALVIEW_HIGH_PHYS_OFFSET
+enabled in the kernel, and expect 512M RAM.  Kernels for The PBX-A9 board
+should have CONFIG_SPARSEMEM enabled, CONFIG_REALVIEW_HIGH_PHYS_OFFSET
+disabled and expect 1024M RAM.
+</p>
+<p>The following devices are emulated:
+</p>
+<ul class="no-bullet">
+<li>- ARM926E, ARM1136, ARM11MPCore, Cortex-A8 or Cortex-A9 MPCore CPU
+</li><li>- ARM AMBA Generic/Distributed Interrupt Controller
+</li><li>- Four PL011 UARTs
+</li><li>- SMC 91c111 or SMSC LAN9118 Ethernet adapter
+</li><li>- PL110 LCD controller
+</li><li>- PL050 KMI with PS/2 keyboard and mouse
+</li><li>- PCI host bridge
+</li><li>- PCI OHCI USB controller
+</li><li>- LSI53C895A PCI SCSI Host Bus Adapter with hard disk and CD-ROM devices
+</li><li>- PL181 MultiMedia Card Interface with SD card.
+</li></ul>
+
+<p>The XScale-based clamshell PDA models (&quot;Spitz&quot;, &quot;Akita&quot;, &quot;Borzoi&quot;
+and &quot;Terrier&quot;) emulation includes the following peripherals:
+</p>
+<ul class="no-bullet">
+<li>- Intel PXA270 System-on-chip (ARM V5TE core)
+</li><li>- NAND Flash memory
+</li><li>- IBM/Hitachi DSCM microdrive in a PXA PCMCIA slot - not in &quot;Akita&quot;
+</li><li>- On-chip OHCI USB controller
+</li><li>- On-chip LCD controller
+</li><li>- On-chip Real Time Clock
+</li><li>- TI ADS7846 touchscreen controller on SSP bus
+</li><li>- Maxim MAX1111 analog-digital converter on I<em>^2</em>C bus
+</li><li>- GPIO-connected keyboard controller and LEDs
+</li><li>- Secure Digital card connected to PXA MMC/SD host
+</li><li>- Three on-chip UARTs
+</li><li>- WM8750 audio CODEC on I<em>^2</em>C and I<em>^2</em>S busses
+</li></ul>
+
+<p>The Palm Tungsten|E PDA (codename &quot;Cheetah&quot;) emulation includes the
+following elements:
+</p>
+<ul class="no-bullet">
+<li>- Texas Instruments OMAP310 System-on-chip (ARM 925T core)
+</li><li>- ROM and RAM memories (ROM firmware image can be loaded with -option-rom)
+</li><li>- On-chip LCD controller
+</li><li>- On-chip Real Time Clock
+</li><li>- TI TSC2102i touchscreen controller / analog-digital converter / Audio
+CODEC, connected through MicroWire and I<em>^2</em>S busses
+</li><li>- GPIO-connected matrix keypad
+</li><li>- Secure Digital card connected to OMAP MMC/SD host
+</li><li>- Three on-chip UARTs
+</li></ul>
+
+<p>Nokia N800 and N810 internet tablets (known also as RX-34 and RX-44 / 48)
+emulation supports the following elements:
+</p>
+<ul class="no-bullet">
+<li>- Texas Instruments OMAP2420 System-on-chip (ARM 1136 core)
+</li><li>- RAM and non-volatile OneNAND Flash memories
+</li><li>- Display connected to EPSON remote framebuffer chip and OMAP on-chip
+display controller and a LS041y3 MIPI DBI-C controller
+</li><li>- TI TSC2301 (in N800) and TI TSC2005 (in N810) touchscreen controllers
+driven through SPI bus
+</li><li>- National Semiconductor LM8323-controlled qwerty keyboard driven
+through I<em>^2</em>C bus
+</li><li>- Secure Digital card connected to OMAP MMC/SD host
+</li><li>- Three OMAP on-chip UARTs and on-chip STI debugging console
+</li><li>- A Bluetooth(R) transceiver and HCI connected to an UART
+</li><li>- Mentor Graphics &quot;Inventra&quot; dual-role USB controller embedded in a TI
+TUSB6010 chip - only USB host mode is supported
+</li><li>- TI TMP105 temperature sensor driven through I<em>^2</em>C bus
+</li><li>- TI TWL92230C power management companion with an RTC on I<em>^2</em>C bus
+</li><li>- Nokia RETU and TAHVO multi-purpose chips with an RTC, connected
+through CBUS
+</li></ul>
+
+<p>The Luminary Micro Stellaris LM3S811EVB emulation includes the following
+devices:
+</p>
+<ul class="no-bullet">
+<li>- Cortex-M3 CPU core.
+</li><li>- 64k Flash and 8k SRAM.
+</li><li>- Timers, UARTs, ADC and I<em>^2</em>C interface.
+</li><li>- OSRAM Pictiva 96x16 OLED with SSD0303 controller on I<em>^2</em>C bus.
+</li></ul>
+
+<p>The Luminary Micro Stellaris LM3S6965EVB emulation includes the following
+devices:
+</p>
+<ul class="no-bullet">
+<li>- Cortex-M3 CPU core.
+</li><li>- 256k Flash and 64k SRAM.
+</li><li>- Timers, UARTs, ADC, I<em>^2</em>C and SSI interfaces.
+</li><li>- OSRAM Pictiva 128x64 OLED with SSD0323 controller connected via SSI.
+</li></ul>
+
+<p>The Freecom MusicPal internet radio emulation includes the following
+elements:
+</p>
+<ul class="no-bullet">
+<li>- Marvell MV88W8618 ARM core.
+</li><li>- 32 MB RAM, 256 KB SRAM, 8 MB flash.
+</li><li>- Up to 2 16550 UARTs
+</li><li>- MV88W8xx8 Ethernet controller
+</li><li>- MV88W8618 audio controller, WM8750 CODEC and mixer
+</li><li>- 128×64 display with brightness control
+</li><li>- 2 buttons, 2 navigation wheels with button function
+</li></ul>
+
+<p>The Siemens SX1 models v1 and v2 (default) basic emulation.
+The emulation includes the following elements:
+</p>
+<ul class="no-bullet">
+<li>- Texas Instruments OMAP310 System-on-chip (ARM 925T core)
+</li><li>- ROM and RAM memories (ROM firmware image can be loaded with -pflash)
+V1
+1 Flash of 16MB and 1 Flash of 8MB
+V2
+1 Flash of 32MB
+</li><li>- On-chip LCD controller
+</li><li>- On-chip Real Time Clock
+</li><li>- Secure Digital card connected to OMAP MMC/SD host
+</li><li>- Three on-chip UARTs
+</li></ul>
+
+<p>A Linux 2.6 test image is available on the QEMU web site. More
+information is available in the QEMU mailing-list archive.
+</p>
+
+<p>The following options are specific to the ARM emulation:
+</p>
+<dl compact="compact">
+<dt><samp>-semihosting</samp></dt>
+<dd><p>Enable semihosting syscall emulation.
+</p>
+<p>On ARM this implements the &quot;Angel&quot; interface.
+</p>
+<p>Note that this allows guest direct access to the host filesystem,
+so should only be used with trusted guest OS.
+</p>
+</dd>
+</dl>
+
+<hr>
+<a name="ColdFire-System-emulator"></a>
+<a name="ColdFire-System-emulator-1"></a>
+<h3 class="section">4.6 ColdFire System emulator</h3>
+<a name="index-system-emulation-_0028ColdFire_0029"></a>
+<a name="index-system-emulation-_0028M68K_0029"></a>
+
+<p>Use the executable <samp>qemu-system-m68k</samp> to simulate a ColdFire machine.
+The emulator is able to boot a uClinux kernel.
+</p>
+<p>The M5208EVB emulation includes the following devices:
+</p>
+<ul class="no-bullet">
+<li>- MCF5208 ColdFire V2 Microprocessor (ISA A+ with EMAC).
+</li><li>- Three Two on-chip UARTs.
+</li><li>- Fast Ethernet Controller (FEC)
+</li></ul>
+
+<p>The AN5206 emulation includes the following devices:
+</p>
+<ul class="no-bullet">
+<li>- MCF5206 ColdFire V2 Microprocessor.
+</li><li>- Two on-chip UARTs.
+</li></ul>
+
+
+<p>The following options are specific to the ColdFire emulation:
+</p>
+<dl compact="compact">
+<dt><samp>-semihosting</samp></dt>
+<dd><p>Enable semihosting syscall emulation.
+</p>
+<p>On M68K this implements the &quot;ColdFire GDB&quot; interface used by libgloss.
+</p>
+<p>Note that this allows guest direct access to the host filesystem,
+so should only be used with trusted guest OS.
+</p>
+</dd>
+</dl>
+
+<hr>
+<a name="Cris-System-emulator"></a>
+<a name="Cris-System-emulator-1"></a>
+<h3 class="section">4.7 Cris System emulator</h3>
+<a name="index-system-emulation-_0028Cris_0029"></a>
+
+<p>TODO
+</p>
+<hr>
+<a name="Microblaze-System-emulator"></a>
+<a name="Microblaze-System-emulator-1"></a>
+<h3 class="section">4.8 Microblaze System emulator</h3>
+<a name="index-system-emulation-_0028Microblaze_0029"></a>
+
+<p>TODO
+</p>
+<hr>
+<a name="SH4-System-emulator"></a>
+<a name="SH4-System-emulator-1"></a>
+<h3 class="section">4.9 SH4 System emulator</h3>
+<a name="index-system-emulation-_0028SH4_0029"></a>
+
+<p>TODO
+</p>
+<hr>
+<a name="Xtensa-System-emulator"></a>
+<a name="Xtensa-System-emulator-1"></a>
+<h3 class="section">4.10 Xtensa System emulator</h3>
+<a name="index-system-emulation-_0028Xtensa_0029"></a>
+
+<p>Two executables cover simulation of both Xtensa endian options,
+<samp>qemu-system-xtensa</samp> and <samp>qemu-system-xtensaeb</samp>.
+Two different machine types are emulated:
+</p>
+<ul class="no-bullet">
+<li>- Xtensa emulator pseudo board &quot;sim&quot;
+</li><li>- Avnet LX60/LX110/LX200 board
+</li></ul>
+
+<p>The sim pseudo board emulation provides an environment similar
+to one provided by the proprietary Tensilica ISS.
+It supports:
+</p>
+<ul class="no-bullet">
+<li>- A range of Xtensa CPUs, default is the DC232B
+</li><li>- Console and filesystem access via semihosting calls
+</li></ul>
+
+<p>The Avnet LX60/LX110/LX200 emulation supports:
+</p>
+<ul class="no-bullet">
+<li>- A range of Xtensa CPUs, default is the DC232B
+</li><li>- 16550 UART
+</li><li>- OpenCores 10/100 Mbps Ethernet MAC
+</li></ul>
+
+
+<p>The following options are specific to the Xtensa emulation:
+</p>
+<dl compact="compact">
+<dt><samp>-semihosting</samp></dt>
+<dd><p>Enable semihosting syscall emulation.
+</p>
+<p>Xtensa semihosting provides basic file IO calls, such as open/read/write/seek/select.
+Tensilica baremetal libc for ISS and linux platform &quot;sim&quot; use this interface.
+</p>
+<p>Note that this allows guest direct access to the host filesystem,
+so should only be used with trusted guest OS.
+</p>
+</dd>
+</dl>
+<hr>
+<a name="QEMU-User-space-emulator"></a>
+<a name="QEMU-User-space-emulator-1"></a>
+<h2 class="chapter">5 QEMU User space emulator</h2>
+
+
+<hr>
+<a name="Supported-Operating-Systems"></a>
+<a name="Supported-Operating-Systems-1"></a>
+<h3 class="section">5.1 Supported Operating Systems</h3>
+
+<p>The following OS are supported in user space emulation:
+</p>
+<ul class="no-bullet">
+<li>- Linux (referred as qemu-linux-user)
+</li><li>- BSD (referred as qemu-bsd-user)
+</li></ul>
+
+<hr>
+<a name="Linux-User-space-emulator"></a>
+<a name="Linux-User-space-emulator-1"></a>
+<h3 class="section">5.2 Linux User space emulator</h3>
+
+
+<hr>
+<a name="Quick-Start"></a>
+<a name="Quick-Start-2"></a>
+<h4 class="subsection">5.2.1 Quick Start</h4>
+
+<p>In order to launch a Linux process, QEMU needs the process executable
+itself and all the target (x86) dynamic libraries used by it.
+</p>
+<ul>
+<li> On x86, you can just try to launch any process by using the native
+libraries:
+
+<div class="example">
+<pre class="example">qemu-i386 -L / /bin/ls
+</pre></div>
+
+<p><code>-L /</code> tells that the x86 dynamic linker must be searched with a
+<samp>/</samp> prefix.
+</p>
+</li><li> Since QEMU is also a linux process, you can launch QEMU with
+QEMU (NOTE: you can only do that if you compiled QEMU from the sources):
+
+<div class="example">
+<pre class="example">qemu-i386 -L / qemu-i386 -L / /bin/ls
+</pre></div>
+
+</li><li> On non x86 CPUs, you need first to download at least an x86 glibc
+(<samp>qemu-runtime-i386-XXX-.tar.gz</samp> on the QEMU web page). Ensure that
+<code>LD_LIBRARY_PATH</code> is not set:
+
+<div class="example">
+<pre class="example">unset LD_LIBRARY_PATH
+</pre></div>
+
+<p>Then you can launch the precompiled <samp>ls</samp> x86 executable:
+</p>
+<div class="example">
+<pre class="example">qemu-i386 tests/i386/ls
+</pre></div>
+<p>You can look at <samp>scripts/qemu-binfmt-conf.sh</samp> so that
+QEMU is automatically launched by the Linux kernel when you try to
+launch x86 executables. It requires the <code>binfmt_misc</code> module in the
+Linux kernel.
+</p>
+</li><li> The x86 version of QEMU is also included. You can try weird things such as:
+<div class="example">
+<pre class="example">qemu-i386 /usr/local/qemu-i386/bin/qemu-i386 \
+          /usr/local/qemu-i386/bin/ls-i386
+</pre></div>
+
+</li></ul>
+
+<hr>
+<a name="Wine-launch"></a>
+<a name="Wine-launch-1"></a>
+<h4 class="subsection">5.2.2 Wine launch</h4>
+
+<ul>
+<li> Ensure that you have a working QEMU with the x86 glibc
+distribution (see previous section). In order to verify it, you must be
+able to do:
+
+<div class="example">
+<pre class="example">qemu-i386 /usr/local/qemu-i386/bin/ls-i386
+</pre></div>
+
+</li><li> Download the binary x86 Wine install
+(<samp>qemu-XXX-i386-wine.tar.gz</samp> on the QEMU web page).
+
+</li><li> Configure Wine on your account. Look at the provided script
+<samp>/usr/local/qemu-i386/bin/wine-conf.sh</samp>. Your previous
+<code>${HOME}/.wine</code> directory is saved to <code>${HOME}/.wine.org</code>.
+
+</li><li> Then you can try the example <samp>putty.exe</samp>:
+
+<div class="example">
+<pre class="example">qemu-i386 /usr/local/qemu-i386/wine/bin/wine \
+          /usr/local/qemu-i386/wine/c/Program\ Files/putty.exe
+</pre></div>
+
+</li></ul>
+
+<hr>
+<a name="Command-line-options"></a>
+<a name="Command-line-options-1"></a>
+<h4 class="subsection">5.2.3 Command line options</h4>
+
+<div class="example">
+<pre class="example">usage: qemu-i386 [-h] [-d] [-L path] [-s size] [-cpu model] [-g port] [-B offset] [-R size] program [arguments...]
+</pre></div>
+
+<dl compact="compact">
+<dt><samp>-h</samp></dt>
+<dd><p>Print the help
+</p></dd>
+<dt><samp>-L path</samp></dt>
+<dd><p>Set the x86 elf interpreter prefix (default=/usr/local/qemu-i386)
+</p></dd>
+<dt><samp>-s size</samp></dt>
+<dd><p>Set the x86 stack size in bytes (default=524288)
+</p></dd>
+<dt><samp>-cpu model</samp></dt>
+<dd><p>Select CPU model (-cpu help for list and additional feature selection)
+</p></dd>
+<dt><samp>-E <var>var</var>=<var>value</var></samp></dt>
+<dd><p>Set environment <var>var</var> to <var>value</var>.
+</p></dd>
+<dt><samp>-U <var>var</var></samp></dt>
+<dd><p>Remove <var>var</var> from the environment.
+</p></dd>
+<dt><samp>-B offset</samp></dt>
+<dd><p>Offset guest address by the specified number of bytes.  This is useful when
+the address region required by guest applications is reserved on the host.
+This option is currently only supported on some hosts.
+</p></dd>
+<dt><samp>-R size</samp></dt>
+<dd><p>Pre-allocate a guest virtual address space of the given size (in bytes).
+&quot;G&quot;, &quot;M&quot;, and &quot;k&quot; suffixes may be used when specifying the size.
+</p></dd>
+</dl>
+
+<p>Debug options:
+</p>
+<dl compact="compact">
+<dt><samp>-d item1,...</samp></dt>
+<dd><p>Activate logging of the specified items (use &rsquo;-d help&rsquo; for a list of log items)
+</p></dd>
+<dt><samp>-p pagesize</samp></dt>
+<dd><p>Act as if the host page size was &rsquo;pagesize&rsquo; bytes
+</p></dd>
+<dt><samp>-g port</samp></dt>
+<dd><p>Wait gdb connection to port
+</p></dd>
+<dt><samp>-singlestep</samp></dt>
+<dd><p>Run the emulation in single step mode.
+</p></dd>
+</dl>
+
+<p>Environment variables:
+</p>
+<dl compact="compact">
+<dt><code>QEMU_STRACE</code></dt>
+<dd><p>Print system calls and arguments similar to the &rsquo;strace&rsquo; program
+(NOTE: the actual &rsquo;strace&rsquo; program will not work because the user
+space emulator hasn&rsquo;t implemented ptrace).  At the moment this is
+incomplete.  All system calls that don&rsquo;t have a specific argument
+format are printed with information for six arguments.  Many
+flag-style arguments don&rsquo;t have decoders and will show up as numbers.
+</p></dd>
+</dl>
+
+<hr>
+<a name="Other-binaries"></a>
+<a name="Other-binaries-1"></a>
+<h4 class="subsection">5.2.4 Other binaries</h4>
+
+<a name="index-user-mode-_0028Alpha_0029"></a>
+<p><code>qemu-alpha</code> TODO.
+</p>
+<a name="index-user-mode-_0028ARM_0029"></a>
+<p><code>qemu-armeb</code> TODO.
+</p>
+<a name="index-user-mode-_0028ARM_0029-1"></a>
+<p><code>qemu-arm</code> is also capable of running ARM &quot;Angel&quot; semihosted ELF
+binaries (as implemented by the arm-elf and arm-eabi Newlib/GDB
+configurations), and arm-uclinux bFLT format binaries.
+</p>
+<a name="index-user-mode-_0028ColdFire_0029"></a>
+<a name="index-user-mode-_0028M68K_0029"></a>
+<p><code>qemu-m68k</code> is capable of running semihosted binaries using the BDM
+(m5xxx-ram-hosted.ld) or m68k-sim (sim.ld) syscall interfaces, and
+coldfire uClinux bFLT format binaries.
+</p>
+<p>The binary format is detected automatically.
+</p>
+<a name="index-user-mode-_0028Cris_0029"></a>
+<p><code>qemu-cris</code> TODO.
+</p>
+<a name="index-user-mode-_0028i386_0029"></a>
+<p><code>qemu-i386</code> TODO.
+<code>qemu-x86_64</code> TODO.
+</p>
+<a name="index-user-mode-_0028Microblaze_0029"></a>
+<p><code>qemu-microblaze</code> TODO.
+</p>
+<a name="index-user-mode-_0028MIPS_0029"></a>
+<p><code>qemu-mips</code> TODO.
+<code>qemu-mipsel</code> TODO.
+</p>
+<a name="index-user-mode-_0028PowerPC_0029"></a>
+<p><code>qemu-ppc64abi32</code> TODO.
+<code>qemu-ppc64</code> TODO.
+<code>qemu-ppc</code> TODO.
+</p>
+<a name="index-user-mode-_0028SH4_0029"></a>
+<p><code>qemu-sh4eb</code> TODO.
+<code>qemu-sh4</code> TODO.
+</p>
+<a name="index-user-mode-_0028SPARC_0029"></a>
+<p><code>qemu-sparc</code> can execute Sparc32 binaries (Sparc32 CPU, 32 bit ABI).
+</p>
+<p><code>qemu-sparc32plus</code> can execute Sparc32 and SPARC32PLUS binaries
+(Sparc64 CPU, 32 bit ABI).
+</p>
+<p><code>qemu-sparc64</code> can execute some Sparc64 (Sparc64 CPU, 64 bit ABI) and
+SPARC32PLUS binaries (Sparc64 CPU, 32 bit ABI).
+</p>
+<hr>
+<a name="BSD-User-space-emulator"></a>
+<a name="BSD-User-space-emulator-1"></a>
+<h3 class="section">5.3 BSD User space emulator</h3>
+
+
+<hr>
+<a name="BSD-Status"></a>
+<a name="BSD-Status-1"></a>
+<h4 class="subsection">5.3.1 BSD Status</h4>
+
+<ul class="no-bullet">
+<li>- target Sparc64 on Sparc64: Some trivial programs work.
+</li></ul>
+
+<hr>
+<a name="BSD-Quick-Start"></a>
+<a name="Quick-Start-3"></a>
+<h4 class="subsection">5.3.2 Quick Start</h4>
+
+<p>In order to launch a BSD process, QEMU needs the process executable
+itself and all the target dynamic libraries used by it.
+</p>
+<ul>
+<li> On Sparc64, you can just try to launch any process by using the native
+libraries:
+
+<div class="example">
+<pre class="example">qemu-sparc64 /bin/ls
+</pre></div>
+
+</li></ul>
+
+<hr>
+<a name="BSD-Command-line-options"></a>
+<a name="Command-line-options-2"></a>
+<h4 class="subsection">5.3.3 Command line options</h4>
+
+<div class="example">
+<pre class="example">usage: qemu-sparc64 [-h] [-d] [-L path] [-s size] [-bsd type] program [arguments...]
+</pre></div>
+
+<dl compact="compact">
+<dt><samp>-h</samp></dt>
+<dd><p>Print the help
+</p></dd>
+<dt><samp>-L path</samp></dt>
+<dd><p>Set the library root path (default=/)
+</p></dd>
+<dt><samp>-s size</samp></dt>
+<dd><p>Set the stack size in bytes (default=524288)
+</p></dd>
+<dt><samp>-ignore-environment</samp></dt>
+<dd><p>Start with an empty environment. Without this option,
+the initial environment is a copy of the caller&rsquo;s environment.
+</p></dd>
+<dt><samp>-E <var>var</var>=<var>value</var></samp></dt>
+<dd><p>Set environment <var>var</var> to <var>value</var>.
+</p></dd>
+<dt><samp>-U <var>var</var></samp></dt>
+<dd><p>Remove <var>var</var> from the environment.
+</p></dd>
+<dt><samp>-bsd type</samp></dt>
+<dd><p>Set the type of the emulated BSD Operating system. Valid values are
+FreeBSD, NetBSD and OpenBSD (default).
+</p></dd>
+</dl>
+
+<p>Debug options:
+</p>
+<dl compact="compact">
+<dt><samp>-d item1,...</samp></dt>
+<dd><p>Activate logging of the specified items (use &rsquo;-d help&rsquo; for a list of log items)
+</p></dd>
+<dt><samp>-p pagesize</samp></dt>
+<dd><p>Act as if the host page size was &rsquo;pagesize&rsquo; bytes
+</p></dd>
+<dt><samp>-singlestep</samp></dt>
+<dd><p>Run the emulation in single step mode.
+</p></dd>
+</dl>
+
+<hr>
+<a name="compilation"></a>
+<a name="Compilation-from-the-sources"></a>
+<h2 class="chapter">6 Compilation from the sources</h2>
+
+
+<hr>
+<a name="Linux_002fUnix"></a>
+<a name="Linux_002fUnix-1"></a>
+<h3 class="section">6.1 Linux/Unix</h3>
+
+<a name="Compilation"></a>
+<h4 class="subsection">6.1.1 Compilation</h4>
+
+<p>First you must decompress the sources:
+</p><div class="example">
+<pre class="example">cd /tmp
+tar zxvf qemu-x.y.z.tar.gz
+cd qemu-x.y.z
+</pre></div>
+
+<p>Then you configure QEMU and build it (usually no options are needed):
+</p><div class="example">
+<pre class="example">./configure
+make
+</pre></div>
+
+<p>Then type as root user:
+</p><div class="example">
+<pre class="example">make install
+</pre></div>
+<p>to install QEMU in <samp>/usr/local</samp>.
+</p>
+<hr>
+<a name="Windows"></a>
+<a name="Windows-4"></a>
+<h3 class="section">6.2 Windows</h3>
+
+<ul>
+<li> Install the current versions of MSYS and MinGW from
+<a href="http://www.mingw.org/">http://www.mingw.org/</a>. You can find detailed installation
+instructions in the download section and the FAQ.
+
+</li><li> Download
+the MinGW development library of SDL 1.2.x
+(<samp>SDL-devel-1.2.x-mingw32.tar.gz</samp>) from
+<a href="http://www.libsdl.org">http://www.libsdl.org</a>. Unpack it in a temporary place and
+edit the <samp>sdl-config</samp> script so that it gives the
+correct SDL directory when invoked.
+
+</li><li> Install the MinGW version of zlib and make sure
+<samp>zlib.h</samp> and <samp>libz.dll.a</samp> are in
+MinGW&rsquo;s default header and linker search paths.
+
+</li><li> Extract the current version of QEMU.
+
+</li><li> Start the MSYS shell (file <samp>msys.bat</samp>).
+
+</li><li> Change to the QEMU directory. Launch <samp>./configure</samp> and
+<samp>make</samp>.  If you have problems using SDL, verify that
+<samp>sdl-config</samp> can be launched from the MSYS command line.
+
+</li><li> You can install QEMU in <samp>Program Files/QEMU</samp> by typing
+<samp>make install</samp>. Don&rsquo;t forget to copy <samp>SDL.dll</samp> in
+<samp>Program Files/QEMU</samp>.
+
+</li></ul>
+
+<hr>
+<a name="Cross-compilation-for-Windows-with-Linux"></a>
+<a name="Cross-compilation-for-Windows-with-Linux-1"></a>
+<h3 class="section">6.3 Cross compilation for Windows with Linux</h3>
+
+<ul>
+<li> Install the MinGW cross compilation tools available at
+<a href="http://www.mingw.org/">http://www.mingw.org/</a>.
+
+</li><li> Download
+the MinGW development library of SDL 1.2.x
+(<samp>SDL-devel-1.2.x-mingw32.tar.gz</samp>) from
+<a href="http://www.libsdl.org">http://www.libsdl.org</a>. Unpack it in a temporary place and
+edit the <samp>sdl-config</samp> script so that it gives the
+correct SDL directory when invoked.  Set up the <code>PATH</code> environment
+variable so that <samp>sdl-config</samp> can be launched by
+the QEMU configuration script.
+
+</li><li> Install the MinGW version of zlib and make sure
+<samp>zlib.h</samp> and <samp>libz.dll.a</samp> are in
+MinGW&rsquo;s default header and linker search paths.
+
+</li><li> Configure QEMU for Windows cross compilation:
+<div class="example">
+<pre class="example">PATH=/usr/i686-pc-mingw32/sys-root/mingw/bin:$PATH ./configure --cross-prefix='i686-pc-mingw32-'
+</pre></div>
+<p>The example assumes <samp>sdl-config</samp> is installed under <samp>/usr/i686-pc-mingw32/sys-root/mingw/bin</samp> and
+MinGW cross compilation tools have names like <samp>i686-pc-mingw32-gcc</samp> and <samp>i686-pc-mingw32-strip</samp>.
+We set the <code>PATH</code> environment variable to ensure the MinGW version of <samp>sdl-config</samp> is used and
+use &ndash;cross-prefix to specify the name of the cross compiler.
+You can also use &ndash;prefix to set the Win32 install path which defaults to <samp>c:/Program Files/QEMU</samp>.
+</p>
+<p>Under Fedora Linux, you can run:
+</p><div class="example">
+<pre class="example">yum -y install mingw32-gcc mingw32-SDL mingw32-zlib
+</pre></div>
+<p>to get a suitable cross compilation environment.
+</p>
+</li><li> You can install QEMU in the installation directory by typing
+<code>make install</code>. Don&rsquo;t forget to copy <samp>SDL.dll</samp> and <samp>zlib1.dll</samp> into the
+installation directory.
+
+</li></ul>
+
+<p>Wine can be used to launch the resulting qemu-system-i386.exe
+and all other qemu-system-<var>target</var>.exe compiled for Win32.
+</p>
+<hr>
+<a name="Mac-OS-X"></a>
+<a name="Mac-OS-X-3"></a>
+<h3 class="section">6.4 Mac OS X</h3>
+
+<p>The Mac OS X patches are not fully merged in QEMU, so you should look
+at the QEMU mailing list archive to have all the necessary
+information.
+</p>
+<hr>
+<a name="Make-targets"></a>
+<a name="Make-targets-1"></a>
+<h3 class="section">6.5 Make targets</h3>
+
+<dl compact="compact">
+<dt><code>make</code></dt>
+<dt><code>make all</code></dt>
+<dd><p>Make everything which is typically needed.
+</p>
+</dd>
+<dt><code>install</code></dt>
+<dd><p>TODO
+</p>
+</dd>
+<dt><code>install-doc</code></dt>
+<dd><p>TODO
+</p>
+</dd>
+<dt><code>make clean</code></dt>
+<dd><p>Remove most files which were built during make.
+</p>
+</dd>
+<dt><code>make distclean</code></dt>
+<dd><p>Remove everything which was built during make.
+</p>
+</dd>
+<dt><code>make dvi</code></dt>
+<dt><code>make html</code></dt>
+<dt><code>make info</code></dt>
+<dt><code>make pdf</code></dt>
+<dd><p>Create documentation in dvi, html, info or pdf format.
+</p>
+</dd>
+<dt><code>make cscope</code></dt>
+<dd><p>TODO
+</p>
+</dd>
+<dt><code>make defconfig</code></dt>
+<dd><p>(Re-)create some build configuration files.
+User made changes will be overwritten.
+</p>
+</dd>
+<dt><code>tar</code></dt>
+<dt><code>tarbin</code></dt>
+<dd><p>TODO
+</p>
+</dd>
+</dl>
+
+<hr>
+<a name="License"></a>
+<a name="License-1"></a>
+<h2 class="appendix">Appendix A License</h2>
+
+<p>QEMU is a trademark of Fabrice Bellard.
+</p>
+<p>QEMU is released under the GNU General Public License (TODO: add link).
+Parts of QEMU have specific licenses, see file LICENSE.
+</p>
+<p>TODO (refer to file LICENSE, include it, include the GPL?)
+</p>
+<hr>
+<a name="Index"></a>
+<a name="Index-1"></a>
+<h2 class="appendix">Appendix B Index</h2>
+
+<hr>
+<a name="Concept-Index"></a>
+<a name="Concept-Index-1"></a>
+<h3 class="section">B.1 Concept Index</h3>
+<p>This is the main index. Should we combine all keywords in one index? TODO
+</p><table><tr><th valign="top">Jump to: &nbsp; </th><td><a class="summary-letter" href="#Concept-Index_cp_letter-E"><b>E</b></a>
+ &nbsp; 
+<a class="summary-letter" href="#Concept-Index_cp_letter-I"><b>I</b></a>
+ &nbsp; 
+<a class="summary-letter" href="#Concept-Index_cp_letter-O"><b>O</b></a>
+ &nbsp; 
+<a class="summary-letter" href="#Concept-Index_cp_letter-Q"><b>Q</b></a>
+ &nbsp; 
+<a class="summary-letter" href="#Concept-Index_cp_letter-S"><b>S</b></a>
+ &nbsp; 
+<a class="summary-letter" href="#Concept-Index_cp_letter-U"><b>U</b></a>
+ &nbsp; 
+</td></tr></table>
+<table class="index-cp" border="0">
+<tr><td></td><th align="left">Index Entry</th><td>&nbsp;</td><th align="left"> Section</th></tr>
+<tr><td colspan="4"> <hr></td></tr>
+<tr><th><a name="Concept-Index_cp_letter-E">E</a></th><td></td><td></td></tr>
+<tr><td></td><td valign="top"><a href="#index-emulated-target-systems">emulated target systems</a>:</td><td>&nbsp;</td><td valign="top"><a href="#intro_005ffeatures">intro_features</a></td></tr>
+<tr><td colspan="4"> <hr></td></tr>
+<tr><th><a name="Concept-Index_cp_letter-I">I</a></th><td></td><td></td></tr>
+<tr><td></td><td valign="top"><a href="#index-installation-_0028Linux_0029">installation (Linux)</a>:</td><td>&nbsp;</td><td valign="top"><a href="#install_005flinux">install_linux</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-installation-_0028Windows_0029">installation (Windows)</a>:</td><td>&nbsp;</td><td valign="top"><a href="#install_005fwindows">install_windows</a></td></tr>
+<tr><td colspan="4"> <hr></td></tr>
+<tr><th><a name="Concept-Index_cp_letter-O">O</a></th><td></td><td></td></tr>
+<tr><td></td><td valign="top"><a href="#index-operating-modes">operating modes</a>:</td><td>&nbsp;</td><td valign="top"><a href="#intro_005ffeatures">intro_features</a></td></tr>
+<tr><td colspan="4"> <hr></td></tr>
+<tr><th><a name="Concept-Index_cp_letter-Q">Q</a></th><td></td><td></td></tr>
+<tr><td></td><td valign="top"><a href="#index-QEMU-monitor">QEMU monitor</a>:</td><td>&nbsp;</td><td valign="top"><a href="#pcsys_005fmonitor">pcsys_monitor</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-quick-start">quick start</a>:</td><td>&nbsp;</td><td valign="top"><a href="#pcsys_005fquickstart">pcsys_quickstart</a></td></tr>
+<tr><td colspan="4"> <hr></td></tr>
+<tr><th><a name="Concept-Index_cp_letter-S">S</a></th><td></td><td></td></tr>
+<tr><td></td><td valign="top"><a href="#index-supported-target-systems">supported target systems</a>:</td><td>&nbsp;</td><td valign="top"><a href="#intro_005ffeatures">intro_features</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-supported-user-mode-targets">supported user mode targets</a>:</td><td>&nbsp;</td><td valign="top"><a href="#intro_005ffeatures">intro_features</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-system-emulation">system emulation</a>:</td><td>&nbsp;</td><td valign="top"><a href="#intro_005ffeatures">intro_features</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-system-emulation-_0028ARM_0029">system emulation (ARM)</a>:</td><td>&nbsp;</td><td valign="top"><a href="#ARM-System-emulator">ARM System emulator</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-system-emulation-_0028ColdFire_0029">system emulation (ColdFire)</a>:</td><td>&nbsp;</td><td valign="top"><a href="#ColdFire-System-emulator">ColdFire System emulator</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-system-emulation-_0028Cris_0029">system emulation (Cris)</a>:</td><td>&nbsp;</td><td valign="top"><a href="#Cris-System-emulator">Cris System emulator</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-system-emulation-_0028M68K_0029">system emulation (M68K)</a>:</td><td>&nbsp;</td><td valign="top"><a href="#ColdFire-System-emulator">ColdFire System emulator</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-system-emulation-_0028Microblaze_0029">system emulation (Microblaze)</a>:</td><td>&nbsp;</td><td valign="top"><a href="#Microblaze-System-emulator">Microblaze System emulator</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-system-emulation-_0028MIPS_0029">system emulation (MIPS)</a>:</td><td>&nbsp;</td><td valign="top"><a href="#MIPS-System-emulator">MIPS System emulator</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-system-emulation-_0028PC_0029">system emulation (PC)</a>:</td><td>&nbsp;</td><td valign="top"><a href="#QEMU-PC-System-emulator">QEMU PC System emulator</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-system-emulation-_0028PowerPC_0029">system emulation (PowerPC)</a>:</td><td>&nbsp;</td><td valign="top"><a href="#PowerPC-System-emulator">PowerPC System emulator</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-system-emulation-_0028SH4_0029">system emulation (SH4)</a>:</td><td>&nbsp;</td><td valign="top"><a href="#SH4-System-emulator">SH4 System emulator</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-system-emulation-_0028Sparc32_0029">system emulation (Sparc32)</a>:</td><td>&nbsp;</td><td valign="top"><a href="#Sparc32-System-emulator">Sparc32 System emulator</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-system-emulation-_0028Sparc64_0029">system emulation (Sparc64)</a>:</td><td>&nbsp;</td><td valign="top"><a href="#Sparc64-System-emulator">Sparc64 System emulator</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-system-emulation-_0028Xtensa_0029">system emulation (Xtensa)</a>:</td><td>&nbsp;</td><td valign="top"><a href="#Xtensa-System-emulator">Xtensa System emulator</a></td></tr>
+<tr><td colspan="4"> <hr></td></tr>
+<tr><th><a name="Concept-Index_cp_letter-U">U</a></th><td></td><td></td></tr>
+<tr><td></td><td valign="top"><a href="#index-user-mode-_0028Alpha_0029">user mode (Alpha)</a>:</td><td>&nbsp;</td><td valign="top"><a href="#Other-binaries">Other binaries</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-user-mode-_0028ARM_0029">user mode (ARM)</a>:</td><td>&nbsp;</td><td valign="top"><a href="#Other-binaries">Other binaries</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-user-mode-_0028ARM_0029-1">user mode (ARM)</a>:</td><td>&nbsp;</td><td valign="top"><a href="#Other-binaries">Other binaries</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-user-mode-_0028ColdFire_0029">user mode (ColdFire)</a>:</td><td>&nbsp;</td><td valign="top"><a href="#Other-binaries">Other binaries</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-user-mode-_0028Cris_0029">user mode (Cris)</a>:</td><td>&nbsp;</td><td valign="top"><a href="#Other-binaries">Other binaries</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-user-mode-_0028i386_0029">user mode (i386)</a>:</td><td>&nbsp;</td><td valign="top"><a href="#Other-binaries">Other binaries</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-user-mode-_0028M68K_0029">user mode (M68K)</a>:</td><td>&nbsp;</td><td valign="top"><a href="#Other-binaries">Other binaries</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-user-mode-_0028Microblaze_0029">user mode (Microblaze)</a>:</td><td>&nbsp;</td><td valign="top"><a href="#Other-binaries">Other binaries</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-user-mode-_0028MIPS_0029">user mode (MIPS)</a>:</td><td>&nbsp;</td><td valign="top"><a href="#Other-binaries">Other binaries</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-user-mode-_0028PowerPC_0029">user mode (PowerPC)</a>:</td><td>&nbsp;</td><td valign="top"><a href="#Other-binaries">Other binaries</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-user-mode-_0028SH4_0029">user mode (SH4)</a>:</td><td>&nbsp;</td><td valign="top"><a href="#Other-binaries">Other binaries</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-user-mode-_0028SPARC_0029">user mode (SPARC)</a>:</td><td>&nbsp;</td><td valign="top"><a href="#Other-binaries">Other binaries</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-user-mode-emulation">user mode emulation</a>:</td><td>&nbsp;</td><td valign="top"><a href="#intro_005ffeatures">intro_features</a></td></tr>
+<tr><td colspan="4"> <hr></td></tr>
+</table>
+<table><tr><th valign="top">Jump to: &nbsp; </th><td><a class="summary-letter" href="#Concept-Index_cp_letter-E"><b>E</b></a>
+ &nbsp; 
+<a class="summary-letter" href="#Concept-Index_cp_letter-I"><b>I</b></a>
+ &nbsp; 
+<a class="summary-letter" href="#Concept-Index_cp_letter-O"><b>O</b></a>
+ &nbsp; 
+<a class="summary-letter" href="#Concept-Index_cp_letter-Q"><b>Q</b></a>
+ &nbsp; 
+<a class="summary-letter" href="#Concept-Index_cp_letter-S"><b>S</b></a>
+ &nbsp; 
+<a class="summary-letter" href="#Concept-Index_cp_letter-U"><b>U</b></a>
+ &nbsp; 
+</td></tr></table>
+
+<hr>
+<a name="Function-Index"></a>
+<a name="Function-Index-1"></a>
+<h3 class="section">B.2 Function Index</h3>
+<p>This index could be used for command line options and monitor functions.
+</p><table><tr><th valign="top">Jump to: &nbsp; </th><td><a class="summary-letter" href="#Function-Index_fn_symbol-1"><b>-</b></a>
+ &nbsp; 
+<br>
+<a class="summary-letter" href="#Function-Index_fn_letter-A"><b>A</b></a>
+ &nbsp; 
+<a class="summary-letter" href="#Function-Index_fn_letter-B"><b>B</b></a>
+ &nbsp; 
+<a class="summary-letter" href="#Function-Index_fn_letter-C"><b>C</b></a>
+ &nbsp; 
+<a class="summary-letter" href="#Function-Index_fn_letter-D"><b>D</b></a>
+ &nbsp; 
+<a class="summary-letter" href="#Function-Index_fn_letter-E"><b>E</b></a>
+ &nbsp; 
+<a class="summary-letter" href="#Function-Index_fn_letter-G"><b>G</b></a>
+ &nbsp; 
+<a class="summary-letter" href="#Function-Index_fn_letter-H"><b>H</b></a>
+ &nbsp; 
+<a class="summary-letter" href="#Function-Index_fn_letter-I"><b>I</b></a>
+ &nbsp; 
+<a class="summary-letter" href="#Function-Index_fn_letter-L"><b>L</b></a>
+ &nbsp; 
+<a class="summary-letter" href="#Function-Index_fn_letter-M"><b>M</b></a>
+ &nbsp; 
+<a class="summary-letter" href="#Function-Index_fn_letter-N"><b>N</b></a>
+ &nbsp; 
+<a class="summary-letter" href="#Function-Index_fn_letter-O"><b>O</b></a>
+ &nbsp; 
+<a class="summary-letter" href="#Function-Index_fn_letter-P"><b>P</b></a>
+ &nbsp; 
+<a class="summary-letter" href="#Function-Index_fn_letter-Q"><b>Q</b></a>
+ &nbsp; 
+<a class="summary-letter" href="#Function-Index_fn_letter-R"><b>R</b></a>
+ &nbsp; 
+<a class="summary-letter" href="#Function-Index_fn_letter-S"><b>S</b></a>
+ &nbsp; 
+<a class="summary-letter" href="#Function-Index_fn_letter-T"><b>T</b></a>
+ &nbsp; 
+<a class="summary-letter" href="#Function-Index_fn_letter-U"><b>U</b></a>
+ &nbsp; 
+<a class="summary-letter" href="#Function-Index_fn_letter-W"><b>W</b></a>
+ &nbsp; 
+<a class="summary-letter" href="#Function-Index_fn_letter-X"><b>X</b></a>
+ &nbsp; 
+</td></tr></table>
+<table class="index-fn" border="0">
+<tr><td></td><th align="left">Index Entry</th><td>&nbsp;</td><th align="left"> Section</th></tr>
+<tr><td colspan="4"> <hr></td></tr>
+<tr><th><a name="Function-Index_fn_symbol-1">-</a></th><td></td><td></td></tr>
+<tr><td></td><td valign="top"><a href="#index-_002dacpitable"><code>-acpitable</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#sec_005finvocation">sec_invocation</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-_002dadd_002dfd"><code>-add-fd</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#sec_005finvocation">sec_invocation</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-_002dalt_002dgrab"><code>-alt-grab</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#sec_005finvocation">sec_invocation</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-_002dappend"><code>-append</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#sec_005finvocation">sec_invocation</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-_002daudio_002dhelp"><code>-audio-help</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#sec_005finvocation">sec_invocation</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-_002dballoon"><code>-balloon</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#sec_005finvocation">sec_invocation</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-_002dbios"><code>-bios</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#sec_005finvocation">sec_invocation</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-_002dboot"><code>-boot</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#sec_005finvocation">sec_invocation</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-_002dbt"><code>-bt</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#sec_005finvocation">sec_invocation</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-_002dcdrom"><code>-cdrom</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#sec_005finvocation">sec_invocation</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-_002dchardev"><code>-chardev</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#sec_005finvocation">sec_invocation</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-_002dchroot"><code>-chroot</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#sec_005finvocation">sec_invocation</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-_002dclock"><code>-clock</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#sec_005finvocation">sec_invocation</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-_002dcpu"><code>-cpu</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#sec_005finvocation">sec_invocation</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-_002dctrl_002dgrab"><code>-ctrl-grab</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#sec_005finvocation">sec_invocation</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-_002dcurses"><code>-curses</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#sec_005finvocation">sec_invocation</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-_002dd"><code>-d</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#sec_005finvocation">sec_invocation</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-_002dD"><code>-D</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#sec_005finvocation">sec_invocation</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-_002ddaemonize"><code>-daemonize</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#sec_005finvocation">sec_invocation</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-_002ddebugcon"><code>-debugcon</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#sec_005finvocation">sec_invocation</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-_002ddevice"><code>-device</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#sec_005finvocation">sec_invocation</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-_002ddisplay"><code>-display</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#sec_005finvocation">sec_invocation</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-_002ddrive"><code>-drive</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#sec_005finvocation">sec_invocation</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-_002ddtb"><code>-dtb</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#sec_005finvocation">sec_invocation</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-_002ddump_002dvmstate"><code>-dump-vmstate</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#sec_005finvocation">sec_invocation</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-_002dechr"><code>-echr</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#sec_005finvocation">sec_invocation</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-_002denable_002dfips"><code>-enable-fips</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#sec_005finvocation">sec_invocation</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-_002denable_002dkvm"><code>-enable-kvm</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#sec_005finvocation">sec_invocation</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-_002dfda"><code>-fda</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#sec_005finvocation">sec_invocation</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-_002dfdb"><code>-fdb</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#sec_005finvocation">sec_invocation</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-_002dfsdev"><code>-fsdev</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#sec_005finvocation">sec_invocation</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-_002dfull_002dscreen"><code>-full-screen</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#sec_005finvocation">sec_invocation</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-_002dg"><code>-g</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#sec_005finvocation">sec_invocation</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-_002dgdb"><code>-gdb</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#sec_005finvocation">sec_invocation</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-_002dglobal"><code>-global</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#sec_005finvocation">sec_invocation</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-_002dh"><code>-h</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#sec_005finvocation">sec_invocation</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-_002dhda"><code>-hda</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#sec_005finvocation">sec_invocation</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-_002dhdachs"><code>-hdachs</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#sec_005finvocation">sec_invocation</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-_002dhdb"><code>-hdb</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#sec_005finvocation">sec_invocation</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-_002dhdc"><code>-hdc</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#sec_005finvocation">sec_invocation</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-_002dhdd"><code>-hdd</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#sec_005finvocation">sec_invocation</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-_002dicount"><code>-icount</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#sec_005finvocation">sec_invocation</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-_002dincoming"><code>-incoming</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#sec_005finvocation">sec_invocation</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-_002dinitrd"><code>-initrd</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#sec_005finvocation">sec_invocation</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-_002dk"><code>-k</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#sec_005finvocation">sec_invocation</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-_002dkernel"><code>-kernel</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#sec_005finvocation">sec_invocation</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-_002dL"><code>-L</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#sec_005finvocation">sec_invocation</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-_002dloadvm"><code>-loadvm</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#sec_005finvocation">sec_invocation</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-_002dm"><code>-m</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#sec_005finvocation">sec_invocation</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-_002dmachine"><code>-machine</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#sec_005finvocation">sec_invocation</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-_002dmem_002dpath"><code>-mem-path</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#sec_005finvocation">sec_invocation</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-_002dmem_002dprealloc"><code>-mem-prealloc</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#sec_005finvocation">sec_invocation</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-_002dmon"><code>-mon</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#sec_005finvocation">sec_invocation</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-_002dmonitor"><code>-monitor</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#sec_005finvocation">sec_invocation</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-_002dmsg"><code>-msg</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#sec_005finvocation">sec_invocation</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-_002dmtdblock"><code>-mtdblock</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#sec_005finvocation">sec_invocation</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-_002dname"><code>-name</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#sec_005finvocation">sec_invocation</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-_002dnet"><code>-net</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#sec_005finvocation">sec_invocation</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-_002dnetdev"><code>-netdev</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#sec_005finvocation">sec_invocation</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-_002dno_002dacpi"><code>-no-acpi</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#sec_005finvocation">sec_invocation</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-_002dno_002dfd_002dbootchk"><code>-no-fd-bootchk</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#sec_005finvocation">sec_invocation</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-_002dno_002dframe"><code>-no-frame</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#sec_005finvocation">sec_invocation</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-_002dno_002dhpet"><code>-no-hpet</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#sec_005finvocation">sec_invocation</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-_002dno_002dquit"><code>-no-quit</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#sec_005finvocation">sec_invocation</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-_002dno_002dreboot"><code>-no-reboot</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#sec_005finvocation">sec_invocation</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-_002dno_002dshutdown"><code>-no-shutdown</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#sec_005finvocation">sec_invocation</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-_002dno_002duser_002dconfig"><code>-no-user-config</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#sec_005finvocation">sec_invocation</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-_002dnodefaults"><code>-nodefaults</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#sec_005finvocation">sec_invocation</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-_002dnodefconfig"><code>-nodefconfig</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#sec_005finvocation">sec_invocation</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-_002dnographic"><code>-nographic</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#sec_005finvocation">sec_invocation</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-_002dnuma"><code>-numa</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#sec_005finvocation">sec_invocation</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-_002dobject"><code>-object</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#sec_005finvocation">sec_invocation</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-_002dold_002dparam-_0028ARM_0029"><code>-old-param (ARM)</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#sec_005finvocation">sec_invocation</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-_002doption_002drom"><code>-option-rom</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#sec_005finvocation">sec_invocation</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-_002dparallel"><code>-parallel</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#sec_005finvocation">sec_invocation</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-_002dpflash"><code>-pflash</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#sec_005finvocation">sec_invocation</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-_002dpidfile"><code>-pidfile</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#sec_005finvocation">sec_invocation</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-_002dportrait"><code>-portrait</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#sec_005finvocation">sec_invocation</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-_002dprom_002denv"><code>-prom-env</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#sec_005finvocation">sec_invocation</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-_002dqmp"><code>-qmp</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#sec_005finvocation">sec_invocation</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-_002dreadconfig"><code>-readconfig</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#sec_005finvocation">sec_invocation</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-_002drealtime"><code>-realtime</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#sec_005finvocation">sec_invocation</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-_002drotate"><code>-rotate</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#sec_005finvocation">sec_invocation</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-_002drtc"><code>-rtc</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#sec_005finvocation">sec_invocation</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-_002drunas"><code>-runas</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#sec_005finvocation">sec_invocation</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-_002dS"><code>-S</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#sec_005finvocation">sec_invocation</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-_002ds"><code>-s</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#sec_005finvocation">sec_invocation</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-_002dsandbox"><code>-sandbox</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#sec_005finvocation">sec_invocation</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-_002dsd"><code>-sd</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#sec_005finvocation">sec_invocation</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-_002dsdl"><code>-sdl</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#sec_005finvocation">sec_invocation</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-_002dsemihosting"><code>-semihosting</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#sec_005finvocation">sec_invocation</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-_002dserial"><code>-serial</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#sec_005finvocation">sec_invocation</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-_002dset"><code>-set</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#sec_005finvocation">sec_invocation</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-_002dshow_002dcursor"><code>-show-cursor</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#sec_005finvocation">sec_invocation</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-_002dsinglestep"><code>-singlestep</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#sec_005finvocation">sec_invocation</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-_002dsmbios"><code>-smbios</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#sec_005finvocation">sec_invocation</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-_002dsmp"><code>-smp</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#sec_005finvocation">sec_invocation</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-_002dsnapshot"><code>-snapshot</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#sec_005finvocation">sec_invocation</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-_002dsoundhw"><code>-soundhw</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#sec_005finvocation">sec_invocation</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-_002dspice"><code>-spice</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#sec_005finvocation">sec_invocation</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-_002dtb_002dsize"><code>-tb-size</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#sec_005finvocation">sec_invocation</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-_002dtpmdev"><code>-tpmdev</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#sec_005finvocation">sec_invocation</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-_002dtrace"><code>-trace</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#sec_005finvocation">sec_invocation</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-_002dusb"><code>-usb</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#sec_005finvocation">sec_invocation</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-_002dusbdevice"><code>-usbdevice</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#sec_005finvocation">sec_invocation</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-_002duuid"><code>-uuid</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#sec_005finvocation">sec_invocation</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-_002dversion"><code>-version</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#sec_005finvocation">sec_invocation</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-_002dvga"><code>-vga</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#sec_005finvocation">sec_invocation</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-_002dvirtfs"><code>-virtfs</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#sec_005finvocation">sec_invocation</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-_002dvirtfs_005fsynth"><code>-virtfs_synth</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#sec_005finvocation">sec_invocation</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-_002dvirtioconsole"><code>-virtioconsole</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#sec_005finvocation">sec_invocation</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-_002dvnc"><code>-vnc</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#sec_005finvocation">sec_invocation</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-_002dwatchdog"><code>-watchdog</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#sec_005finvocation">sec_invocation</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-_002dwatchdog_002daction"><code>-watchdog-action</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#sec_005finvocation">sec_invocation</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-_002dwin2k_002dhack"><code>-win2k-hack</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#sec_005finvocation">sec_invocation</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-_002dwriteconfig"><code>-writeconfig</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#sec_005finvocation">sec_invocation</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-_002dxen_002dattach"><code>-xen-attach</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#sec_005finvocation">sec_invocation</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-_002dxen_002dcreate"><code>-xen-create</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#sec_005finvocation">sec_invocation</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-_002dxen_002ddomid"><code>-xen-domid</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#sec_005finvocation">sec_invocation</a></td></tr>
+<tr><td colspan="4"> <hr></td></tr>
+<tr><th><a name="Function-Index_fn_letter-A">A</a></th><td></td><td></td></tr>
+<tr><td></td><td valign="top"><a href="#index-acl_005fadd"><code>acl_add</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#pcsys_005fmonitor">pcsys_monitor</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-acl_005fpolicy"><code>acl_policy</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#pcsys_005fmonitor">pcsys_monitor</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-acl_005fremove"><code>acl_remove</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#pcsys_005fmonitor">pcsys_monitor</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-acl_005freset"><code>acl_reset</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#pcsys_005fmonitor">pcsys_monitor</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-acl_005fshow"><code>acl_show</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#pcsys_005fmonitor">pcsys_monitor</a></td></tr>
+<tr><td colspan="4"> <hr></td></tr>
+<tr><th><a name="Function-Index_fn_letter-B">B</a></th><td></td><td></td></tr>
+<tr><td></td><td valign="top"><a href="#index-balloon"><code>balloon</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#pcsys_005fmonitor">pcsys_monitor</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-block_005fjob_005fcancel"><code>block_job_cancel</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#pcsys_005fmonitor">pcsys_monitor</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-block_005fjob_005fcomplete"><code>block_job_complete</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#pcsys_005fmonitor">pcsys_monitor</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-block_005fjob_005fpause"><code>block_job_pause</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#pcsys_005fmonitor">pcsys_monitor</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-block_005fjob_005fresume"><code>block_job_resume</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#pcsys_005fmonitor">pcsys_monitor</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-block_005fjob_005fset_005fspeed"><code>block_job_set_speed</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#pcsys_005fmonitor">pcsys_monitor</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-block_005fpasswd"><code>block_passwd</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#pcsys_005fmonitor">pcsys_monitor</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-block_005fresize"><code>block_resize</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#pcsys_005fmonitor">pcsys_monitor</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-block_005fset_005fio_005fthrottle"><code>block_set_io_throttle</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#pcsys_005fmonitor">pcsys_monitor</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-block_005fstream"><code>block_stream</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#pcsys_005fmonitor">pcsys_monitor</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-boot_005fset"><code>boot_set</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#pcsys_005fmonitor">pcsys_monitor</a></td></tr>
+<tr><td colspan="4"> <hr></td></tr>
+<tr><th><a name="Function-Index_fn_letter-C">C</a></th><td></td><td></td></tr>
+<tr><td></td><td valign="top"><a href="#index-change"><code>change</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#pcsys_005fmonitor">pcsys_monitor</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-chardev_005fadd"><code>chardev_add</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#pcsys_005fmonitor">pcsys_monitor</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-chardev_005fremove"><code>chardev_remove</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#pcsys_005fmonitor">pcsys_monitor</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-client_005fmigrate_005finfo"><code>client_migrate_info</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#pcsys_005fmonitor">pcsys_monitor</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-closefd"><code>closefd</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#pcsys_005fmonitor">pcsys_monitor</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-commit"><code>commit</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#pcsys_005fmonitor">pcsys_monitor</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-cont"><code>cont</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#pcsys_005fmonitor">pcsys_monitor</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-cpu"><code>cpu</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#pcsys_005fmonitor">pcsys_monitor</a></td></tr>
+<tr><td colspan="4"> <hr></td></tr>
+<tr><th><a name="Function-Index_fn_letter-D">D</a></th><td></td><td></td></tr>
+<tr><td></td><td valign="top"><a href="#index-delvm"><code>delvm</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#pcsys_005fmonitor">pcsys_monitor</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-device_005fadd"><code>device_add</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#pcsys_005fmonitor">pcsys_monitor</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-device_005fdel"><code>device_del</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#pcsys_005fmonitor">pcsys_monitor</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-drive_005fadd"><code>drive_add</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#pcsys_005fmonitor">pcsys_monitor</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-drive_005fbackup"><code>drive_backup</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#pcsys_005fmonitor">pcsys_monitor</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-drive_005fdel"><code>drive_del</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#pcsys_005fmonitor">pcsys_monitor</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-drive_005fmirror"><code>drive_mirror</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#pcsys_005fmonitor">pcsys_monitor</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-dump_002dguest_002dmemory"><code>dump-guest-memory</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#pcsys_005fmonitor">pcsys_monitor</a></td></tr>
+<tr><td colspan="4"> <hr></td></tr>
+<tr><th><a name="Function-Index_fn_letter-E">E</a></th><td></td><td></td></tr>
+<tr><td></td><td valign="top"><a href="#index-eject"><code>eject</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#pcsys_005fmonitor">pcsys_monitor</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-expire_005fpassword"><code>expire_password</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#pcsys_005fmonitor">pcsys_monitor</a></td></tr>
+<tr><td colspan="4"> <hr></td></tr>
+<tr><th><a name="Function-Index_fn_letter-G">G</a></th><td></td><td></td></tr>
+<tr><td></td><td valign="top"><a href="#index-gdbserver"><code>gdbserver</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#pcsys_005fmonitor">pcsys_monitor</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-getfd"><code>getfd</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#pcsys_005fmonitor">pcsys_monitor</a></td></tr>
+<tr><td colspan="4"> <hr></td></tr>
+<tr><th><a name="Function-Index_fn_letter-H">H</a></th><td></td><td></td></tr>
+<tr><td></td><td valign="top"><a href="#index-help"><code>help</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#pcsys_005fmonitor">pcsys_monitor</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-hostfwd_005fadd"><code>hostfwd_add</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#pcsys_005fmonitor">pcsys_monitor</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-hostfwd_005fremove"><code>hostfwd_remove</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#pcsys_005fmonitor">pcsys_monitor</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-host_005fnet_005fadd"><code>host_net_add</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#pcsys_005fmonitor">pcsys_monitor</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-host_005fnet_005fremove"><code>host_net_remove</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#pcsys_005fmonitor">pcsys_monitor</a></td></tr>
+<tr><td colspan="4"> <hr></td></tr>
+<tr><th><a name="Function-Index_fn_letter-I">I</a></th><td></td><td></td></tr>
+<tr><td></td><td valign="top"><a href="#index-info"><code>info</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#pcsys_005fmonitor">pcsys_monitor</a></td></tr>
+<tr><td colspan="4"> <hr></td></tr>
+<tr><th><a name="Function-Index_fn_letter-L">L</a></th><td></td><td></td></tr>
+<tr><td></td><td valign="top"><a href="#index-loadvm"><code>loadvm</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#pcsys_005fmonitor">pcsys_monitor</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-log"><code>log</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#pcsys_005fmonitor">pcsys_monitor</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-logfile"><code>logfile</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#pcsys_005fmonitor">pcsys_monitor</a></td></tr>
+<tr><td colspan="4"> <hr></td></tr>
+<tr><th><a name="Function-Index_fn_letter-M">M</a></th><td></td><td></td></tr>
+<tr><td></td><td valign="top"><a href="#index-mce-_0028x86_0029"><code>mce (x86)</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#pcsys_005fmonitor">pcsys_monitor</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-memsave"><code>memsave</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#pcsys_005fmonitor">pcsys_monitor</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-migrate"><code>migrate</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#pcsys_005fmonitor">pcsys_monitor</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-migrate_005fcancel"><code>migrate_cancel</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#pcsys_005fmonitor">pcsys_monitor</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-migrate_005fset_005fcache_005fsize"><code>migrate_set_cache_size</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#pcsys_005fmonitor">pcsys_monitor</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-migrate_005fset_005fcapability"><code>migrate_set_capability</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#pcsys_005fmonitor">pcsys_monitor</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-migrate_005fset_005fdowntime"><code>migrate_set_downtime</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#pcsys_005fmonitor">pcsys_monitor</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-migrate_005fset_005fspeed"><code>migrate_set_speed</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#pcsys_005fmonitor">pcsys_monitor</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-mouse_005fbutton"><code>mouse_button</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#pcsys_005fmonitor">pcsys_monitor</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-mouse_005fmove"><code>mouse_move</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#pcsys_005fmonitor">pcsys_monitor</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-mouse_005fset"><code>mouse_set</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#pcsys_005fmonitor">pcsys_monitor</a></td></tr>
+<tr><td colspan="4"> <hr></td></tr>
+<tr><th><a name="Function-Index_fn_letter-N">N</a></th><td></td><td></td></tr>
+<tr><td></td><td valign="top"><a href="#index-nbd_005fserver_005fadd"><code>nbd_server_add</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#pcsys_005fmonitor">pcsys_monitor</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-nbd_005fserver_005fstart"><code>nbd_server_start</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#pcsys_005fmonitor">pcsys_monitor</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-nbd_005fserver_005fstop"><code>nbd_server_stop</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#pcsys_005fmonitor">pcsys_monitor</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-netdev_005fadd"><code>netdev_add</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#pcsys_005fmonitor">pcsys_monitor</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-netdev_005fdel"><code>netdev_del</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#pcsys_005fmonitor">pcsys_monitor</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-nmi"><code>nmi</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#pcsys_005fmonitor">pcsys_monitor</a></td></tr>
+<tr><td colspan="4"> <hr></td></tr>
+<tr><th><a name="Function-Index_fn_letter-O">O</a></th><td></td><td></td></tr>
+<tr><td></td><td valign="top"><a href="#index-object_005fadd"><code>object_add</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#pcsys_005fmonitor">pcsys_monitor</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-object_005fdel"><code>object_del</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#pcsys_005fmonitor">pcsys_monitor</a></td></tr>
+<tr><td colspan="4"> <hr></td></tr>
+<tr><th><a name="Function-Index_fn_letter-P">P</a></th><td></td><td></td></tr>
+<tr><td></td><td valign="top"><a href="#index-pcie_005faer_005finject_005ferror"><code>pcie_aer_inject_error</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#pcsys_005fmonitor">pcsys_monitor</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-pci_005fadd"><code>pci_add</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#pcsys_005fmonitor">pcsys_monitor</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-pci_005fdel"><code>pci_del</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#pcsys_005fmonitor">pcsys_monitor</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-pmemsave"><code>pmemsave</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#pcsys_005fmonitor">pcsys_monitor</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-print"><code>print</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#pcsys_005fmonitor">pcsys_monitor</a></td></tr>
+<tr><td colspan="4"> <hr></td></tr>
+<tr><th><a name="Function-Index_fn_letter-Q">Q</a></th><td></td><td></td></tr>
+<tr><td></td><td valign="top"><a href="#index-qemu_002dio"><code>qemu-io</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#pcsys_005fmonitor">pcsys_monitor</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-quit"><code>quit</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#pcsys_005fmonitor">pcsys_monitor</a></td></tr>
+<tr><td colspan="4"> <hr></td></tr>
+<tr><th><a name="Function-Index_fn_letter-R">R</a></th><td></td><td></td></tr>
+<tr><td></td><td valign="top"><a href="#index-ringbuf_005fread"><code>ringbuf_read</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#pcsys_005fmonitor">pcsys_monitor</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-ringbuf_005fwrite"><code>ringbuf_write</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#pcsys_005fmonitor">pcsys_monitor</a></td></tr>
+<tr><td colspan="4"> <hr></td></tr>
+<tr><th><a name="Function-Index_fn_letter-S">S</a></th><td></td><td></td></tr>
+<tr><td></td><td valign="top"><a href="#index-savevm"><code>savevm</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#pcsys_005fmonitor">pcsys_monitor</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-screendump"><code>screendump</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#pcsys_005fmonitor">pcsys_monitor</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-sendkey"><code>sendkey</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#pcsys_005fmonitor">pcsys_monitor</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-set_005flink"><code>set_link</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#pcsys_005fmonitor">pcsys_monitor</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-set_005fpassword"><code>set_password</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#pcsys_005fmonitor">pcsys_monitor</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-singlestep"><code>singlestep</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#pcsys_005fmonitor">pcsys_monitor</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-snapshot_005fblkdev"><code>snapshot_blkdev</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#pcsys_005fmonitor">pcsys_monitor</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-snapshot_005fblkdev_005finternal"><code>snapshot_blkdev_internal</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#pcsys_005fmonitor">pcsys_monitor</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-snapshot_005fdelete_005fblkdev_005finternal"><code>snapshot_delete_blkdev_internal</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#pcsys_005fmonitor">pcsys_monitor</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-stop"><code>stop</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#pcsys_005fmonitor">pcsys_monitor</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-stopcapture"><code>stopcapture</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#pcsys_005fmonitor">pcsys_monitor</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-sum"><code>sum</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#pcsys_005fmonitor">pcsys_monitor</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-system_005fpowerdown"><code>system_powerdown</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#pcsys_005fmonitor">pcsys_monitor</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-system_005freset"><code>system_reset</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#pcsys_005fmonitor">pcsys_monitor</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-system_005fwakeup"><code>system_wakeup</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#pcsys_005fmonitor">pcsys_monitor</a></td></tr>
+<tr><td colspan="4"> <hr></td></tr>
+<tr><th><a name="Function-Index_fn_letter-T">T</a></th><td></td><td></td></tr>
+<tr><td></td><td valign="top"><a href="#index-trace_002devent"><code>trace-event</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#pcsys_005fmonitor">pcsys_monitor</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-trace_002dfile"><code>trace-file</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#pcsys_005fmonitor">pcsys_monitor</a></td></tr>
+<tr><td colspan="4"> <hr></td></tr>
+<tr><th><a name="Function-Index_fn_letter-U">U</a></th><td></td><td></td></tr>
+<tr><td></td><td valign="top"><a href="#index-usb_005fadd"><code>usb_add</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#pcsys_005fmonitor">pcsys_monitor</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-usb_005fdel"><code>usb_del</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#pcsys_005fmonitor">pcsys_monitor</a></td></tr>
+<tr><td colspan="4"> <hr></td></tr>
+<tr><th><a name="Function-Index_fn_letter-W">W</a></th><td></td><td></td></tr>
+<tr><td></td><td valign="top"><a href="#index-watchdog_005faction"><code>watchdog_action</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#pcsys_005fmonitor">pcsys_monitor</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-wavcapture"><code>wavcapture</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#pcsys_005fmonitor">pcsys_monitor</a></td></tr>
+<tr><td colspan="4"> <hr></td></tr>
+<tr><th><a name="Function-Index_fn_letter-X">X</a></th><td></td><td></td></tr>
+<tr><td></td><td valign="top"><a href="#index-x"><code>x</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#pcsys_005fmonitor">pcsys_monitor</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-xp"><code>xp</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#pcsys_005fmonitor">pcsys_monitor</a></td></tr>
+<tr><td colspan="4"> <hr></td></tr>
+</table>
+<table><tr><th valign="top">Jump to: &nbsp; </th><td><a class="summary-letter" href="#Function-Index_fn_symbol-1"><b>-</b></a>
+ &nbsp; 
+<br>
+<a class="summary-letter" href="#Function-Index_fn_letter-A"><b>A</b></a>
+ &nbsp; 
+<a class="summary-letter" href="#Function-Index_fn_letter-B"><b>B</b></a>
+ &nbsp; 
+<a class="summary-letter" href="#Function-Index_fn_letter-C"><b>C</b></a>
+ &nbsp; 
+<a class="summary-letter" href="#Function-Index_fn_letter-D"><b>D</b></a>
+ &nbsp; 
+<a class="summary-letter" href="#Function-Index_fn_letter-E"><b>E</b></a>
+ &nbsp; 
+<a class="summary-letter" href="#Function-Index_fn_letter-G"><b>G</b></a>
+ &nbsp; 
+<a class="summary-letter" href="#Function-Index_fn_letter-H"><b>H</b></a>
+ &nbsp; 
+<a class="summary-letter" href="#Function-Index_fn_letter-I"><b>I</b></a>
+ &nbsp; 
+<a class="summary-letter" href="#Function-Index_fn_letter-L"><b>L</b></a>
+ &nbsp; 
+<a class="summary-letter" href="#Function-Index_fn_letter-M"><b>M</b></a>
+ &nbsp; 
+<a class="summary-letter" href="#Function-Index_fn_letter-N"><b>N</b></a>
+ &nbsp; 
+<a class="summary-letter" href="#Function-Index_fn_letter-O"><b>O</b></a>
+ &nbsp; 
+<a class="summary-letter" href="#Function-Index_fn_letter-P"><b>P</b></a>
+ &nbsp; 
+<a class="summary-letter" href="#Function-Index_fn_letter-Q"><b>Q</b></a>
+ &nbsp; 
+<a class="summary-letter" href="#Function-Index_fn_letter-R"><b>R</b></a>
+ &nbsp; 
+<a class="summary-letter" href="#Function-Index_fn_letter-S"><b>S</b></a>
+ &nbsp; 
+<a class="summary-letter" href="#Function-Index_fn_letter-T"><b>T</b></a>
+ &nbsp; 
+<a class="summary-letter" href="#Function-Index_fn_letter-U"><b>U</b></a>
+ &nbsp; 
+<a class="summary-letter" href="#Function-Index_fn_letter-W"><b>W</b></a>
+ &nbsp; 
+<a class="summary-letter" href="#Function-Index_fn_letter-X"><b>X</b></a>
+ &nbsp; 
+</td></tr></table>
+
+<hr>
+<a name="Keystroke-Index"></a>
+<a name="Keystroke-Index-1"></a>
+<h3 class="section">B.3 Keystroke Index</h3>
+
+<p>This is a list of all keystrokes which have a special function
+in system emulation.
+</p>
+<table><tr><th valign="top">Jump to: &nbsp; </th><td><a class="summary-letter" href="#Keystroke-Index_ky_letter-C"><b>C</b></a>
+ &nbsp; 
+</td></tr></table>
+<table class="index-ky" border="0">
+<tr><td></td><th align="left">Index Entry</th><td>&nbsp;</td><th align="left"> Section</th></tr>
+<tr><td colspan="4"> <hr></td></tr>
+<tr><th><a name="Keystroke-Index_ky_letter-C">C</a></th><td></td><td></td></tr>
+<tr><td></td><td valign="top"><a href="#index-Ctrl_002da-_003f"><code>Ctrl-a ?</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#pcsys_005fkeys">pcsys_keys</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-Ctrl_002da-a"><code>Ctrl-a a</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#pcsys_005fkeys">pcsys_keys</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-Ctrl_002da-b"><code>Ctrl-a b</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#pcsys_005fkeys">pcsys_keys</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-Ctrl_002da-c"><code>Ctrl-a c</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#pcsys_005fkeys">pcsys_keys</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-Ctrl_002da-h"><code>Ctrl-a h</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#pcsys_005fkeys">pcsys_keys</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-Ctrl_002da-h-1"><code>Ctrl-a h</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#pcsys_005fkeys">pcsys_keys</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-Ctrl_002da-s"><code>Ctrl-a s</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#pcsys_005fkeys">pcsys_keys</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-Ctrl_002da-t"><code>Ctrl-a t</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#pcsys_005fkeys">pcsys_keys</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-Ctrl_002da-x"><code>Ctrl-a x</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#pcsys_005fkeys">pcsys_keys</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-Ctrl_002dAlt"><code>Ctrl-Alt</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#pcsys_005fkeys">pcsys_keys</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-Ctrl_002dAlt_002d_002b"><code>Ctrl-Alt-+</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#pcsys_005fkeys">pcsys_keys</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-Ctrl_002dAlt_002d_002d"><code>Ctrl-Alt--</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#pcsys_005fkeys">pcsys_keys</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-Ctrl_002dAlt_002df"><code>Ctrl-Alt-f</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#pcsys_005fkeys">pcsys_keys</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-Ctrl_002dAlt_002dn"><code>Ctrl-Alt-n</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#pcsys_005fkeys">pcsys_keys</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-Ctrl_002dAlt_002du"><code>Ctrl-Alt-u</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#pcsys_005fkeys">pcsys_keys</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-Ctrl_002dDown"><code>Ctrl-Down</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#pcsys_005fkeys">pcsys_keys</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-Ctrl_002dPageDown"><code>Ctrl-PageDown</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#pcsys_005fkeys">pcsys_keys</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-Ctrl_002dPageUp"><code>Ctrl-PageUp</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#pcsys_005fkeys">pcsys_keys</a></td></tr>
+<tr><td></td><td valign="top"><a href="#index-Ctrl_002dUp"><code>Ctrl-Up</code></a>:</td><td>&nbsp;</td><td valign="top"><a href="#pcsys_005fkeys">pcsys_keys</a></td></tr>
+<tr><td colspan="4"> <hr></td></tr>
+</table>
+<table><tr><th valign="top">Jump to: &nbsp; </th><td><a class="summary-letter" href="#Keystroke-Index_ky_letter-C"><b>C</b></a>
+ &nbsp; 
+</td></tr></table>
+
+<hr>
+<a name="Program-Index"></a>
+<a name="Program-Index-1"></a>
+<h3 class="section">B.4 Program Index</h3>
+
+<hr>
+<a name="Data-Type-Index"></a>
+<a name="Data-Type-Index-1"></a>
+<h3 class="section">B.5 Data Type Index</h3>
+
+<p>This index could be used for qdev device names and options.
+</p>
+
+<hr>
+<a name="Variable-Index"></a>
+<a name="Variable-Index-1"></a>
+<h3 class="section">B.6 Variable Index</h3>
+
+<hr>
+
+
+
+</body>
+</html>
diff --git a/install/share/doc/qemu/qemu-tech.html b/install/share/doc/qemu/qemu-tech.html
new file mode 100644
index 0000000..f2d268e
--- /dev/null
+++ b/install/share/doc/qemu/qemu-tech.html
@@ -0,0 +1,803 @@
+<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
+<html>
+<!-- Created by GNU Texinfo 5.1, http://www.gnu.org/software/texinfo/ -->
+<head>
+<title>QEMU Internals</title>
+
+<meta name="description" content="QEMU Internals">
+<meta name="keywords" content="QEMU Internals">
+<meta name="resource-type" content="document">
+<meta name="distribution" content="global">
+<meta name="Generator" content="makeinfo">
+<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
+<link href="#Top" rel="start" title="Top">
+<link href="#Index" rel="index" title="Index">
+<link href="#SEC_Contents" rel="contents" title="Table of Contents">
+<link href="dir.html#Top" rel="up" title="(dir)">
+<style type="text/css">
+<!--
+a.summary-letter {text-decoration: none}
+blockquote.smallquotation {font-size: smaller}
+div.display {margin-left: 3.2em}
+div.example {margin-left: 3.2em}
+div.indentedblock {margin-left: 3.2em}
+div.lisp {margin-left: 3.2em}
+div.smalldisplay {margin-left: 3.2em}
+div.smallexample {margin-left: 3.2em}
+div.smallindentedblock {margin-left: 3.2em; font-size: smaller}
+div.smalllisp {margin-left: 3.2em}
+kbd {font-style:oblique}
+pre.display {font-family: inherit}
+pre.format {font-family: inherit}
+pre.menu-comment {font-family: serif}
+pre.menu-preformatted {font-family: serif}
+pre.smalldisplay {font-family: inherit; font-size: smaller}
+pre.smallexample {font-size: smaller}
+pre.smallformat {font-family: inherit; font-size: smaller}
+pre.smalllisp {font-size: smaller}
+span.nocodebreak {white-space:nowrap}
+span.nolinebreak {white-space:nowrap}
+span.roman {font-family:serif; font-weight:normal}
+span.sansserif {font-family:sans-serif; font-weight:normal}
+ul.no-bullet {list-style: none}
+-->
+</style>
+
+
+</head>
+
+<body lang="en" bgcolor="#FFFFFF" text="#000000" link="#0000FF" vlink="#800080" alink="#FF0000">
+<h1 class="settitle" align="center">QEMU Internals</h1>
+
+
+
+
+
+<a name="Top"></a>
+<a name="SEC_Top"></a>
+
+
+<a name="SEC_Contents"></a>
+<h2 class="contents-heading">Table of Contents</h2>
+
+<div class="contents">
+
+<ul class="no-bullet">
+  <li><a name="toc-Introduction-1" href="#Introduction">1 Introduction</a>
+  <ul class="no-bullet">
+    <li><a name="toc-Features" href="#intro_005ffeatures">1.1 Features</a></li>
+    <li><a name="toc-x86-and-x86_002d64-emulation" href="#intro_005fx86_005femulation">1.2 x86 and x86-64 emulation</a></li>
+    <li><a name="toc-ARM-emulation" href="#intro_005farm_005femulation">1.3 ARM emulation</a></li>
+    <li><a name="toc-MIPS-emulation" href="#intro_005fmips_005femulation">1.4 MIPS emulation</a></li>
+    <li><a name="toc-PowerPC-emulation" href="#intro_005fppc_005femulation">1.5 PowerPC emulation</a></li>
+    <li><a name="toc-Sparc32-and-Sparc64-emulation" href="#intro_005fsparc_005femulation">1.6 Sparc32 and Sparc64 emulation</a></li>
+    <li><a name="toc-Xtensa-emulation" href="#intro_005fxtensa_005femulation">1.7 Xtensa emulation</a></li>
+    <li><a name="toc-Other-CPU-emulation" href="#intro_005fother_005femulation">1.8 Other CPU emulation</a></li>
+  </ul></li>
+  <li><a name="toc-QEMU-Internals-1" href="#QEMU-Internals">2 QEMU Internals</a>
+  <ul class="no-bullet">
+    <li><a name="toc-QEMU-compared-to-other-emulators-1" href="#QEMU-compared-to-other-emulators">2.1 QEMU compared to other emulators</a></li>
+    <li><a name="toc-Portable-dynamic-translation-1" href="#Portable-dynamic-translation">2.2 Portable dynamic translation</a></li>
+    <li><a name="toc-Condition-code-optimisations-1" href="#Condition-code-optimisations">2.3 Condition code optimisations</a></li>
+    <li><a name="toc-CPU-state-optimisations-1" href="#CPU-state-optimisations">2.4 CPU state optimisations</a></li>
+    <li><a name="toc-Translation-cache-1" href="#Translation-cache">2.5 Translation cache</a></li>
+    <li><a name="toc-Direct-block-chaining-1" href="#Direct-block-chaining">2.6 Direct block chaining</a></li>
+    <li><a name="toc-Self_002dmodifying-code-and-translated-code-invalidation-1" href="#Self_002dmodifying-code-and-translated-code-invalidation">2.7 Self-modifying code and translated code invalidation</a></li>
+    <li><a name="toc-Exception-support-1" href="#Exception-support">2.8 Exception support</a></li>
+    <li><a name="toc-MMU-emulation-1" href="#MMU-emulation">2.9 MMU emulation</a></li>
+    <li><a name="toc-Device-emulation-1" href="#Device-emulation">2.10 Device emulation</a></li>
+    <li><a name="toc-Hardware-interrupts-1" href="#Hardware-interrupts">2.11 Hardware interrupts</a></li>
+    <li><a name="toc-User-emulation-specific-details-1" href="#User-emulation-specific-details">2.12 User emulation specific details</a>
+    <ul class="no-bullet">
+      <li><a name="toc-Linux-system-call-translation" href="#Linux-system-call-translation">2.12.1 Linux system call translation</a></li>
+      <li><a name="toc-Linux-signals" href="#Linux-signals">2.12.2 Linux signals</a></li>
+      <li><a name="toc-clone_0028_0029-system-call-and-threads" href="#clone_0028_0029-system-call-and-threads">2.12.3 clone() system call and threads</a></li>
+      <li><a name="toc-Self_002dvirtualization" href="#Self_002dvirtualization">2.12.4 Self-virtualization</a></li>
+    </ul></li>
+    <li><a name="toc-Bibliography-1" href="#Bibliography">2.13 Bibliography</a></li>
+  </ul></li>
+  <li><a name="toc-Regression-Tests-1" href="#Regression-Tests">3 Regression Tests</a>
+  <ul class="no-bullet">
+    <li><a name="toc-test_002di386-1" href="#test_002di386">3.1 <samp>test-i386</samp></a></li>
+    <li><a name="toc-linux_002dtest-1" href="#linux_002dtest">3.2 <samp>linux-test</samp></a></li>
+  </ul></li>
+  <li><a name="toc-Index-1" href="#Index">4 Index</a></li>
+</ul>
+</div>
+
+
+<hr>
+<a name="Introduction"></a>
+<a name="Introduction-1"></a>
+<h2 class="chapter">1 Introduction</h2>
+
+
+<hr>
+<a name="intro_005ffeatures"></a>
+<a name="Features"></a>
+<h3 class="section">1.1 Features</h3>
+
+<p>QEMU is a FAST! processor emulator using a portable dynamic
+translator.
+</p>
+<p>QEMU has two operating modes:
+</p>
+<ul class="no-bullet">
+<li>- Full system emulation. In this mode (full platform virtualization),
+QEMU emulates a full system (usually a PC), including a processor and
+various peripherals. It can be used to launch several different
+Operating Systems at once without rebooting the host machine or to
+debug system code.
+
+</li><li>- User mode emulation. In this mode (application level virtualization),
+QEMU can launch processes compiled for one CPU on another CPU, however
+the Operating Systems must match. This can be used for example to ease
+cross-compilation and cross-debugging.
+</li></ul>
+
+<p>As QEMU requires no host kernel driver to run, it is very safe and
+easy to use.
+</p>
+<p>QEMU generic features:
+</p>
+<ul>
+<li> User space only or full system emulation.
+
+</li><li> Using dynamic translation to native code for reasonable speed.
+
+</li><li> Working on x86, x86_64 and PowerPC32/64 hosts. Being tested on ARM,
+HPPA, Sparc32 and Sparc64. Previous versions had some support for
+Alpha and S390 hosts, but TCG (see below) doesn&rsquo;t support those yet.
+
+</li><li> Self-modifying code support.
+
+</li><li> Precise exceptions support.
+
+</li><li> Floating point library supporting both full software emulation and
+native host FPU instructions.
+
+</li></ul>
+
+<p>QEMU user mode emulation features:
+</p><ul>
+<li> Generic Linux system call converter, including most ioctls.
+
+</li><li> clone() emulation using native CPU clone() to use Linux scheduler for threads.
+
+</li><li> Accurate signal handling by remapping host signals to target signals.
+</li></ul>
+
+<p>Linux user emulator (Linux host only) can be used to launch the Wine
+Windows API emulator (<a href="http://www.winehq.org">http://www.winehq.org</a>). A BSD user emulator for BSD
+hosts is under development. It would also be possible to develop a
+similar user emulator for Solaris.
+</p>
+<p>QEMU full system emulation features:
+</p><ul>
+<li> QEMU uses a full software MMU for maximum portability.
+
+</li><li> QEMU can optionally use an in-kernel accelerator, like kvm. The accelerators 
+execute some of the guest code natively, while
+continuing to emulate the rest of the machine.
+
+</li><li> Various hardware devices can be emulated and in some cases, host
+devices (e.g. serial and parallel ports, USB, drives) can be used
+transparently by the guest Operating System. Host device passthrough
+can be used for talking to external physical peripherals (e.g. a
+webcam, modem or tape drive).
+
+</li><li> Symmetric multiprocessing (SMP) even on a host with a single CPU. On a
+SMP host system, QEMU can use only one CPU fully due to difficulty in
+implementing atomic memory accesses efficiently.
+
+</li></ul>
+
+<hr>
+<a name="intro_005fx86_005femulation"></a>
+<a name="x86-and-x86_002d64-emulation"></a>
+<h3 class="section">1.2 x86 and x86-64 emulation</h3>
+
+<p>QEMU x86 target features:
+</p>
+<ul>
+<li> The virtual x86 CPU supports 16 bit and 32 bit addressing with segmentation.
+LDT/GDT and IDT are emulated. VM86 mode is also supported to run
+DOSEMU. There is some support for MMX/3DNow!, SSE, SSE2, SSE3, SSSE3,
+and SSE4 as well as x86-64 SVM.
+
+</li><li> Support of host page sizes bigger than 4KB in user mode emulation.
+
+</li><li> QEMU can emulate itself on x86.
+
+</li><li> An extensive Linux x86 CPU test program is included <samp>tests/test-i386</samp>.
+It can be used to test other x86 virtual CPUs.
+
+</li></ul>
+
+<p>Current QEMU limitations:
+</p>
+<ul>
+<li> Limited x86-64 support.
+
+</li><li> IPC syscalls are missing.
+
+</li><li> The x86 segment limits and access rights are not tested at every
+memory access (yet). Hopefully, very few OSes seem to rely on that for
+normal use.
+
+</li></ul>
+
+<hr>
+<a name="intro_005farm_005femulation"></a>
+<a name="ARM-emulation"></a>
+<h3 class="section">1.3 ARM emulation</h3>
+
+<ul>
+<li> Full ARM 7 user emulation.
+
+</li><li> NWFPE FPU support included in user Linux emulation.
+
+</li><li> Can run most ARM Linux binaries.
+
+</li></ul>
+
+<hr>
+<a name="intro_005fmips_005femulation"></a>
+<a name="MIPS-emulation"></a>
+<h3 class="section">1.4 MIPS emulation</h3>
+
+<ul>
+<li> The system emulation allows full MIPS32/MIPS64 Release 2 emulation,
+including privileged instructions, FPU and MMU, in both little and big
+endian modes.
+
+</li><li> The Linux userland emulation can run many 32 bit MIPS Linux binaries.
+
+</li></ul>
+
+<p>Current QEMU limitations:
+</p>
+<ul>
+<li> Self-modifying code is not always handled correctly.
+
+</li><li> 64 bit userland emulation is not implemented.
+
+</li><li> The system emulation is not complete enough to run real firmware.
+
+</li><li> The watchpoint debug facility is not implemented.
+
+</li></ul>
+
+<hr>
+<a name="intro_005fppc_005femulation"></a>
+<a name="PowerPC-emulation"></a>
+<h3 class="section">1.5 PowerPC emulation</h3>
+
+<ul>
+<li> Full PowerPC 32 bit emulation, including privileged instructions,
+FPU and MMU.
+
+</li><li> Can run most PowerPC Linux binaries.
+
+</li></ul>
+
+<hr>
+<a name="intro_005fsparc_005femulation"></a>
+<a name="Sparc32-and-Sparc64-emulation"></a>
+<h3 class="section">1.6 Sparc32 and Sparc64 emulation</h3>
+
+<ul>
+<li> Full SPARC V8 emulation, including privileged
+instructions, FPU and MMU. SPARC V9 emulation includes most privileged
+and VIS instructions, FPU and I/D MMU. Alignment is fully enforced.
+
+</li><li> Can run most 32-bit SPARC Linux binaries, SPARC32PLUS Linux binaries and
+some 64-bit SPARC Linux binaries.
+
+</li></ul>
+
+<p>Current QEMU limitations:
+</p>
+<ul>
+<li> IPC syscalls are missing.
+
+</li><li> Floating point exception support is buggy.
+
+</li><li> Atomic instructions are not correctly implemented.
+
+</li><li> There are still some problems with Sparc64 emulators.
+
+</li></ul>
+
+<hr>
+<a name="intro_005fxtensa_005femulation"></a>
+<a name="Xtensa-emulation"></a>
+<h3 class="section">1.7 Xtensa emulation</h3>
+
+<ul>
+<li> Core Xtensa ISA emulation, including most options: code density,
+loop, extended L32R, 16- and 32-bit multiplication, 32-bit division,
+MAC16, miscellaneous operations, boolean, FP coprocessor, coprocessor
+context, debug, multiprocessor synchronization,
+conditional store, exceptions, relocatable vectors, unaligned exception,
+interrupts (including high priority and timer), hardware alignment,
+region protection, region translation, MMU, windowed registers, thread
+pointer, processor ID.
+
+</li><li> Not implemented options: data/instruction cache (including cache
+prefetch and locking), XLMI, processor interface. Also options not
+covered by the core ISA (e.g. FLIX, wide branches) are not implemented.
+
+</li><li> Can run most Xtensa Linux binaries.
+
+</li><li> New core configuration that requires no additional instructions
+may be created from overlay with minimal amount of hand-written code.
+
+</li></ul>
+
+<hr>
+<a name="intro_005fother_005femulation"></a>
+<a name="Other-CPU-emulation"></a>
+<h3 class="section">1.8 Other CPU emulation</h3>
+
+<p>In addition to the above, QEMU supports emulation of other CPUs with
+varying levels of success. These are:
+</p>
+<ul>
+<li> Alpha
+</li><li> CRIS
+</li><li> M68k
+</li><li> SH4
+</li></ul>
+
+<hr>
+<a name="QEMU-Internals"></a>
+<a name="QEMU-Internals-1"></a>
+<h2 class="chapter">2 QEMU Internals</h2>
+
+
+<hr>
+<a name="QEMU-compared-to-other-emulators"></a>
+<a name="QEMU-compared-to-other-emulators-1"></a>
+<h3 class="section">2.1 QEMU compared to other emulators</h3>
+
+<p>Like bochs [3], QEMU emulates an x86 CPU. But QEMU is much faster than
+bochs as it uses dynamic compilation. Bochs is closely tied to x86 PC
+emulation while QEMU can emulate several processors.
+</p>
+<p>Like Valgrind [2], QEMU does user space emulation and dynamic
+translation. Valgrind is mainly a memory debugger while QEMU has no
+support for it (QEMU could be used to detect out of bound memory
+accesses as Valgrind, but it has no support to track uninitialised data
+as Valgrind does). The Valgrind dynamic translator generates better code
+than QEMU (in particular it does register allocation) but it is closely
+tied to an x86 host and target and has no support for precise exceptions
+and system emulation.
+</p>
+<p>EM86 [4] is the closest project to user space QEMU (and QEMU still uses
+some of its code, in particular the ELF file loader). EM86 was limited
+to an alpha host and used a proprietary and slow interpreter (the
+interpreter part of the FX!32 Digital Win32 code translator [5]).
+</p>
+<p>TWIN [6] is a Windows API emulator like Wine. It is less accurate than
+Wine but includes a protected mode x86 interpreter to launch x86 Windows
+executables. Such an approach has greater potential because most of the
+Windows API is executed natively but it is far more difficult to develop
+because all the data structures and function parameters exchanged
+between the API and the x86 code must be converted.
+</p>
+<p>User mode Linux [7] was the only solution before QEMU to launch a
+Linux kernel as a process while not needing any host kernel
+patches. However, user mode Linux requires heavy kernel patches while
+QEMU accepts unpatched Linux kernels. The price to pay is that QEMU is
+slower.
+</p>
+<p>The Plex86 [8] PC virtualizer is done in the same spirit as the now
+obsolete qemu-fast system emulator. It requires a patched Linux kernel
+to work (you cannot launch the same kernel on your PC), but the
+patches are really small. As it is a PC virtualizer (no emulation is
+done except for some privileged instructions), it has the potential of
+being faster than QEMU. The downside is that a complicated (and
+potentially unsafe) host kernel patch is needed.
+</p>
+<p>The commercial PC Virtualizers (VMWare [9], VirtualPC [10], TwoOStwo
+[11]) are faster than QEMU, but they all need specific, proprietary
+and potentially unsafe host drivers. Moreover, they are unable to
+provide cycle exact simulation as an emulator can.
+</p>
+<p>VirtualBox [12], Xen [13] and KVM [14] are based on QEMU. QEMU-SystemC
+[15] uses QEMU to simulate a system where some hardware devices are
+developed in SystemC.
+</p>
+<hr>
+<a name="Portable-dynamic-translation"></a>
+<a name="Portable-dynamic-translation-1"></a>
+<h3 class="section">2.2 Portable dynamic translation</h3>
+
+<p>QEMU is a dynamic translator. When it first encounters a piece of code,
+it converts it to the host instruction set. Usually dynamic translators
+are very complicated and highly CPU dependent. QEMU uses some tricks
+which make it relatively easily portable and simple while achieving good
+performances.
+</p>
+<p>After the release of version 0.9.1, QEMU switched to a new method of
+generating code, Tiny Code Generator or TCG. TCG relaxes the
+dependency on the exact version of the compiler used. The basic idea
+is to split every target instruction into a couple of RISC-like TCG
+ops (see <code>target-i386/translate.c</code>). Some optimizations can be
+performed at this stage, including liveness analysis and trivial
+constant expression evaluation. TCG ops are then implemented in the
+host CPU back end, also known as TCG target (see
+<code>tcg/i386/tcg-target.c</code>). For more information, please take a
+look at <code>tcg/README</code>.
+</p>
+<hr>
+<a name="Condition-code-optimisations"></a>
+<a name="Condition-code-optimisations-1"></a>
+<h3 class="section">2.3 Condition code optimisations</h3>
+
+<p>Lazy evaluation of CPU condition codes (<code>EFLAGS</code> register on x86)
+is important for CPUs where every instruction sets the condition
+codes. It tends to be less important on conventional RISC systems
+where condition codes are only updated when explicitly requested. On
+Sparc64, costly update of both 32 and 64 bit condition codes can be
+avoided with lazy evaluation.
+</p>
+<p>Instead of computing the condition codes after each x86 instruction,
+QEMU just stores one operand (called <code>CC_SRC</code>), the result
+(called <code>CC_DST</code>) and the type of operation (called
+<code>CC_OP</code>). When the condition codes are needed, the condition
+codes can be calculated using this information. In addition, an
+optimized calculation can be performed for some instruction types like
+conditional branches.
+</p>
+<p><code>CC_OP</code> is almost never explicitly set in the generated code
+because it is known at translation time.
+</p>
+<p>The lazy condition code evaluation is used on x86, m68k, cris and
+Sparc. ARM uses a simplified variant for the N and Z flags.
+</p>
+<hr>
+<a name="CPU-state-optimisations"></a>
+<a name="CPU-state-optimisations-1"></a>
+<h3 class="section">2.4 CPU state optimisations</h3>
+
+<p>The target CPUs have many internal states which change the way it
+evaluates instructions. In order to achieve a good speed, the
+translation phase considers that some state information of the virtual
+CPU cannot change in it. The state is recorded in the Translation
+Block (TB). If the state changes (e.g. privilege level), a new TB will
+be generated and the previous TB won&rsquo;t be used anymore until the state
+matches the state recorded in the previous TB. For example, if the SS,
+DS and ES segments have a zero base, then the translator does not even
+generate an addition for the segment base.
+</p>
+<p>[The FPU stack pointer register is not handled that way yet].
+</p>
+<hr>
+<a name="Translation-cache"></a>
+<a name="Translation-cache-1"></a>
+<h3 class="section">2.5 Translation cache</h3>
+
+<p>A 32 MByte cache holds the most recently used translations. For
+simplicity, it is completely flushed when it is full. A translation unit
+contains just a single basic block (a block of x86 instructions
+terminated by a jump or by a virtual CPU state change which the
+translator cannot deduce statically).
+</p>
+<hr>
+<a name="Direct-block-chaining"></a>
+<a name="Direct-block-chaining-1"></a>
+<h3 class="section">2.6 Direct block chaining</h3>
+
+<p>After each translated basic block is executed, QEMU uses the simulated
+Program Counter (PC) and other cpu state informations (such as the CS
+segment base value) to find the next basic block.
+</p>
+<p>In order to accelerate the most common cases where the new simulated PC
+is known, QEMU can patch a basic block so that it jumps directly to the
+next one.
+</p>
+<p>The most portable code uses an indirect jump. An indirect jump makes
+it easier to make the jump target modification atomic. On some host
+architectures (such as x86 or PowerPC), the <code>JUMP</code> opcode is
+directly patched so that the block chaining has no overhead.
+</p>
+<hr>
+<a name="Self_002dmodifying-code-and-translated-code-invalidation"></a>
+<a name="Self_002dmodifying-code-and-translated-code-invalidation-1"></a>
+<h3 class="section">2.7 Self-modifying code and translated code invalidation</h3>
+
+<p>Self-modifying code is a special challenge in x86 emulation because no
+instruction cache invalidation is signaled by the application when code
+is modified.
+</p>
+<p>When translated code is generated for a basic block, the corresponding
+host page is write protected if it is not already read-only. Then, if
+a write access is done to the page, Linux raises a SEGV signal. QEMU
+then invalidates all the translated code in the page and enables write
+accesses to the page.
+</p>
+<p>Correct translated code invalidation is done efficiently by maintaining
+a linked list of every translated block contained in a given page. Other
+linked lists are also maintained to undo direct block chaining.
+</p>
+<p>On RISC targets, correctly written software uses memory barriers and
+cache flushes, so some of the protection above would not be
+necessary. However, QEMU still requires that the generated code always
+matches the target instructions in memory in order to handle
+exceptions correctly.
+</p>
+<hr>
+<a name="Exception-support"></a>
+<a name="Exception-support-1"></a>
+<h3 class="section">2.8 Exception support</h3>
+
+<p>longjmp() is used when an exception such as division by zero is
+encountered.
+</p>
+<p>The host SIGSEGV and SIGBUS signal handlers are used to get invalid
+memory accesses. The simulated program counter is found by
+retranslating the corresponding basic block and by looking where the
+host program counter was at the exception point.
+</p>
+<p>The virtual CPU cannot retrieve the exact <code>EFLAGS</code> register because
+in some cases it is not computed because of condition code
+optimisations. It is not a big concern because the emulated code can
+still be restarted in any cases.
+</p>
+<hr>
+<a name="MMU-emulation"></a>
+<a name="MMU-emulation-1"></a>
+<h3 class="section">2.9 MMU emulation</h3>
+
+<p>For system emulation QEMU supports a soft MMU. In that mode, the MMU
+virtual to physical address translation is done at every memory
+access. QEMU uses an address translation cache to speed up the
+translation.
+</p>
+<p>In order to avoid flushing the translated code each time the MMU
+mappings change, QEMU uses a physically indexed translation cache. It
+means that each basic block is indexed with its physical address.
+</p>
+<p>When MMU mappings change, only the chaining of the basic blocks is
+reset (i.e. a basic block can no longer jump directly to another one).
+</p>
+<hr>
+<a name="Device-emulation"></a>
+<a name="Device-emulation-1"></a>
+<h3 class="section">2.10 Device emulation</h3>
+
+<p>Systems emulated by QEMU are organized by boards. At initialization
+phase, each board instantiates a number of CPUs, devices, RAM and
+ROM. Each device in turn can assign I/O ports or memory areas (for
+MMIO) to its handlers. When the emulation starts, an access to the
+ports or MMIO memory areas assigned to the device causes the
+corresponding handler to be called.
+</p>
+<p>RAM and ROM are handled more optimally, only the offset to the host
+memory needs to be added to the guest address.
+</p>
+<p>The video RAM of VGA and other display cards is special: it can be
+read or written directly like RAM, but write accesses cause the memory
+to be marked with VGA_DIRTY flag as well.
+</p>
+<p>QEMU supports some device classes like serial and parallel ports, USB,
+drives and network devices, by providing APIs for easier connection to
+the generic, higher level implementations. The API hides the
+implementation details from the devices, like native device use or
+advanced block device formats like QCOW.
+</p>
+<p>Usually the devices implement a reset method and register support for
+saving and loading of the device state. The devices can also use
+timers, especially together with the use of bottom halves (BHs).
+</p>
+<hr>
+<a name="Hardware-interrupts"></a>
+<a name="Hardware-interrupts-1"></a>
+<h3 class="section">2.11 Hardware interrupts</h3>
+
+<p>In order to be faster, QEMU does not check at every basic block if a
+hardware interrupt is pending. Instead, the user must asynchronously
+call a specific function to tell that an interrupt is pending. This
+function resets the chaining of the currently executing basic
+block. It ensures that the execution will return soon in the main loop
+of the CPU emulator. Then the main loop can test if the interrupt is
+pending and handle it.
+</p>
+<hr>
+<a name="User-emulation-specific-details"></a>
+<a name="User-emulation-specific-details-1"></a>
+<h3 class="section">2.12 User emulation specific details</h3>
+
+<a name="Linux-system-call-translation"></a>
+<h4 class="subsection">2.12.1 Linux system call translation</h4>
+
+<p>QEMU includes a generic system call translator for Linux. It means that
+the parameters of the system calls can be converted to fix the
+endianness and 32/64 bit issues. The IOCTLs are converted with a generic
+type description system (see <samp>ioctls.h</samp> and <samp>thunk.c</samp>).
+</p>
+<p>QEMU supports host CPUs which have pages bigger than 4KB. It records all
+the mappings the process does and try to emulated the <code>mmap()</code>
+system calls in cases where the host <code>mmap()</code> call would fail
+because of bad page alignment.
+</p>
+<a name="Linux-signals"></a>
+<h4 class="subsection">2.12.2 Linux signals</h4>
+
+<p>Normal and real-time signals are queued along with their information
+(<code>siginfo_t</code>) as it is done in the Linux kernel. Then an interrupt
+request is done to the virtual CPU. When it is interrupted, one queued
+signal is handled by generating a stack frame in the virtual CPU as the
+Linux kernel does. The <code>sigreturn()</code> system call is emulated to return
+from the virtual signal handler.
+</p>
+<p>Some signals (such as SIGALRM) directly come from the host. Other
+signals are synthesized from the virtual CPU exceptions such as SIGFPE
+when a division by zero is done (see <code>main.c:cpu_loop()</code>).
+</p>
+<p>The blocked signal mask is still handled by the host Linux kernel so
+that most signal system calls can be redirected directly to the host
+Linux kernel. Only the <code>sigaction()</code> and <code>sigreturn()</code> system
+calls need to be fully emulated (see <samp>signal.c</samp>).
+</p>
+<a name="clone_0028_0029-system-call-and-threads"></a>
+<h4 class="subsection">2.12.3 clone() system call and threads</h4>
+
+<p>The Linux clone() system call is usually used to create a thread. QEMU
+uses the host clone() system call so that real host threads are created
+for each emulated thread. One virtual CPU instance is created for each
+thread.
+</p>
+<p>The virtual x86 CPU atomic operations are emulated with a global lock so
+that their semantic is preserved.
+</p>
+<p>Note that currently there are still some locking issues in QEMU. In
+particular, the translated cache flush is not protected yet against
+reentrancy.
+</p>
+<a name="Self_002dvirtualization"></a>
+<h4 class="subsection">2.12.4 Self-virtualization</h4>
+
+<p>QEMU was conceived so that ultimately it can emulate itself. Although
+it is not very useful, it is an important test to show the power of the
+emulator.
+</p>
+<p>Achieving self-virtualization is not easy because there may be address
+space conflicts. QEMU user emulators solve this problem by being an
+executable ELF shared object as the ld-linux.so ELF interpreter. That
+way, it can be relocated at load time.
+</p>
+<hr>
+<a name="Bibliography"></a>
+<a name="Bibliography-1"></a>
+<h3 class="section">2.13 Bibliography</h3>
+
+<dl compact="compact">
+<dt>[1]</dt>
+<dd><p><a href="http://citeseer.nj.nec.com/piumarta98optimizing.html">http://citeseer.nj.nec.com/piumarta98optimizing.html</a>, Optimizing
+direct threaded code by selective inlining (1998) by Ian Piumarta, Fabio
+Riccardi.
+</p>
+</dd>
+<dt>[2]</dt>
+<dd><p><a href="http://developer.kde.org/~sewardj/">http://developer.kde.org/~sewardj/</a>, Valgrind, an open-source
+memory debugger for x86-GNU/Linux, by Julian Seward.
+</p>
+</dd>
+<dt>[3]</dt>
+<dd><p><a href="http://bochs.sourceforge.net/">http://bochs.sourceforge.net/</a>, the Bochs IA-32 Emulator Project,
+by Kevin Lawton et al.
+</p>
+</dd>
+<dt>[4]</dt>
+<dd><p><a href="http://www.cs.rose-hulman.edu/~donaldlf/em86/index.html">http://www.cs.rose-hulman.edu/~donaldlf/em86/index.html</a>, the EM86
+x86 emulator on Alpha-Linux.
+</p>
+</dd>
+<dt>[5]</dt>
+<dd><p><a href="http://www.usenix.org/publications/library/proceedings/usenix-nt97/full_papers/chernoff/chernoff.pdf">http://www.usenix.org/publications/library/proceedings/usenix-nt97/full_papers/chernoff/chernoff.pdf</a>,
+DIGITAL FX!32: Running 32-Bit x86 Applications on Alpha NT, by Anton
+Chernoff and Ray Hookway.
+</p>
+</dd>
+<dt>[6]</dt>
+<dd><p><a href="http://www.willows.com/">http://www.willows.com/</a>, Windows API library emulation from
+Willows Software.
+</p>
+</dd>
+<dt>[7]</dt>
+<dd><p><a href="http://user-mode-linux.sourceforge.net/">http://user-mode-linux.sourceforge.net/</a>,
+The User-mode Linux Kernel.
+</p>
+</dd>
+<dt>[8]</dt>
+<dd><p><a href="http://www.plex86.org/">http://www.plex86.org/</a>,
+The new Plex86 project.
+</p>
+</dd>
+<dt>[9]</dt>
+<dd><p><a href="http://www.vmware.com/">http://www.vmware.com/</a>,
+The VMWare PC virtualizer.
+</p>
+</dd>
+<dt>[10]</dt>
+<dd><p><a href="http://www.microsoft.com/windowsxp/virtualpc/">http://www.microsoft.com/windowsxp/virtualpc/</a>,
+The VirtualPC PC virtualizer.
+</p>
+</dd>
+<dt>[11]</dt>
+<dd><p><a href="http://www.twoostwo.org/">http://www.twoostwo.org/</a>,
+The TwoOStwo PC virtualizer.
+</p>
+</dd>
+<dt>[12]</dt>
+<dd><p><a href="http://virtualbox.org/">http://virtualbox.org/</a>,
+The VirtualBox PC virtualizer.
+</p>
+</dd>
+<dt>[13]</dt>
+<dd><p><a href="http://www.xen.org/">http://www.xen.org/</a>,
+The Xen hypervisor.
+</p>
+</dd>
+<dt>[14]</dt>
+<dd><p><a href="http://kvm.qumranet.com/kvmwiki/Front_Page">http://kvm.qumranet.com/kvmwiki/Front_Page</a>,
+Kernel Based Virtual Machine (KVM).
+</p>
+</dd>
+<dt>[15]</dt>
+<dd><p><a href="http://www.greensocs.com/projects/QEMUSystemC">http://www.greensocs.com/projects/QEMUSystemC</a>,
+QEMU-SystemC, a hardware co-simulator.
+</p>
+</dd>
+</dl>
+
+<hr>
+<a name="Regression-Tests"></a>
+<a name="Regression-Tests-1"></a>
+<h2 class="chapter">3 Regression Tests</h2>
+
+<p>In the directory <samp>tests/</samp>, various interesting testing programs
+are available. They are used for regression testing.
+</p>
+
+<hr>
+<a name="test_002di386"></a>
+<a name="test_002di386-1"></a>
+<h3 class="section">3.1 <samp>test-i386</samp></h3>
+
+<p>This program executes most of the 16 bit and 32 bit x86 instructions and
+generates a text output. It can be compared with the output obtained with
+a real CPU or another emulator. The target <code>make test</code> runs this
+program and a <code>diff</code> on the generated output.
+</p>
+<p>The Linux system call <code>modify_ldt()</code> is used to create x86 selectors
+to test some 16 bit addressing and 32 bit with segmentation cases.
+</p>
+<p>The Linux system call <code>vm86()</code> is used to test vm86 emulation.
+</p>
+<p>Various exceptions are raised to test most of the x86 user space
+exception reporting.
+</p>
+<hr>
+<a name="linux_002dtest"></a>
+<a name="linux_002dtest-1"></a>
+<h3 class="section">3.2 <samp>linux-test</samp></h3>
+
+<p>This program tests various Linux system calls. It is used to verify
+that the system call parameters are correctly converted between target
+and host CPUs.
+</p>
+<hr>
+<a name="Index"></a>
+<a name="Index-1"></a>
+<h2 class="chapter">4 Index</h2>
+
+<hr>
+
+
+
+</body>
+</html>
diff --git a/install/share/doc/qemu/qmp-commands.txt b/install/share/doc/qemu/qmp-commands.txt
new file mode 100644
index 0000000..1d193a4
--- /dev/null
+++ b/install/share/doc/qemu/qmp-commands.txt
@@ -0,0 +1,2793 @@
+                        QMP Supported Commands
+                        ----------------------
+
+This document describes all commands currently supported by QMP.
+
+Most of the time their usage is exactly the same as in the user Monitor, this
+means that any other document which also describe commands (the manpage,
+QEMU's manual, etc) can and should be consulted.
+
+QMP has two types of commands: regular and query commands. Regular commands
+usually change the Virtual Machine's state someway, while query commands just
+return information. The sections below are divided accordingly.
+
+It's important to observe that all communication examples are formatted in
+a reader-friendly way, so that they're easier to understand. However, in real
+protocol usage, they're emitted as a single line.
+
+Also, the following notation is used to denote data flow:
+
+-> data issued by the Client
+<- Server data response
+
+Please, refer to the QMP specification (QMP/qmp-spec.txt) for detailed
+information on the Server command and response formats.
+
+NOTE: This document is temporary and will be replaced soon.
+
+1. Stability Considerations
+===========================
+
+The current QMP command set (described in this file) may be useful for a
+number of use cases, however it's limited and several commands have bad
+defined semantics, specially with regard to command completion.
+
+These problems are going to be solved incrementally in the next QEMU releases
+and we're going to establish a deprecation policy for badly defined commands.
+
+If you're planning to adopt QMP, please observe the following:
+
+    1. The deprecation policy will take effect and be documented soon, please
+       check the documentation of each used command as soon as a new release of
+       QEMU is available
+
+    2. DO NOT rely on anything which is not explicit documented
+
+    3. Errors, in special, are not documented. Applications should NOT check
+       for specific errors classes or data (it's strongly recommended to only
+       check for the "error" key)
+
+2. Regular Commands
+===================
+
+Server's responses in the examples below are always a success response, please
+refer to the QMP specification for more details on error responses.
+
+quit
+----
+
+Quit the emulator.
+
+Arguments: None.
+
+Example:
+
+-> { "execute": "quit" }
+<- { "return": {} }
+
+eject
+-----
+
+Eject a removable medium.
+
+Arguments: 
+
+- force: force ejection (json-bool, optional)
+- device: device name (json-string)
+
+Example:
+
+-> { "execute": "eject", "arguments": { "device": "ide1-cd0" } }
+<- { "return": {} }
+
+Note: The "force" argument defaults to false.
+
+change
+------
+
+Change a removable medium or VNC configuration.
+
+Arguments:
+
+- "device": device name (json-string)
+- "target": filename or item (json-string)
+- "arg": additional argument (json-string, optional)
+
+Examples:
+
+1. Change a removable medium
+
+-> { "execute": "change",
+             "arguments": { "device": "ide1-cd0",
+                            "target": "/srv/images/Fedora-12-x86_64-DVD.iso" } }
+<- { "return": {} }
+
+2. Change VNC password
+
+-> { "execute": "change",
+             "arguments": { "device": "vnc", "target": "password",
+                            "arg": "foobar1" } }
+<- { "return": {} }
+
+screendump
+----------
+
+Save screen into PPM image.
+
+Arguments:
+
+- "filename": file path (json-string)
+
+Example:
+
+-> { "execute": "screendump", "arguments": { "filename": "/tmp/image" } }
+<- { "return": {} }
+
+stop
+----
+
+Stop the emulator.
+
+Arguments: None.
+
+Example:
+
+-> { "execute": "stop" }
+<- { "return": {} }
+
+cont
+----
+
+Resume emulation.
+
+Arguments: None.
+
+Example:
+
+-> { "execute": "cont" }
+<- { "return": {} }
+
+system_wakeup
+-------------
+
+Wakeup guest from suspend.
+
+Arguments: None.
+
+Example:
+
+-> { "execute": "system_wakeup" }
+<- { "return": {} }
+
+system_reset
+------------
+
+Reset the system.
+
+Arguments: None.
+
+Example:
+
+-> { "execute": "system_reset" }
+<- { "return": {} }
+
+system_powerdown
+----------------
+
+Send system power down event.
+
+Arguments: None.
+
+Example:
+
+-> { "execute": "system_powerdown" }
+<- { "return": {} }
+
+device_add
+----------
+
+Add a device.
+
+Arguments:
+
+- "driver": the name of the new device's driver (json-string)
+- "bus": the device's parent bus (device tree path, json-string, optional)
+- "id": the device's ID, must be unique (json-string)
+- device properties
+
+Example:
+
+-> { "execute": "device_add", "arguments": { "driver": "e1000", "id": "net1" } }
+<- { "return": {} }
+
+Notes:
+
+(1) For detailed information about this command, please refer to the
+    'docs/qdev-device-use.txt' file.
+
+(2) It's possible to list device properties by running QEMU with the
+    "-device DEVICE,\?" command-line argument, where DEVICE is the device's name
+
+device_del
+----------
+
+Remove a device.
+
+Arguments:
+
+- "id": the device's ID (json-string)
+
+Example:
+
+-> { "execute": "device_del", "arguments": { "id": "net1" } }
+<- { "return": {} }
+
+send-key
+----------
+
+Send keys to VM.
+
+Arguments:
+
+keys array:
+    - "key": key sequence (a json-array of key union values,
+             union can be number or qcode enum)
+
+- hold-time: time to delay key up events, milliseconds. Defaults to 100
+             (json-int, optional)
+
+Example:
+
+-> { "execute": "send-key",
+     "arguments": { "keys": [ { "type": "qcode", "data": "ctrl" },
+                              { "type": "qcode", "data": "alt" },
+                              { "type": "qcode", "data": "delete" } ] } }
+<- { "return": {} }
+
+cpu
+---
+
+Set the default CPU.
+
+Arguments:
+
+- "index": the CPU's index (json-int)
+
+Example:
+
+-> { "execute": "cpu", "arguments": { "index": 0 } }
+<- { "return": {} }
+
+Note: CPUs' indexes are obtained with the 'query-cpus' command.
+
+cpu-add
+-------
+
+Adds virtual cpu
+
+Arguments:
+
+- "id": cpu id (json-int)
+
+Example:
+
+-> { "execute": "cpu-add", "arguments": { "id": 2 } }
+<- { "return": {} }
+
+memsave
+-------
+
+Save to disk virtual memory dump starting at 'val' of size 'size'.
+
+Arguments:
+
+- "val": the starting address (json-int)
+- "size": the memory size, in bytes (json-int)
+- "filename": file path (json-string)
+- "cpu": virtual CPU index (json-int, optional)
+
+Example:
+
+-> { "execute": "memsave",
+             "arguments": { "val": 10,
+                            "size": 100,
+                            "filename": "/tmp/virtual-mem-dump" } }
+<- { "return": {} }
+
+pmemsave
+--------
+
+Save to disk physical memory dump starting at 'val' of size 'size'.
+
+Arguments:
+
+- "val": the starting address (json-int)
+- "size": the memory size, in bytes (json-int)
+- "filename": file path (json-string)
+
+Example:
+
+-> { "execute": "pmemsave",
+             "arguments": { "val": 10,
+                            "size": 100,
+                            "filename": "/tmp/physical-mem-dump" } }
+<- { "return": {} }
+
+inject-nmi
+----------
+
+Inject an NMI on guest's CPUs.
+
+Arguments: None.
+
+Example:
+
+-> { "execute": "inject-nmi" }
+<- { "return": {} }
+
+Note: inject-nmi fails when the guest doesn't support injecting.
+      Currently, only x86 (NMI) and s390x (RESTART) guests do.
+
+ringbuf-write
+-------------
+
+Write to a ring buffer character device.
+
+Arguments:
+
+- "device": ring buffer character device name (json-string)
+- "data": data to write (json-string)
+- "format": data format (json-string, optional)
+          - Possible values: "utf8" (default), "base64"
+            Bug: invalid base64 is currently not rejected.
+            Whitespace *is* invalid.
+
+Example:
+
+-> { "execute": "ringbuf-write",
+                "arguments": { "device": "foo",
+                               "data": "abcdefgh",
+                               "format": "utf8" } }
+<- { "return": {} }
+
+ringbuf-read
+-------------
+
+Read from a ring buffer character device.
+
+Arguments:
+
+- "device": ring buffer character device name (json-string)
+- "size": how many bytes to read at most (json-int)
+          - Number of data bytes, not number of characters in encoded data
+- "format": data format (json-string, optional)
+          - Possible values: "utf8" (default), "base64"
+          - Naturally, format "utf8" works only when the ring buffer
+            contains valid UTF-8 text.  Invalid UTF-8 sequences get
+            replaced.  Bug: replacement doesn't work.  Bug: can screw
+            up on encountering NUL characters, after the ring buffer
+            lost data, and when reading stops because the size limit
+            is reached.
+
+Example:
+
+-> { "execute": "ringbuf-read",
+                "arguments": { "device": "foo",
+                               "size": 1000,
+                               "format": "utf8" } }
+<- {"return": "abcdefgh"}
+
+xen-save-devices-state
+-------
+
+Save the state of all devices to file. The RAM and the block devices
+of the VM are not saved by this command.
+
+Arguments:
+
+- "filename": the file to save the state of the devices to as binary
+data. See xen-save-devices-state.txt for a description of the binary
+format.
+
+Example:
+
+-> { "execute": "xen-save-devices-state",
+     "arguments": { "filename": "/tmp/save" } }
+<- { "return": {} }
+
+xen-set-global-dirty-log
+-------
+
+Enable or disable the global dirty log mode.
+
+Arguments:
+
+- "enable": Enable it or disable it.
+
+Example:
+
+-> { "execute": "xen-set-global-dirty-log",
+     "arguments": { "enable": true } }
+<- { "return": {} }
+
+migrate
+-------
+
+Migrate to URI.
+
+Arguments:
+
+- "blk": block migration, full disk copy (json-bool, optional)
+- "inc": incremental disk copy (json-bool, optional)
+- "uri": Destination URI (json-string)
+
+Example:
+
+-> { "execute": "migrate", "arguments": { "uri": "tcp:0:4446" } }
+<- { "return": {} }
+
+Notes:
+
+(1) The 'query-migrate' command should be used to check migration's progress
+    and final result (this information is provided by the 'status' member)
+(2) All boolean arguments default to false
+(3) The user Monitor's "detach" argument is invalid in QMP and should not
+    be used
+
+migrate_cancel
+--------------
+
+Cancel the current migration.
+
+Arguments: None.
+
+Example:
+
+-> { "execute": "migrate_cancel" }
+<- { "return": {} }
+
+migrate-set-cache-size
+----------------------
+
+Set cache size to be used by XBZRLE migration, the cache size will be rounded
+down to the nearest power of 2
+
+Arguments:
+
+- "value": cache size in bytes (json-int)
+
+Example:
+
+-> { "execute": "migrate-set-cache-size", "arguments": { "value": 536870912 } }
+<- { "return": {} }
+
+query-migrate-cache-size
+------------------------
+
+Show cache size to be used by XBZRLE migration
+
+returns a json-object with the following information:
+- "size" : json-int
+
+Example:
+
+-> { "execute": "query-migrate-cache-size" }
+<- { "return": 67108864 }
+
+migrate_set_speed
+-----------------
+
+Set maximum speed for migrations.
+
+Arguments:
+
+- "value": maximum speed, in bytes per second (json-int)
+
+Example:
+
+-> { "execute": "migrate_set_speed", "arguments": { "value": 1024 } }
+<- { "return": {} }
+
+migrate_set_downtime
+--------------------
+
+Set maximum tolerated downtime (in seconds) for migrations.
+
+Arguments:
+
+- "value": maximum downtime (json-number)
+
+Example:
+
+-> { "execute": "migrate_set_downtime", "arguments": { "value": 0.1 } }
+<- { "return": {} }
+
+client_migrate_info
+------------------
+
+Set the spice/vnc connection info for the migration target.  The spice/vnc
+server will ask the spice/vnc client to automatically reconnect using the
+new parameters (if specified) once the vm migration finished successfully.
+
+Arguments:
+
+- "protocol":     protocol: "spice" or "vnc" (json-string)
+- "hostname":     migration target hostname (json-string)
+- "port":         spice/vnc tcp port for plaintext channels (json-int, optional)
+- "tls-port":     spice tcp port for tls-secured channels (json-int, optional)
+- "cert-subject": server certificate subject (json-string, optional)
+
+Example:
+
+-> { "execute": "client_migrate_info",
+     "arguments": { "protocol": "spice",
+                    "hostname": "virt42.lab.kraxel.org",
+                    "port": 1234 } }
+<- { "return": {} }
+
+dump
+
+
+Dump guest memory to file. The file can be processed with crash or gdb.
+
+Arguments:
+
+- "paging": do paging to get guest's memory mapping (json-bool)
+- "protocol": destination file(started with "file:") or destination file
+              descriptor (started with "fd:") (json-string)
+- "begin": the starting physical address. It's optional, and should be specified
+           with length together (json-int)
+- "length": the memory size, in bytes. It's optional, and should be specified
+            with begin together (json-int)
+- "format": the format of guest memory dump. It's optional, and can be
+            elf|kdump-zlib|kdump-lzo|kdump-snappy, but non-elf formats will
+            conflict with paging and filter, ie. begin and length (json-string)
+
+Example:
+
+-> { "execute": "dump-guest-memory", "arguments": { "protocol": "fd:dump" } }
+<- { "return": {} }
+
+Notes:
+
+(1) All boolean arguments default to false
+
+query-dump-guest-memory-capability
+----------
+
+Show available formats for 'dump-guest-memory'
+
+Example:
+
+-> { "execute": "query-dump-guest-memory-capability" }
+<- { "return": { "formats":
+                    ["elf", "kdump-zlib", "kdump-lzo", "kdump-snappy"] }
+
+netdev_add
+----------
+
+Add host network device.
+
+Arguments:
+
+- "type": the device type, "tap", "user", ... (json-string)
+- "id": the device's ID, must be unique (json-string)
+- device options
+
+Example:
+
+-> { "execute": "netdev_add", "arguments": { "type": "user", "id": "netdev1" } }
+<- { "return": {} }
+
+Note: The supported device options are the same ones supported by the '-netdev'
+      command-line argument, which are listed in the '-help' output or QEMU's
+      manual
+
+netdev_del
+----------
+
+Remove host network device.
+
+Arguments:
+
+- "id": the device's ID, must be unique (json-string)
+
+Example:
+
+-> { "execute": "netdev_del", "arguments": { "id": "netdev1" } }
+<- { "return": {} }
+
+
+object-add
+----------
+
+Create QOM object.
+
+Arguments:
+
+- "qom-type": the object's QOM type, i.e. the class name (json-string)
+- "id": the object's ID, must be unique (json-string)
+- "props": a dictionary of object property values (optional, json-dict)
+
+Example:
+
+-> { "execute": "object-add", "arguments": { "qom-type": "rng-random", "id": "rng1",
+     "props": { "filename": "/dev/hwrng" } } }
+<- { "return": {} }
+
+object-del
+----------
+
+Remove QOM object.
+
+Arguments:
+
+- "id": the object's ID (json-string)
+
+Example:
+
+-> { "execute": "object-del", "arguments": { "id": "rng1" } }
+<- { "return": {} }
+
+
+block_resize
+------------
+
+Resize a block image while a guest is running.
+
+Arguments:
+
+- "device": the device's ID, must be unique (json-string)
+- "node-name": the node name in the block driver state graph (json-string)
+- "size": new size
+
+Example:
+
+-> { "execute": "block_resize", "arguments": { "device": "scratch", "size": 1073741824 } }
+<- { "return": {} }
+
+block-commit
+------------
+
+Live commit of data from overlay image nodes into backing nodes - i.e., writes
+data between 'top' and 'base' into 'base'.
+
+Arguments:
+
+- "device": The device's ID, must be unique (json-string)
+- "base": The file name of the backing image to write data into.
+          If not specified, this is the deepest backing image
+          (json-string, optional)
+- "top":  The file name of the backing image within the image chain,
+          which contains the topmost data to be committed down. If
+          not specified, this is the active layer. (json-string, optional)
+
+- backing-file:     The backing file string to write into the overlay
+                    image of 'top'.  If 'top' is the active layer,
+                    specifying a backing file string is an error. This
+                    filename is not validated.
+
+                    If a pathname string is such that it cannot be
+                    resolved by QEMU, that means that subsequent QMP or
+                    HMP commands must use node-names for the image in
+                    question, as filename lookup methods will fail.
+
+                    If not specified, QEMU will automatically determine
+                    the backing file string to use, or error out if
+                    there is no obvious choice. Care should be taken
+                    when specifying the string, to specify a valid
+                    filename or protocol.
+                    (json-string, optional) (Since 2.1)
+
+          If top == base, that is an error.
+          If top == active, the job will not be completed by itself,
+          user needs to complete the job with the block-job-complete
+          command after getting the ready event. (Since 2.0)
+
+          If the base image is smaller than top, then the base image
+          will be resized to be the same size as top.  If top is
+          smaller than the base image, the base will not be
+          truncated.  If you want the base image size to match the
+          size of the smaller top, you can safely truncate it
+          yourself once the commit operation successfully completes.
+          (json-string)
+- "speed":  the maximum speed, in bytes per second (json-int, optional)
+
+
+Example:
+
+-> { "execute": "block-commit", "arguments": { "device": "virtio0",
+                                              "top": "/tmp/snap1.qcow2" } }
+<- { "return": {} }
+
+drive-backup
+------------
+
+Start a point-in-time copy of a block device to a new destination.  The
+status of ongoing drive-backup operations can be checked with
+query-block-jobs where the BlockJobInfo.type field has the value 'backup'.
+The operation can be stopped before it has completed using the
+block-job-cancel command.
+
+Arguments:
+
+- "device": the name of the device which should be copied.
+            (json-string)
+- "target": the target of the new image. If the file exists, or if it is a
+            device, the existing file/device will be used as the new
+            destination.  If it does not exist, a new file will be created.
+            (json-string)
+- "format": the format of the new destination, default is to probe if 'mode' is
+            'existing', else the format of the source
+            (json-string, optional)
+- "sync": what parts of the disk image should be copied to the destination;
+  possibilities include "full" for all the disk, "top" for only the sectors
+  allocated in the topmost image, or "none" to only replicate new I/O
+  (MirrorSyncMode).
+- "mode": whether and how QEMU should create a new image
+          (NewImageMode, optional, default 'absolute-paths')
+- "speed": the maximum speed, in bytes per second (json-int, optional)
+- "on-source-error": the action to take on an error on the source, default
+                     'report'.  'stop' and 'enospc' can only be used
+                     if the block device supports io-status.
+                     (BlockdevOnError, optional)
+- "on-target-error": the action to take on an error on the target, default
+                     'report' (no limitations, since this applies to
+                     a different block device than device).
+                     (BlockdevOnError, optional)
+
+Example:
+-> { "execute": "drive-backup", "arguments": { "device": "drive0",
+                                               "sync": "full",
+                                               "target": "backup.img" } }
+<- { "return": {} }
+transaction
+-----------
+
+Atomically operate on one or more block devices.  The only supported operations
+for now are drive-backup, internal and external snapshotting.  A list of
+dictionaries is accepted, that contains the actions to be performed.
+If there is any failure performing any of the operations, all operations
+for the group are abandoned.
+
+For external snapshots, the dictionary contains the device, the file to use for
+the new snapshot, and the format.  The default format, if not specified, is
+qcow2.
+
+Each new snapshot defaults to being created by QEMU (wiping any
+contents if the file already exists), but it is also possible to reuse
+an externally-created file.  In the latter case, you should ensure that
+the new image file has the same contents as the current one; QEMU cannot
+perform any meaningful check.  Typically this is achieved by using the
+current image file as the backing file for the new image.
+
+On failure, the original disks pre-snapshot attempt will be used.
+
+For internal snapshots, the dictionary contains the device and the snapshot's
+name.  If an internal snapshot matching name already exists, the request will
+be rejected.  Only some image formats support it, for example, qcow2, rbd,
+and sheepdog.
+
+On failure, qemu will try delete the newly created internal snapshot in the
+transaction.  When an I/O error occurs during deletion, the user needs to fix
+it later with qemu-img or other command.
+
+Arguments:
+
+actions array:
+    - "type": the operation to perform.  The only supported
+      value is "blockdev-snapshot-sync". (json-string)
+    - "data": a dictionary.  The contents depend on the value
+      of "type".  When "type" is "blockdev-snapshot-sync":
+      - "device": device name to snapshot (json-string)
+      - "node-name": graph node name to snapshot (json-string)
+      - "snapshot-file": name of new image file (json-string)
+      - "snapshot-node-name": graph node name of the new snapshot (json-string)
+      - "format": format of new image (json-string, optional)
+      - "mode": whether and how QEMU should create the snapshot file
+        (NewImageMode, optional, default "absolute-paths")
+      When "type" is "blockdev-snapshot-internal-sync":
+      - "device": device name to snapshot (json-string)
+      - "name": name of the new snapshot (json-string)
+
+Example:
+
+-> { "execute": "transaction",
+     "arguments": { "actions": [
+         { "type": "blockdev-snapshot-sync", "data" : { "device": "ide-hd0",
+                                         "snapshot-file": "/some/place/my-image",
+                                         "format": "qcow2" } },
+         { "type": "blockdev-snapshot-sync", "data" : { "node-name": "myfile",
+                                         "snapshot-file": "/some/place/my-image2",
+                                         "snapshot-node-name": "node3432",
+                                         "mode": "existing",
+                                         "format": "qcow2" } },
+         { "type": "blockdev-snapshot-sync", "data" : { "device": "ide-hd1",
+                                         "snapshot-file": "/some/place/my-image2",
+                                         "mode": "existing",
+                                         "format": "qcow2" } },
+         { "type": "blockdev-snapshot-internal-sync", "data" : {
+                                         "device": "ide-hd2",
+                                         "name": "snapshot0" } } ] } }
+<- { "return": {} }
+
+blockdev-snapshot-sync
+----------------------
+
+Synchronous snapshot of a block device. snapshot-file specifies the
+target of the new image. If the file exists, or if it is a device, the
+snapshot will be created in the existing file/device. If does not
+exist, a new file will be created. format specifies the format of the
+snapshot image, default is qcow2.
+
+Arguments:
+
+- "device": device name to snapshot (json-string)
+- "node-name": graph node name to snapshot (json-string)
+- "snapshot-file": name of new image file (json-string)
+- "snapshot-node-name": graph node name of the new snapshot (json-string)
+- "mode": whether and how QEMU should create the snapshot file
+  (NewImageMode, optional, default "absolute-paths")
+- "format": format of new image (json-string, optional)
+
+Example:
+
+-> { "execute": "blockdev-snapshot-sync", "arguments": { "device": "ide-hd0",
+                                                         "snapshot-file":
+                                                        "/some/place/my-image",
+                                                        "format": "qcow2" } }
+<- { "return": {} }
+
+blockdev-snapshot-internal-sync
+-------------------------------
+
+Synchronously take an internal snapshot of a block device when the format of
+image used supports it.  If the name is an empty string, or a snapshot with
+name already exists, the operation will fail.
+
+Arguments:
+
+- "device": device name to snapshot (json-string)
+- "name": name of the new snapshot (json-string)
+
+Example:
+
+-> { "execute": "blockdev-snapshot-internal-sync",
+                "arguments": { "device": "ide-hd0",
+                               "name": "snapshot0" }
+   }
+<- { "return": {} }
+
+blockdev-snapshot-delete-internal-sync
+--------------------------------------
+
+Synchronously delete an internal snapshot of a block device when the format of
+image used supports it.  The snapshot is identified by name or id or both.  One
+of name or id is required.  If the snapshot is not found, the operation will
+fail.
+
+Arguments:
+
+- "device": device name (json-string)
+- "id": ID of the snapshot (json-string, optional)
+- "name": name of the snapshot (json-string, optional)
+
+Example:
+
+-> { "execute": "blockdev-snapshot-delete-internal-sync",
+                "arguments": { "device": "ide-hd0",
+                               "name": "snapshot0" }
+   }
+<- { "return": {
+                   "id": "1",
+                   "name": "snapshot0",
+                   "vm-state-size": 0,
+                   "date-sec": 1000012,
+                   "date-nsec": 10,
+                   "vm-clock-sec": 100,
+                   "vm-clock-nsec": 20
+     }
+   }
+
+drive-mirror
+------------
+
+Start mirroring a block device's writes to a new destination. target
+specifies the target of the new image. If the file exists, or if it is
+a device, it will be used as the new destination for writes. If it does not
+exist, a new file will be created. format specifies the format of the
+mirror image, default is to probe if mode='existing', else the format
+of the source.
+
+Arguments:
+
+- "device": device name to operate on (json-string)
+- "target": name of new image file (json-string)
+- "format": format of new image (json-string, optional)
+- "node-name": the name of the new block driver state in the node graph
+               (json-string, optional)
+- "replaces": the block driver node name to replace when finished
+              (json-string, optional)
+- "mode": how an image file should be created into the target
+  file/device (NewImageMode, optional, default 'absolute-paths')
+- "speed": maximum speed of the streaming job, in bytes per second
+  (json-int)
+- "granularity": granularity of the dirty bitmap, in bytes (json-int, optional)
+- "buf_size": maximum amount of data in flight from source to target, in bytes
+  (json-int, default 10M)
+- "sync": what parts of the disk image should be copied to the destination;
+  possibilities include "full" for all the disk, "top" for only the sectors
+  allocated in the topmost image, or "none" to only replicate new I/O
+  (MirrorSyncMode).
+- "on-source-error": the action to take on an error on the source
+  (BlockdevOnError, default 'report')
+- "on-target-error": the action to take on an error on the target
+  (BlockdevOnError, default 'report')
+
+The default value of the granularity is the image cluster size clamped
+between 4096 and 65536, if the image format defines one.  If the format
+does not define a cluster size, the default value of the granularity
+is 65536.
+
+
+Example:
+
+-> { "execute": "drive-mirror", "arguments": { "device": "ide-hd0",
+                                               "target": "/some/place/my-image",
+                                               "sync": "full",
+                                               "format": "qcow2" } }
+<- { "return": {} }
+
+change-backing-file
+-------------------
+Since: 2.1
+
+Change the backing file in the image file metadata.  This does not cause
+QEMU to reopen the image file to reparse the backing filename (it may,
+however, perform a reopen to change permissions from r/o -> r/w -> r/o,
+if needed). The new backing file string is written into the image file
+metadata, and the QEMU internal strings are updated.
+
+Arguments:
+
+- "image-node-name":    The name of the block driver state node of the
+                        image to modify.  The "device" is argument is used to
+                        verify "image-node-name" is in the chain described by
+                        "device".
+                        (json-string, optional)
+
+- "device":             The name of the device.
+                        (json-string)
+
+- "backing-file":       The string to write as the backing file.  This string is
+                        not validated, so care should be taken when specifying
+                        the string or the image chain may not be able to be
+                        reopened again.
+                        (json-string)
+
+Returns: Nothing on success
+         If "device" does not exist or cannot be determined, DeviceNotFound
+
+balloon
+-------
+
+Request VM to change its memory allocation (in bytes).
+
+Arguments:
+
+- "value": New memory allocation (json-int)
+
+Example:
+
+-> { "execute": "balloon", "arguments": { "value": 536870912 } }
+<- { "return": {} }
+
+set_link
+--------
+
+Change the link status of a network adapter.
+
+Arguments:
+
+- "name": network device name (json-string)
+- "up": status is up (json-bool)
+
+Example:
+
+-> { "execute": "set_link", "arguments": { "name": "e1000.0", "up": false } }
+<- { "return": {} }
+
+getfd
+-----
+
+Receive a file descriptor via SCM rights and assign it a name.
+
+Arguments:
+
+- "fdname": file descriptor name (json-string)
+
+Example:
+
+-> { "execute": "getfd", "arguments": { "fdname": "fd1" } }
+<- { "return": {} }
+
+Notes:
+
+(1) If the name specified by the "fdname" argument already exists,
+    the file descriptor assigned to it will be closed and replaced
+    by the received file descriptor.
+(2) The 'closefd' command can be used to explicitly close the file
+    descriptor when it is no longer needed.
+
+closefd
+-------
+
+Close a file descriptor previously passed via SCM rights.
+
+Arguments:
+
+- "fdname": file descriptor name (json-string)
+
+Example:
+
+-> { "execute": "closefd", "arguments": { "fdname": "fd1" } }
+<- { "return": {} }
+
+add-fd
+-------
+
+Add a file descriptor, that was passed via SCM rights, to an fd set.
+
+Arguments:
+
+- "fdset-id": The ID of the fd set to add the file descriptor to.
+              (json-int, optional)
+- "opaque": A free-form string that can be used to describe the fd.
+            (json-string, optional)
+
+Return a json-object with the following information:
+
+- "fdset-id": The ID of the fd set that the fd was added to. (json-int)
+- "fd": The file descriptor that was received via SCM rights and added to the
+        fd set. (json-int)
+
+Example:
+
+-> { "execute": "add-fd", "arguments": { "fdset-id": 1 } }
+<- { "return": { "fdset-id": 1, "fd": 3 } }
+
+Notes:
+
+(1) The list of fd sets is shared by all monitor connections.
+(2) If "fdset-id" is not specified, a new fd set will be created.
+
+remove-fd
+---------
+
+Remove a file descriptor from an fd set.
+
+Arguments:
+
+- "fdset-id": The ID of the fd set that the file descriptor belongs to.
+              (json-int)
+- "fd": The file descriptor that is to be removed. (json-int, optional)
+
+Example:
+
+-> { "execute": "remove-fd", "arguments": { "fdset-id": 1, "fd": 3 } }
+<- { "return": {} }
+
+Notes:
+
+(1) The list of fd sets is shared by all monitor connections.
+(2) If "fd" is not specified, all file descriptors in "fdset-id" will be
+    removed.
+
+query-fdsets
+-------------
+
+Return information describing all fd sets.
+
+Arguments: None
+
+Example:
+
+-> { "execute": "query-fdsets" }
+<- { "return": [
+       {
+         "fds": [
+           {
+             "fd": 30,
+             "opaque": "rdonly:/path/to/file"
+           },
+           {
+             "fd": 24,
+             "opaque": "rdwr:/path/to/file"
+           }
+         ],
+         "fdset-id": 1
+       },
+       {
+         "fds": [
+           {
+             "fd": 28
+           },
+           {
+             "fd": 29
+           }
+         ],
+         "fdset-id": 0
+       }
+     ]
+   }
+
+Note: The list of fd sets is shared by all monitor connections.
+
+block_passwd
+------------
+
+Set the password of encrypted block devices.
+
+Arguments:
+
+- "device": device name (json-string)
+- "node-name": name in the block driver state graph (json-string)
+- "password": password (json-string)
+
+Example:
+
+-> { "execute": "block_passwd", "arguments": { "device": "ide0-hd0",
+                                               "password": "12345" } }
+<- { "return": {} }
+
+block_set_io_throttle
+------------
+
+Change I/O throttle limits for a block drive.
+
+Arguments:
+
+- "device": device name (json-string)
+- "bps": total throughput limit in bytes per second (json-int)
+- "bps_rd": read throughput limit in bytes per second (json-int)
+- "bps_wr": write throughput limit in bytes per second (json-int)
+- "iops": total I/O operations per second (json-int)
+- "iops_rd": read I/O operations per second (json-int)
+- "iops_wr": write I/O operations per second (json-int)
+- "bps_max":  total max in bytes (json-int)
+- "bps_rd_max":  read max in bytes (json-int)
+- "bps_wr_max":  write max in bytes (json-int)
+- "iops_max":  total I/O operations max (json-int)
+- "iops_rd_max":  read I/O operations max (json-int)
+- "iops_wr_max":  write I/O operations max (json-int)
+- "iops_size":  I/O size in bytes when limiting (json-int)
+
+Example:
+
+-> { "execute": "block_set_io_throttle", "arguments": { "device": "virtio0",
+                                               "bps": 1000000,
+                                               "bps_rd": 0,
+                                               "bps_wr": 0,
+                                               "iops": 0,
+                                               "iops_rd": 0,
+                                               "iops_wr": 0,
+                                               "bps_max": 8000000,
+                                               "bps_rd_max": 0,
+                                               "bps_wr_max": 0,
+                                               "iops_max": 0,
+                                               "iops_rd_max": 0,
+                                               "iops_wr_max": 0,
+                                               "iops_size": 0 } }
+<- { "return": {} }
+
+set_password
+------------
+
+Set the password for vnc/spice protocols.
+
+Arguments:
+
+- "protocol": protocol name (json-string)
+- "password": password (json-string)
+- "connected": [ keep | disconnect | fail ] (josn-string, optional)
+
+Example:
+
+-> { "execute": "set_password", "arguments": { "protocol": "vnc",
+                                               "password": "secret" } }
+<- { "return": {} }
+
+expire_password
+---------------
+
+Set the password expire time for vnc/spice protocols.
+
+Arguments:
+
+- "protocol": protocol name (json-string)
+- "time": [ now | never | +secs | secs ] (json-string)
+
+Example:
+
+-> { "execute": "expire_password", "arguments": { "protocol": "vnc",
+                                                  "time": "+60" } }
+<- { "return": {} }
+
+add_client
+----------
+
+Add a graphics client
+
+Arguments:
+
+- "protocol": protocol name (json-string)
+- "fdname": file descriptor name (json-string)
+- "skipauth": whether to skip authentication (json-bool, optional)
+- "tls": whether to perform TLS (json-bool, optional)
+
+Example:
+
+-> { "execute": "add_client", "arguments": { "protocol": "vnc",
+                                             "fdname": "myclient" } }
+<- { "return": {} }
+
+qmp_capabilities
+----------------
+
+Enable QMP capabilities.
+
+Arguments: None.
+
+Example:
+
+-> { "execute": "qmp_capabilities" }
+<- { "return": {} }
+
+Note: This command must be issued before issuing any other command.
+
+human-monitor-command
+---------------------
+
+Execute a Human Monitor command.
+
+Arguments: 
+
+- command-line: the command name and its arguments, just like the
+                Human Monitor's shell (json-string)
+- cpu-index: select the CPU number to be used by commands which access CPU
+             data, like 'info registers'. The Monitor selects CPU 0 if this
+             argument is not provided (json-int, optional)
+
+Example:
+
+-> { "execute": "human-monitor-command", "arguments": { "command-line": "info kvm" } }
+<- { "return": "kvm support: enabled\r\n" }
+
+Notes:
+
+(1) The Human Monitor is NOT an stable interface, this means that command
+    names, arguments and responses can change or be removed at ANY time.
+    Applications that rely on long term stability guarantees should NOT
+    use this command
+
+(2) Limitations:
+
+    o This command is stateless, this means that commands that depend
+      on state information (such as getfd) might not work
+
+    o Commands that prompt the user for data (eg. 'cont' when the block
+      device is encrypted) don't currently work
+
+3. Query Commands
+=================
+
+
+query-version
+-------------
+
+Show QEMU version.
+
+Return a json-object with the following information:
+
+- "qemu": A json-object containing three integer values:
+    - "major": QEMU's major version (json-int)
+    - "minor": QEMU's minor version (json-int)
+    - "micro": QEMU's micro version (json-int)
+- "package": package's version (json-string)
+
+Example:
+
+-> { "execute": "query-version" }
+<- {
+      "return":{
+         "qemu":{
+            "major":0,
+            "minor":11,
+            "micro":5
+         },
+         "package":""
+      }
+   }
+
+query-commands
+--------------
+
+List QMP available commands.
+
+Each command is represented by a json-object, the returned value is a json-array
+of all commands.
+
+Each json-object contain:
+
+- "name": command's name (json-string)
+
+Example:
+
+-> { "execute": "query-commands" }
+<- {
+      "return":[
+         {
+            "name":"query-balloon"
+         },
+         {
+            "name":"system_powerdown"
+         }
+      ]
+   }
+
+Note: This example has been shortened as the real response is too long.
+
+query-events
+--------------
+
+List QMP available events.
+
+Each event is represented by a json-object, the returned value is a json-array
+of all events.
+
+Each json-object contains:
+
+- "name": event's name (json-string)
+
+Example:
+
+-> { "execute": "query-events" }
+<- {
+      "return":[
+         {
+            "name":"SHUTDOWN"
+         },
+         {
+            "name":"RESET"
+         }
+      ]
+   }
+
+Note: This example has been shortened as the real response is too long.
+
+query-chardev
+-------------
+
+Each device is represented by a json-object. The returned value is a json-array
+of all devices.
+
+Each json-object contain the following:
+
+- "label": device's label (json-string)
+- "filename": device's file (json-string)
+- "frontend-open": open/closed state of the frontend device attached to this
+                   backend (json-bool)
+
+Example:
+
+-> { "execute": "query-chardev" }
+<- {
+      "return": [
+         {
+            "label": "charchannel0",
+            "filename": "unix:/var/lib/libvirt/qemu/seabios.rhel6.agent,server",
+            "frontend-open": false
+         },
+         {
+            "label": "charmonitor",
+            "filename": "unix:/var/lib/libvirt/qemu/seabios.rhel6.monitor,server",
+            "frontend-open": true
+         },
+         {
+            "label": "charserial0",
+            "filename": "pty:/dev/pts/2",
+            "frontend-open": true
+         }
+      ]
+   }
+
+query-chardev-backends
+-------------
+
+List available character device backends.
+
+Each backend is represented by a json-object, the returned value is a json-array
+of all backends.
+
+Each json-object contains:
+
+- "name": backend name (json-string)
+
+Example:
+
+-> { "execute": "query-chardev-backends" }
+<- {
+      "return":[
+         {
+            "name":"udp"
+         },
+         {
+            "name":"tcp"
+         },
+         {
+            "name":"unix"
+         },
+         {
+            "name":"spiceport"
+         }
+      ]
+   }
+
+query-block
+-----------
+
+Show the block devices.
+
+Each block device information is stored in a json-object and the returned value
+is a json-array of all devices.
+
+Each json-object contain the following:
+
+- "device": device name (json-string)
+- "type": device type (json-string)
+         - deprecated, retained for backward compatibility
+         - Possible values: "unknown"
+- "removable": true if the device is removable, false otherwise (json-bool)
+- "locked": true if the device is locked, false otherwise (json-bool)
+- "tray_open": only present if removable, true if the device has a tray,
+               and it is open (json-bool)
+- "inserted": only present if the device is inserted, it is a json-object
+   containing the following:
+         - "file": device file name (json-string)
+         - "ro": true if read-only, false otherwise (json-bool)
+         - "drv": driver format name (json-string)
+             - Possible values: "blkdebug", "bochs", "cloop", "cow", "dmg",
+                                "file", "file", "ftp", "ftps", "host_cdrom",
+                                "host_device", "host_floppy", "http", "https",
+                                "nbd", "parallels", "qcow", "qcow2", "raw",
+                                "tftp", "vdi", "vmdk", "vpc", "vvfat"
+         - "backing_file": backing file name (json-string, optional)
+         - "backing_file_depth": number of files in the backing file chain (json-int)
+         - "encrypted": true if encrypted, false otherwise (json-bool)
+         - "bps": limit total bytes per second (json-int)
+         - "bps_rd": limit read bytes per second (json-int)
+         - "bps_wr": limit write bytes per second (json-int)
+         - "iops": limit total I/O operations per second (json-int)
+         - "iops_rd": limit read operations per second (json-int)
+         - "iops_wr": limit write operations per second (json-int)
+         - "bps_max":  total max in bytes (json-int)
+         - "bps_rd_max":  read max in bytes (json-int)
+         - "bps_wr_max":  write max in bytes (json-int)
+         - "iops_max":  total I/O operations max (json-int)
+         - "iops_rd_max":  read I/O operations max (json-int)
+         - "iops_wr_max":  write I/O operations max (json-int)
+         - "iops_size": I/O size when limiting by iops (json-int)
+         - "detect_zeroes": detect and optimize zero writing (json-string)
+             - Possible values: "off", "on", "unmap"
+         - "image": the detail of the image, it is a json-object containing
+            the following:
+             - "filename": image file name (json-string)
+             - "format": image format (json-string)
+             - "virtual-size": image capacity in bytes (json-int)
+             - "dirty-flag": true if image is not cleanly closed, not present
+                             means clean (json-bool, optional)
+             - "actual-size": actual size on disk in bytes of the image, not
+                              present when image does not support thin
+                              provision (json-int, optional)
+             - "cluster-size": size of a cluster in bytes, not present if image
+                               format does not support it (json-int, optional)
+             - "encrypted": true if the image is encrypted, not present means
+                            false or the image format does not support
+                            encryption (json-bool, optional)
+             - "backing_file": backing file name, not present means no backing
+                               file is used or the image format does not
+                               support backing file chain
+                               (json-string, optional)
+             - "full-backing-filename": full path of the backing file, not
+                                        present if it equals backing_file or no
+                                        backing file is used
+                                        (json-string, optional)
+             - "backing-filename-format": the format of the backing file, not
+                                          present means unknown or no backing
+                                          file (json-string, optional)
+             - "snapshots": the internal snapshot info, it is an optional list
+                of json-object containing the following:
+                 - "id": unique snapshot id (json-string)
+                 - "name": snapshot name (json-string)
+                 - "vm-state-size": size of the VM state in bytes (json-int)
+                 - "date-sec": UTC date of the snapshot in seconds (json-int)
+                 - "date-nsec": fractional part in nanoseconds to be used with
+                                date-sec (json-int)
+                 - "vm-clock-sec": VM clock relative to boot in seconds
+                                   (json-int)
+                 - "vm-clock-nsec": fractional part in nanoseconds to be used
+                                    with vm-clock-sec (json-int)
+             - "backing-image": the detail of the backing image, it is an
+                                optional json-object only present when a
+                                backing image present for this image
+
+- "io-status": I/O operation status, only present if the device supports it
+               and the VM is configured to stop on errors. It's always reset
+               to "ok" when the "cont" command is issued (json_string, optional)
+             - Possible values: "ok", "failed", "nospace"
+
+Example:
+
+-> { "execute": "query-block" }
+<- {
+      "return":[
+         {
+            "io-status": "ok",
+            "device":"ide0-hd0",
+            "locked":false,
+            "removable":false,
+            "inserted":{
+               "ro":false,
+               "drv":"qcow2",
+               "encrypted":false,
+               "file":"disks/test.qcow2",
+               "backing_file_depth":1,
+               "bps":1000000,
+               "bps_rd":0,
+               "bps_wr":0,
+               "iops":1000000,
+               "iops_rd":0,
+               "iops_wr":0,
+               "bps_max": 8000000,
+               "bps_rd_max": 0,
+               "bps_wr_max": 0,
+               "iops_max": 0,
+               "iops_rd_max": 0,
+               "iops_wr_max": 0,
+               "iops_size": 0,
+               "detect_zeroes": "on",
+               "image":{
+                  "filename":"disks/test.qcow2",
+                  "format":"qcow2",
+                  "virtual-size":2048000,
+                  "backing_file":"base.qcow2",
+                  "full-backing-filename":"disks/base.qcow2",
+                  "backing-filename-format:"qcow2",
+                  "snapshots":[
+                     {
+                        "id": "1",
+                        "name": "snapshot1",
+                        "vm-state-size": 0,
+                        "date-sec": 10000200,
+                        "date-nsec": 12,
+                        "vm-clock-sec": 206,
+                        "vm-clock-nsec": 30
+                     }
+                  ],
+                  "backing-image":{
+                      "filename":"disks/base.qcow2",
+                      "format":"qcow2",
+                      "virtual-size":2048000
+                  }
+               }
+            },
+            "type":"unknown"
+         },
+         {
+            "io-status": "ok",
+            "device":"ide1-cd0",
+            "locked":false,
+            "removable":true,
+            "type":"unknown"
+         },
+         {
+            "device":"floppy0",
+            "locked":false,
+            "removable":true,
+            "type":"unknown"
+         },
+         {
+            "device":"sd0",
+            "locked":false,
+            "removable":true,
+            "type":"unknown"
+         }
+      ]
+   }
+
+query-blockstats
+----------------
+
+Show block device statistics.
+
+Each device statistic information is stored in a json-object and the returned
+value is a json-array of all devices.
+
+Each json-object contain the following:
+
+- "device": device name (json-string)
+- "stats": A json-object with the statistics information, it contains:
+    - "rd_bytes": bytes read (json-int)
+    - "wr_bytes": bytes written (json-int)
+    - "rd_operations": read operations (json-int)
+    - "wr_operations": write operations (json-int)
+    - "flush_operations": cache flush operations (json-int)
+    - "wr_total_time_ns": total time spend on writes in nano-seconds (json-int)
+    - "rd_total_time_ns": total time spend on reads in nano-seconds (json-int)
+    - "flush_total_time_ns": total time spend on cache flushes in nano-seconds (json-int)
+    - "wr_highest_offset": Highest offset of a sector written since the
+                           BlockDriverState has been opened (json-int)
+- "parent": Contains recursively the statistics of the underlying
+            protocol (e.g. the host file for a qcow2 image). If there is
+            no underlying protocol, this field is omitted
+            (json-object, optional)
+
+Example:
+
+-> { "execute": "query-blockstats" }
+<- {
+      "return":[
+         {
+            "device":"ide0-hd0",
+            "parent":{
+               "stats":{
+                  "wr_highest_offset":3686448128,
+                  "wr_bytes":9786368,
+                  "wr_operations":751,
+                  "rd_bytes":122567168,
+                  "rd_operations":36772
+                  "wr_total_times_ns":313253456
+                  "rd_total_times_ns":3465673657
+                  "flush_total_times_ns":49653
+                  "flush_operations":61,
+               }
+            },
+            "stats":{
+               "wr_highest_offset":2821110784,
+               "wr_bytes":9786368,
+               "wr_operations":692,
+               "rd_bytes":122739200,
+               "rd_operations":36604
+               "flush_operations":51,
+               "wr_total_times_ns":313253456
+               "rd_total_times_ns":3465673657
+               "flush_total_times_ns":49653
+            }
+         },
+         {
+            "device":"ide1-cd0",
+            "stats":{
+               "wr_highest_offset":0,
+               "wr_bytes":0,
+               "wr_operations":0,
+               "rd_bytes":0,
+               "rd_operations":0
+               "flush_operations":0,
+               "wr_total_times_ns":0
+               "rd_total_times_ns":0
+               "flush_total_times_ns":0
+            }
+         },
+         {
+            "device":"floppy0",
+            "stats":{
+               "wr_highest_offset":0,
+               "wr_bytes":0,
+               "wr_operations":0,
+               "rd_bytes":0,
+               "rd_operations":0
+               "flush_operations":0,
+               "wr_total_times_ns":0
+               "rd_total_times_ns":0
+               "flush_total_times_ns":0
+            }
+         },
+         {
+            "device":"sd0",
+            "stats":{
+               "wr_highest_offset":0,
+               "wr_bytes":0,
+               "wr_operations":0,
+               "rd_bytes":0,
+               "rd_operations":0
+               "flush_operations":0,
+               "wr_total_times_ns":0
+               "rd_total_times_ns":0
+               "flush_total_times_ns":0
+            }
+         }
+      ]
+   }
+
+query-cpus
+----------
+
+Show CPU information.
+
+Return a json-array. Each CPU is represented by a json-object, which contains:
+
+- "CPU": CPU index (json-int)
+- "current": true if this is the current CPU, false otherwise (json-bool)
+- "halted": true if the cpu is halted, false otherwise (json-bool)
+- Current program counter. The key's name depends on the architecture:
+     "pc": i386/x86_64 (json-int)
+     "nip": PPC (json-int)
+     "pc" and "npc": sparc (json-int)
+     "PC": mips (json-int)
+- "thread_id": ID of the underlying host thread (json-int)
+
+Example:
+
+-> { "execute": "query-cpus" }
+<- {
+      "return":[
+         {
+            "CPU":0,
+            "current":true,
+            "halted":false,
+            "pc":3227107138
+            "thread_id":3134
+         },
+         {
+            "CPU":1,
+            "current":false,
+            "halted":true,
+            "pc":7108165
+            "thread_id":3135
+         }
+      ]
+   }
+
+query-iothreads
+---------------
+
+Returns a list of information about each iothread.
+
+Note this list excludes the QEMU main loop thread, which is not declared
+using the -object iothread command-line option.  It is always the main thread
+of the process.
+
+Return a json-array. Each iothread is represented by a json-object, which contains:
+
+- "id": name of iothread (json-str)
+- "thread-id": ID of the underlying host thread (json-int)
+
+Example:
+
+-> { "execute": "query-iothreads" }
+<- {
+      "return":[
+         {
+            "id":"iothread0",
+            "thread-id":3134
+         },
+         {
+            "id":"iothread1",
+            "thread-id":3135
+         }
+      ]
+   }
+
+query-pci
+---------
+
+PCI buses and devices information.
+
+The returned value is a json-array of all buses. Each bus is represented by
+a json-object, which has a key with a json-array of all PCI devices attached
+to it. Each device is represented by a json-object.
+
+The bus json-object contains the following:
+
+- "bus": bus number (json-int)
+- "devices": a json-array of json-objects, each json-object represents a
+             PCI device
+
+The PCI device json-object contains the following:
+
+- "bus": identical to the parent's bus number (json-int)
+- "slot": slot number (json-int)
+- "function": function number (json-int)
+- "class_info": a json-object containing:
+     - "desc": device class description (json-string, optional)
+     - "class": device class number (json-int)
+- "id": a json-object containing:
+     - "device": device ID (json-int)
+     - "vendor": vendor ID (json-int)
+- "irq": device's IRQ if assigned (json-int, optional)
+- "qdev_id": qdev id string (json-string)
+- "pci_bridge": It's a json-object, only present if this device is a
+                PCI bridge, contains:
+     - "bus": bus number (json-int)
+     - "secondary": secondary bus number (json-int)
+     - "subordinate": subordinate bus number (json-int)
+     - "io_range": I/O memory range information, a json-object with the
+                   following members:
+                 - "base": base address, in bytes (json-int)
+                 - "limit": limit address, in bytes (json-int)
+     - "memory_range": memory range information, a json-object with the
+                       following members:
+                 - "base": base address, in bytes (json-int)
+                 - "limit": limit address, in bytes (json-int)
+     - "prefetchable_range": Prefetchable memory range information, a
+                             json-object with the following members:
+                 - "base": base address, in bytes (json-int)
+                 - "limit": limit address, in bytes (json-int)
+     - "devices": a json-array of PCI devices if there's any attached, each
+                  each element is represented by a json-object, which contains
+                  the same members of the 'PCI device json-object' described
+                  above (optional)
+- "regions": a json-array of json-objects, each json-object represents a
+             memory region of this device
+
+The memory range json-object contains the following:
+
+- "base": base memory address (json-int)
+- "limit": limit value (json-int)
+
+The region json-object can be an I/O region or a memory region, an I/O region
+json-object contains the following:
+
+- "type": "io" (json-string, fixed)
+- "bar": BAR number (json-int)
+- "address": memory address (json-int)
+- "size": memory size (json-int)
+
+A memory region json-object contains the following:
+
+- "type": "memory" (json-string, fixed)
+- "bar": BAR number (json-int)
+- "address": memory address (json-int)
+- "size": memory size (json-int)
+- "mem_type_64": true or false (json-bool)
+- "prefetch": true or false (json-bool)
+
+Example:
+
+-> { "execute": "query-pci" }
+<- {
+      "return":[
+         {
+            "bus":0,
+            "devices":[
+               {
+                  "bus":0,
+                  "qdev_id":"",
+                  "slot":0,
+                  "class_info":{
+                     "class":1536,
+                     "desc":"Host bridge"
+                  },
+                  "id":{
+                     "device":32902,
+                     "vendor":4663
+                  },
+                  "function":0,
+                  "regions":[
+   
+                  ]
+               },
+               {
+                  "bus":0,
+                  "qdev_id":"",
+                  "slot":1,
+                  "class_info":{
+                     "class":1537,
+                     "desc":"ISA bridge"
+                  },
+                  "id":{
+                     "device":32902,
+                     "vendor":28672
+                  },
+                  "function":0,
+                  "regions":[
+   
+                  ]
+               },
+               {
+                  "bus":0,
+                  "qdev_id":"",
+                  "slot":1,
+                  "class_info":{
+                     "class":257,
+                     "desc":"IDE controller"
+                  },
+                  "id":{
+                     "device":32902,
+                     "vendor":28688
+                  },
+                  "function":1,
+                  "regions":[
+                     {
+                        "bar":4,
+                        "size":16,
+                        "address":49152,
+                        "type":"io"
+                     }
+                  ]
+               },
+               {
+                  "bus":0,
+                  "qdev_id":"",
+                  "slot":2,
+                  "class_info":{
+                     "class":768,
+                     "desc":"VGA controller"
+                  },
+                  "id":{
+                     "device":4115,
+                     "vendor":184
+                  },
+                  "function":0,
+                  "regions":[
+                     {
+                        "prefetch":true,
+                        "mem_type_64":false,
+                        "bar":0,
+                        "size":33554432,
+                        "address":4026531840,
+                        "type":"memory"
+                     },
+                     {
+                        "prefetch":false,
+                        "mem_type_64":false,
+                        "bar":1,
+                        "size":4096,
+                        "address":4060086272,
+                        "type":"memory"
+                     },
+                     {
+                        "prefetch":false,
+                        "mem_type_64":false,
+                        "bar":6,
+                        "size":65536,
+                        "address":-1,
+                        "type":"memory"
+                     }
+                  ]
+               },
+               {
+                  "bus":0,
+                  "qdev_id":"",
+                  "irq":11,
+                  "slot":4,
+                  "class_info":{
+                     "class":1280,
+                     "desc":"RAM controller"
+                  },
+                  "id":{
+                     "device":6900,
+                     "vendor":4098
+                  },
+                  "function":0,
+                  "regions":[
+                     {
+                        "bar":0,
+                        "size":32,
+                        "address":49280,
+                        "type":"io"
+                     }
+                  ]
+               }
+            ]
+         }
+      ]
+   }
+
+Note: This example has been shortened as the real response is too long.
+
+query-kvm
+---------
+
+Show KVM information.
+
+Return a json-object with the following information:
+
+- "enabled": true if KVM support is enabled, false otherwise (json-bool)
+- "present": true if QEMU has KVM support, false otherwise (json-bool)
+
+Example:
+
+-> { "execute": "query-kvm" }
+<- { "return": { "enabled": true, "present": true } }
+
+query-status
+------------
+
+Return a json-object with the following information:
+
+- "running": true if the VM is running, or false if it is paused (json-bool)
+- "singlestep": true if the VM is in single step mode,
+                false otherwise (json-bool)
+- "status": one of the following values (json-string)
+    "debug" - QEMU is running on a debugger
+    "inmigrate" - guest is paused waiting for an incoming migration
+    "internal-error" - An internal error that prevents further guest
+    execution has occurred
+    "io-error" - the last IOP has failed and the device is configured
+    to pause on I/O errors
+    "paused" - guest has been paused via the 'stop' command
+    "postmigrate" - guest is paused following a successful 'migrate'
+    "prelaunch" - QEMU was started with -S and guest has not started
+    "finish-migrate" - guest is paused to finish the migration process
+    "restore-vm" - guest is paused to restore VM state
+    "running" - guest is actively running
+    "save-vm" - guest is paused to save the VM state
+    "shutdown" - guest is shut down (and -no-shutdown is in use)
+    "watchdog" - the watchdog action is configured to pause and
+     has been triggered
+
+Example:
+
+-> { "execute": "query-status" }
+<- { "return": { "running": true, "singlestep": false, "status": "running" } }
+
+query-mice
+----------
+
+Show VM mice information.
+
+Each mouse is represented by a json-object, the returned value is a json-array
+of all mice.
+
+The mouse json-object contains the following:
+
+- "name": mouse's name (json-string)
+- "index": mouse's index (json-int)
+- "current": true if this mouse is receiving events, false otherwise (json-bool)
+- "absolute": true if the mouse generates absolute input events (json-bool)
+
+Example:
+
+-> { "execute": "query-mice" }
+<- {
+      "return":[
+         {
+            "name":"QEMU Microsoft Mouse",
+            "index":0,
+            "current":false,
+            "absolute":false
+         },
+         {
+            "name":"QEMU PS/2 Mouse",
+            "index":1,
+            "current":true,
+            "absolute":true
+         }
+      ]
+   }
+
+query-vnc
+---------
+
+Show VNC server information.
+
+Return a json-object with server information. Connected clients are returned
+as a json-array of json-objects.
+
+The main json-object contains the following:
+
+- "enabled": true or false (json-bool)
+- "host": server's IP address (json-string)
+- "family": address family (json-string)
+         - Possible values: "ipv4", "ipv6", "unix", "unknown"
+- "service": server's port number (json-string)
+- "auth": authentication method (json-string)
+         - Possible values: "invalid", "none", "ra2", "ra2ne", "sasl", "tight",
+                            "tls", "ultra", "unknown", "vencrypt", "vencrypt",
+                            "vencrypt+plain", "vencrypt+tls+none",
+                            "vencrypt+tls+plain", "vencrypt+tls+sasl",
+                            "vencrypt+tls+vnc", "vencrypt+x509+none",
+                            "vencrypt+x509+plain", "vencrypt+x509+sasl",
+                            "vencrypt+x509+vnc", "vnc"
+- "clients": a json-array of all connected clients
+
+Clients are described by a json-object, each one contain the following:
+
+- "host": client's IP address (json-string)
+- "family": address family (json-string)
+         - Possible values: "ipv4", "ipv6", "unix", "unknown"
+- "service": client's port number (json-string)
+- "x509_dname": TLS dname (json-string, optional)
+- "sasl_username": SASL username (json-string, optional)
+
+Example:
+
+-> { "execute": "query-vnc" }
+<- {
+      "return":{
+         "enabled":true,
+         "host":"0.0.0.0",
+         "service":"50402",
+         "auth":"vnc",
+         "family":"ipv4",
+         "clients":[
+            {
+               "host":"127.0.0.1",
+               "service":"50401",
+               "family":"ipv4"
+            }
+         ]
+      }
+   }
+
+query-spice
+-----------
+
+Show SPICE server information.
+
+Return a json-object with server information. Connected clients are returned
+as a json-array of json-objects.
+
+The main json-object contains the following:
+
+- "enabled": true or false (json-bool)
+- "host": server's IP address (json-string)
+- "port": server's port number (json-int, optional)
+- "tls-port": server's port number (json-int, optional)
+- "auth": authentication method (json-string)
+         - Possible values: "none", "spice"
+- "channels": a json-array of all active channels clients
+
+Channels are described by a json-object, each one contain the following:
+
+- "host": client's IP address (json-string)
+- "family": address family (json-string)
+         - Possible values: "ipv4", "ipv6", "unix", "unknown"
+- "port": client's port number (json-string)
+- "connection-id": spice connection id.  All channels with the same id
+                   belong to the same spice session (json-int)
+- "channel-type": channel type.  "1" is the main control channel, filter for
+                  this one if you want track spice sessions only (json-int)
+- "channel-id": channel id.  Usually "0", might be different needed when
+                multiple channels of the same type exist, such as multiple
+                display channels in a multihead setup (json-int)
+- "tls": whevener the channel is encrypted (json-bool)
+
+Example:
+
+-> { "execute": "query-spice" }
+<- {
+      "return": {
+         "enabled": true,
+         "auth": "spice",
+         "port": 5920,
+         "tls-port": 5921,
+         "host": "0.0.0.0",
+         "channels": [
+            {
+               "port": "54924",
+               "family": "ipv4",
+               "channel-type": 1,
+               "connection-id": 1804289383,
+               "host": "127.0.0.1",
+               "channel-id": 0,
+               "tls": true
+            },
+            {
+               "port": "36710",
+               "family": "ipv4",
+               "channel-type": 4,
+               "connection-id": 1804289383,
+               "host": "127.0.0.1",
+               "channel-id": 0,
+               "tls": false
+            },
+            [ ... more channels follow ... ]
+         ]
+      }
+   }
+
+query-name
+----------
+
+Show VM name.
+
+Return a json-object with the following information:
+
+- "name": VM's name (json-string, optional)
+
+Example:
+
+-> { "execute": "query-name" }
+<- { "return": { "name": "qemu-name" } }
+
+query-uuid
+----------
+
+Show VM UUID.
+
+Return a json-object with the following information:
+
+- "UUID": Universally Unique Identifier (json-string)
+
+Example:
+
+-> { "execute": "query-uuid" }
+<- { "return": { "UUID": "550e8400-e29b-41d4-a716-446655440000" } }
+
+query-command-line-options
+--------------------------
+
+Show command line option schema.
+
+Return a json-array of command line option schema for all options (or for
+the given option), returning an error if the given option doesn't exist.
+
+Each array entry contains the following:
+
+- "option": option name (json-string)
+- "parameters": a json-array describes all parameters of the option:
+    - "name": parameter name (json-string)
+    - "type": parameter type (one of 'string', 'boolean', 'number',
+              or 'size')
+    - "help": human readable description of the parameter
+              (json-string, optional)
+    - "default": default value string for the parameter
+                 (json-string, optional)
+
+Example:
+
+-> { "execute": "query-command-line-options", "arguments": { "option": "option-rom" } }
+<- { "return": [
+        {
+            "parameters": [
+                {
+                    "name": "romfile",
+                    "type": "string"
+                },
+                {
+                    "name": "bootindex",
+                    "type": "number"
+                }
+            ],
+            "option": "option-rom"
+        }
+     ]
+   }
+
+query-migrate
+-------------
+
+Migration status.
+
+Return a json-object. If migration is active there will be another json-object
+with RAM migration status and if block migration is active another one with
+block migration status.
+
+The main json-object contains the following:
+
+- "status": migration status (json-string)
+     - Possible values: "setup", "active", "completed", "failed", "cancelled"
+- "total-time": total amount of ms since migration started.  If
+                migration has ended, it returns the total migration
+                time (json-int)
+- "setup-time" amount of setup time in milliseconds _before_ the
+               iterations begin but _after_ the QMP command is issued.
+               This is designed to provide an accounting of any activities
+               (such as RDMA pinning) which may be expensive, but do not 
+               actually occur during the iterative migration rounds 
+               themselves. (json-int)
+- "downtime": only present when migration has finished correctly
+              total amount in ms for downtime that happened (json-int)
+- "expected-downtime": only present while migration is active
+                total amount in ms for downtime that was calculated on
+                the last bitmap round (json-int)
+- "ram": only present if "status" is "active", it is a json-object with the
+  following RAM information:
+         - "transferred": amount transferred in bytes (json-int)
+         - "remaining": amount remaining to transfer in bytes (json-int)
+         - "total": total amount of memory in bytes (json-int)
+         - "duplicate": number of pages filled entirely with the same
+            byte (json-int)
+            These are sent over the wire much more efficiently.
+         - "skipped": number of skipped zero pages (json-int)
+         - "normal" : number of whole pages transferred.  I.e. they
+            were not sent as duplicate or xbzrle pages (json-int)
+         - "normal-bytes" : number of bytes transferred in whole
+            pages. This is just normal pages times size of one page,
+            but this way upper levels don't need to care about page
+            size (json-int)
+         - "dirty-sync-count": times that dirty ram was synchronized (json-int)
+- "disk": only present if "status" is "active" and it is a block migration,
+  it is a json-object with the following disk information:
+         - "transferred": amount transferred in bytes (json-int)
+         - "remaining": amount remaining to transfer in bytes json-int)
+         - "total": total disk size in bytes (json-int)
+- "xbzrle-cache": only present if XBZRLE is active.
+  It is a json-object with the following XBZRLE information:
+         - "cache-size": XBZRLE cache size in bytes
+         - "bytes": number of bytes transferred for XBZRLE compressed pages
+         - "pages": number of XBZRLE compressed pages
+         - "cache-miss": number of XBRZRLE page cache misses
+         - "cache-miss-rate": rate of XBRZRLE page cache misses
+         - "overflow": number of times XBZRLE overflows.  This means
+           that the XBZRLE encoding was bigger than just sent the
+           whole page, and then we sent the whole page instead (as as
+           normal page).
+
+Examples:
+
+1. Before the first migration
+
+-> { "execute": "query-migrate" }
+<- { "return": {} }
+
+2. Migration is done and has succeeded
+
+-> { "execute": "query-migrate" }
+<- { "return": {
+        "status": "completed",
+        "ram":{
+          "transferred":123,
+          "remaining":123,
+          "total":246,
+          "total-time":12345,
+          "setup-time":12345,
+          "downtime":12345,
+          "duplicate":123,
+          "normal":123,
+          "normal-bytes":123456,
+          "dirty-sync-count":15
+        }
+     }
+   }
+
+3. Migration is done and has failed
+
+-> { "execute": "query-migrate" }
+<- { "return": { "status": "failed" } }
+
+4. Migration is being performed and is not a block migration:
+
+-> { "execute": "query-migrate" }
+<- {
+      "return":{
+         "status":"active",
+         "ram":{
+            "transferred":123,
+            "remaining":123,
+            "total":246,
+            "total-time":12345,
+            "setup-time":12345,
+            "expected-downtime":12345,
+            "duplicate":123,
+            "normal":123,
+            "normal-bytes":123456,
+            "dirty-sync-count":15
+         }
+      }
+   }
+
+5. Migration is being performed and is a block migration:
+
+-> { "execute": "query-migrate" }
+<- {
+      "return":{
+         "status":"active",
+         "ram":{
+            "total":1057024,
+            "remaining":1053304,
+            "transferred":3720,
+            "total-time":12345,
+            "setup-time":12345,
+            "expected-downtime":12345,
+            "duplicate":123,
+            "normal":123,
+            "normal-bytes":123456,
+            "dirty-sync-count":15
+         },
+         "disk":{
+            "total":20971520,
+            "remaining":20880384,
+            "transferred":91136
+         }
+      }
+   }
+
+6. Migration is being performed and XBZRLE is active:
+
+-> { "execute": "query-migrate" }
+<- {
+      "return":{
+         "status":"active",
+         "capabilities" : [ { "capability": "xbzrle", "state" : true } ],
+         "ram":{
+            "total":1057024,
+            "remaining":1053304,
+            "transferred":3720,
+            "total-time":12345,
+            "setup-time":12345,
+            "expected-downtime":12345,
+            "duplicate":10,
+            "normal":3333,
+            "normal-bytes":3412992,
+            "dirty-sync-count":15
+         },
+         "xbzrle-cache":{
+            "cache-size":67108864,
+            "bytes":20971520,
+            "pages":2444343,
+            "cache-miss":2244,
+            "cache-miss-rate":0.123,
+            "overflow":34434
+         }
+      }
+   }
+
+migrate-set-capabilities
+------------------------
+
+Enable/Disable migration capabilities
+
+- "xbzrle": XBZRLE support
+
+Arguments:
+
+Example:
+
+-> { "execute": "migrate-set-capabilities" , "arguments":
+     { "capabilities": [ { "capability": "xbzrle", "state": true } ] } }
+
+query-migrate-capabilities
+--------------------------
+
+Query current migration capabilities
+
+- "capabilities": migration capabilities state
+         - "xbzrle" : XBZRLE state (json-bool)
+
+Arguments:
+
+Example:
+
+-> { "execute": "query-migrate-capabilities" }
+<- { "return": [ { "state": false, "capability": "xbzrle" } ] }
+
+query-balloon
+-------------
+
+Show balloon information.
+
+Make an asynchronous request for balloon info. When the request completes a
+json-object will be returned containing the following data:
+
+- "actual": current balloon value in bytes (json-int)
+
+Example:
+
+-> { "execute": "query-balloon" }
+<- {
+      "return":{
+         "actual":1073741824,
+      }
+   }
+
+query-tpm
+---------
+
+Return information about the TPM device.
+
+Arguments: None
+
+Example:
+
+-> { "execute": "query-tpm" }
+<- { "return":
+     [
+       { "model": "tpm-tis",
+         "options":
+           { "type": "passthrough",
+             "data":
+               { "cancel-path": "/sys/class/misc/tpm0/device/cancel",
+                 "path": "/dev/tpm0"
+               }
+           },
+         "id": "tpm0"
+       }
+     ]
+   }
+
+query-tpm-models
+----------------
+
+Return a list of supported TPM models.
+
+Arguments: None
+
+Example:
+
+-> { "execute": "query-tpm-models" }
+<- { "return": [ "tpm-tis" ] }
+
+query-tpm-types
+---------------
+
+Return a list of supported TPM types.
+
+Arguments: None
+
+Example:
+
+-> { "execute": "query-tpm-types" }
+<- { "return": [ "passthrough" ] }
+
+chardev-add
+----------------
+
+Add a chardev.
+
+Arguments:
+
+- "id": the chardev's ID, must be unique (json-string)
+- "backend": chardev backend type + parameters
+
+Examples:
+
+-> { "execute" : "chardev-add",
+     "arguments" : { "id" : "foo",
+                     "backend" : { "type" : "null", "data" : {} } } }
+<- { "return": {} }
+
+-> { "execute" : "chardev-add",
+     "arguments" : { "id" : "bar",
+                     "backend" : { "type" : "file",
+                                   "data" : { "out" : "/tmp/bar.log" } } } }
+<- { "return": {} }
+
+-> { "execute" : "chardev-add",
+     "arguments" : { "id" : "baz",
+                     "backend" : { "type" : "pty", "data" : {} } } }
+<- { "return": { "pty" : "/dev/pty/42" } }
+
+chardev-remove
+--------------
+
+Remove a chardev.
+
+Arguments:
+
+- "id": the chardev's ID, must exist and not be in use (json-string)
+
+Example:
+
+-> { "execute": "chardev-remove", "arguments": { "id" : "foo" } }
+<- { "return": {} }
+
+query-rx-filter
+---------------
+
+Show rx-filter information.
+
+Returns a json-array of rx-filter information for all NICs (or for the
+given NIC), returning an error if the given NIC doesn't exist, or
+given NIC doesn't support rx-filter querying, or given net client
+isn't a NIC.
+
+The query will clear the event notification flag of each NIC, then qemu
+will start to emit event to QMP monitor.
+
+Each array entry contains the following:
+
+- "name": net client name (json-string)
+- "promiscuous": promiscuous mode is enabled (json-bool)
+- "multicast": multicast receive state (one of 'normal', 'none', 'all')
+- "unicast": unicast receive state  (one of 'normal', 'none', 'all')
+- "vlan": vlan receive state (one of 'normal', 'none', 'all') (Since 2.0)
+- "broadcast-allowed": allow to receive broadcast (json-bool)
+- "multicast-overflow": multicast table is overflowed (json-bool)
+- "unicast-overflow": unicast table is overflowed (json-bool)
+- "main-mac": main macaddr string (json-string)
+- "vlan-table": a json-array of active vlan id
+- "unicast-table": a json-array of unicast macaddr string
+- "multicast-table": a json-array of multicast macaddr string
+
+Example:
+
+-> { "execute": "query-rx-filter", "arguments": { "name": "vnet0" } }
+<- { "return": [
+        {
+            "promiscuous": true,
+            "name": "vnet0",
+            "main-mac": "52:54:00:12:34:56",
+            "unicast": "normal",
+            "vlan": "normal",
+            "vlan-table": [
+                4,
+                0
+            ],
+            "unicast-table": [
+            ],
+            "multicast": "normal",
+            "multicast-overflow": false,
+            "unicast-overflow": false,
+            "multicast-table": [
+                "01:00:5e:00:00:01",
+                "33:33:00:00:00:01",
+                "33:33:ff:12:34:56"
+            ],
+            "broadcast-allowed": false
+        }
+      ]
+   }
+
+blockdev-add
+------------
+
+Add a block device.
+
+Arguments:
+
+- "options": block driver options
+
+Example (1):
+
+-> { "execute": "blockdev-add",
+    "arguments": { "options" : { "driver": "qcow2",
+                                 "file": { "driver": "file",
+                                           "filename": "test.qcow2" } } } }
+<- { "return": {} }
+
+Example (2):
+
+-> { "execute": "blockdev-add",
+     "arguments": {
+         "options": {
+           "driver": "qcow2",
+           "id": "my_disk",
+           "discard": "unmap",
+           "cache": {
+               "direct": true,
+               "writeback": true
+           },
+           "file": {
+               "driver": "file",
+               "filename": "/tmp/test.qcow2"
+           },
+           "backing": {
+               "driver": "raw",
+               "file": {
+                   "driver": "file",
+                   "filename": "/dev/fdset/4"
+               }
+           }
+         }
+       }
+     }
+
+<- { "return": {} }
+
+@query-named-block-nodes
+------------------------
+
+Return a list of BlockDeviceInfo for all the named block driver nodes
+
+Example:
+
+-> { "execute": "query-named-block-nodes" }
+<- { "return": [ { "ro":false,
+                   "drv":"qcow2",
+                   "encrypted":false,
+                   "file":"disks/test.qcow2",
+                   "node-name": "my-node",
+                   "backing_file_depth":1,
+                   "bps":1000000,
+                   "bps_rd":0,
+                   "bps_wr":0,
+                   "iops":1000000,
+                   "iops_rd":0,
+                   "iops_wr":0,
+                   "bps_max": 8000000,
+                   "bps_rd_max": 0,
+                   "bps_wr_max": 0,
+                   "iops_max": 0,
+                   "iops_rd_max": 0,
+                   "iops_wr_max": 0,
+                   "iops_size": 0,
+                   "image":{
+                      "filename":"disks/test.qcow2",
+                      "format":"qcow2",
+                      "virtual-size":2048000,
+                      "backing_file":"base.qcow2",
+                      "full-backing-filename":"disks/base.qcow2",
+                      "backing-filename-format:"qcow2",
+                      "snapshots":[
+                         {
+                            "id": "1",
+                            "name": "snapshot1",
+                            "vm-state-size": 0,
+                            "date-sec": 10000200,
+                            "date-nsec": 12,
+                            "vm-clock-sec": 206,
+                            "vm-clock-nsec": 30
+                         }
+                      ],
+                      "backing-image":{
+                          "filename":"disks/base.qcow2",
+                          "format":"qcow2",
+                          "virtual-size":2048000
+                      }
+                   } } ] }
+
+query-memdev
+------------
+
+Show memory devices information.
+
+
+Example (1):
+
+-> { "execute": "query-memdev" }
+<- { "return": [
+       {
+         "size": 536870912,
+         "merge": false,
+         "dump": true,
+         "prealloc": false,
+         "host-nodes": [0, 1],
+         "policy": "bind"
+       },
+       {
+         "size": 536870912,
+         "merge": false,
+         "dump": true,
+         "prealloc": true,
+         "host-nodes": [2, 3],
+         "policy": "preferred"
+       }
+     ]
+   }
+
+@query-memory-devices
+--------------------
+
+Return a list of memory devices.
+
+Example:
+-> { "execute": "query-memory-devices" }
+<- { "return": [ { "data":
+                      { "addr": 5368709120,
+                        "hotpluggable": true,
+                        "hotplugged": true,
+                        "id": "d1",
+                        "memdev": "/objects/memX",
+                        "node": 0,
+                        "size": 1073741824,
+                        "slot": 0},
+                   "type": "dimm"
+                 } ] }
+@query-acpi-ospm-status
+--------------------
+
+Return list of ACPIOSTInfo for devices that support status reporting
+via ACPI _OST method.
+
+Example:
+-> { "execute": "query-acpi-ospm-status" }
+<- { "return": [ { "device": "d1", "slot": "0", "slot-type": "DIMM", "source": 1, "status": 0},
+                 { "slot": "1", "slot-type": "DIMM", "source": 0, "status": 0},
+                 { "slot": "2", "slot-type": "DIMM", "source": 0, "status": 0},
+                 { "slot": "3", "slot-type": "DIMM", "source": 0, "status": 0}
+   ]}
+rtc-reset-reinjection
+---------------------
+
+Reset the RTC interrupt reinjection backlog.
+
+Arguments: None.
+
+Example:
+
+-> { "execute": "rtc-reset-reinjection" }
+<- { "return": {} }
+
diff --git a/install/share/locale/be/LC_MESSAGES/make.mo b/install/share/locale/be/LC_MESSAGES/make.mo
new file mode 100644
index 0000000..daf42ad
Binary files /dev/null and b/install/share/locale/be/LC_MESSAGES/make.mo differ
diff --git a/install/share/locale/da/LC_MESSAGES/make.mo b/install/share/locale/da/LC_MESSAGES/make.mo
new file mode 100644
index 0000000..1c357cc
Binary files /dev/null and b/install/share/locale/da/LC_MESSAGES/make.mo differ
diff --git a/install/share/locale/de/LC_MESSAGES/make.mo b/install/share/locale/de/LC_MESSAGES/make.mo
new file mode 100644
index 0000000..98b9f9b
Binary files /dev/null and b/install/share/locale/de/LC_MESSAGES/make.mo differ
diff --git a/install/share/locale/es/LC_MESSAGES/make.mo b/install/share/locale/es/LC_MESSAGES/make.mo
new file mode 100644
index 0000000..9d9cc07
Binary files /dev/null and b/install/share/locale/es/LC_MESSAGES/make.mo differ
diff --git a/install/share/locale/fi/LC_MESSAGES/make.mo b/install/share/locale/fi/LC_MESSAGES/make.mo
new file mode 100644
index 0000000..fa05218
Binary files /dev/null and b/install/share/locale/fi/LC_MESSAGES/make.mo differ
diff --git a/install/share/locale/fr/LC_MESSAGES/make.mo b/install/share/locale/fr/LC_MESSAGES/make.mo
new file mode 100644
index 0000000..b86a249
Binary files /dev/null and b/install/share/locale/fr/LC_MESSAGES/make.mo differ
diff --git a/install/share/locale/ga/LC_MESSAGES/make.mo b/install/share/locale/ga/LC_MESSAGES/make.mo
new file mode 100644
index 0000000..bdfd99d
Binary files /dev/null and b/install/share/locale/ga/LC_MESSAGES/make.mo differ
diff --git a/install/share/locale/gl/LC_MESSAGES/make.mo b/install/share/locale/gl/LC_MESSAGES/make.mo
new file mode 100644
index 0000000..f0feca0
Binary files /dev/null and b/install/share/locale/gl/LC_MESSAGES/make.mo differ
diff --git a/install/share/locale/he/LC_MESSAGES/make.mo b/install/share/locale/he/LC_MESSAGES/make.mo
new file mode 100644
index 0000000..50797d1
Binary files /dev/null and b/install/share/locale/he/LC_MESSAGES/make.mo differ
diff --git a/install/share/locale/hr/LC_MESSAGES/make.mo b/install/share/locale/hr/LC_MESSAGES/make.mo
new file mode 100644
index 0000000..c4b3e8e
Binary files /dev/null and b/install/share/locale/hr/LC_MESSAGES/make.mo differ
diff --git a/install/share/locale/id/LC_MESSAGES/make.mo b/install/share/locale/id/LC_MESSAGES/make.mo
new file mode 100644
index 0000000..ce46634
Binary files /dev/null and b/install/share/locale/id/LC_MESSAGES/make.mo differ
diff --git a/install/share/locale/ja/LC_MESSAGES/make.mo b/install/share/locale/ja/LC_MESSAGES/make.mo
new file mode 100644
index 0000000..d344be2
Binary files /dev/null and b/install/share/locale/ja/LC_MESSAGES/make.mo differ
diff --git a/install/share/locale/ko/LC_MESSAGES/make.mo b/install/share/locale/ko/LC_MESSAGES/make.mo
new file mode 100644
index 0000000..e33e02b
Binary files /dev/null and b/install/share/locale/ko/LC_MESSAGES/make.mo differ
diff --git a/install/share/locale/nl/LC_MESSAGES/make.mo b/install/share/locale/nl/LC_MESSAGES/make.mo
new file mode 100644
index 0000000..28adffa
Binary files /dev/null and b/install/share/locale/nl/LC_MESSAGES/make.mo differ
diff --git a/install/share/locale/pl/LC_MESSAGES/make.mo b/install/share/locale/pl/LC_MESSAGES/make.mo
new file mode 100644
index 0000000..8d87298
Binary files /dev/null and b/install/share/locale/pl/LC_MESSAGES/make.mo differ
diff --git a/install/share/locale/pt_BR/LC_MESSAGES/make.mo b/install/share/locale/pt_BR/LC_MESSAGES/make.mo
new file mode 100644
index 0000000..3658679
Binary files /dev/null and b/install/share/locale/pt_BR/LC_MESSAGES/make.mo differ
diff --git a/install/share/locale/ru/LC_MESSAGES/make.mo b/install/share/locale/ru/LC_MESSAGES/make.mo
new file mode 100644
index 0000000..e656e32
Binary files /dev/null and b/install/share/locale/ru/LC_MESSAGES/make.mo differ
diff --git a/install/share/locale/rw/LC_MESSAGES/make.mo b/install/share/locale/rw/LC_MESSAGES/make.mo
new file mode 100644
index 0000000..3bcd6d4
Binary files /dev/null and b/install/share/locale/rw/LC_MESSAGES/make.mo differ
diff --git a/install/share/locale/sv/LC_MESSAGES/make.mo b/install/share/locale/sv/LC_MESSAGES/make.mo
new file mode 100644
index 0000000..3dfc484
Binary files /dev/null and b/install/share/locale/sv/LC_MESSAGES/make.mo differ
diff --git a/install/share/locale/tr/LC_MESSAGES/make.mo b/install/share/locale/tr/LC_MESSAGES/make.mo
new file mode 100644
index 0000000..0717333
Binary files /dev/null and b/install/share/locale/tr/LC_MESSAGES/make.mo differ
diff --git a/install/share/locale/uk/LC_MESSAGES/make.mo b/install/share/locale/uk/LC_MESSAGES/make.mo
new file mode 100644
index 0000000..ed1f2c2
Binary files /dev/null and b/install/share/locale/uk/LC_MESSAGES/make.mo differ
diff --git a/install/share/locale/vi/LC_MESSAGES/make.mo b/install/share/locale/vi/LC_MESSAGES/make.mo
new file mode 100644
index 0000000..a3c334d
Binary files /dev/null and b/install/share/locale/vi/LC_MESSAGES/make.mo differ
diff --git a/install/share/locale/zh_CN/LC_MESSAGES/make.mo b/install/share/locale/zh_CN/LC_MESSAGES/make.mo
new file mode 100644
index 0000000..2342719
Binary files /dev/null and b/install/share/locale/zh_CN/LC_MESSAGES/make.mo differ
diff --git a/install/share/man/man1/qemu-img.1 b/install/share/man/man1/qemu-img.1
new file mode 100644
index 0000000..0af0022
--- /dev/null
+++ b/install/share/man/man1/qemu-img.1
@@ -0,0 +1,629 @@
+.\" Automatically generated by Pod::Man 2.27 (Pod::Simple 3.28)
+.\"
+.\" Standard preamble:
+.\" ========================================================================
+.de Sp \" Vertical space (when we can't use .PP)
+.if t .sp .5v
+.if n .sp
+..
+.de Vb \" Begin verbatim text
+.ft CW
+.nf
+.ne \\$1
+..
+.de Ve \" End verbatim text
+.ft R
+.fi
+..
+.\" Set up some character translations and predefined strings.  \*(-- will
+.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
+.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
+.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
+.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
+.\" nothing in troff, for use with C<>.
+.tr \(*W-
+.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
+.ie n \{\
+.    ds -- \(*W-
+.    ds PI pi
+.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
+.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
+.    ds L" ""
+.    ds R" ""
+.    ds C` ""
+.    ds C' ""
+'br\}
+.el\{\
+.    ds -- \|\(em\|
+.    ds PI \(*p
+.    ds L" ``
+.    ds R" ''
+.    ds C`
+.    ds C'
+'br\}
+.\"
+.\" Escape single quotes in literal strings from groff's Unicode transform.
+.ie \n(.g .ds Aq \(aq
+.el       .ds Aq '
+.\"
+.\" If the F register is turned on, we'll generate index entries on stderr for
+.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
+.\" entries marked with X<> in POD.  Of course, you'll have to process the
+.\" output yourself in some meaningful fashion.
+.\"
+.\" Avoid warning from groff about undefined register 'F'.
+.de IX
+..
+.nr rF 0
+.if \n(.g .if rF .nr rF 1
+.if (\n(rF:(\n(.g==0)) \{
+.    if \nF \{
+.        de IX
+.        tm Index:\\$1\t\\n%\t"\\$2"
+..
+.        if !\nF==2 \{
+.            nr % 0
+.            nr F 2
+.        \}
+.    \}
+.\}
+.rr rF
+.\" ========================================================================
+.\"
+.IX Title "QEMU-IMG 1"
+.TH QEMU-IMG 1 "2014-09-20" " " " "
+.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
+.\" way too many mistakes in technical documents.
+.if n .ad l
+.nh
+.SH "NAME"
+qemu\-img \- QEMU disk image utility
+.SH "SYNOPSIS"
+.IX Header "SYNOPSIS"
+usage: qemu-img command [command options]
+.SH "DESCRIPTION"
+.IX Header "DESCRIPTION"
+qemu-img allows you to create, convert and modify images offline. It can handle
+all image formats supported by \s-1QEMU.\s0
+.PP
+\&\fBWarning:\fR Never use qemu-img to modify images in use by a running virtual
+machine or any other process; this may destroy the image. Also, be aware that
+querying an image that is being modified by another process may encounter
+inconsistent state.
+.SH "OPTIONS"
+.IX Header "OPTIONS"
+The following commands are supported:
+.IP "\fBcheck [\-q] [\-f\fR \fIfmt\fR\fB] [\-\-output=\fR\fIofmt\fR\fB] [\-r [leaks | all]]\fR \fIfilename\fR" 4
+.IX Item "check [-q] [-f fmt] [--output=ofmt] [-r [leaks | all]] filename"
+.PD 0
+.IP "\fBcreate [\-q] [\-f\fR \fIfmt\fR\fB] [\-o\fR \fIoptions\fR\fB]\fR \fIfilename\fR \fB[\fR\fIsize\fR\fB]\fR" 4
+.IX Item "create [-q] [-f fmt] [-o options] filename [size]"
+.IP "\fBcommit [\-q] [\-f\fR \fIfmt\fR\fB] [\-t\fR \fIcache\fR\fB]\fR \fIfilename\fR" 4
+.IX Item "commit [-q] [-f fmt] [-t cache] filename"
+.IP "\fBcompare [\-f\fR \fIfmt\fR\fB] [\-F\fR \fIfmt\fR\fB] [\-p] [\-q] [\-s]\fR \fIfilename1\fR\fB \fR\fIfilename2\fR" 4
+.IX Item "compare [-f fmt] [-F fmt] [-p] [-q] [-s] filename1 filename2"
+.IP "\fBconvert [\-c] [\-p] [\-q] [\-n] [\-f\fR \fIfmt\fR\fB] [\-t\fR \fIcache\fR\fB] [\-O\fR \fIoutput_fmt\fR\fB] [\-o\fR \fIoptions\fR\fB] [\-s\fR \fIsnapshot_id_or_name\fR\fB] [\-l\fR \fIsnapshot_param\fR\fB] [\-S\fR \fIsparse_size\fR\fB]\fR \fIfilename\fR \fB[\fR\fIfilename2\fR \fB[...]]\fR \fIoutput_filename\fR" 4
+.IX Item "convert [-c] [-p] [-q] [-n] [-f fmt] [-t cache] [-O output_fmt] [-o options] [-s snapshot_id_or_name] [-l snapshot_param] [-S sparse_size] filename [filename2 [...]] output_filename"
+.IP "\fBinfo [\-f\fR \fIfmt\fR\fB] [\-\-output=\fR\fIofmt\fR\fB] [\-\-backing\-chain]\fR \fIfilename\fR" 4
+.IX Item "info [-f fmt] [--output=ofmt] [--backing-chain] filename"
+.IP "\fBmap [\-f\fR \fIfmt\fR\fB] [\-\-output=\fR\fIofmt\fR\fB]\fR \fIfilename\fR" 4
+.IX Item "map [-f fmt] [--output=ofmt] filename"
+.IP "\fBsnapshot [\-q] [\-l | \-a\fR \fIsnapshot\fR \fB| \-c\fR \fIsnapshot\fR \fB| \-d\fR \fIsnapshot\fR\fB]\fR \fIfilename\fR" 4
+.IX Item "snapshot [-q] [-l | -a snapshot | -c snapshot | -d snapshot] filename"
+.IP "\fBrebase [\-q] [\-f\fR \fIfmt\fR\fB] [\-t\fR \fIcache\fR\fB] [\-p] [\-u] \-b\fR \fIbacking_file\fR \fB[\-F\fR \fIbacking_fmt\fR\fB]\fR \fIfilename\fR" 4
+.IX Item "rebase [-q] [-f fmt] [-t cache] [-p] [-u] -b backing_file [-F backing_fmt] filename"
+.IP "\fBresize [\-q]\fR \fIfilename\fR \fB[+ | \-]\fR\fIsize\fR" 4
+.IX Item "resize [-q] filename [+ | -]size"
+.IP "\fBamend [\-q] [\-f\fR \fIfmt\fR\fB] \-o\fR \fIoptions\fR\fB \fR\fIfilename\fR" 4
+.IX Item "amend [-q] [-f fmt] -o options filename"
+.PD
+.PP
+Command parameters:
+.IP "\fIfilename\fR" 4
+.IX Item "filename"
+.Vb 1
+\& is a disk image filename
+.Ve
+.IP "\fIfmt\fR" 4
+.IX Item "fmt"
+is the disk image format. It is guessed automatically in most cases. See below
+for a description of the supported disk formats.
+.IP "\fI\-\-backing\-chain\fR" 4
+.IX Item "--backing-chain"
+will enumerate information about backing files in a disk image chain. Refer
+below for further description.
+.IP "\fIsize\fR" 4
+.IX Item "size"
+is the disk image size in bytes. Optional suffixes \f(CW\*(C`k\*(C'\fR or \f(CW\*(C`K\*(C'\fR
+(kilobyte, 1024) \f(CW\*(C`M\*(C'\fR (megabyte, 1024k) and \f(CW\*(C`G\*(C'\fR (gigabyte, 1024M)
+and T (terabyte, 1024G) are supported.  \f(CW\*(C`b\*(C'\fR is ignored.
+.IP "\fIoutput_filename\fR" 4
+.IX Item "output_filename"
+is the destination disk image filename
+.IP "\fIoutput_fmt\fR" 4
+.IX Item "output_fmt"
+.Vb 1
+\& is the destination format
+.Ve
+.IP "\fIoptions\fR" 4
+.IX Item "options"
+is a comma separated list of format specific options in a
+name=value format. Use \f(CW\*(C`\-o ?\*(C'\fR for an overview of the options supported
+by the used format or see the format descriptions below for details.
+.IP "\fIsnapshot_param\fR" 4
+.IX Item "snapshot_param"
+is param used for internal snapshot, format is
+\&'snapshot.id=[\s-1ID\s0],snapshot.name=[\s-1NAME\s0]' or '[\s-1ID_OR_NAME\s0]'
+.IP "\fIsnapshot_id_or_name\fR" 4
+.IX Item "snapshot_id_or_name"
+is deprecated, use snapshot_param instead
+.IP "\fI\-c\fR" 4
+.IX Item "-c"
+indicates that target image must be compressed (qcow format only)
+.IP "\fI\-h\fR" 4
+.IX Item "-h"
+with or without a command shows help and lists the supported formats
+.IP "\fI\-p\fR" 4
+.IX Item "-p"
+display progress bar (compare, convert and rebase commands only).
+If the \fI\-p\fR option is not used for a command that supports it, the
+progress is reported when the process receives a \f(CW\*(C`SIGUSR1\*(C'\fR signal.
+.IP "\fI\-q\fR" 4
+.IX Item "-q"
+Quiet mode \- do not print any output (except errors). There's no progress bar
+in case both \fI\-q\fR and \fI\-p\fR options are used.
+.IP "\fI\-S\fR \fIsize\fR" 4
+.IX Item "-S size"
+indicates the consecutive number of bytes that must contain only zeros
+for qemu-img to create a sparse image during conversion. This value is rounded
+down to the nearest 512 bytes. You may use the common size suffixes like
+\&\f(CW\*(C`k\*(C'\fR for kilobytes.
+.IP "\fI\-t\fR \fIcache\fR" 4
+.IX Item "-t cache"
+specifies the cache mode that should be used with the (destination) file. See
+the documentation of the emulator's \f(CW\*(C`\-drive cache=...\*(C'\fR option for allowed
+values.
+.PP
+Parameters to snapshot subcommand:
+.IP "\fBsnapshot\fR" 4
+.IX Item "snapshot"
+is the name of the snapshot to create, apply or delete
+.IP "\fB\-a\fR" 4
+.IX Item "-a"
+applies a snapshot (revert disk to saved state)
+.IP "\fB\-c\fR" 4
+.IX Item "-c"
+creates a snapshot
+.IP "\fB\-d\fR" 4
+.IX Item "-d"
+deletes a snapshot
+.IP "\fB\-l\fR" 4
+.IX Item "-l"
+lists all snapshots in the given image
+.PP
+Parameters to compare subcommand:
+.IP "\fB\-f\fR" 4
+.IX Item "-f"
+First image format
+.IP "\fB\-F\fR" 4
+.IX Item "-F"
+Second image format
+.IP "\fB\-s\fR" 4
+.IX Item "-s"
+Strict mode \- fail on on different image size or sector allocation
+.PP
+Parameters to convert subcommand:
+.IP "\fB\-n\fR" 4
+.IX Item "-n"
+Skip the creation of the target volume
+.PP
+Command description:
+.IP "\fBcheck [\-f\fR \fIfmt\fR\fB] [\-\-output=\fR\fIofmt\fR\fB] [\-r [leaks | all]]\fR \fIfilename\fR" 4
+.IX Item "check [-f fmt] [--output=ofmt] [-r [leaks | all]] filename"
+Perform a consistency check on the disk image \fIfilename\fR. The command can
+output in the format \fIofmt\fR which is either \f(CW\*(C`human\*(C'\fR or \f(CW\*(C`json\*(C'\fR.
+.Sp
+If \f(CW\*(C`\-r\*(C'\fR is specified, qemu-img tries to repair any inconsistencies found
+during the check. \f(CW\*(C`\-r leaks\*(C'\fR repairs only cluster leaks, whereas
+\&\f(CW\*(C`\-r all\*(C'\fR fixes all kinds of errors, with a higher risk of choosing the
+wrong fix or hiding corruption that has already occurred.
+.Sp
+Only the formats \f(CW\*(C`qcow2\*(C'\fR, \f(CW\*(C`qed\*(C'\fR and \f(CW\*(C`vdi\*(C'\fR support
+consistency checks.
+.Sp
+In case the image does not have any inconsistencies, check exits with \f(CW0\fR.
+Other exit codes indicate the kind of inconsistency found or if another error
+occurred. The following table summarizes all exit codes of the check subcommand:
+.RS 4
+.IP "\fB0\fR" 4
+.IX Item "0"
+Check completed, the image is (now) consistent
+.IP "\fB1\fR" 4
+.IX Item "1"
+Check not completed because of internal errors
+.IP "\fB2\fR" 4
+.IX Item "2"
+Check completed, image is corrupted
+.IP "\fB3\fR" 4
+.IX Item "3"
+Check completed, image has leaked clusters, but is not corrupted
+.IP "\fB63\fR" 4
+.IX Item "63"
+Checks are not supported by the image format
+.RE
+.RS 4
+.Sp
+If \f(CW\*(C`\-r\*(C'\fR is specified, exit codes representing the image state refer to the
+state after (the attempt at) repairing it. That is, a successful \f(CW\*(C`\-r all\*(C'\fR
+will yield the exit code 0, independently of the image state before.
+.RE
+.IP "\fBcreate [\-f\fR \fIfmt\fR\fB] [\-o\fR \fIoptions\fR\fB]\fR \fIfilename\fR \fB[\fR\fIsize\fR\fB]\fR" 4
+.IX Item "create [-f fmt] [-o options] filename [size]"
+Create the new disk image \fIfilename\fR of size \fIsize\fR and format
+\&\fIfmt\fR. Depending on the file format, you can add one or more \fIoptions\fR
+that enable additional features of this format.
+.Sp
+If the option \fIbacking_file\fR is specified, then the image will record
+only the differences from \fIbacking_file\fR. No size needs to be specified in
+this case. \fIbacking_file\fR will never be modified unless you use the
+\&\f(CW\*(C`commit\*(C'\fR monitor command (or qemu-img commit).
+.Sp
+The size can also be specified using the \fIsize\fR option with \f(CW\*(C`\-o\*(C'\fR,
+it doesn't need to be specified separately in this case.
+.IP "\fBcommit [\-f\fR \fIfmt\fR\fB] [\-t\fR \fIcache\fR\fB]\fR \fIfilename\fR" 4
+.IX Item "commit [-f fmt] [-t cache] filename"
+Commit the changes recorded in \fIfilename\fR in its base image or backing file.
+If the backing file is smaller than the snapshot, then the backing file will be
+resized to be the same size as the snapshot.  If the snapshot is smaller than
+the backing file, the backing file will not be truncated.  If you want the
+backing file to match the size of the smaller snapshot, you can safely truncate
+it yourself once the commit operation successfully completes.
+.IP "\fBcompare [\-f\fR \fIfmt\fR\fB] [\-F\fR \fIfmt\fR\fB] [\-p] [\-s] [\-q]\fR \fIfilename1\fR\fB \fR\fIfilename2\fR" 4
+.IX Item "compare [-f fmt] [-F fmt] [-p] [-s] [-q] filename1 filename2"
+Check if two images have the same content. You can compare images with
+different format or settings.
+.Sp
+The format is probed unless you specify it by \fI\-f\fR (used for
+\&\fIfilename1\fR) and/or \fI\-F\fR (used for \fIfilename2\fR) option.
+.Sp
+By default, images with different size are considered identical if the larger
+image contains only unallocated and/or zeroed sectors in the area after the end
+of the other image. In addition, if any sector is not allocated in one image
+and contains only zero bytes in the second one, it is evaluated as equal. You
+can use Strict mode by specifying the \fI\-s\fR option. When compare runs in
+Strict mode, it fails in case image size differs or a sector is allocated in
+one image and is not allocated in the second one.
+.Sp
+By default, compare prints out a result message. This message displays
+information that both images are same or the position of the first different
+byte. In addition, result message can report different image size in case
+Strict mode is used.
+.Sp
+Compare exits with \f(CW0\fR in case the images are equal and with \f(CW1\fR
+in case the images differ. Other exit codes mean an error occurred during
+execution and standard error output should contain an error message.
+The following table sumarizes all exit codes of the compare subcommand:
+.RS 4
+.IP "\fB0\fR" 4
+.IX Item "0"
+Images are identical
+.IP "\fB1\fR" 4
+.IX Item "1"
+Images differ
+.IP "\fB2\fR" 4
+.IX Item "2"
+Error on opening an image
+.IP "\fB3\fR" 4
+.IX Item "3"
+Error on checking a sector allocation
+.IP "\fB4\fR" 4
+.IX Item "4"
+Error on reading data
+.RE
+.RS 4
+.RE
+.IP "\fBconvert [\-c] [\-p] [\-n] [\-f\fR \fIfmt\fR\fB] [\-t\fR \fIcache\fR\fB] [\-O\fR \fIoutput_fmt\fR\fB] [\-o\fR \fIoptions\fR\fB] [\-s\fR \fIsnapshot_id_or_name\fR\fB] [\-l\fR \fIsnapshot_param\fR\fB] [\-S\fR \fIsparse_size\fR\fB]\fR \fIfilename\fR \fB[\fR\fIfilename2\fR \fB[...]]\fR \fIoutput_filename\fR" 4
+.IX Item "convert [-c] [-p] [-n] [-f fmt] [-t cache] [-O output_fmt] [-o options] [-s snapshot_id_or_name] [-l snapshot_param] [-S sparse_size] filename [filename2 [...]] output_filename"
+Convert the disk image \fIfilename\fR or a snapshot \fIsnapshot_param\fR(\fIsnapshot_id_or_name\fR is deprecated)
+to disk image \fIoutput_filename\fR using format \fIoutput_fmt\fR. It can be optionally compressed (\f(CW\*(C`\-c\*(C'\fR
+option) or use any format specific options like encryption (\f(CW\*(C`\-o\*(C'\fR option).
+.Sp
+Only the formats \f(CW\*(C`qcow\*(C'\fR and \f(CW\*(C`qcow2\*(C'\fR support compression. The
+compression is read-only. It means that if a compressed sector is
+rewritten, then it is rewritten as uncompressed data.
+.Sp
+Image conversion is also useful to get smaller image when using a
+growable format such as \f(CW\*(C`qcow\*(C'\fR or \f(CW\*(C`cow\*(C'\fR: the empty sectors
+are detected and suppressed from the destination image.
+.Sp
+\&\fIsparse_size\fR indicates the consecutive number of bytes (defaults to 4k)
+that must contain only zeros for qemu-img to create a sparse image during
+conversion. If \fIsparse_size\fR is 0, the source will not be scanned for
+unallocated or zero sectors, and the destination image will always be
+fully allocated.
+.Sp
+You can use the \fIbacking_file\fR option to force the output image to be
+created as a copy on write image of the specified base image; the
+\&\fIbacking_file\fR should have the same content as the input's base image,
+however the path, image format, etc may differ.
+.Sp
+If the \f(CW\*(C`\-n\*(C'\fR option is specified, the target volume creation will be
+skipped. This is useful for formats such as \f(CW\*(C`rbd\*(C'\fR if the target
+volume has already been created with site specific options that cannot
+be supplied through qemu-img.
+.IP "\fBinfo [\-f\fR \fIfmt\fR\fB] [\-\-output=\fR\fIofmt\fR\fB] [\-\-backing\-chain]\fR \fIfilename\fR" 4
+.IX Item "info [-f fmt] [--output=ofmt] [--backing-chain] filename"
+Give information about the disk image \fIfilename\fR. Use it in
+particular to know the size reserved on disk which can be different
+from the displayed size. If \s-1VM\s0 snapshots are stored in the disk image,
+they are displayed too. The command can output in the format \fIofmt\fR
+which is either \f(CW\*(C`human\*(C'\fR or \f(CW\*(C`json\*(C'\fR.
+.Sp
+If a disk image has a backing file chain, information about each disk image in
+the chain can be recursively enumerated by using the option \f(CW\*(C`\-\-backing\-chain\*(C'\fR.
+.Sp
+For instance, if you have an image chain like:
+.Sp
+.Vb 1
+\&        base.qcow2 <\- snap1.qcow2 <\- snap2.qcow2
+.Ve
+.Sp
+To enumerate information about each disk image in the above chain, starting from top to base, do:
+.Sp
+.Vb 1
+\&        qemu\-img info \-\-backing\-chain snap2.qcow2
+.Ve
+.IP "\fBmap [\-f\fR \fIfmt\fR\fB] [\-\-output=\fR\fIofmt\fR\fB]\fR \fIfilename\fR" 4
+.IX Item "map [-f fmt] [--output=ofmt] filename"
+Dump the metadata of image \fIfilename\fR and its backing file chain.
+In particular, this commands dumps the allocation state of every sector
+of \fIfilename\fR, together with the topmost file that allocates it in
+the backing file chain.
+.Sp
+Two option formats are possible.  The default format (\f(CW\*(C`human\*(C'\fR)
+only dumps known-nonzero areas of the file.  Known-zero parts of the
+file are omitted altogether, and likewise for parts that are not allocated
+throughout the chain.  \fBqemu-img\fR output will identify a file
+from where the data can be read, and the offset in the file.  Each line
+will include four fields, the first three of which are hexadecimal
+numbers.  For example the first line of:
+.Sp
+.Vb 3
+\&        Offset          Length          Mapped to       File
+\&        0               0x20000         0x50000         /tmp/overlay.qcow2
+\&        0x100000        0x10000         0x95380000      /tmp/backing.qcow2
+.Ve
+.Sp
+means that 0x20000 (131072) bytes starting at offset 0 in the image are
+available in /tmp/overlay.qcow2 (opened in \f(CW\*(C`raw\*(C'\fR format) starting
+at offset 0x50000 (327680).  Data that is compressed, encrypted, or
+otherwise not available in raw format will cause an error if \f(CW\*(C`human\*(C'\fR
+format is in use.  Note that file names can include newlines, thus it is
+not safe to parse this output format in scripts.
+.Sp
+The alternative format \f(CW\*(C`json\*(C'\fR will return an array of dictionaries
+in \s-1JSON\s0 format.  It will include similar information in
+the \f(CW\*(C`start\*(C'\fR, \f(CW\*(C`length\*(C'\fR, \f(CW\*(C`offset\*(C'\fR fields;
+it will also include other more specific information:
+.RS 4
+.IP "\-" 4
+whether the sectors contain actual data or not (boolean field \f(CW\*(C`data\*(C'\fR;
+if false, the sectors are either unallocated or stored as optimized
+all-zero clusters);
+.IP "\-" 4
+whether the data is known to read as zero (boolean field \f(CW\*(C`zero\*(C'\fR);
+.IP "\-" 4
+in order to make the output shorter, the target file is expressed as
+a \f(CW\*(C`depth\*(C'\fR; for example, a depth of 2 refers to the backing file
+of the backing file of \fIfilename\fR.
+.RE
+.RS 4
+.Sp
+In \s-1JSON\s0 format, the \f(CW\*(C`offset\*(C'\fR field is optional; it is absent in
+cases where \f(CW\*(C`human\*(C'\fR format would omit the entry or exit with an error.
+If \f(CW\*(C`data\*(C'\fR is false and the \f(CW\*(C`offset\*(C'\fR field is present, the
+corresponding sectors in the file are not yet in use, but they are
+preallocated.
+.Sp
+For more information, consult \fIinclude/block/block.h\fR in \s-1QEMU\s0's
+source code.
+.RE
+.IP "\fBsnapshot [\-l | \-a\fR \fIsnapshot\fR \fB| \-c\fR \fIsnapshot\fR \fB| \-d\fR \fIsnapshot\fR \fB]\fR \fIfilename\fR" 4
+.IX Item "snapshot [-l | -a snapshot | -c snapshot | -d snapshot ] filename"
+List, apply, create or delete snapshots in image \fIfilename\fR.
+.IP "\fBrebase [\-f\fR \fIfmt\fR\fB] [\-t\fR \fIcache\fR\fB] [\-p] [\-u] \-b\fR \fIbacking_file\fR \fB[\-F\fR \fIbacking_fmt\fR\fB]\fR \fIfilename\fR" 4
+.IX Item "rebase [-f fmt] [-t cache] [-p] [-u] -b backing_file [-F backing_fmt] filename"
+Changes the backing file of an image. Only the formats \f(CW\*(C`qcow2\*(C'\fR and
+\&\f(CW\*(C`qed\*(C'\fR support changing the backing file.
+.Sp
+The backing file is changed to \fIbacking_file\fR and (if the image format of
+\&\fIfilename\fR supports this) the backing file format is changed to
+\&\fIbacking_fmt\fR. If \fIbacking_file\fR is specified as "" (the empty
+string), then the image is rebased onto no backing file (i.e. it will exist
+independently of any backing file).
+.Sp
+There are two different modes in which \f(CW\*(C`rebase\*(C'\fR can operate:
+.RS 4
+.IP "\fBSafe mode\fR" 4
+.IX Item "Safe mode"
+This is the default mode and performs a real rebase operation. The new backing
+file may differ from the old one and qemu-img rebase will take care of keeping
+the guest-visible content of \fIfilename\fR unchanged.
+.Sp
+In order to achieve this, any clusters that differ between \fIbacking_file\fR
+and the old backing file of \fIfilename\fR are merged into \fIfilename\fR
+before actually changing the backing file.
+.Sp
+Note that the safe mode is an expensive operation, comparable to converting
+an image. It only works if the old backing file still exists.
+.IP "\fBUnsafe mode\fR" 4
+.IX Item "Unsafe mode"
+qemu-img uses the unsafe mode if \f(CW\*(C`\-u\*(C'\fR is specified. In this mode, only the
+backing file name and format of \fIfilename\fR is changed without any checks
+on the file contents. The user must take care of specifying the correct new
+backing file, or the guest-visible content of the image will be corrupted.
+.Sp
+This mode is useful for renaming or moving the backing file to somewhere else.
+It can be used without an accessible old backing file, i.e. you can use it to
+fix an image whose backing file has already been moved/renamed.
+.RE
+.RS 4
+.Sp
+You can use \f(CW\*(C`rebase\*(C'\fR to perform a \*(L"diff\*(R" operation on two
+disk images.  This can be useful when you have copied or cloned
+a guest, and you want to get back to a thin image on top of a
+template or base image.
+.Sp
+Say that \f(CW\*(C`base.img\*(C'\fR has been cloned as \f(CW\*(C`modified.img\*(C'\fR by
+copying it, and that the \f(CW\*(C`modified.img\*(C'\fR guest has run so there
+are now some changes compared to \f(CW\*(C`base.img\*(C'\fR.  To construct a thin
+image called \f(CW\*(C`diff.qcow2\*(C'\fR that contains just the differences, do:
+.Sp
+.Vb 2
+\&        qemu\-img create \-f qcow2 \-b modified.img diff.qcow2
+\&        qemu\-img rebase \-b base.img diff.qcow2
+.Ve
+.Sp
+At this point, \f(CW\*(C`modified.img\*(C'\fR can be discarded, since
+\&\f(CW\*(C`base.img + diff.qcow2\*(C'\fR contains the same information.
+.RE
+.IP "\fBresize\fR \fIfilename\fR \fB[+ | \-]\fR\fIsize\fR" 4
+.IX Item "resize filename [+ | -]size"
+Change the disk image as if it had been created with \fIsize\fR.
+.Sp
+Before using this command to shrink a disk image, you \s-1MUST\s0 use file system and
+partitioning tools inside the \s-1VM\s0 to reduce allocated file systems and partition
+sizes accordingly.  Failure to do so will result in data loss!
+.Sp
+After using this command to grow a disk image, you must use file system and
+partitioning tools inside the \s-1VM\s0 to actually begin using the new space on the
+device.
+.IP "\fBamend [\-f\fR \fIfmt\fR\fB] \-o\fR \fIoptions\fR\fB \fR\fIfilename\fR" 4
+.IX Item "amend [-f fmt] -o options filename"
+Amends the image format specific \fIoptions\fR for the image file
+\&\fIfilename\fR. Not all file formats support this operation.
+.SH "NOTES"
+.IX Header "NOTES"
+Supported image file formats:
+.IP "\fBraw\fR" 4
+.IX Item "raw"
+Raw disk image format (default). This format has the advantage of
+being simple and easily exportable to all other emulators. If your
+file system supports \fIholes\fR (for example in ext2 or ext3 on
+Linux or \s-1NTFS\s0 on Windows), then only the written sectors will reserve
+space. Use \f(CW\*(C`qemu\-img info\*(C'\fR to know the real size used by the
+image or \f(CW\*(C`ls \-ls\*(C'\fR on Unix/Linux.
+.IP "\fBqcow2\fR" 4
+.IX Item "qcow2"
+\&\s-1QEMU\s0 image format, the most versatile format. Use it to have smaller
+images (useful if your filesystem does not supports holes, for example
+on Windows), optional \s-1AES\s0 encryption, zlib based compression and
+support of multiple \s-1VM\s0 snapshots.
+.Sp
+Supported options:
+.RS 4
+.ie n .IP """compat""" 4
+.el .IP "\f(CWcompat\fR" 4
+.IX Item "compat"
+Determines the qcow2 version to use. \f(CW\*(C`compat=0.10\*(C'\fR uses the
+traditional image format that can be read by any \s-1QEMU\s0 since 0.10.
+\&\f(CW\*(C`compat=1.1\*(C'\fR enables image format extensions that only \s-1QEMU 1.1\s0 and
+newer understand (this is the default). Amongst others, this includes zero
+clusters, which allow efficient copy-on-read for sparse images.
+.ie n .IP """backing_file""" 4
+.el .IP "\f(CWbacking_file\fR" 4
+.IX Item "backing_file"
+File name of a base image (see \fBcreate\fR subcommand)
+.ie n .IP """backing_fmt""" 4
+.el .IP "\f(CWbacking_fmt\fR" 4
+.IX Item "backing_fmt"
+Image format of the base image
+.ie n .IP """encryption""" 4
+.el .IP "\f(CWencryption\fR" 4
+.IX Item "encryption"
+If this option is set to \f(CW\*(C`on\*(C'\fR, the image is encrypted with 128\-bit AES-CBC.
+.Sp
+The use of encryption in qcow and qcow2 images is considered to be flawed by
+modern cryptography standards, suffering from a number of design problems:
+.RS 4
+.IP "\-<The AES-CBC cipher is used with predictable initialization vectors based>" 4
+.IX Item "-<The AES-CBC cipher is used with predictable initialization vectors based>"
+on the sector number. This makes it vulnerable to chosen plaintext attacks
+which can reveal the existence of encrypted data.
+.IP "\-<The user passphrase is directly used as the encryption key. A poorly>" 4
+.IX Item "-<The user passphrase is directly used as the encryption key. A poorly>"
+chosen or short passphrase will compromise the security of the encryption.
+.IP "\-<In the event of the passphrase being compromised there is no way to>" 4
+.IX Item "-<In the event of the passphrase being compromised there is no way to>"
+change the passphrase to protect data in any qcow images. The files must
+be cloned, using a different encryption passphrase in the new file. The
+original file must then be securely erased using a program like shred,
+though even this is ineffective with many modern storage technologies.
+.RE
+.RS 4
+.Sp
+Use of qcow / qcow2 encryption is thus strongly discouraged. Users are
+recommended to use an alternative encryption technology such as the
+Linux dm-crypt / \s-1LUKS\s0 system.
+.RE
+.ie n .IP """cluster_size""" 4
+.el .IP "\f(CWcluster_size\fR" 4
+.IX Item "cluster_size"
+Changes the qcow2 cluster size (must be between 512 and 2M). Smaller cluster
+sizes can improve the image file size whereas larger cluster sizes generally
+provide better performance.
+.ie n .IP """preallocation""" 4
+.el .IP "\f(CWpreallocation\fR" 4
+.IX Item "preallocation"
+Preallocation mode (allowed values: off, metadata). An image with preallocated
+metadata is initially larger but can improve performance when the image needs
+to grow.
+.ie n .IP """lazy_refcounts""" 4
+.el .IP "\f(CWlazy_refcounts\fR" 4
+.IX Item "lazy_refcounts"
+If this option is set to \f(CW\*(C`on\*(C'\fR, reference count updates are postponed with
+the goal of avoiding metadata I/O and improving performance. This is
+particularly interesting with \fBcache=writethrough\fR which doesn't batch
+metadata updates. The tradeoff is that after a host crash, the reference count
+tables must be rebuilt, i.e. on the next open an (automatic) \f(CW\*(C`qemu\-img
+check \-r all\*(C'\fR is required, which may take some time.
+.Sp
+This option can only be enabled if \f(CW\*(C`compat=1.1\*(C'\fR is specified.
+.ie n .IP """nocow""" 4
+.el .IP "\f(CWnocow\fR" 4
+.IX Item "nocow"
+If this option is set to \f(CW\*(C`on\*(C'\fR, it will turn off \s-1COW\s0 of the file. It's only
+valid on btrfs, no effect on other file systems.
+.Sp
+Btrfs has low performance when hosting a \s-1VM\s0 image file, even more when the guest
+on the \s-1VM\s0 also using btrfs as file system. Turning off \s-1COW\s0 is a way to mitigate
+this bad performance. Generally there are two ways to turn off \s-1COW\s0 on btrfs:
+a) Disable it by mounting with nodatacow, then all newly created files will be
+\&\s-1NOCOW.\s0 b) For an empty file, add the \s-1NOCOW\s0 file attribute. That's what this option
+does.
+.Sp
+Note: this option is only valid to new or empty files. If there is an existing
+file which is \s-1COW\s0 and has data blocks already, it couldn't be changed to \s-1NOCOW\s0
+by setting \f(CW\*(C`nocow=on\*(C'\fR. One can issue \f(CW\*(C`lsattr filename\*(C'\fR to check if
+the \s-1NOCOW\s0 flag is set or not (Capital 'C' is \s-1NOCOW\s0 flag).
+.RE
+.RS 4
+.RE
+.IP "\fBOther\fR" 4
+.IX Item "Other"
+\&\s-1QEMU\s0 also supports various other image file formats for compatibility with
+older \s-1QEMU\s0 versions or other hypervisors, including \s-1VMDK, VDI, VHD \s0(vpc), \s-1VHDX,\s0
+qcow1 and \s-1QED.\s0 For a full list of supported formats see \f(CW\*(C`qemu\-img \-\-help\*(C'\fR.
+For a more detailed description of these formats, see the \s-1QEMU\s0 Emulation User
+Documentation.
+.Sp
+The main purpose of the block drivers for these formats is image conversion.
+For running VMs, it is recommended to convert the disk images to either raw or
+qcow2 in order to achieve good performance.
+.SH "SEE ALSO"
+.IX Header "SEE ALSO"
+The \s-1HTML\s0 documentation of \s-1QEMU\s0 for more precise information and Linux
+user mode emulator invocation.
+.SH "AUTHOR"
+.IX Header "AUTHOR"
+Fabrice Bellard
diff --git a/install/share/man/man1/qemu.1 b/install/share/man/man1/qemu.1
new file mode 100644
index 0000000..4bbb1ff
--- /dev/null
+++ b/install/share/man/man1/qemu.1
@@ -0,0 +1,2755 @@
+.\" Automatically generated by Pod::Man 2.27 (Pod::Simple 3.28)
+.\"
+.\" Standard preamble:
+.\" ========================================================================
+.de Sp \" Vertical space (when we can't use .PP)
+.if t .sp .5v
+.if n .sp
+..
+.de Vb \" Begin verbatim text
+.ft CW
+.nf
+.ne \\$1
+..
+.de Ve \" End verbatim text
+.ft R
+.fi
+..
+.\" Set up some character translations and predefined strings.  \*(-- will
+.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
+.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
+.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
+.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
+.\" nothing in troff, for use with C<>.
+.tr \(*W-
+.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
+.ie n \{\
+.    ds -- \(*W-
+.    ds PI pi
+.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
+.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
+.    ds L" ""
+.    ds R" ""
+.    ds C` ""
+.    ds C' ""
+'br\}
+.el\{\
+.    ds -- \|\(em\|
+.    ds PI \(*p
+.    ds L" ``
+.    ds R" ''
+.    ds C`
+.    ds C'
+'br\}
+.\"
+.\" Escape single quotes in literal strings from groff's Unicode transform.
+.ie \n(.g .ds Aq \(aq
+.el       .ds Aq '
+.\"
+.\" If the F register is turned on, we'll generate index entries on stderr for
+.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
+.\" entries marked with X<> in POD.  Of course, you'll have to process the
+.\" output yourself in some meaningful fashion.
+.\"
+.\" Avoid warning from groff about undefined register 'F'.
+.de IX
+..
+.nr rF 0
+.if \n(.g .if rF .nr rF 1
+.if (\n(rF:(\n(.g==0)) \{
+.    if \nF \{
+.        de IX
+.        tm Index:\\$1\t\\n%\t"\\$2"
+..
+.        if !\nF==2 \{
+.            nr % 0
+.            nr F 2
+.        \}
+.    \}
+.\}
+.rr rF
+.\" ========================================================================
+.\"
+.IX Title "QEMU 1"
+.TH QEMU 1 "2014-09-20" " " " "
+.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
+.\" way too many mistakes in technical documents.
+.if n .ad l
+.nh
+.SH "NAME"
+qemu\-doc \- QEMU Emulator User Documentation
+.SH "SYNOPSIS"
+.IX Header "SYNOPSIS"
+usage: qemu\-system\-i386 [options] [\fIdisk_image\fR]
+.SH "DESCRIPTION"
+.IX Header "DESCRIPTION"
+The \s-1QEMU PC\s0 System emulator simulates the
+following peripherals:
+.IP "\-" 4
+i440FX host \s-1PCI\s0 bridge and \s-1PIIX3 PCI\s0 to \s-1ISA\s0 bridge
+.IP "\-" 4
+Cirrus \s-1CLGD 5446 PCI VGA\s0 card or dummy \s-1VGA\s0 card with Bochs \s-1VESA\s0
+extensions (hardware level, including all non standard modes).
+.IP "\-" 4
+\&\s-1PS/2\s0 mouse and keyboard
+.IP "\-" 4
+2 \s-1PCI IDE\s0 interfaces with hard disk and CD-ROM support
+.IP "\-" 4
+Floppy disk
+.IP "\-" 4
+\&\s-1PCI\s0 and \s-1ISA\s0 network adapters
+.IP "\-" 4
+Serial ports
+.IP "\-" 4
+Creative SoundBlaster 16 sound card
+.IP "\-" 4
+\&\s-1ENSONIQ\s0 AudioPCI \s-1ES1370\s0 sound card
+.IP "\-" 4
+Intel 82801AA \s-1AC97\s0 Audio compatible sound card
+.IP "\-" 4
+Intel \s-1HD\s0 Audio Controller and \s-1HDA\s0 codec
+.IP "\-" 4
+Adlib (\s-1OPL2\s0) \- Yamaha \s-1YM3812\s0 compatible chip
+.IP "\-" 4
+Gravis Ultrasound \s-1GF1\s0 sound card
+.IP "\-" 4
+\&\s-1CS4231A\s0 compatible sound card
+.IP "\-" 4
+\&\s-1PCI UHCI USB\s0 controller and a virtual \s-1USB\s0 hub.
+.PP
+\&\s-1SMP\s0 is supported with up to 255 CPUs.
+.PP
+\&\s-1QEMU\s0 uses the \s-1PC BIOS\s0 from the Seabios project and the Plex86/Bochs \s-1LGPL
+VGA BIOS.\s0
+.PP
+\&\s-1QEMU\s0 uses \s-1YM3812\s0 emulation by Tatsuyuki Satoh.
+.PP
+\&\s-1QEMU\s0 uses \s-1GUS\s0 emulation (\s-1GUSEMU32\s0 <\fBhttp://www.deinmeister.de/gusemu/\fR>)
+by Tibor \*(L"\s-1TS\*(R"\s0 Schütz.
+.PP
+Note that, by default, \s-1GUS\s0 shares \s-1\fIIRQ\s0\fR\|(7) with parallel ports and so
+\&\s-1QEMU\s0 must be told to not have parallel ports to have working \s-1GUS.\s0
+.PP
+.Vb 1
+\&        qemu\-system\-i386 dos.img \-soundhw gus \-parallel none
+.Ve
+.PP
+Alternatively:
+.PP
+.Vb 1
+\&        qemu\-system\-i386 dos.img \-device gus,irq=5
+.Ve
+.PP
+Or some other unclaimed \s-1IRQ.\s0
+.PP
+\&\s-1CS4231A\s0 is the chip used in Windows Sound System and \s-1GUSMAX\s0 products
+.SH "OPTIONS"
+.IX Header "OPTIONS"
+\&\fIdisk_image\fR is a raw hard disk image for \s-1IDE\s0 hard disk 0. Some
+targets do not need a disk image.
+.PP
+Standard options:
+.IP "\fB\-h\fR" 4
+.IX Item "-h"
+Display help and exit
+.IP "\fB\-version\fR" 4
+.IX Item "-version"
+Display version information and exit
+.IP "\fB\-machine [type=]\fR\fIname\fR\fB[,prop=\fR\fIvalue\fR\fB[,...]]\fR" 4
+.IX Item "-machine [type=]name[,prop=value[,...]]"
+Select the emulated machine by \fIname\fR. Use \f(CW\*(C`\-machine help\*(C'\fR to list
+available machines. Supported machine properties are:
+.RS 4
+.IP "\fBaccel=\fR\fIaccels1\fR\fB[:\fR\fIaccels2\fR\fB[:...]]\fR" 4
+.IX Item "accel=accels1[:accels2[:...]]"
+This is used to enable an accelerator. Depending on the target architecture,
+kvm, xen, or tcg can be available. By default, tcg is used. If there is more
+than one accelerator specified, the next one is used if the previous one fails
+to initialize.
+.IP "\fBkernel_irqchip=on|off\fR" 4
+.IX Item "kernel_irqchip=on|off"
+Enables in-kernel irqchip support for the chosen accelerator when available.
+.IP "\fBkvm_shadow_mem=size\fR" 4
+.IX Item "kvm_shadow_mem=size"
+Defines the size of the \s-1KVM\s0 shadow \s-1MMU.\s0
+.IP "\fBdump\-guest\-core=on|off\fR" 4
+.IX Item "dump-guest-core=on|off"
+Include guest memory in a core dump. The default is on.
+.IP "\fBmem\-merge=on|off\fR" 4
+.IX Item "mem-merge=on|off"
+Enables or disables memory merge support. This feature, when supported by
+the host, de-duplicates identical memory pages among VMs instances
+(enabled by default).
+.RE
+.RS 4
+.RE
+.IP "\fB\-cpu\fR \fImodel\fR" 4
+.IX Item "-cpu model"
+Select \s-1CPU\s0 model (\f(CW\*(C`\-cpu help\*(C'\fR for list and additional feature selection)
+.IP "\fB\-smp [cpus=]\fR\fIn\fR\fB[,cores=\fR\fIcores\fR\fB][,threads=\fR\fIthreads\fR\fB][,sockets=\fR\fIsockets\fR\fB][,maxcpus=\fR\fImaxcpus\fR\fB]\fR" 4
+.IX Item "-smp [cpus=]n[,cores=cores][,threads=threads][,sockets=sockets][,maxcpus=maxcpus]"
+Simulate an \s-1SMP\s0 system with \fIn\fR CPUs. On the \s-1PC\s0 target, up to 255
+CPUs are supported. On Sparc32 target, Linux limits the number of usable CPUs
+to 4.
+For the \s-1PC\s0 target, the number of \fIcores\fR per socket, the number
+of \fIthreads\fR per cores and the total number of \fIsockets\fR can be
+specified. Missing values will be computed. If any on the three values is
+given, the total number of CPUs \fIn\fR can be omitted. \fImaxcpus\fR
+specifies the maximum number of hotpluggable CPUs.
+.IP "\fB\-numa node[,mem=\fR\fIsize\fR\fB][,cpus=\fR\fIcpu[\-cpu]\fR\fB][,nodeid=\fR\fInode\fR\fB]\fR" 4
+.IX Item "-numa node[,mem=size][,cpus=cpu[-cpu]][,nodeid=node]"
+.PD 0
+.IP "\fB\-numa node[,memdev=\fR\fIid\fR\fB][,cpus=\fR\fIcpu[\-cpu]\fR\fB][,nodeid=\fR\fInode\fR\fB]\fR" 4
+.IX Item "-numa node[,memdev=id][,cpus=cpu[-cpu]][,nodeid=node]"
+.PD
+Simulate a multi node \s-1NUMA\s0 system. If \fBmem\fR, \fBmemdev\fR
+and \fBcpus\fR are omitted, resources are split equally. Also, note
+that the \-\fBnuma\fR option doesn't allocate any of the specified
+resources. That is, it just assigns existing resources to \s-1NUMA\s0 nodes. This
+means that one still has to use the \fB\-m\fR, \fB\-smp\fR options
+to allocate \s-1RAM\s0 and VCPUs respectively, and possibly \fB\-object\fR
+to specify the memory backend for the \fBmemdev\fR suboption.
+.Sp
+\&\fBmem\fR and \fBmemdev\fR are mutually exclusive.  Furthermore, if one
+node uses \fBmemdev\fR, all of them have to use it.
+.IP "\fB\-add\-fd fd=\fR\fIfd\fR\fB,set=\fR\fIset\fR\fB[,opaque=\fR\fIopaque\fR\fB]\fR" 4
+.IX Item "-add-fd fd=fd,set=set[,opaque=opaque]"
+Add a file descriptor to an fd set.  Valid options are:
+.RS 4
+.IP "\fBfd=\fR\fIfd\fR" 4
+.IX Item "fd=fd"
+This option defines the file descriptor of which a duplicate is added to fd set.
+The file descriptor cannot be stdin, stdout, or stderr.
+.IP "\fBset=\fR\fIset\fR" 4
+.IX Item "set=set"
+This option defines the \s-1ID\s0 of the fd set to add the file descriptor to.
+.IP "\fBopaque=\fR\fIopaque\fR" 4
+.IX Item "opaque=opaque"
+This option defines a free-form string that can be used to describe \fIfd\fR.
+.RE
+.RS 4
+.Sp
+You can open an image using pre-opened file descriptors from an fd set:
+.Sp
+.Vb 4
+\&        qemu\-system\-i386
+\&        \-add\-fd fd=3,set=2,opaque="rdwr:/path/to/file"
+\&        \-add\-fd fd=4,set=2,opaque="rdonly:/path/to/file"
+\&        \-drive file=/dev/fdset/2,index=0,media=disk
+.Ve
+.RE
+.IP "\fB\-set\fR \fIgroup\fR\fB.\fR\fIid\fR\fB.\fR\fIarg\fR\fB=\fR\fIvalue\fR" 4
+.IX Item "-set group.id.arg=value"
+Set parameter \fIarg\fR for item \fIid\fR of type \fIgroup\fR\en"
+.IP "\fB\-global\fR \fIdriver\fR\fB.\fR\fIprop\fR\fB=\fR\fIvalue\fR" 4
+.IX Item "-global driver.prop=value"
+Set default value of \fIdriver\fR's property \fIprop\fR to \fIvalue\fR, e.g.:
+.Sp
+.Vb 1
+\&        qemu\-system\-i386 \-global ide\-drive.physical_block_size=4096 \-drive file=file,if=ide,index=0,media=disk
+.Ve
+.Sp
+In particular, you can use this to set driver properties for devices which are
+created automatically by the machine model. To create a device which is not
+created automatically and set properties on it, use \-\fBdevice\fR.
+.IP "\fB\-boot [order=\fR\fIdrives\fR\fB][,once=\fR\fIdrives\fR\fB][,menu=on|off][,splash=\fR\fIsp_name\fR\fB][,splash\-time=\fR\fIsp_time\fR\fB][,reboot\-timeout=\fR\fIrb_timeout\fR\fB][,strict=on|off]\fR" 4
+.IX Item "-boot [order=drives][,once=drives][,menu=on|off][,splash=sp_name][,splash-time=sp_time][,reboot-timeout=rb_timeout][,strict=on|off]"
+Specify boot order \fIdrives\fR as a string of drive letters. Valid
+drive letters depend on the target achitecture. The x86 \s-1PC\s0 uses: a, b
+(floppy 1 and 2), c (first hard disk), d (first CD-ROM), n\-p (Etherboot
+from network adapter 1\-4), hard disk boot is the default. To apply a
+particular boot order only on the first startup, specify it via
+\&\fBonce\fR.
+.Sp
+Interactive boot menus/prompts can be enabled via \fBmenu=on\fR as far
+as firmware/BIOS supports them. The default is non-interactive boot.
+.Sp
+A splash picture could be passed to bios, enabling user to show it as logo,
+when option splash=\fIsp_name\fR is given and menu=on, If firmware/BIOS
+supports them. Currently Seabios for X86 system support it.
+limitation: The splash file could be a jpeg file or a \s-1BMP\s0 file in 24 \s-1BPP\s0
+format(true color). The resolution should be supported by the \s-1SVGA\s0 mode, so
+the recommended is 320x240, 640x480, 800x640.
+.Sp
+A timeout could be passed to bios, guest will pause for \fIrb_timeout\fR ms
+when boot failed, then reboot. If \fIrb_timeout\fR is '\-1', guest will not
+reboot, qemu passes '\-1' to bios by default. Currently Seabios for X86
+system support it.
+.Sp
+Do strict boot via \fBstrict=on\fR as far as firmware/BIOS
+supports it. This only effects when boot priority is changed by
+bootindex options. The default is non-strict boot.
+.Sp
+.Vb 6
+\&        # try to boot from network first, then from hard disk
+\&        qemu\-system\-i386 \-boot order=nc
+\&        # boot from CD\-ROM first, switch back to default order after reboot
+\&        qemu\-system\-i386 \-boot once=d
+\&        # boot with a splash picture for 5 seconds.
+\&        qemu\-system\-i386 \-boot menu=on,splash=/root/boot.bmp,splash\-time=5000
+.Ve
+.Sp
+Note: The legacy format '\-boot \fIdrives\fR' is still supported but its
+use is discouraged as it may be removed from future versions.
+.IP "\fB\-m [size=]\fR\fImegs\fR" 4
+.IX Item "-m [size=]megs"
+Set virtual \s-1RAM\s0 size to \fImegs\fR megabytes. Default is 128 MiB.  Optionally,
+a suffix of \*(L"M\*(R" or \*(L"G\*(R" can be used to signify a value in megabytes or
+gigabytes respectively. Optional pair \fIslots\fR, \fImaxmem\fR could be used
+to set amount of hotluggable memory slots and possible maximum amount of memory.
+.IP "\fB\-mem\-path\fR \fIpath\fR" 4
+.IX Item "-mem-path path"
+Allocate guest \s-1RAM\s0 from a temporarily created file in \fIpath\fR.
+.IP "\fB\-mem\-prealloc\fR" 4
+.IX Item "-mem-prealloc"
+Preallocate memory when using \-mem\-path.
+.IP "\fB\-k\fR \fIlanguage\fR" 4
+.IX Item "-k language"
+Use keyboard layout \fIlanguage\fR (for example \f(CW\*(C`fr\*(C'\fR for
+French). This option is only needed where it is not easy to get raw \s-1PC\s0
+keycodes (e.g. on Macs, with some X11 servers or with a \s-1VNC\s0
+display). You don't normally need to use it on PC/Linux or PC/Windows
+hosts.
+.Sp
+The available layouts are:
+.Sp
+.Vb 3
+\&        ar  de\-ch  es  fo     fr\-ca  hu  ja  mk     no  pt\-br  sv
+\&        da  en\-gb  et  fr     fr\-ch  is  lt  nl     pl  ru     th
+\&        de  en\-us  fi  fr\-be  hr     it  lv  nl\-be  pt  sl     tr
+.Ve
+.Sp
+The default is \f(CW\*(C`en\-us\*(C'\fR.
+.IP "\fB\-audio\-help\fR" 4
+.IX Item "-audio-help"
+Will show the audio subsystem help: list of drivers, tunable
+parameters.
+.IP "\fB\-soundhw\fR \fIcard1\fR\fB[,\fR\fIcard2\fR\fB,...] or \-soundhw all\fR" 4
+.IX Item "-soundhw card1[,card2,...] or -soundhw all"
+Enable audio and selected sound hardware. Use 'help' to print all
+available sound hardware.
+.Sp
+.Vb 6
+\&        qemu\-system\-i386 \-soundhw sb16,adlib disk.img
+\&        qemu\-system\-i386 \-soundhw es1370 disk.img
+\&        qemu\-system\-i386 \-soundhw ac97 disk.img
+\&        qemu\-system\-i386 \-soundhw hda disk.img
+\&        qemu\-system\-i386 \-soundhw all disk.img
+\&        qemu\-system\-i386 \-soundhw help
+.Ve
+.Sp
+Note that Linux's i810_audio \s-1OSS\s0 kernel (for \s-1AC97\s0) module might
+require manually specifying clocking.
+.Sp
+.Vb 1
+\&        modprobe i810_audio clocking=48000
+.Ve
+.IP "\fB\-balloon none\fR" 4
+.IX Item "-balloon none"
+Disable balloon device.
+.IP "\fB\-balloon virtio[,addr=\fR\fIaddr\fR\fB]\fR" 4
+.IX Item "-balloon virtio[,addr=addr]"
+Enable virtio balloon device (default), optionally with \s-1PCI\s0 address
+\&\fIaddr\fR.
+.IP "\fB\-device\fR \fIdriver\fR\fB[,\fR\fIprop\fR\fB[=\fR\fIvalue\fR\fB][,...]]\fR" 4
+.IX Item "-device driver[,prop[=value][,...]]"
+Add device \fIdriver\fR.  \fIprop\fR=\fIvalue\fR sets driver
+properties.  Valid properties depend on the driver.  To get help on
+possible drivers and properties, use \f(CW\*(C`\-device help\*(C'\fR and
+\&\f(CW\*(C`\-device \f(CIdriver\f(CW,help\*(C'\fR.
+.IP "\fB\-name\fR \fIname\fR" 4
+.IX Item "-name name"
+Sets the \fIname\fR of the guest.
+This name will be displayed in the \s-1SDL\s0 window caption.
+The \fIname\fR will also be used for the \s-1VNC\s0 server.
+Also optionally set the top visible process name in Linux.
+Naming of individual threads can also be enabled on Linux to aid debugging.
+.IP "\fB\-uuid\fR \fIuuid\fR" 4
+.IX Item "-uuid uuid"
+Set system \s-1UUID.\s0
+.PP
+Block device options:
+.IP "\fB\-fda\fR \fIfile\fR" 4
+.IX Item "-fda file"
+.PD 0
+.IP "\fB\-fdb\fR \fIfile\fR" 4
+.IX Item "-fdb file"
+.PD
+Use \fIfile\fR as floppy disk 0/1 image. You can
+use the host floppy by using \fI/dev/fd0\fR as filename.
+.IP "\fB\-hda\fR \fIfile\fR" 4
+.IX Item "-hda file"
+.PD 0
+.IP "\fB\-hdb\fR \fIfile\fR" 4
+.IX Item "-hdb file"
+.IP "\fB\-hdc\fR \fIfile\fR" 4
+.IX Item "-hdc file"
+.IP "\fB\-hdd\fR \fIfile\fR" 4
+.IX Item "-hdd file"
+.PD
+Use \fIfile\fR as hard disk 0, 1, 2 or 3 image.
+.IP "\fB\-cdrom\fR \fIfile\fR" 4
+.IX Item "-cdrom file"
+Use \fIfile\fR as CD-ROM image (you cannot use \fB\-hdc\fR and
+\&\fB\-cdrom\fR at the same time). You can use the host CD-ROM by
+using \fI/dev/cdrom\fR as filename.
+.IP "\fB\-drive\fR \fIoption\fR\fB[,\fR\fIoption\fR\fB[,\fR\fIoption\fR\fB[,...]]]\fR" 4
+.IX Item "-drive option[,option[,option[,...]]]"
+Define a new drive. Valid options are:
+.RS 4
+.IP "\fBfile=\fR\fIfile\fR" 4
+.IX Item "file=file"
+This option defines which disk image to use with
+this drive. If the filename contains comma, you must double it
+(for instance, \*(L"file=my,,file\*(R" to use file \*(L"my,file\*(R").
+.Sp
+Special files such as iSCSI devices can be specified using protocol
+specific URLs. See the section for \*(L"Device \s-1URL\s0 Syntax\*(R" for more information.
+.IP "\fBif=\fR\fIinterface\fR" 4
+.IX Item "if=interface"
+This option defines on which type on interface the drive is connected.
+Available types are: ide, scsi, sd, mtd, floppy, pflash, virtio.
+.IP "\fBbus=\fR\fIbus\fR\fB,unit=\fR\fIunit\fR" 4
+.IX Item "bus=bus,unit=unit"
+These options define where is connected the drive by defining the bus number and
+the unit id.
+.IP "\fBindex=\fR\fIindex\fR" 4
+.IX Item "index=index"
+This option defines where is connected the drive by using an index in the list
+of available connectors of a given interface type.
+.IP "\fBmedia=\fR\fImedia\fR" 4
+.IX Item "media=media"
+This option defines the type of the media: disk or cdrom.
+.IP "\fBcyls=\fR\fIc\fR\fB,heads=\fR\fIh\fR\fB,secs=\fR\fIs\fR\fB[,trans=\fR\fIt\fR\fB]\fR" 4
+.IX Item "cyls=c,heads=h,secs=s[,trans=t]"
+These options have the same definition as they have in \fB\-hdachs\fR.
+.IP "\fBsnapshot=\fR\fIsnapshot\fR" 4
+.IX Item "snapshot=snapshot"
+\&\fIsnapshot\fR is \*(L"on\*(R" or \*(L"off\*(R" and controls snapshot mode for the given drive
+(see \fB\-snapshot\fR).
+.IP "\fBcache=\fR\fIcache\fR" 4
+.IX Item "cache=cache"
+\&\fIcache\fR is \*(L"none\*(R", \*(L"writeback\*(R", \*(L"unsafe\*(R", \*(L"directsync\*(R" or \*(L"writethrough\*(R" and controls how the host cache is used to access block data.
+.IP "\fBaio=\fR\fIaio\fR" 4
+.IX Item "aio=aio"
+\&\fIaio\fR is \*(L"threads\*(R", or \*(L"native\*(R" and selects between pthread based disk I/O and native Linux \s-1AIO.\s0
+.IP "\fBdiscard=\fR\fIdiscard\fR" 4
+.IX Item "discard=discard"
+\&\fIdiscard\fR is one of \*(L"ignore\*(R" (or \*(L"off\*(R") or \*(L"unmap\*(R" (or \*(L"on\*(R") and controls whether \fIdiscard\fR (also known as \fItrim\fR or \fIunmap\fR) requests are ignored or passed to the filesystem.  Some machine types may not support discard requests.
+.IP "\fBformat=\fR\fIformat\fR" 4
+.IX Item "format=format"
+Specify which disk \fIformat\fR will be used rather than detecting
+the format.  Can be used to specifiy format=raw to avoid interpreting
+an untrusted format header.
+.IP "\fBserial=\fR\fIserial\fR" 4
+.IX Item "serial=serial"
+This option specifies the serial number to assign to the device.
+.IP "\fBaddr=\fR\fIaddr\fR" 4
+.IX Item "addr=addr"
+Specify the controller's \s-1PCI\s0 address (if=virtio only).
+.IP "\fBwerror=\fR\fIaction\fR\fB,rerror=\fR\fIaction\fR" 4
+.IX Item "werror=action,rerror=action"
+Specify which \fIaction\fR to take on write and read errors. Valid actions are:
+\&\*(L"ignore\*(R" (ignore the error and try to continue), \*(L"stop\*(R" (pause \s-1QEMU\s0),
+\&\*(L"report\*(R" (report the error to the guest), \*(L"enospc\*(R" (pause \s-1QEMU\s0 only if the
+host disk is full; report the error to the guest otherwise).
+The default setting is \fBwerror=enospc\fR and \fBrerror=report\fR.
+.IP "\fBreadonly\fR" 4
+.IX Item "readonly"
+Open drive \fBfile\fR as read-only. Guest write attempts will fail.
+.IP "\fBcopy\-on\-read=\fR\fIcopy-on-read\fR" 4
+.IX Item "copy-on-read=copy-on-read"
+\&\fIcopy-on-read\fR is \*(L"on\*(R" or \*(L"off\*(R" and enables whether to copy read backing
+file sectors into the image file.
+.IP "\fBdetect\-zeroes=\fR\fIdetect-zeroes\fR" 4
+.IX Item "detect-zeroes=detect-zeroes"
+\&\fIdetect-zeroes\fR is \*(L"off\*(R", \*(L"on\*(R" or \*(L"unmap\*(R" and enables the automatic
+conversion of plain zero writes by the \s-1OS\s0 to driver specific optimized
+zero write commands. You may even choose \*(L"unmap\*(R" if \fIdiscard\fR is set
+to \*(L"unmap\*(R" to allow a zero write to be converted to an \s-1UNMAP\s0 operation.
+.RE
+.RS 4
+.Sp
+By default, the \fBcache=writeback\fR mode is used. It will report data
+writes as completed as soon as the data is present in the host page cache.
+This is safe as long as your guest \s-1OS\s0 makes sure to correctly flush disk caches
+where needed. If your guest \s-1OS\s0 does not handle volatile disk write caches
+correctly and your host crashes or loses power, then the guest may experience
+data corruption.
+.Sp
+For such guests, you should consider using \fBcache=writethrough\fR. This
+means that the host page cache will be used to read and write data, but write
+notification will be sent to the guest only after \s-1QEMU\s0 has made sure to flush
+each write to the disk. Be aware that this has a major impact on performance.
+.Sp
+The host page cache can be avoided entirely with \fBcache=none\fR.  This will
+attempt to do disk \s-1IO\s0 directly to the guest's memory.  \s-1QEMU\s0 may still perform
+an internal copy of the data. Note that this is considered a writeback mode and
+the guest \s-1OS\s0 must handle the disk write cache correctly in order to avoid data
+corruption on host crashes.
+.Sp
+The host page cache can be avoided while only sending write notifications to
+the guest when the data has been flushed to the disk using
+\&\fBcache=directsync\fR.
+.Sp
+In case you don't care about data integrity over host failures, use
+\&\fBcache=unsafe\fR. This option tells \s-1QEMU\s0 that it never needs to write any
+data to the disk but can instead keep things in cache. If anything goes wrong,
+like your host losing power, the disk storage getting disconnected accidentally,
+etc. your image will most probably be rendered unusable.   When using
+the \fB\-snapshot\fR option, unsafe caching is always used.
+.Sp
+Copy-on-read avoids accessing the same backing file sectors repeatedly and is
+useful when the backing file is over a slow network.  By default copy-on-read
+is off.
+.Sp
+Instead of \fB\-cdrom\fR you can use:
+.Sp
+.Vb 1
+\&        qemu\-system\-i386 \-drive file=file,index=2,media=cdrom
+.Ve
+.Sp
+Instead of \fB\-hda\fR, \fB\-hdb\fR, \fB\-hdc\fR, \fB\-hdd\fR, you can
+use:
+.Sp
+.Vb 4
+\&        qemu\-system\-i386 \-drive file=file,index=0,media=disk
+\&        qemu\-system\-i386 \-drive file=file,index=1,media=disk
+\&        qemu\-system\-i386 \-drive file=file,index=2,media=disk
+\&        qemu\-system\-i386 \-drive file=file,index=3,media=disk
+.Ve
+.Sp
+You can open an image using pre-opened file descriptors from an fd set:
+.Sp
+.Vb 4
+\&        qemu\-system\-i386
+\&        \-add\-fd fd=3,set=2,opaque="rdwr:/path/to/file"
+\&        \-add\-fd fd=4,set=2,opaque="rdonly:/path/to/file"
+\&        \-drive file=/dev/fdset/2,index=0,media=disk
+.Ve
+.Sp
+You can connect a \s-1CDROM\s0 to the slave of ide0:
+.Sp
+.Vb 1
+\&        qemu\-system\-i386 \-drive file=file,if=ide,index=1,media=cdrom
+.Ve
+.Sp
+If you don't specify the \*(L"file=\*(R" argument, you define an empty drive:
+.Sp
+.Vb 1
+\&        qemu\-system\-i386 \-drive if=ide,index=1,media=cdrom
+.Ve
+.Sp
+You can connect a \s-1SCSI\s0 disk with unit \s-1ID 6\s0 on the bus #0:
+.Sp
+.Vb 1
+\&        qemu\-system\-i386 \-drive file=file,if=scsi,bus=0,unit=6
+.Ve
+.Sp
+Instead of \fB\-fda\fR, \fB\-fdb\fR, you can use:
+.Sp
+.Vb 2
+\&        qemu\-system\-i386 \-drive file=file,index=0,if=floppy
+\&        qemu\-system\-i386 \-drive file=file,index=1,if=floppy
+.Ve
+.Sp
+By default, \fIinterface\fR is \*(L"ide\*(R" and \fIindex\fR is automatically
+incremented:
+.Sp
+.Vb 1
+\&        qemu\-system\-i386 \-drive file=a \-drive file=b"
+.Ve
+.Sp
+is interpreted like:
+.Sp
+.Vb 1
+\&        qemu\-system\-i386 \-hda a \-hdb b
+.Ve
+.RE
+.IP "\fB\-mtdblock\fR \fIfile\fR" 4
+.IX Item "-mtdblock file"
+Use \fIfile\fR as on-board Flash memory image.
+.IP "\fB\-sd\fR \fIfile\fR" 4
+.IX Item "-sd file"
+Use \fIfile\fR as SecureDigital card image.
+.IP "\fB\-pflash\fR \fIfile\fR" 4
+.IX Item "-pflash file"
+Use \fIfile\fR as a parallel flash image.
+.IP "\fB\-snapshot\fR" 4
+.IX Item "-snapshot"
+Write to temporary files instead of disk image files. In this case,
+the raw disk image you use is not written back. You can however force
+the write back by pressing \fBC\-a s\fR.
+.IP "\fB\-hdachs\fR \fIc\fR\fB,\fR\fIh\fR\fB,\fR\fIs\fR\fB,[,\fR\fIt\fR\fB]\fR" 4
+.IX Item "-hdachs c,h,s,[,t]"
+Force hard disk 0 physical geometry (1 <= \fIc\fR <= 16383, 1 <=
+\&\fIh\fR <= 16, 1 <= \fIs\fR <= 63) and optionally force the \s-1BIOS\s0
+translation mode (\fIt\fR=none, lba or auto). Usually \s-1QEMU\s0 can guess
+all those parameters. This option is useful for old MS-DOS disk
+images.
+.IP "\fB\-fsdev\fR \fIfsdriver\fR\fB,id=\fR\fIid\fR\fB,path=\fR\fIpath\fR\fB,[security_model=\fR\fIsecurity_model\fR\fB][,writeout=\fR\fIwriteout\fR\fB][,readonly][,socket=\fR\fIsocket\fR\fB|sock_fd=\fR\fIsock_fd\fR\fB]\fR" 4
+.IX Item "-fsdev fsdriver,id=id,path=path,[security_model=security_model][,writeout=writeout][,readonly][,socket=socket|sock_fd=sock_fd]"
+Define a new file system device. Valid options are:
+.RS 4
+.IP "\fIfsdriver\fR" 4
+.IX Item "fsdriver"
+This option specifies the fs driver backend to use.
+Currently \*(L"local\*(R", \*(L"handle\*(R" and \*(L"proxy\*(R" file system drivers are supported.
+.IP "\fBid=\fR\fIid\fR" 4
+.IX Item "id=id"
+Specifies identifier for this device
+.IP "\fBpath=\fR\fIpath\fR" 4
+.IX Item "path=path"
+Specifies the export path for the file system device. Files under
+this path will be available to the 9p client on the guest.
+.IP "\fBsecurity_model=\fR\fIsecurity_model\fR" 4
+.IX Item "security_model=security_model"
+Specifies the security model to be used for this export path.
+Supported security models are \*(L"passthrough\*(R", \*(L"mapped-xattr\*(R", \*(L"mapped-file\*(R" and \*(L"none\*(R".
+In \*(L"passthrough\*(R" security model, files are stored using the same
+credentials as they are created on the guest. This requires \s-1QEMU\s0
+to run as root. In \*(L"mapped-xattr\*(R" security model, some of the file
+attributes like uid, gid, mode bits and link target are stored as
+file attributes. For \*(L"mapped-file\*(R" these attributes are stored in the
+hidden .virtfs_metadata directory. Directories exported by this security model cannot
+interact with other unix tools. \*(L"none\*(R" security model is same as
+passthrough except the sever won't report failures if it fails to
+set file attributes like ownership. Security model is mandatory
+only for local fsdriver. Other fsdrivers (like handle, proxy) don't take
+security model as a parameter.
+.IP "\fBwriteout=\fR\fIwriteout\fR" 4
+.IX Item "writeout=writeout"
+This is an optional argument. The only supported value is \*(L"immediate\*(R".
+This means that host page cache will be used to read and write data but
+write notification will be sent to the guest only when the data has been
+reported as written by the storage subsystem.
+.IP "\fBreadonly\fR" 4
+.IX Item "readonly"
+Enables exporting 9p share as a readonly mount for guests. By default
+read-write access is given.
+.IP "\fBsocket=\fR\fIsocket\fR" 4
+.IX Item "socket=socket"
+Enables proxy filesystem driver to use passed socket file for communicating
+with virtfs-proxy-helper
+.IP "\fBsock_fd=\fR\fIsock_fd\fR" 4
+.IX Item "sock_fd=sock_fd"
+Enables proxy filesystem driver to use passed socket descriptor for
+communicating with virtfs-proxy-helper. Usually a helper like libvirt
+will create socketpair and pass one of the fds as sock_fd
+.RE
+.RS 4
+.Sp
+\&\-fsdev option is used along with \-device driver \*(L"virtio\-9p\-pci\*(R".
+.RE
+.IP "\fB\-device virtio\-9p\-pci,fsdev=\fR\fIid\fR\fB,mount_tag=\fR\fImount_tag\fR" 4
+.IX Item "-device virtio-9p-pci,fsdev=id,mount_tag=mount_tag"
+Options for virtio\-9p\-pci driver are:
+.RS 4
+.IP "\fBfsdev=\fR\fIid\fR" 4
+.IX Item "fsdev=id"
+Specifies the id value specified along with \-fsdev option
+.IP "\fBmount_tag=\fR\fImount_tag\fR" 4
+.IX Item "mount_tag=mount_tag"
+Specifies the tag name to be used by the guest to mount this export point
+.RE
+.RS 4
+.RE
+.IP "\fB\-virtfs\fR \fIfsdriver\fR\fB[,path=\fR\fIpath\fR\fB],mount_tag=\fR\fImount_tag\fR\fB[,security_model=\fR\fIsecurity_model\fR\fB][,writeout=\fR\fIwriteout\fR\fB][,readonly][,socket=\fR\fIsocket\fR\fB|sock_fd=\fR\fIsock_fd\fR\fB]\fR" 4
+.IX Item "-virtfs fsdriver[,path=path],mount_tag=mount_tag[,security_model=security_model][,writeout=writeout][,readonly][,socket=socket|sock_fd=sock_fd]"
+The general form of a Virtual File system pass-through options are:
+.RS 4
+.IP "\fIfsdriver\fR" 4
+.IX Item "fsdriver"
+This option specifies the fs driver backend to use.
+Currently \*(L"local\*(R", \*(L"handle\*(R" and \*(L"proxy\*(R" file system drivers are supported.
+.IP "\fBid=\fR\fIid\fR" 4
+.IX Item "id=id"
+Specifies identifier for this device
+.IP "\fBpath=\fR\fIpath\fR" 4
+.IX Item "path=path"
+Specifies the export path for the file system device. Files under
+this path will be available to the 9p client on the guest.
+.IP "\fBsecurity_model=\fR\fIsecurity_model\fR" 4
+.IX Item "security_model=security_model"
+Specifies the security model to be used for this export path.
+Supported security models are \*(L"passthrough\*(R", \*(L"mapped-xattr\*(R", \*(L"mapped-file\*(R" and \*(L"none\*(R".
+In \*(L"passthrough\*(R" security model, files are stored using the same
+credentials as they are created on the guest. This requires \s-1QEMU\s0
+to run as root. In \*(L"mapped-xattr\*(R" security model, some of the file
+attributes like uid, gid, mode bits and link target are stored as
+file attributes. For \*(L"mapped-file\*(R" these attributes are stored in the
+hidden .virtfs_metadata directory. Directories exported by this security model cannot
+interact with other unix tools. \*(L"none\*(R" security model is same as
+passthrough except the sever won't report failures if it fails to
+set file attributes like ownership. Security model is mandatory only
+for local fsdriver. Other fsdrivers (like handle, proxy) don't take security
+model as a parameter.
+.IP "\fBwriteout=\fR\fIwriteout\fR" 4
+.IX Item "writeout=writeout"
+This is an optional argument. The only supported value is \*(L"immediate\*(R".
+This means that host page cache will be used to read and write data but
+write notification will be sent to the guest only when the data has been
+reported as written by the storage subsystem.
+.IP "\fBreadonly\fR" 4
+.IX Item "readonly"
+Enables exporting 9p share as a readonly mount for guests. By default
+read-write access is given.
+.IP "\fBsocket=\fR\fIsocket\fR" 4
+.IX Item "socket=socket"
+Enables proxy filesystem driver to use passed socket file for
+communicating with virtfs-proxy-helper. Usually a helper like libvirt
+will create socketpair and pass one of the fds as sock_fd
+.IP "\fBsock_fd\fR" 4
+.IX Item "sock_fd"
+Enables proxy filesystem driver to use passed 'sock_fd' as the socket
+descriptor for interfacing with virtfs-proxy-helper
+.RE
+.RS 4
+.RE
+.IP "\fB\-virtfs_synth\fR" 4
+.IX Item "-virtfs_synth"
+Create synthetic file system image
+.PP
+\&\s-1USB\s0 options:
+.IP "\fB\-usb\fR" 4
+.IX Item "-usb"
+Enable the \s-1USB\s0 driver (will be the default soon)
+.IP "\fB\-usbdevice\fR \fIdevname\fR" 4
+.IX Item "-usbdevice devname"
+Add the \s-1USB\s0 device \fIdevname\fR.
+.RS 4
+.IP "\fBmouse\fR" 4
+.IX Item "mouse"
+Virtual Mouse. This will override the \s-1PS/2\s0 mouse emulation when activated.
+.IP "\fBtablet\fR" 4
+.IX Item "tablet"
+Pointer device that uses absolute coordinates (like a touchscreen). This
+means \s-1QEMU\s0 is able to report the mouse position without having to grab the
+mouse. Also overrides the \s-1PS/2\s0 mouse emulation when activated.
+.IP "\fBdisk:[format=\fR\fIformat\fR\fB]:\fR\fIfile\fR" 4
+.IX Item "disk:[format=format]:file"
+Mass storage device based on file. The optional \fIformat\fR argument
+will be used rather than detecting the format. Can be used to specifiy
+\&\f(CW\*(C`format=raw\*(C'\fR to avoid interpreting an untrusted format header.
+.IP "\fBhost:\fR\fIbus\fR\fB.\fR\fIaddr\fR" 4
+.IX Item "host:bus.addr"
+Pass through the host device identified by \fIbus\fR.\fIaddr\fR (Linux only).
+.IP "\fBhost:\fR\fIvendor_id\fR\fB:\fR\fIproduct_id\fR" 4
+.IX Item "host:vendor_id:product_id"
+Pass through the host device identified by \fIvendor_id\fR:\fIproduct_id\fR
+(Linux only).
+.IP "\fBserial:[vendorid=\fR\fIvendor_id\fR\fB][,productid=\fR\fIproduct_id\fR\fB]:\fR\fIdev\fR" 4
+.IX Item "serial:[vendorid=vendor_id][,productid=product_id]:dev"
+Serial converter to host character device \fIdev\fR, see \f(CW\*(C`\-serial\*(C'\fR for the
+available devices.
+.IP "\fBbraille\fR" 4
+.IX Item "braille"
+Braille device.  This will use BrlAPI to display the braille output on a real
+or fake device.
+.IP "\fBnet:\fR\fIoptions\fR" 4
+.IX Item "net:options"
+Network adapter that supports \s-1CDC\s0 ethernet and \s-1RNDIS\s0 protocols.
+.RE
+.RS 4
+.RE
+.PP
+Display options:
+.IP "\fB\-display\fR \fItype\fR" 4
+.IX Item "-display type"
+Select type of display to use. This option is a replacement for the
+old style \-sdl/\-curses/... options. Valid values for \fItype\fR are
+.RS 4
+.IP "\fBsdl\fR" 4
+.IX Item "sdl"
+Display video output via \s-1SDL \s0(usually in a separate graphics
+window; see the \s-1SDL\s0 documentation for other possibilities).
+.IP "\fBcurses\fR" 4
+.IX Item "curses"
+Display video output via curses. For graphics device models which
+support a text mode, \s-1QEMU\s0 can display this output using a
+curses/ncurses interface. Nothing is displayed when the graphics
+device is in graphical mode or if the graphics device does not support
+a text mode. Generally only the \s-1VGA\s0 device models support text mode.
+.IP "\fBnone\fR" 4
+.IX Item "none"
+Do not display video output. The guest will still see an emulated
+graphics card, but its output will not be displayed to the \s-1QEMU\s0
+user. This option differs from the \-nographic option in that it
+only affects what is done with video output; \-nographic also changes
+the destination of the serial and parallel port data.
+.IP "\fBgtk\fR" 4
+.IX Item "gtk"
+Display video output in a \s-1GTK\s0 window. This interface provides drop-down
+menus and other \s-1UI\s0 elements to configure and control the \s-1VM\s0 during
+runtime.
+.IP "\fBvnc\fR" 4
+.IX Item "vnc"
+Start a \s-1VNC\s0 server on display <arg>
+.RE
+.RS 4
+.RE
+.IP "\fB\-nographic\fR" 4
+.IX Item "-nographic"
+Normally, \s-1QEMU\s0 uses \s-1SDL\s0 to display the \s-1VGA\s0 output. With this option,
+you can totally disable graphical output so that \s-1QEMU\s0 is a simple
+command line application. The emulated serial port is redirected on
+the console and muxed with the monitor (unless redirected elsewhere
+explicitly). Therefore, you can still use \s-1QEMU\s0 to debug a Linux kernel
+with a serial console.  Use \fBC\-a h\fR for help on switching between
+the console and monitor.
+.IP "\fB\-curses\fR" 4
+.IX Item "-curses"
+Normally, \s-1QEMU\s0 uses \s-1SDL\s0 to display the \s-1VGA\s0 output.  With this option,
+\&\s-1QEMU\s0 can display the \s-1VGA\s0 output when in text mode using a
+curses/ncurses interface.  Nothing is displayed in graphical mode.
+.IP "\fB\-no\-frame\fR" 4
+.IX Item "-no-frame"
+Do not use decorations for \s-1SDL\s0 windows and start them using the whole
+available screen space. This makes the using \s-1QEMU\s0 in a dedicated desktop
+workspace more convenient.
+.IP "\fB\-alt\-grab\fR" 4
+.IX Item "-alt-grab"
+Use Ctrl-Alt-Shift to grab mouse (instead of Ctrl-Alt). Note that this also
+affects the special keys (for fullscreen, monitor-mode switching, etc).
+.IP "\fB\-ctrl\-grab\fR" 4
+.IX Item "-ctrl-grab"
+Use Right-Ctrl to grab mouse (instead of Ctrl-Alt). Note that this also
+affects the special keys (for fullscreen, monitor-mode switching, etc).
+.IP "\fB\-no\-quit\fR" 4
+.IX Item "-no-quit"
+Disable \s-1SDL\s0 window close capability.
+.IP "\fB\-sdl\fR" 4
+.IX Item "-sdl"
+Enable \s-1SDL.\s0
+.IP "\fB\-spice\fR \fIoption\fR\fB[,\fR\fIoption\fR\fB[,...]]\fR" 4
+.IX Item "-spice option[,option[,...]]"
+Enable the spice remote desktop protocol. Valid options are
+.RS 4
+.IP "\fBport=<nr>\fR" 4
+.IX Item "port=<nr>"
+Set the \s-1TCP\s0 port spice is listening on for plaintext channels.
+.IP "\fBaddr=<addr>\fR" 4
+.IX Item "addr=<addr>"
+Set the \s-1IP\s0 address spice is listening on.  Default is any address.
+.IP "\fBipv4\fR" 4
+.IX Item "ipv4"
+.PD 0
+.IP "\fBipv6\fR" 4
+.IX Item "ipv6"
+.PD
+Force using the specified \s-1IP\s0 version.
+.IP "\fBpassword=<secret>\fR" 4
+.IX Item "password=<secret>"
+Set the password you need to authenticate.
+.IP "\fBsasl\fR" 4
+.IX Item "sasl"
+Require that the client use \s-1SASL\s0 to authenticate with the spice.
+The exact choice of authentication method used is controlled from the
+system / user's \s-1SASL\s0 configuration file for the 'qemu' service. This
+is typically found in /etc/sasl2/qemu.conf. If running \s-1QEMU\s0 as an
+unprivileged user, an environment variable \s-1SASL_CONF_PATH\s0 can be used
+to make it search alternate locations for the service config.
+While some \s-1SASL\s0 auth methods can also provide data encryption (eg \s-1GSSAPI\s0),
+it is recommended that \s-1SASL\s0 always be combined with the 'tls' and
+\&'x509' settings to enable use of \s-1SSL\s0 and server certificates. This
+ensures a data encryption preventing compromise of authentication
+credentials.
+.IP "\fBdisable-ticketing\fR" 4
+.IX Item "disable-ticketing"
+Allow client connects without authentication.
+.IP "\fBdisable-copy-paste\fR" 4
+.IX Item "disable-copy-paste"
+Disable copy paste between the client and the guest.
+.IP "\fBdisable-agent-file-xfer\fR" 4
+.IX Item "disable-agent-file-xfer"
+Disable spice-vdagent based file-xfer between the client and the guest.
+.IP "\fBtls\-port=<nr>\fR" 4
+.IX Item "tls-port=<nr>"
+Set the \s-1TCP\s0 port spice is listening on for encrypted channels.
+.IP "\fBx509\-dir=<dir>\fR" 4
+.IX Item "x509-dir=<dir>"
+Set the x509 file directory. Expects same filenames as \-vnc \f(CW$display\fR,x509=$dir
+.IP "\fBx509\-key\-file=<file>\fR" 4
+.IX Item "x509-key-file=<file>"
+.PD 0
+.IP "\fBx509\-key\-password=<file>\fR" 4
+.IX Item "x509-key-password=<file>"
+.IP "\fBx509\-cert\-file=<file>\fR" 4
+.IX Item "x509-cert-file=<file>"
+.IP "\fBx509\-cacert\-file=<file>\fR" 4
+.IX Item "x509-cacert-file=<file>"
+.IP "\fBx509\-dh\-key\-file=<file>\fR" 4
+.IX Item "x509-dh-key-file=<file>"
+.PD
+The x509 file names can also be configured individually.
+.IP "\fBtls\-ciphers=<list>\fR" 4
+.IX Item "tls-ciphers=<list>"
+Specify which ciphers to use.
+.IP "\fBtls\-channel=[main|display|cursor|inputs|record|playback]\fR" 4
+.IX Item "tls-channel=[main|display|cursor|inputs|record|playback]"
+.PD 0
+.IP "\fBplaintext\-channel=[main|display|cursor|inputs|record|playback]\fR" 4
+.IX Item "plaintext-channel=[main|display|cursor|inputs|record|playback]"
+.PD
+Force specific channel to be used with or without \s-1TLS\s0 encryption.  The
+options can be specified multiple times to configure multiple
+channels.  The special name \*(L"default\*(R" can be used to set the default
+mode.  For channels which are not explicitly forced into one mode the
+spice client is allowed to pick tls/plaintext as he pleases.
+.IP "\fBimage\-compression=[auto_glz|auto_lz|quic|glz|lz|off]\fR" 4
+.IX Item "image-compression=[auto_glz|auto_lz|quic|glz|lz|off]"
+Configure image compression (lossless).
+Default is auto_glz.
+.IP "\fBjpeg\-wan\-compression=[auto|never|always]\fR" 4
+.IX Item "jpeg-wan-compression=[auto|never|always]"
+.PD 0
+.IP "\fBzlib\-glz\-wan\-compression=[auto|never|always]\fR" 4
+.IX Item "zlib-glz-wan-compression=[auto|never|always]"
+.PD
+Configure wan image compression (lossy for slow links).
+Default is auto.
+.IP "\fBstreaming\-video=[off|all|filter]\fR" 4
+.IX Item "streaming-video=[off|all|filter]"
+Configure video stream detection.  Default is filter.
+.IP "\fBagent\-mouse=[on|off]\fR" 4
+.IX Item "agent-mouse=[on|off]"
+Enable/disable passing mouse events via vdagent.  Default is on.
+.IP "\fBplayback\-compression=[on|off]\fR" 4
+.IX Item "playback-compression=[on|off]"
+Enable/disable audio stream compression (using celt 0.5.1).  Default is on.
+.IP "\fBseamless\-migration=[on|off]\fR" 4
+.IX Item "seamless-migration=[on|off]"
+Enable/disable spice seamless migration. Default is off.
+.RE
+.RS 4
+.RE
+.IP "\fB\-portrait\fR" 4
+.IX Item "-portrait"
+Rotate graphical output 90 deg left (only \s-1PXA LCD\s0).
+.IP "\fB\-rotate\fR \fIdeg\fR" 4
+.IX Item "-rotate deg"
+Rotate graphical output some deg left (only \s-1PXA LCD\s0).
+.IP "\fB\-vga\fR \fItype\fR" 4
+.IX Item "-vga type"
+Select type of \s-1VGA\s0 card to emulate. Valid values for \fItype\fR are
+.RS 4
+.IP "\fBcirrus\fR" 4
+.IX Item "cirrus"
+Cirrus Logic \s-1GD5446\s0 Video card. All Windows versions starting from
+Windows 95 should recognize and use this graphic card. For optimal
+performances, use 16 bit color depth in the guest and the host \s-1OS.
+\&\s0(This one is the default)
+.IP "\fBstd\fR" 4
+.IX Item "std"
+Standard \s-1VGA\s0 card with Bochs \s-1VBE\s0 extensions.  If your guest \s-1OS\s0
+supports the \s-1VESA 2.0 VBE\s0 extensions (e.g. Windows \s-1XP\s0) and if you want
+to use high resolution modes (>= 1280x1024x16) then you should use
+this option.
+.IP "\fBvmware\fR" 4
+.IX Item "vmware"
+VMWare SVGA-II compatible adapter. Use it if you have sufficiently
+recent XFree86/XOrg server or Windows guest with a driver for this
+card.
+.IP "\fBqxl\fR" 4
+.IX Item "qxl"
+\&\s-1QXL\s0 paravirtual graphic card.  It is \s-1VGA\s0 compatible (including \s-1VESA
+2.0 VBE\s0 support).  Works best with qxl guest drivers installed though.
+Recommended choice when using the spice protocol.
+.IP "\fBtcx\fR" 4
+.IX Item "tcx"
+(sun4m only) Sun \s-1TCX\s0 framebuffer. This is the default framebuffer for
+sun4m machines and offers both 8\-bit and 24\-bit colour depths at a
+fixed resolution of 1024x768.
+.IP "\fBcg3\fR" 4
+.IX Item "cg3"
+(sun4m only) Sun cgthree framebuffer. This is a simple 8\-bit framebuffer
+for sun4m machines available in both 1024x768 (OpenBIOS) and 1152x900 (\s-1OBP\s0)
+resolutions aimed at people wishing to run older Solaris versions.
+.IP "\fBnone\fR" 4
+.IX Item "none"
+Disable \s-1VGA\s0 card.
+.RE
+.RS 4
+.RE
+.IP "\fB\-full\-screen\fR" 4
+.IX Item "-full-screen"
+Start in full screen.
+.IP "\fB\-g\fR \fIwidth\fR\fBx\fR\fIheight\fR\fB[x\fR\fIdepth\fR\fB]\fR" 4
+.IX Item "-g widthxheight[xdepth]"
+Set the initial graphical resolution and depth (\s-1PPC, SPARC\s0 only).
+.IP "\fB\-vnc\fR \fIdisplay\fR\fB[,\fR\fIoption\fR\fB[,\fR\fIoption\fR\fB[,...]]]\fR" 4
+.IX Item "-vnc display[,option[,option[,...]]]"
+Normally, \s-1QEMU\s0 uses \s-1SDL\s0 to display the \s-1VGA\s0 output.  With this option,
+you can have \s-1QEMU\s0 listen on \s-1VNC\s0 display \fIdisplay\fR and redirect the \s-1VGA\s0
+display over the \s-1VNC\s0 session.  It is very useful to enable the usb
+tablet device when using this option (option \fB\-usbdevice
+tablet\fR). When using the \s-1VNC\s0 display, you must use the \fB\-k\fR
+parameter to set the keyboard layout if you are not using en-us. Valid
+syntax for the \fIdisplay\fR is
+.RS 4
+.IP "\fIhost\fR\fB:\fR\fId\fR" 4
+.IX Item "host:d"
+\&\s-1TCP\s0 connections will only be allowed from \fIhost\fR on display \fId\fR.
+By convention the \s-1TCP\s0 port is 5900+\fId\fR. Optionally, \fIhost\fR can
+be omitted in which case the server will accept connections from any host.
+.IP "\fBunix:\fR\fIpath\fR" 4
+.IX Item "unix:path"
+Connections will be allowed over \s-1UNIX\s0 domain sockets where \fIpath\fR is the
+location of a unix socket to listen for connections on.
+.IP "\fBnone\fR" 4
+.IX Item "none"
+\&\s-1VNC\s0 is initialized but not started. The monitor \f(CW\*(C`change\*(C'\fR command
+can be used to later start the \s-1VNC\s0 server.
+.RE
+.RS 4
+.Sp
+Following the \fIdisplay\fR value there may be one or more \fIoption\fR flags
+separated by commas. Valid options are
+.IP "\fBreverse\fR" 4
+.IX Item "reverse"
+Connect to a listening \s-1VNC\s0 client via a \*(L"reverse\*(R" connection. The
+client is specified by the \fIdisplay\fR. For reverse network
+connections (\fIhost\fR:\fId\fR,\f(CW\*(C`reverse\*(C'\fR), the \fId\fR argument
+is a \s-1TCP\s0 port number, not a display number.
+.IP "\fBwebsocket\fR" 4
+.IX Item "websocket"
+Opens an additional \s-1TCP\s0 listening port dedicated to \s-1VNC\s0 Websocket connections.
+By definition the Websocket port is 5700+\fIdisplay\fR. If \fIhost\fR is
+specified connections will only be allowed from this host.
+As an alternative the Websocket port could be specified by using
+\&\f(CW\*(C`websocket\*(C'\fR=\fIport\fR.
+\&\s-1TLS\s0 encryption for the Websocket connection is supported if the required
+certificates are specified with the \s-1VNC\s0 option \fBx509\fR.
+.IP "\fBpassword\fR" 4
+.IX Item "password"
+Require that password based authentication is used for client connections.
+.Sp
+The password must be set separately using the \f(CW\*(C`set_password\*(C'\fR command in
+the \fBpcsys_monitor\fR. The syntax to change your password is:
+\&\f(CW\*(C`set_password <protocol> <password>\*(C'\fR where <protocol> could be either
+\&\*(L"vnc\*(R" or \*(L"spice\*(R".
+.Sp
+If you would like to change <protocol> password expiration, you should use
+\&\f(CW\*(C`expire_password <protocol> <expiration\-time>\*(C'\fR where expiration time could
+be one of the following options: now, never, +seconds or \s-1UNIX\s0 time of
+expiration, e.g. +60 to make password expire in 60 seconds, or 1335196800
+to make password expire on \*(L"Mon Apr 23 12:00:00 \s-1EDT 2012\*(R" \s0(\s-1UNIX\s0 time for this
+date and time).
+.Sp
+You can also use keywords \*(L"now\*(R" or \*(L"never\*(R" for the expiration time to
+allow <protocol> password to expire immediately or never expire.
+.IP "\fBtls\fR" 4
+.IX Item "tls"
+Require that client use \s-1TLS\s0 when communicating with the \s-1VNC\s0 server. This
+uses anonymous \s-1TLS\s0 credentials so is susceptible to a man-in-the-middle
+attack. It is recommended that this option be combined with either the
+\&\fBx509\fR or \fBx509verify\fR options.
+.IP "\fBx509=\fR\fI/path/to/certificate/dir\fR" 4
+.IX Item "x509=/path/to/certificate/dir"
+Valid if \fBtls\fR is specified. Require that x509 credentials are used
+for negotiating the \s-1TLS\s0 session. The server will send its x509 certificate
+to the client. It is recommended that a password be set on the \s-1VNC\s0 server
+to provide authentication of the client when this is used. The path following
+this option specifies where the x509 certificates are to be loaded from.
+See the \fBvnc_security\fR section for details on generating certificates.
+.IP "\fBx509verify=\fR\fI/path/to/certificate/dir\fR" 4
+.IX Item "x509verify=/path/to/certificate/dir"
+Valid if \fBtls\fR is specified. Require that x509 credentials are used
+for negotiating the \s-1TLS\s0 session. The server will send its x509 certificate
+to the client, and request that the client send its own x509 certificate.
+The server will validate the client's certificate against the \s-1CA\s0 certificate,
+and reject clients when validation fails. If the certificate authority is
+trusted, this is a sufficient authentication mechanism. You may still wish
+to set a password on the \s-1VNC\s0 server as a second authentication layer. The
+path following this option specifies where the x509 certificates are to
+be loaded from. See the \fBvnc_security\fR section for details on generating
+certificates.
+.IP "\fBsasl\fR" 4
+.IX Item "sasl"
+Require that the client use \s-1SASL\s0 to authenticate with the \s-1VNC\s0 server.
+The exact choice of authentication method used is controlled from the
+system / user's \s-1SASL\s0 configuration file for the 'qemu' service. This
+is typically found in /etc/sasl2/qemu.conf. If running \s-1QEMU\s0 as an
+unprivileged user, an environment variable \s-1SASL_CONF_PATH\s0 can be used
+to make it search alternate locations for the service config.
+While some \s-1SASL\s0 auth methods can also provide data encryption (eg \s-1GSSAPI\s0),
+it is recommended that \s-1SASL\s0 always be combined with the 'tls' and
+\&'x509' settings to enable use of \s-1SSL\s0 and server certificates. This
+ensures a data encryption preventing compromise of authentication
+credentials. See the \fBvnc_security\fR section for details on using
+\&\s-1SASL\s0 authentication.
+.IP "\fBacl\fR" 4
+.IX Item "acl"
+Turn on access control lists for checking of the x509 client certificate
+and \s-1SASL\s0 party. For x509 certs, the \s-1ACL\s0 check is made against the
+certificate's distinguished name. This is something that looks like
+\&\f(CW\*(C`C=GB,O=ACME,L=Boston,CN=bob\*(C'\fR. For \s-1SASL\s0 party, the \s-1ACL\s0 check is
+made against the username, which depending on the \s-1SASL\s0 plugin, may
+include a realm component, eg \f(CW\*(C`bob\*(C'\fR or \f(CW\*(C`bob@EXAMPLE.COM\*(C'\fR.
+When the \fBacl\fR flag is set, the initial access list will be
+empty, with a \f(CW\*(C`deny\*(C'\fR policy. Thus no one will be allowed to
+use the \s-1VNC\s0 server until the ACLs have been loaded. This can be
+achieved using the \f(CW\*(C`acl\*(C'\fR monitor command.
+.IP "\fBlossy\fR" 4
+.IX Item "lossy"
+Enable lossy compression methods (gradient, \s-1JPEG, ...\s0). If this
+option is set, \s-1VNC\s0 client may receive lossy framebuffer updates
+depending on its encoding settings. Enabling this option can save
+a lot of bandwidth at the expense of quality.
+.IP "\fBnon-adaptive\fR" 4
+.IX Item "non-adaptive"
+Disable adaptive encodings. Adaptive encodings are enabled by default.
+An adaptive encoding will try to detect frequently updated screen regions,
+and send updates in these regions using a lossy encoding (like \s-1JPEG\s0).
+This can be really helpful to save bandwidth when playing videos. Disabling
+adaptive encodings restores the original static behavior of encodings
+like Tight.
+.IP "\fBshare=[allow\-exclusive|force\-shared|ignore]\fR" 4
+.IX Item "share=[allow-exclusive|force-shared|ignore]"
+Set display sharing policy.  'allow\-exclusive' allows clients to ask
+for exclusive access.  As suggested by the rfb spec this is
+implemented by dropping other connections.  Connecting multiple
+clients in parallel requires all clients asking for a shared session
+(vncviewer: \-shared switch).  This is the default.  'force\-shared'
+disables exclusive client access.  Useful for shared desktop sessions,
+where you don't want someone forgetting specify \-shared disconnect
+everybody else.  'ignore' completely ignores the shared flag and
+allows everybody connect unconditionally.  Doesn't conform to the rfb
+spec but is traditional \s-1QEMU\s0 behavior.
+.RE
+.RS 4
+.RE
+.PP
+i386 target only:
+.IP "\fB\-win2k\-hack\fR" 4
+.IX Item "-win2k-hack"
+Use it when installing Windows 2000 to avoid a disk full bug. After
+Windows 2000 is installed, you no longer need this option (this option
+slows down the \s-1IDE\s0 transfers).
+.IP "\fB\-no\-fd\-bootchk\fR" 4
+.IX Item "-no-fd-bootchk"
+Disable boot signature checking for floppy disks in \s-1BIOS.\s0 May
+be needed to boot from old floppy disks.
+.IP "\fB\-no\-acpi\fR" 4
+.IX Item "-no-acpi"
+Disable \s-1ACPI \s0(Advanced Configuration and Power Interface) support. Use
+it if your guest \s-1OS\s0 complains about \s-1ACPI\s0 problems (\s-1PC\s0 target machine
+only).
+.IP "\fB\-no\-hpet\fR" 4
+.IX Item "-no-hpet"
+Disable \s-1HPET\s0 support.
+.IP "\fB\-acpitable [sig=\fR\fIstr\fR\fB][,rev=\fR\fIn\fR\fB][,oem_id=\fR\fIstr\fR\fB][,oem_table_id=\fR\fIstr\fR\fB][,oem_rev=\fR\fIn\fR\fB] [,asl_compiler_id=\fR\fIstr\fR\fB][,asl_compiler_rev=\fR\fIn\fR\fB][,data=\fR\fIfile1\fR\fB[:\fR\fIfile2\fR\fB]...]\fR" 4
+.IX Item "-acpitable [sig=str][,rev=n][,oem_id=str][,oem_table_id=str][,oem_rev=n] [,asl_compiler_id=str][,asl_compiler_rev=n][,data=file1[:file2]...]"
+Add \s-1ACPI\s0 table with specified header fields and context from specified files.
+For file=, take whole \s-1ACPI\s0 table from the specified files, including all
+\&\s-1ACPI\s0 headers (possible overridden by other options).
+For data=, only data
+portion of the table is used, all header information is specified in the
+command line.
+.IP "\fB\-smbios file=\fR\fIbinary\fR" 4
+.IX Item "-smbios file=binary"
+Load \s-1SMBIOS\s0 entry from binary file.
+.ie n .IP "\fB\-smbios type=0[,vendor=\fR\fIstr\fR\fB][,version=\fR\fIstr\fR\fB][,date=\fR\fIstr\fR\fB][,release=\fR\fI\fI%d\fI.%d\fR\fB][,uefi=on|off]\fR" 4
+.el .IP "\fB\-smbios type=0[,vendor=\fR\fIstr\fR\fB][,version=\fR\fIstr\fR\fB][,date=\fR\fIstr\fR\fB][,release=\fR\fI\f(CI%d\fI.%d\fR\fB][,uefi=on|off]\fR" 4
+.IX Item "-smbios type=0[,vendor=str][,version=str][,date=str][,release=%d.%d][,uefi=on|off]"
+Specify \s-1SMBIOS\s0 type 0 fields
+.IP "\fB\-smbios type=1[,manufacturer=\fR\fIstr\fR\fB][,product=\fR\fIstr\fR\fB] [,version=\fR\fIstr\fR\fB][,serial=\fR\fIstr\fR\fB][,uuid=\fR\fIuuid\fR\fB][,sku=\fR\fIstr\fR\fB] [,family=\fR\fIstr\fR\fB]\fR" 4
+.IX Item "-smbios type=1[,manufacturer=str][,product=str] [,version=str][,serial=str][,uuid=uuid][,sku=str] [,family=str]"
+Specify \s-1SMBIOS\s0 type 1 fields
+.PP
+Network options:
+.IP "\fB\-net nic[,vlan=\fR\fIn\fR\fB][,macaddr=\fR\fImac\fR\fB][,model=\fR\fItype\fR\fB] [,name=\fR\fIname\fR\fB][,addr=\fR\fIaddr\fR\fB][,vectors=\fR\fIv\fR\fB]\fR" 4
+.IX Item "-net nic[,vlan=n][,macaddr=mac][,model=type] [,name=name][,addr=addr][,vectors=v]"
+Create a new Network Interface Card and connect it to \s-1VLAN \s0\fIn\fR (\fIn\fR
+= 0 is the default). The \s-1NIC\s0 is an e1000 by default on the \s-1PC\s0
+target. Optionally, the \s-1MAC\s0 address can be changed to \fImac\fR, the
+device address set to \fIaddr\fR (\s-1PCI\s0 cards only),
+and a \fIname\fR can be assigned for use in monitor commands.
+Optionally, for \s-1PCI\s0 cards, you can specify the number \fIv\fR of MSI-X vectors
+that the card should have; this option currently only affects virtio cards; set
+\&\fIv\fR = 0 to disable MSI-X. If no \fB\-net\fR option is specified, a single
+\&\s-1NIC\s0 is created.  \s-1QEMU\s0 can emulate several different models of network card.
+Valid values for \fItype\fR are
+\&\f(CW\*(C`virtio\*(C'\fR, \f(CW\*(C`i82551\*(C'\fR, \f(CW\*(C`i82557b\*(C'\fR, \f(CW\*(C`i82559er\*(C'\fR,
+\&\f(CW\*(C`ne2k_pci\*(C'\fR, \f(CW\*(C`ne2k_isa\*(C'\fR, \f(CW\*(C`pcnet\*(C'\fR, \f(CW\*(C`rtl8139\*(C'\fR,
+\&\f(CW\*(C`e1000\*(C'\fR, \f(CW\*(C`smc91c111\*(C'\fR, \f(CW\*(C`lance\*(C'\fR and \f(CW\*(C`mcf_fec\*(C'\fR.
+Not all devices are supported on all targets.  Use \f(CW\*(C`\-net nic,model=help\*(C'\fR
+for a list of available devices for your target.
+.IP "\fB\-netdev user,id=\fR\fIid\fR\fB[,\fR\fIoption\fR\fB][,\fR\fIoption\fR\fB][,...]\fR" 4
+.IX Item "-netdev user,id=id[,option][,option][,...]"
+.PD 0
+.IP "\fB\-net user[,\fR\fIoption\fR\fB][,\fR\fIoption\fR\fB][,...]\fR" 4
+.IX Item "-net user[,option][,option][,...]"
+.PD
+Use the user mode network stack which requires no administrator
+privilege to run. Valid options are:
+.RS 4
+.IP "\fBvlan=\fR\fIn\fR" 4
+.IX Item "vlan=n"
+Connect user mode stack to \s-1VLAN \s0\fIn\fR (\fIn\fR = 0 is the default).
+.IP "\fBid=\fR\fIid\fR" 4
+.IX Item "id=id"
+.PD 0
+.IP "\fBname=\fR\fIname\fR" 4
+.IX Item "name=name"
+.PD
+Assign symbolic name for use in monitor commands.
+.IP "\fBnet=\fR\fIaddr\fR\fB[/\fR\fImask\fR\fB]\fR" 4
+.IX Item "net=addr[/mask]"
+Set \s-1IP\s0 network address the guest will see. Optionally specify the netmask,
+either in the form a.b.c.d or as number of valid top-most bits. Default is
+10.0.2.0/24.
+.IP "\fBhost=\fR\fIaddr\fR" 4
+.IX Item "host=addr"
+Specify the guest-visible address of the host. Default is the 2nd \s-1IP\s0 in the
+guest network, i.e. x.x.x.2.
+.IP "\fBrestrict=on|off\fR" 4
+.IX Item "restrict=on|off"
+If this option is enabled, the guest will be isolated, i.e. it will not be
+able to contact the host and no guest \s-1IP\s0 packets will be routed over the host
+to the outside. This option does not affect any explicitly set forwarding rules.
+.IP "\fBhostname=\fR\fIname\fR" 4
+.IX Item "hostname=name"
+Specifies the client hostname reported by the built-in \s-1DHCP\s0 server.
+.IP "\fBdhcpstart=\fR\fIaddr\fR" 4
+.IX Item "dhcpstart=addr"
+Specify the first of the 16 IPs the built-in \s-1DHCP\s0 server can assign. Default
+is the 15th to 31st \s-1IP\s0 in the guest network, i.e. x.x.x.15 to x.x.x.31.
+.IP "\fBdns=\fR\fIaddr\fR" 4
+.IX Item "dns=addr"
+Specify the guest-visible address of the virtual nameserver. The address must
+be different from the host address. Default is the 3rd \s-1IP\s0 in the guest network,
+i.e. x.x.x.3.
+.IP "\fBdnssearch=\fR\fIdomain\fR" 4
+.IX Item "dnssearch=domain"
+Provides an entry for the domain-search list sent by the built-in
+\&\s-1DHCP\s0 server. More than one domain suffix can be transmitted by specifying
+this option multiple times. If supported, this will cause the guest to
+automatically try to append the given domain suffix(es) in case a domain name
+can not be resolved.
+.Sp
+Example:
+.Sp
+.Vb 1
+\&        qemu \-net user,dnssearch=mgmt.example.org,dnssearch=example.org [...]
+.Ve
+.IP "\fBtftp=\fR\fIdir\fR" 4
+.IX Item "tftp=dir"
+When using the user mode network stack, activate a built-in \s-1TFTP\s0
+server. The files in \fIdir\fR will be exposed as the root of a \s-1TFTP\s0 server.
+The \s-1TFTP\s0 client on the guest must be configured in binary mode (use the command
+\&\f(CW\*(C`bin\*(C'\fR of the Unix \s-1TFTP\s0 client).
+.IP "\fBbootfile=\fR\fIfile\fR" 4
+.IX Item "bootfile=file"
+When using the user mode network stack, broadcast \fIfile\fR as the \s-1BOOTP\s0
+filename. In conjunction with \fBtftp\fR, this can be used to network boot
+a guest from a local directory.
+.Sp
+Example (using pxelinux):
+.Sp
+.Vb 1
+\&        qemu\-system\-i386 \-hda linux.img \-boot n \-net user,tftp=/path/to/tftp/files,bootfile=/pxelinux.0
+.Ve
+.IP "\fBsmb=\fR\fIdir\fR\fB[,smbserver=\fR\fIaddr\fR\fB]\fR" 4
+.IX Item "smb=dir[,smbserver=addr]"
+When using the user mode network stack, activate a built-in \s-1SMB\s0
+server so that Windows OSes can access to the host files in \fI\fIdir\fI\fR
+transparently. The \s-1IP\s0 address of the \s-1SMB\s0 server can be set to \fIaddr\fR. By
+default the 4th \s-1IP\s0 in the guest network is used, i.e. x.x.x.4.
+.Sp
+In the guest Windows \s-1OS,\s0 the line:
+.Sp
+.Vb 1
+\&        10.0.2.4 smbserver
+.Ve
+.Sp
+must be added in the file \fIC:\eWINDOWS\eLMHOSTS\fR (for windows 9x/Me)
+or \fIC:\eWINNT\eSYSTEM32\eDRIVERS\eETC\eLMHOSTS\fR (Windows \s-1NT/2000\s0).
+.Sp
+Then \fI\fIdir\fI\fR can be accessed in \fI\e\esmbserver\eqemu\fR.
+.Sp
+Note that a \s-1SAMBA\s0 server must be installed on the host \s-1OS.
+QEMU\s0 was tested successfully with smbd versions from Red Hat 9,
+Fedora Core 3 and OpenSUSE 11.x.
+.IP "\fBhostfwd=[tcp|udp]:[\fR\fIhostaddr\fR\fB]:\fR\fIhostport\fR\fB\-[\fR\fIguestaddr\fR\fB]:\fR\fIguestport\fR" 4
+.IX Item "hostfwd=[tcp|udp]:[hostaddr]:hostport-[guestaddr]:guestport"
+Redirect incoming \s-1TCP\s0 or \s-1UDP\s0 connections to the host port \fIhostport\fR to
+the guest \s-1IP\s0 address \fIguestaddr\fR on guest port \fIguestport\fR. If
+\&\fIguestaddr\fR is not specified, its value is x.x.x.15 (default first address
+given by the built-in \s-1DHCP\s0 server). By specifying \fIhostaddr\fR, the rule can
+be bound to a specific host interface. If no connection type is set, \s-1TCP\s0 is
+used. This option can be given multiple times.
+.Sp
+For example, to redirect host X11 connection from screen 1 to guest
+screen 0, use the following:
+.Sp
+.Vb 4
+\&        # on the host
+\&        qemu\-system\-i386 \-net user,hostfwd=tcp:127.0.0.1:6001\-:6000 [...]
+\&        # this host xterm should open in the guest X11 server
+\&        xterm \-display :1
+.Ve
+.Sp
+To redirect telnet connections from host port 5555 to telnet port on
+the guest, use the following:
+.Sp
+.Vb 3
+\&        # on the host
+\&        qemu\-system\-i386 \-net user,hostfwd=tcp::5555\-:23 [...]
+\&        telnet localhost 5555
+.Ve
+.Sp
+Then when you use on the host \f(CW\*(C`telnet localhost 5555\*(C'\fR, you
+connect to the guest telnet server.
+.IP "\fBguestfwd=[tcp]:\fR\fIserver\fR\fB:\fR\fIport\fR\fB\-\fR\fIdev\fR" 4
+.IX Item "guestfwd=[tcp]:server:port-dev"
+.PD 0
+.IP "\fBguestfwd=[tcp]:\fR\fIserver\fR\fB:\fR\fIport\fR\fB\-\fR\fIcmd:command\fR" 4
+.IX Item "guestfwd=[tcp]:server:port-cmd:command"
+.PD
+Forward guest \s-1TCP\s0 connections to the \s-1IP\s0 address \fIserver\fR on port \fIport\fR
+to the character device \fIdev\fR or to a program executed by \fIcmd:command\fR
+which gets spawned for each connection. This option can be given multiple times.
+.Sp
+You can either use a chardev directly and have that one used throughout \s-1QEMU\s0's
+lifetime, like in the following example:
+.Sp
+.Vb 3
+\&        # open 10.10.1.1:4321 on bootup, connect 10.0.2.100:1234 to it whenever
+\&        # the guest accesses it
+\&        qemu \-net user,guestfwd=tcp:10.0.2.100:1234\-tcp:10.10.1.1:4321 [...]
+.Ve
+.Sp
+Or you can execute a command on every \s-1TCP\s0 connection established by the guest,
+so that \s-1QEMU\s0 behaves similar to an inetd process for that virtual server:
+.Sp
+.Vb 3
+\&        # call "netcat 10.10.1.1 4321" on every TCP connection to 10.0.2.100:1234
+\&        # and connect the TCP stream to its stdin/stdout
+\&        qemu \-net \*(Aquser,guestfwd=tcp:10.0.2.100:1234\-cmd:netcat 10.10.1.1 4321\*(Aq
+.Ve
+.RE
+.RS 4
+.Sp
+Note: Legacy stand-alone options \-tftp, \-bootp, \-smb and \-redir are still
+processed and applied to \-net user. Mixing them with the new configuration
+syntax gives undefined results. Their use for new applications is discouraged
+as they will be removed from future versions.
+.RE
+.IP "\fB\-netdev tap,id=\fR\fIid\fR\fB[,fd=\fR\fIh\fR\fB][,ifname=\fR\fIname\fR\fB][,script=\fR\fIfile\fR\fB][,downscript=\fR\fIdfile\fR\fB][,helper=\fR\fIhelper\fR\fB]\fR" 4
+.IX Item "-netdev tap,id=id[,fd=h][,ifname=name][,script=file][,downscript=dfile][,helper=helper]"
+.PD 0
+.IP "\fB\-net tap[,vlan=\fR\fIn\fR\fB][,name=\fR\fIname\fR\fB][,fd=\fR\fIh\fR\fB][,ifname=\fR\fIname\fR\fB][,script=\fR\fIfile\fR\fB][,downscript=\fR\fIdfile\fR\fB][,helper=\fR\fIhelper\fR\fB]\fR" 4
+.IX Item "-net tap[,vlan=n][,name=name][,fd=h][,ifname=name][,script=file][,downscript=dfile][,helper=helper]"
+.PD
+Connect the host \s-1TAP\s0 network interface \fIname\fR to \s-1VLAN \s0\fIn\fR.
+.Sp
+Use the network script \fIfile\fR to configure it and the network script
+\&\fIdfile\fR to deconfigure it. If \fIname\fR is not provided, the \s-1OS\s0
+automatically provides one. The default network configure script is
+\&\fI/etc/qemu\-ifup\fR and the default network deconfigure script is
+\&\fI/etc/qemu\-ifdown\fR. Use \fBscript=no\fR or \fBdownscript=no\fR
+to disable script execution.
+.Sp
+If running \s-1QEMU\s0 as an unprivileged user, use the network helper
+\&\fIhelper\fR to configure the \s-1TAP\s0 interface. The default network
+helper executable is \fI/path/to/qemu\-bridge\-helper\fR.
+.Sp
+\&\fBfd\fR=\fIh\fR can be used to specify the handle of an already
+opened host \s-1TAP\s0 interface.
+.Sp
+Examples:
+.Sp
+.Vb 2
+\&        #launch a QEMU instance with the default network script
+\&        qemu\-system\-i386 linux.img \-net nic \-net tap
+\&
+\&
+\&        
+\&        #launch a QEMU instance with two NICs, each one connected
+\&        #to a TAP device
+\&        qemu\-system\-i386 linux.img \e
+\&        \-net nic,vlan=0 \-net tap,vlan=0,ifname=tap0 \e
+\&        \-net nic,vlan=1 \-net tap,vlan=1,ifname=tap1
+\&
+\&
+\&        
+\&        #launch a QEMU instance with the default network helper to
+\&        #connect a TAP device to bridge br0
+\&        qemu\-system\-i386 linux.img \e
+\&        \-net nic \-net tap,"helper=/path/to/qemu\-bridge\-helper"
+.Ve
+.IP "\fB\-netdev bridge,id=\fR\fIid\fR\fB[,br=\fR\fIbridge\fR\fB][,helper=\fR\fIhelper\fR\fB]\fR" 4
+.IX Item "-netdev bridge,id=id[,br=bridge][,helper=helper]"
+.PD 0
+.IP "\fB\-net bridge[,vlan=\fR\fIn\fR\fB][,name=\fR\fIname\fR\fB][,br=\fR\fIbridge\fR\fB][,helper=\fR\fIhelper\fR\fB]\fR" 4
+.IX Item "-net bridge[,vlan=n][,name=name][,br=bridge][,helper=helper]"
+.PD
+Connect a host \s-1TAP\s0 network interface to a host bridge device.
+.Sp
+Use the network helper \fIhelper\fR to configure the \s-1TAP\s0 interface and
+attach it to the bridge. The default network helper executable is
+\&\fI/path/to/qemu\-bridge\-helper\fR and the default bridge
+device is \fIbr0\fR.
+.Sp
+Examples:
+.Sp
+.Vb 3
+\&        #launch a QEMU instance with the default network helper to
+\&        #connect a TAP device to bridge br0
+\&        qemu\-system\-i386 linux.img \-net bridge \-net nic,model=virtio
+\&
+\&
+\&        
+\&        #launch a QEMU instance with the default network helper to
+\&        #connect a TAP device to bridge qemubr0
+\&        qemu\-system\-i386 linux.img \-net bridge,br=qemubr0 \-net nic,model=virtio
+.Ve
+.IP "\fB\-netdev socket,id=\fR\fIid\fR\fB[,fd=\fR\fIh\fR\fB][,listen=[\fR\fIhost\fR\fB]:\fR\fIport\fR\fB][,connect=\fR\fIhost\fR\fB:\fR\fIport\fR\fB]\fR" 4
+.IX Item "-netdev socket,id=id[,fd=h][,listen=[host]:port][,connect=host:port]"
+.PD 0
+.IP "\fB\-net socket[,vlan=\fR\fIn\fR\fB][,name=\fR\fIname\fR\fB][,fd=\fR\fIh\fR\fB] [,listen=[\fR\fIhost\fR\fB]:\fR\fIport\fR\fB][,connect=\fR\fIhost\fR\fB:\fR\fIport\fR\fB]\fR" 4
+.IX Item "-net socket[,vlan=n][,name=name][,fd=h] [,listen=[host]:port][,connect=host:port]"
+.PD
+Connect the \s-1VLAN \s0\fIn\fR to a remote \s-1VLAN\s0 in another \s-1QEMU\s0 virtual
+machine using a \s-1TCP\s0 socket connection. If \fBlisten\fR is
+specified, \s-1QEMU\s0 waits for incoming connections on \fIport\fR
+(\fIhost\fR is optional). \fBconnect\fR is used to connect to
+another \s-1QEMU\s0 instance using the \fBlisten\fR option. \fBfd\fR=\fIh\fR
+specifies an already opened \s-1TCP\s0 socket.
+.Sp
+Example:
+.Sp
+.Vb 9
+\&        # launch a first QEMU instance
+\&        qemu\-system\-i386 linux.img \e
+\&        \-net nic,macaddr=52:54:00:12:34:56 \e
+\&        \-net socket,listen=:1234
+\&        # connect the VLAN 0 of this instance to the VLAN 0
+\&        # of the first instance
+\&        qemu\-system\-i386 linux.img \e
+\&        \-net nic,macaddr=52:54:00:12:34:57 \e
+\&        \-net socket,connect=127.0.0.1:1234
+.Ve
+.IP "\fB\-netdev socket,id=\fR\fIid\fR\fB[,fd=\fR\fIh\fR\fB][,mcast=\fR\fImaddr\fR\fB:\fR\fIport\fR\fB[,localaddr=\fR\fIaddr\fR\fB]]\fR" 4
+.IX Item "-netdev socket,id=id[,fd=h][,mcast=maddr:port[,localaddr=addr]]"
+.PD 0
+.IP "\fB\-net socket[,vlan=\fR\fIn\fR\fB][,name=\fR\fIname\fR\fB][,fd=\fR\fIh\fR\fB][,mcast=\fR\fImaddr\fR\fB:\fR\fIport\fR\fB[,localaddr=\fR\fIaddr\fR\fB]]\fR" 4
+.IX Item "-net socket[,vlan=n][,name=name][,fd=h][,mcast=maddr:port[,localaddr=addr]]"
+.PD
+Create a \s-1VLAN \s0\fIn\fR shared with another \s-1QEMU\s0 virtual
+machines using a \s-1UDP\s0 multicast socket, effectively making a bus for
+every \s-1QEMU\s0 with same multicast address \fImaddr\fR and \fIport\fR.
+\&\s-1NOTES:\s0
+.RS 4
+.IP "1." 4
+Several \s-1QEMU\s0 can be running on different hosts and share same bus (assuming
+correct multicast setup for these hosts).
+.IP "2." 4
+mcast support is compatible with User Mode Linux (argument \fBeth\fR\fIN\fR\fB=mcast\fR), see
+<\fBhttp://user\-mode\-linux.sf.net\fR>.
+.IP "3." 4
+Use \fBfd=h\fR to specify an already opened \s-1UDP\s0 multicast socket.
+.RE
+.RS 4
+.Sp
+Example:
+.Sp
+.Vb 12
+\&        # launch one QEMU instance
+\&        qemu\-system\-i386 linux.img \e
+\&        \-net nic,macaddr=52:54:00:12:34:56 \e
+\&        \-net socket,mcast=230.0.0.1:1234
+\&        # launch another QEMU instance on same "bus"
+\&        qemu\-system\-i386 linux.img \e
+\&        \-net nic,macaddr=52:54:00:12:34:57 \e
+\&        \-net socket,mcast=230.0.0.1:1234
+\&        # launch yet another QEMU instance on same "bus"
+\&        qemu\-system\-i386 linux.img \e
+\&        \-net nic,macaddr=52:54:00:12:34:58 \e
+\&        \-net socket,mcast=230.0.0.1:1234
+.Ve
+.Sp
+Example (User Mode Linux compat.):
+.Sp
+.Vb 7
+\&        # launch QEMU instance (note mcast address selected
+\&        # is UML\*(Aqs default)
+\&        qemu\-system\-i386 linux.img \e
+\&        \-net nic,macaddr=52:54:00:12:34:56 \e
+\&        \-net socket,mcast=239.192.168.1:1102
+\&        # launch UML
+\&        /path/to/linux ubd0=/path/to/root_fs eth0=mcast
+.Ve
+.Sp
+Example (send packets from host's 1.2.3.4):
+.Sp
+.Vb 3
+\&        qemu\-system\-i386 linux.img \e
+\&        \-net nic,macaddr=52:54:00:12:34:56 \e
+\&        \-net socket,mcast=239.192.168.1:1102,localaddr=1.2.3.4
+.Ve
+.RE
+.IP "\fB\-netdev l2tpv3,id=\fR\fIid\fR\fB,src=\fR\fIsrcaddr\fR\fB,dst=\fR\fIdstaddr\fR\fB[,srcport=\fR\fIsrcport\fR\fB][,dstport=\fR\fIdstport\fR\fB],txsession=\fR\fItxsession\fR\fB[,rxsession=\fR\fIrxsession\fR\fB][,ipv6][,udp][,cookie64][,counter][,pincounter][,txcookie=\fR\fItxcookie\fR\fB][,rxcookie=\fR\fIrxcookie\fR\fB][,offset=\fR\fIoffset\fR\fB]\fR" 4
+.IX Item "-netdev l2tpv3,id=id,src=srcaddr,dst=dstaddr[,srcport=srcport][,dstport=dstport],txsession=txsession[,rxsession=rxsession][,ipv6][,udp][,cookie64][,counter][,pincounter][,txcookie=txcookie][,rxcookie=rxcookie][,offset=offset]"
+.PD 0
+.IP "\fB\-net l2tpv3[,vlan=\fR\fIn\fR\fB][,name=\fR\fIname\fR\fB],src=\fR\fIsrcaddr\fR\fB,dst=\fR\fIdstaddr\fR\fB[,srcport=\fR\fIsrcport\fR\fB][,dstport=\fR\fIdstport\fR\fB],txsession=\fR\fItxsession\fR\fB[,rxsession=\fR\fIrxsession\fR\fB][,ipv6][,udp][,cookie64][,counter][,pincounter][,txcookie=\fR\fItxcookie\fR\fB][,rxcookie=\fR\fIrxcookie\fR\fB][,offset=\fR\fIoffset\fR\fB]\fR" 4
+.IX Item "-net l2tpv3[,vlan=n][,name=name],src=srcaddr,dst=dstaddr[,srcport=srcport][,dstport=dstport],txsession=txsession[,rxsession=rxsession][,ipv6][,udp][,cookie64][,counter][,pincounter][,txcookie=txcookie][,rxcookie=rxcookie][,offset=offset]"
+.PD
+Connect \s-1VLAN \s0\fIn\fR to L2TPv3 pseudowire. L2TPv3 (\s-1RFC3391\s0) is a popular
+protocol to transport Ethernet (and other Layer 2) data frames between
+two systems. It is present in routers, firewalls and the Linux kernel
+(from version 3.3 onwards).
+.Sp
+This transport allows a \s-1VM\s0 to communicate to another \s-1VM,\s0 router or firewall directly.
+.IP "\fBsrc=\fR\fIsrcaddr\fR" 4
+.IX Item "src=srcaddr"
+source address (mandatory)
+.IP "\fBdst=\fR\fIdstaddr\fR" 4
+.IX Item "dst=dstaddr"
+destination address (mandatory)
+.IP "\fBudp\fR" 4
+.IX Item "udp"
+select udp encapsulation (default is ip).
+.IP "\fBsrcport=\fR\fIsrcport\fR" 4
+.IX Item "srcport=srcport"
+source udp port.
+.IP "\fBdstport=\fR\fIdstport\fR" 4
+.IX Item "dstport=dstport"
+destination udp port.
+.IP "\fBipv6\fR" 4
+.IX Item "ipv6"
+force v6, otherwise defaults to v4.
+.IP "\fBrxcookie=\fR\fIrxcookie\fR" 4
+.IX Item "rxcookie=rxcookie"
+.PD 0
+.IP "\fBtxcookie=\fR\fItxcookie\fR" 4
+.IX Item "txcookie=txcookie"
+.PD
+Cookies are a weak form of security in the l2tpv3 specification.
+Their function is mostly to prevent misconfiguration. By default they are 32
+bit.
+.IP "\fBcookie64\fR" 4
+.IX Item "cookie64"
+Set cookie size to 64 bit instead of the default 32
+.IP "\fBcounter=off\fR" 4
+.IX Item "counter=off"
+Force a 'cut\-down' L2TPv3 with no counter as in
+draft\-mkonstan\-l2tpext\-keyed\-ipv6\-tunnel\-00
+.IP "\fBpincounter=on\fR" 4
+.IX Item "pincounter=on"
+Work around broken counter handling in peer. This may also help on
+networks which have packet reorder.
+.IP "\fBoffset=\fR\fIoffset\fR" 4
+.IX Item "offset=offset"
+Add an extra offset between header and data
+.Sp
+For example, to attach a \s-1VM\s0 running on host 4.3.2.1 via L2TPv3 to the bridge br-lan
+on the remote Linux host 1.2.3.4:
+.Sp
+.Vb 9
+\&        # Setup tunnel on linux host using raw ip as encapsulation
+\&        # on 1.2.3.4
+\&        ip l2tp add tunnel remote 4.3.2.1 local 1.2.3.4 tunnel_id 1 peer_tunnel_id 1 \e
+\&        encap udp udp_sport 16384 udp_dport 16384
+\&        ip l2tp add session tunnel_id 1 name vmtunnel0 session_id \e
+\&        0xFFFFFFFF peer_session_id 0xFFFFFFFF
+\&        ifconfig vmtunnel0 mtu 1500
+\&        ifconfig vmtunnel0 up
+\&        brctl addif br\-lan vmtunnel0
+\&        
+\&        
+\&        # on 4.3.2.1
+\&        # launch QEMU instance \- if your network has reorder or is very lossy add ,pincounter
+\&        
+\&        qemu\-system\-i386 linux.img \-net nic \-net l2tpv3,src=4.2.3.1,dst=1.2.3.4,udp,srcport=16384,dstport=16384,rxsession=0xffffffff,txsession=0xffffffff,counter
+.Ve
+.IP "\fB\-netdev vde,id=\fR\fIid\fR\fB[,sock=\fR\fIsocketpath\fR\fB][,port=\fR\fIn\fR\fB][,group=\fR\fIgroupname\fR\fB][,mode=\fR\fIoctalmode\fR\fB]\fR" 4
+.IX Item "-netdev vde,id=id[,sock=socketpath][,port=n][,group=groupname][,mode=octalmode]"
+.PD 0
+.IP "\fB\-net vde[,vlan=\fR\fIn\fR\fB][,name=\fR\fIname\fR\fB][,sock=\fR\fIsocketpath\fR\fB] [,port=\fR\fIn\fR\fB][,group=\fR\fIgroupname\fR\fB][,mode=\fR\fIoctalmode\fR\fB]\fR" 4
+.IX Item "-net vde[,vlan=n][,name=name][,sock=socketpath] [,port=n][,group=groupname][,mode=octalmode]"
+.PD
+Connect \s-1VLAN \s0\fIn\fR to \s-1PORT \s0\fIn\fR of a vde switch running on host and
+listening for incoming connections on \fIsocketpath\fR. Use \s-1GROUP \s0\fIgroupname\fR
+and \s-1MODE \s0\fIoctalmode\fR to change default ownership and permissions for
+communication port. This option is only available if \s-1QEMU\s0 has been compiled
+with vde support enabled.
+.Sp
+Example:
+.Sp
+.Vb 4
+\&        # launch vde switch
+\&        vde_switch \-F \-sock /tmp/myswitch
+\&        # launch QEMU instance
+\&        qemu\-system\-i386 linux.img \-net nic \-net vde,sock=/tmp/myswitch
+.Ve
+.IP "\fB\-netdev hubport,id=\fR\fIid\fR\fB,hubid=\fR\fIhubid\fR" 4
+.IX Item "-netdev hubport,id=id,hubid=hubid"
+Create a hub port on \s-1QEMU \s0\*(L"vlan\*(R" \fIhubid\fR.
+.Sp
+The hubport netdev lets you connect a \s-1NIC\s0 to a \s-1QEMU \s0\*(L"vlan\*(R" instead of a single
+netdev.  \f(CW\*(C`\-net\*(C'\fR and \f(CW\*(C`\-device\*(C'\fR with parameter \fBvlan\fR create the
+required hub automatically.
+.IP "\fB\-netdev vhost\-user,chardev=\fR\fIid\fR\fB[,vhostforce=on|off]\fR" 4
+.IX Item "-netdev vhost-user,chardev=id[,vhostforce=on|off]"
+Establish a vhost-user netdev, backed by a chardev \fIid\fR. The chardev should
+be a unix domain socket backed one. The vhost-user uses a specifically defined
+protocol to pass vhost ioctl replacement messages to an application on the other
+end of the socket. On non-MSIX guests, the feature can be forced with
+\&\fIvhostforce\fR.
+.Sp
+Example:
+.Sp
+.Vb 5
+\&        qemu \-m 512 \-object memory\-backend\-file,id=mem,size=512M,mem\-path=/hugetlbfs,share=on \e
+\&        \-numa node,memdev=mem \e
+\&        \-chardev socket,path=/path/to/socket \e
+\&        \-netdev type=vhost\-user,id=net0,chardev=chr0 \e
+\&        \-device virtio\-net\-pci,netdev=net0
+.Ve
+.IP "\fB\-net dump[,vlan=\fR\fIn\fR\fB][,file=\fR\fIfile\fR\fB][,len=\fR\fIlen\fR\fB]\fR" 4
+.IX Item "-net dump[,vlan=n][,file=file][,len=len]"
+Dump network traffic on \s-1VLAN \s0\fIn\fR to file \fIfile\fR (\fIqemu\-vlan0.pcap\fR by default).
+At most \fIlen\fR bytes (64k by default) per packet are stored. The file format is
+libpcap, so it can be analyzed with tools such as tcpdump or Wireshark.
+.IP "\fB\-net none\fR" 4
+.IX Item "-net none"
+Indicate that no network devices should be configured. It is used to
+override the default configuration (\fB\-net nic \-net user\fR) which
+is activated if no \fB\-net\fR options are provided.
+.PP
+Character device options:
+.PP
+The general form of a character device option is:
+.IP "\fB\-chardev\fR \fIbackend\fR \fB,id=\fR\fIid\fR \fB[,mux=on|off] [,\fR\fIoptions\fR\fB]\fR" 4
+.IX Item "-chardev backend ,id=id [,mux=on|off] [,options]"
+Backend is one of:
+\&\fBnull\fR,
+\&\fBsocket\fR,
+\&\fBudp\fR,
+\&\fBmsmouse\fR,
+\&\fBvc\fR,
+\&\fBringbuf\fR,
+\&\fBfile\fR,
+\&\fBpipe\fR,
+\&\fBconsole\fR,
+\&\fBserial\fR,
+\&\fBpty\fR,
+\&\fBstdio\fR,
+\&\fBbraille\fR,
+\&\fBtty\fR,
+\&\fBparallel\fR,
+\&\fBparport\fR,
+\&\fBspicevmc\fR.
+\&\fBspiceport\fR.
+The specific backend will determine the applicable options.
+.Sp
+All devices must have an id, which can be any string up to 127 characters long.
+It is used to uniquely identify this device in other command line directives.
+.Sp
+A character device may be used in multiplexing mode by multiple front-ends.
+The key sequence of \fBControl-a\fR and \fBc\fR will rotate the input focus
+between attached front-ends. Specify \fBmux=on\fR to enable this mode.
+.Sp
+Options to each backend are described below.
+.IP "\fB\-chardev null ,id=\fR\fIid\fR" 4
+.IX Item "-chardev null ,id=id"
+A void device. This device will not emit any data, and will drop any data it
+receives. The null backend does not take any options.
+.IP "\fB\-chardev socket ,id=\fR\fIid\fR \fB[\fR\fI\s-1TCP\s0 options\fR \fBor\fR \fIunix options\fR\fB] [,server] [,nowait] [,telnet]\fR" 4
+.IX Item "-chardev socket ,id=id [TCP options or unix options] [,server] [,nowait] [,telnet]"
+Create a two-way stream socket, which can be either a \s-1TCP\s0 or a unix socket. A
+unix socket will be created if \fBpath\fR is specified. Behaviour is
+undefined if \s-1TCP\s0 options are specified for a unix socket.
+.Sp
+\&\fBserver\fR specifies that the socket shall be a listening socket.
+.Sp
+\&\fBnowait\fR specifies that \s-1QEMU\s0 should not block waiting for a client to
+connect to a listening socket.
+.Sp
+\&\fBtelnet\fR specifies that traffic on the socket should interpret telnet
+escape sequences.
+.Sp
+\&\s-1TCP\s0 and unix socket options are given below:
+.RS 4
+.IP "\fB\s-1TCP\s0 options: port=\fR\fIport\fR \fB[,host=\fR\fIhost\fR\fB] [,to=\fR\fIto\fR\fB] [,ipv4] [,ipv6] [,nodelay]\fR" 4
+.IX Item "TCP options: port=port [,host=host] [,to=to] [,ipv4] [,ipv6] [,nodelay]"
+\&\fBhost\fR for a listening socket specifies the local address to be bound.
+For a connecting socket species the remote host to connect to. \fBhost\fR is
+optional for listening sockets. If not specified it defaults to \f(CW0.0.0.0\fR.
+.Sp
+\&\fBport\fR for a listening socket specifies the local port to be bound. For a
+connecting socket specifies the port on the remote host to connect to.
+\&\fBport\fR can be given as either a port number or a service name.
+\&\fBport\fR is required.
+.Sp
+\&\fBto\fR is only relevant to listening sockets. If it is specified, and
+\&\fBport\fR cannot be bound, \s-1QEMU\s0 will attempt to bind to subsequent ports up
+to and including \fBto\fR until it succeeds. \fBto\fR must be specified
+as a port number.
+.Sp
+\&\fBipv4\fR and \fBipv6\fR specify that either IPv4 or IPv6 must be used.
+If neither is specified the socket may use either protocol.
+.Sp
+\&\fBnodelay\fR disables the Nagle algorithm.
+.IP "\fBunix options: path=\fR\fIpath\fR" 4
+.IX Item "unix options: path=path"
+\&\fBpath\fR specifies the local path of the unix socket. \fBpath\fR is
+required.
+.RE
+.RS 4
+.RE
+.IP "\fB\-chardev udp ,id=\fR\fIid\fR \fB[,host=\fR\fIhost\fR\fB] ,port=\fR\fIport\fR \fB[,localaddr=\fR\fIlocaladdr\fR\fB] [,localport=\fR\fIlocalport\fR\fB] [,ipv4] [,ipv6]\fR" 4
+.IX Item "-chardev udp ,id=id [,host=host] ,port=port [,localaddr=localaddr] [,localport=localport] [,ipv4] [,ipv6]"
+Sends all traffic from the guest to a remote host over \s-1UDP.\s0
+.Sp
+\&\fBhost\fR specifies the remote host to connect to. If not specified it
+defaults to \f(CW\*(C`localhost\*(C'\fR.
+.Sp
+\&\fBport\fR specifies the port on the remote host to connect to. \fBport\fR
+is required.
+.Sp
+\&\fBlocaladdr\fR specifies the local address to bind to. If not specified it
+defaults to \f(CW0.0.0.0\fR.
+.Sp
+\&\fBlocalport\fR specifies the local port to bind to. If not specified any
+available local port will be used.
+.Sp
+\&\fBipv4\fR and \fBipv6\fR specify that either IPv4 or IPv6 must be used.
+If neither is specified the device may use either protocol.
+.IP "\fB\-chardev msmouse ,id=\fR\fIid\fR" 4
+.IX Item "-chardev msmouse ,id=id"
+Forward \s-1QEMU\s0's emulated msmouse events to the guest. \fBmsmouse\fR does not
+take any options.
+.IP "\fB\-chardev vc ,id=\fR\fIid\fR \fB[[,width=\fR\fIwidth\fR\fB] [,height=\fR\fIheight\fR\fB]] [[,cols=\fR\fIcols\fR\fB] [,rows=\fR\fIrows\fR\fB]]\fR" 4
+.IX Item "-chardev vc ,id=id [[,width=width] [,height=height]] [[,cols=cols] [,rows=rows]]"
+Connect to a \s-1QEMU\s0 text console. \fBvc\fR may optionally be given a specific
+size.
+.Sp
+\&\fBwidth\fR and \fBheight\fR specify the width and height respectively of
+the console, in pixels.
+.Sp
+\&\fBcols\fR and \fBrows\fR specify that the console be sized to fit a text
+console with the given dimensions.
+.IP "\fB\-chardev ringbuf ,id=\fR\fIid\fR \fB[,size=\fR\fIsize\fR\fB]\fR" 4
+.IX Item "-chardev ringbuf ,id=id [,size=size]"
+Create a ring buffer with fixed size \fBsize\fR.
+\&\fIsize\fR must be a power of two, and defaults to \f(CW\*(C`64K\*(C'\fR).
+.IP "\fB\-chardev file ,id=\fR\fIid\fR \fB,path=\fR\fIpath\fR" 4
+.IX Item "-chardev file ,id=id ,path=path"
+Log all traffic received from the guest to a file.
+.Sp
+\&\fBpath\fR specifies the path of the file to be opened. This file will be
+created if it does not already exist, and overwritten if it does. \fBpath\fR
+is required.
+.IP "\fB\-chardev pipe ,id=\fR\fIid\fR \fB,path=\fR\fIpath\fR" 4
+.IX Item "-chardev pipe ,id=id ,path=path"
+Create a two-way connection to the guest. The behaviour differs slightly between
+Windows hosts and other hosts:
+.Sp
+On Windows, a single duplex pipe will be created at
+\&\fI\e\e.pipe\e\f(BIpath\fI\fR.
+.Sp
+On other hosts, 2 pipes will be created called \fI\f(BIpath\fI.in\fR and
+\&\fI\f(BIpath\fI.out\fR. Data written to \fI\f(BIpath\fI.in\fR will be
+received by the guest. Data written by the guest can be read from
+\&\fI\f(BIpath\fI.out\fR. \s-1QEMU\s0 will not create these fifos, and requires them to
+be present.
+.Sp
+\&\fBpath\fR forms part of the pipe path as described above. \fBpath\fR is
+required.
+.IP "\fB\-chardev console ,id=\fR\fIid\fR" 4
+.IX Item "-chardev console ,id=id"
+Send traffic from the guest to \s-1QEMU\s0's standard output. \fBconsole\fR does not
+take any options.
+.Sp
+\&\fBconsole\fR is only available on Windows hosts.
+.IP "\fB\-chardev serial ,id=\fR\fIid\fR \fB,path=\fR\fBpath\fR" 4
+.IX Item "-chardev serial ,id=id ,path=path"
+Send traffic from the guest to a serial device on the host.
+.Sp
+On Unix hosts serial will actually accept any tty device,
+not only serial lines.
+.Sp
+\&\fBpath\fR specifies the name of the serial device to open.
+.IP "\fB\-chardev pty ,id=\fR\fIid\fR" 4
+.IX Item "-chardev pty ,id=id"
+Create a new pseudo-terminal on the host and connect to it. \fBpty\fR does
+not take any options.
+.Sp
+\&\fBpty\fR is not available on Windows hosts.
+.IP "\fB\-chardev stdio ,id=\fR\fIid\fR \fB[,signal=on|off]\fR" 4
+.IX Item "-chardev stdio ,id=id [,signal=on|off]"
+Connect to standard input and standard output of the \s-1QEMU\s0 process.
+.Sp
+\&\fBsignal\fR controls if signals are enabled on the terminal, that includes
+exiting \s-1QEMU\s0 with the key sequence \fBControl-c\fR. This option is enabled by
+default, use \fBsignal=off\fR to disable it.
+.Sp
+\&\fBstdio\fR is not available on Windows hosts.
+.IP "\fB\-chardev braille ,id=\fR\fIid\fR" 4
+.IX Item "-chardev braille ,id=id"
+Connect to a local BrlAPI server. \fBbraille\fR does not take any options.
+.IP "\fB\-chardev tty ,id=\fR\fIid\fR \fB,path=\fR\fIpath\fR" 4
+.IX Item "-chardev tty ,id=id ,path=path"
+\&\fBtty\fR is only available on Linux, Sun, FreeBSD, NetBSD, OpenBSD and
+DragonFlyBSD hosts.  It is an alias for \fBserial\fR.
+.Sp
+\&\fBpath\fR specifies the path to the tty. \fBpath\fR is required.
+.IP "\fB\-chardev parallel ,id=\fR\fIid\fR \fB,path=\fR\fIpath\fR" 4
+.IX Item "-chardev parallel ,id=id ,path=path"
+.PD 0
+.IP "\fB\-chardev parport ,id=\fR\fIid\fR \fB,path=\fR\fIpath\fR" 4
+.IX Item "-chardev parport ,id=id ,path=path"
+.PD
+\&\fBparallel\fR is only available on Linux, FreeBSD and DragonFlyBSD hosts.
+.Sp
+Connect to a local parallel port.
+.Sp
+\&\fBpath\fR specifies the path to the parallel port device. \fBpath\fR is
+required.
+.IP "\fB\-chardev spicevmc ,id=\fR\fIid\fR \fB,debug=\fR\fIdebug\fR\fB, name=\fR\fIname\fR" 4
+.IX Item "-chardev spicevmc ,id=id ,debug=debug, name=name"
+\&\fBspicevmc\fR is only available when spice support is built in.
+.Sp
+\&\fBdebug\fR debug level for spicevmc
+.Sp
+\&\fBname\fR name of spice channel to connect to
+.Sp
+Connect to a spice virtual machine channel, such as vdiport.
+.IP "\fB\-chardev spiceport ,id=\fR\fIid\fR \fB,debug=\fR\fIdebug\fR\fB, name=\fR\fIname\fR" 4
+.IX Item "-chardev spiceport ,id=id ,debug=debug, name=name"
+\&\fBspiceport\fR is only available when spice support is built in.
+.Sp
+\&\fBdebug\fR debug level for spicevmc
+.Sp
+\&\fBname\fR name of spice port to connect to
+.Sp
+Connect to a spice port, allowing a Spice client to handle the traffic
+identified by a name (preferably a fqdn).
+.PP
+Device \s-1URL\s0 Syntax:
+.PP
+In addition to using normal file images for the emulated storage devices,
+\&\s-1QEMU\s0 can also use networked resources such as iSCSI devices. These are
+specified using a special \s-1URL\s0 syntax.
+.IP "\fBiSCSI\fR" 4
+.IX Item "iSCSI"
+iSCSI support allows \s-1QEMU\s0 to access iSCSI resources directly and use as
+images for the guest storage. Both disk and cdrom images are supported.
+.Sp
+Syntax for specifying iSCSI LUNs is
+\&\*(L"iscsi://<target\-ip>[:<port>]/<target\-iqn>/<lun>\*(R"
+.Sp
+By default qemu will use the iSCSI initiator-name
+\&'iqn.2008\-11.org.linux\-kvm[:<name>]' but this can also be set from the command
+line or a configuration file.
+.Sp
+Example (without authentication):
+.Sp
+.Vb 3
+\&        qemu\-system\-i386 \-iscsi initiator\-name=iqn.2001\-04.com.example:my\-initiator \e
+\&        \-cdrom iscsi://192.0.2.1/iqn.2001\-04.com.example/2 \e
+\&        \-drive file=iscsi://192.0.2.1/iqn.2001\-04.com.example/1
+.Ve
+.Sp
+Example (\s-1CHAP\s0 username/password via \s-1URL\s0):
+.Sp
+.Vb 1
+\&        qemu\-system\-i386 \-drive file=iscsi://user%password@192.0.2.1/iqn.2001\-04.com.example/1
+.Ve
+.Sp
+Example (\s-1CHAP\s0 username/password via environment variables):
+.Sp
+.Vb 3
+\&        LIBISCSI_CHAP_USERNAME="user" \e
+\&        LIBISCSI_CHAP_PASSWORD="password" \e
+\&        qemu\-system\-i386 \-drive file=iscsi://192.0.2.1/iqn.2001\-04.com.example/1
+.Ve
+.Sp
+iSCSI support is an optional feature of \s-1QEMU\s0 and only available when
+compiled and linked against libiscsi.
+.Sp
+iSCSI parameters such as username and password can also be specified via
+a configuration file. See qemu-doc for more information and examples.
+.IP "\fB\s-1NBD\s0\fR" 4
+.IX Item "NBD"
+\&\s-1QEMU\s0 supports \s-1NBD \s0(Network Block Devices) both using \s-1TCP\s0 protocol as well
+as Unix Domain Sockets.
+.Sp
+Syntax for specifying a \s-1NBD\s0 device using \s-1TCP
+\&\s0\*(L"nbd:<server\-ip>:<port>[:exportname=<export>]\*(R"
+.Sp
+Syntax for specifying a \s-1NBD\s0 device using Unix Domain Sockets
+\&\*(L"nbd:unix:<domain\-socket>[:exportname=<export>]\*(R"
+.Sp
+Example for \s-1TCP\s0
+.Sp
+.Vb 1
+\&        qemu\-system\-i386 \-\-drive file=nbd:192.0.2.1:30000
+.Ve
+.Sp
+Example for Unix Domain Sockets
+.Sp
+.Vb 1
+\&        qemu\-system\-i386 \-\-drive file=nbd:unix:/tmp/nbd\-socket
+.Ve
+.IP "\fB\s-1SSH\s0\fR" 4
+.IX Item "SSH"
+\&\s-1QEMU\s0 supports \s-1SSH \s0(Secure Shell) access to remote disks.
+.Sp
+Examples:
+.Sp
+.Vb 2
+\&        qemu\-system\-i386 \-drive file=ssh://user@host/path/to/disk.img
+\&        qemu\-system\-i386 \-drive file.driver=ssh,file.user=user,file.host=host,file.port=22,file.path=/path/to/disk.img
+.Ve
+.Sp
+Currently authentication must be done using ssh-agent.  Other
+authentication methods may be supported in future.
+.IP "\fBSheepdog\fR" 4
+.IX Item "Sheepdog"
+Sheepdog is a distributed storage system for \s-1QEMU.
+QEMU\s0 supports using either local sheepdog devices or remote networked
+devices.
+.Sp
+Syntax for specifying a sheepdog device
+.Sp
+.Vb 1
+\&        sheepdog[+tcp|+unix]://[host:port]/vdiname[?socket=path][#snapid|#tag]
+.Ve
+.Sp
+Example
+.Sp
+.Vb 1
+\&        qemu\-system\-i386 \-\-drive file=sheepdog://192.0.2.1:30000/MyVirtualMachine
+.Ve
+.Sp
+See also <\fBhttp://http://www.osrg.net/sheepdog/\fR>.
+.IP "\fBGlusterFS\fR" 4
+.IX Item "GlusterFS"
+GlusterFS is an user space distributed file system.
+\&\s-1QEMU\s0 supports the use of GlusterFS volumes for hosting \s-1VM\s0 disk images using
+\&\s-1TCP,\s0 Unix Domain Sockets and \s-1RDMA\s0 transport protocols.
+.Sp
+Syntax for specifying a \s-1VM\s0 disk image on GlusterFS volume is
+.Sp
+.Vb 1
+\&        gluster[+transport]://[server[:port]]/volname/image[?socket=...]
+.Ve
+.Sp
+Example
+.Sp
+.Vb 1
+\&        qemu\-system\-x86_64 \-\-drive file=gluster://192.0.2.1/testvol/a.img
+.Ve
+.Sp
+See also <\fBhttp://www.gluster.org\fR>.
+.IP "\fB\s-1HTTP/HTTPS/FTP/FTPS/TFTP\s0\fR" 4
+.IX Item "HTTP/HTTPS/FTP/FTPS/TFTP"
+\&\s-1QEMU\s0 supports read-only access to files accessed over http(s), ftp(s) and tftp.
+.Sp
+Syntax using a single filename:
+.Sp
+.Vb 1
+\&        <protocol>://[<username>[:<password>]@]<host>/<path>
+.Ve
+.Sp
+where:
+.RS 4
+.IP "\fBprotocol\fR" 4
+.IX Item "protocol"
+\&'http', 'https', 'ftp', 'ftps', or 'tftp'.
+.IP "\fBusername\fR" 4
+.IX Item "username"
+Optional username for authentication to the remote server.
+.IP "\fBpassword\fR" 4
+.IX Item "password"
+Optional password for authentication to the remote server.
+.IP "\fBhost\fR" 4
+.IX Item "host"
+Address of the remote server.
+.IP "\fBpath\fR" 4
+.IX Item "path"
+Path on the remote server, including any query string.
+.RE
+.RS 4
+.Sp
+The following options are also supported:
+.IP "\fBurl\fR" 4
+.IX Item "url"
+The full \s-1URL\s0 when passing options to the driver explicitly.
+.IP "\fBreadahead\fR" 4
+.IX Item "readahead"
+The amount of data to read ahead with each range request to the remote server.
+This value may optionally have the suffix 'T', 'G', 'M', 'K', 'k' or 'b'. If it
+does not have a suffix, it will be assumed to be in bytes. The value must be a
+multiple of 512 bytes. It defaults to 256k.
+.IP "\fBsslverify\fR" 4
+.IX Item "sslverify"
+Whether to verify the remote server's certificate when connecting over \s-1SSL.\s0 It
+can have the value 'on' or 'off'. It defaults to 'on'.
+.RE
+.RS 4
+.Sp
+Note that when passing options to qemu explicitly, \fBdriver\fR is the value
+of <protocol>.
+.Sp
+Example: boot from a remote Fedora 20 live \s-1ISO\s0 image
+.Sp
+.Vb 1
+\&        qemu\-system\-x86_64 \-\-drive media=cdrom,file=http://dl.fedoraproject.org/pub/fedora/linux/releases/20/Live/x86_64/Fedora\-Live\-Desktop\-x86_64\-20\-1.iso,readonly
+\&        
+\&        qemu\-system\-x86_64 \-\-drive media=cdrom,file.driver=http,file.url=http://dl.fedoraproject.org/pub/fedora/linux/releases/20/Live/x86_64/Fedora\-Live\-Desktop\-x86_64\-20\-1.iso,readonly
+.Ve
+.Sp
+Example: boot from a remote Fedora 20 cloud image using a local overlay for
+writes, copy-on-read, and a readahead of 64k
+.Sp
+.Vb 1
+\&        qemu\-img create \-f qcow2 \-o backing_file=\*(Aqjson:{"file.driver":"http",, "file.url":"https://dl.fedoraproject.org/pub/fedora/linux/releases/20/Images/x86_64/Fedora\-x86_64\-20\-20131211.1\-sda.qcow2",, "file.readahead":"64k"}\*(Aq /tmp/Fedora\-x86_64\-20\-20131211.1\-sda.qcow2
+\&        
+\&        qemu\-system\-x86_64 \-drive file=/tmp/Fedora\-x86_64\-20\-20131211.1\-sda.qcow2,copy\-on\-read=on
+.Ve
+.Sp
+Example: boot from an image stored on a VMware vSphere server with a self-signed
+certificate using a local overlay for writes and a readahead of 64k
+.Sp
+.Vb 1
+\&        qemu\-img create \-f qcow2 \-o backing_file=\*(Aqjson:{"file.driver":"https",, "file.url":"https://user:password@vsphere.example.com/folder/test/test\-flat.vmdk?dcPath=Datacenter&dsName=datastore1",, "file.sslverify":"off",, "file.readahead":"64k"}\*(Aq /tmp/test.qcow2
+\&        
+\&        qemu\-system\-x86_64 \-drive file=/tmp/test.qcow2
+.Ve
+.RE
+.PP
+Bluetooth(R) options:
+.IP "\fB\-bt hci[...]\fR" 4
+.IX Item "-bt hci[...]"
+Defines the function of the corresponding Bluetooth \s-1HCI. \s0 \-bt options
+are matched with the HCIs present in the chosen machine type.  For
+example when emulating a machine with only one \s-1HCI\s0 built into it, only
+the first \f(CW\*(C`\-bt hci[...]\*(C'\fR option is valid and defines the \s-1HCI\s0's
+logic.  The Transport Layer is decided by the machine type.  Currently
+the machines \f(CW\*(C`n800\*(C'\fR and \f(CW\*(C`n810\*(C'\fR have one \s-1HCI\s0 and all other
+machines have none.
+.Sp
+The following three types are recognized:
+.RS 4
+.IP "\fB\-bt hci,null\fR" 4
+.IX Item "-bt hci,null"
+(default) The corresponding Bluetooth \s-1HCI\s0 assumes no internal logic
+and will not respond to any \s-1HCI\s0 commands or emit events.
+.IP "\fB\-bt hci,host[:\fR\fIid\fR\fB]\fR" 4
+.IX Item "-bt hci,host[:id]"
+(\f(CW\*(C`bluez\*(C'\fR only) The corresponding \s-1HCI\s0 passes commands / events
+to / from the physical \s-1HCI\s0 identified by the name \fIid\fR (default:
+\&\f(CW\*(C`hci0\*(C'\fR) on the computer running \s-1QEMU. \s0 Only available on \f(CW\*(C`bluez\*(C'\fR
+capable systems like Linux.
+.IP "\fB\-bt hci[,vlan=\fR\fIn\fR\fB]\fR" 4
+.IX Item "-bt hci[,vlan=n]"
+Add a virtual, standard \s-1HCI\s0 that will participate in the Bluetooth
+scatternet \fIn\fR (default \f(CW0\fR).  Similarly to \fB\-net\fR
+VLANs, devices inside a bluetooth network \fIn\fR can only communicate
+with other devices in the same network (scatternet).
+.RE
+.RS 4
+.RE
+.IP "\fB\-bt vhci[,vlan=\fR\fIn\fR\fB]\fR" 4
+.IX Item "-bt vhci[,vlan=n]"
+(Linux-host only) Create a \s-1HCI\s0 in scatternet \fIn\fR (default 0) attached
+to the host bluetooth stack instead of to the emulated target.  This
+allows the host and target machines to participate in a common scatternet
+and communicate.  Requires the Linux \f(CW\*(C`vhci\*(C'\fR driver installed.  Can
+be used as following:
+.Sp
+.Vb 1
+\&        qemu\-system\-i386 [...OPTIONS...] \-bt hci,vlan=5 \-bt vhci,vlan=5
+.Ve
+.IP "\fB\-bt device:\fR\fIdev\fR\fB[,vlan=\fR\fIn\fR\fB]\fR" 4
+.IX Item "-bt device:dev[,vlan=n]"
+Emulate a bluetooth device \fIdev\fR and place it in network \fIn\fR
+(default \f(CW0\fR).  \s-1QEMU\s0 can only emulate one type of bluetooth devices
+currently:
+.RS 4
+.IP "\fBkeyboard\fR" 4
+.IX Item "keyboard"
+Virtual wireless keyboard implementing the \s-1HIDP\s0 bluetooth profile.
+.RE
+.RS 4
+.RE
+.PP
+\&\s-1TPM\s0 device options:
+.PP
+The general form of a \s-1TPM\s0 device option is:
+.IP "\fB\-tpmdev\fR \fIbackend\fR \fB,id=\fR\fIid\fR \fB[,\fR\fIoptions\fR\fB]\fR" 4
+.IX Item "-tpmdev backend ,id=id [,options]"
+Backend type must be:
+\&\fBpassthrough\fR.
+.Sp
+The specific backend type will determine the applicable options.
+The \f(CW\*(C`\-tpmdev\*(C'\fR option creates the \s-1TPM\s0 backend and requires a
+\&\f(CW\*(C`\-device\*(C'\fR option that specifies the \s-1TPM\s0 frontend interface model.
+.Sp
+Options to each backend are described below.
+.Sp
+Use 'help' to print all available \s-1TPM\s0 backend types.
+.Sp
+.Vb 1
+\&        qemu \-tpmdev help
+.Ve
+.IP "\fB\-tpmdev passthrough, id=\fR\fIid\fR\fB, path=\fR\fIpath\fR\fB, cancel\-path=\fR\fIcancel-path\fR" 4
+.IX Item "-tpmdev passthrough, id=id, path=path, cancel-path=cancel-path"
+(Linux-host only) Enable access to the host's \s-1TPM\s0 using the passthrough
+driver.
+.Sp
+\&\fBpath\fR specifies the path to the host's \s-1TPM\s0 device, i.e., on
+a Linux host this would be \f(CW\*(C`/dev/tpm0\*(C'\fR.
+\&\fBpath\fR is optional and by default \f(CW\*(C`/dev/tpm0\*(C'\fR is used.
+.Sp
+\&\fBcancel-path\fR specifies the path to the host \s-1TPM\s0 device's sysfs
+entry allowing for cancellation of an ongoing \s-1TPM\s0 command.
+\&\fBcancel-path\fR is optional and by default \s-1QEMU\s0 will search for the
+sysfs entry to use.
+.Sp
+Some notes about using the host's \s-1TPM\s0 with the passthrough driver:
+.Sp
+The \s-1TPM\s0 device accessed by the passthrough driver must not be
+used by any other application on the host.
+.Sp
+Since the host's firmware (\s-1BIOS/UEFI\s0) has already initialized the \s-1TPM,\s0
+the \s-1VM\s0's firmware (\s-1BIOS/UEFI\s0) will not be able to initialize the
+\&\s-1TPM\s0 again and may therefore not show a TPM-specific menu that would
+otherwise allow the user to configure the \s-1TPM,\s0 e.g., allow the user to
+enable/disable or activate/deactivate the \s-1TPM.\s0
+Further, if \s-1TPM\s0 ownership is released from within a \s-1VM\s0 then the host's \s-1TPM\s0
+will get disabled and deactivated. To enable and activate the
+\&\s-1TPM\s0 again afterwards, the host has to be rebooted and the user is
+required to enter the firmware's menu to enable and activate the \s-1TPM.\s0
+If the \s-1TPM\s0 is left disabled and/or deactivated most \s-1TPM\s0 commands will fail.
+.Sp
+To create a passthrough \s-1TPM\s0 use the following two options:
+.Sp
+.Vb 1
+\&        \-tpmdev passthrough,id=tpm0 \-device tpm\-tis,tpmdev=tpm0
+.Ve
+.Sp
+Note that the \f(CW\*(C`\-tpmdev\*(C'\fR id is \f(CW\*(C`tpm0\*(C'\fR and is referenced by
+\&\f(CW\*(C`tpmdev=tpm0\*(C'\fR in the device option.
+.PP
+Linux/Multiboot boot specific:
+.PP
+When using these options, you can use a given Linux or Multiboot
+kernel without installing it in the disk image. It can be useful
+for easier testing of various kernels.
+.IP "\fB\-kernel\fR \fIbzImage\fR" 4
+.IX Item "-kernel bzImage"
+Use \fIbzImage\fR as kernel image. The kernel can be either a Linux kernel
+or in multiboot format.
+.IP "\fB\-append\fR \fIcmdline\fR" 4
+.IX Item "-append cmdline"
+Use \fIcmdline\fR as kernel command line
+.IP "\fB\-initrd\fR \fIfile\fR" 4
+.IX Item "-initrd file"
+Use \fIfile\fR as initial ram disk.
+.ie n .IP "\fB\-initrd ""\fR\fIfile1\fR \fBarg=foo,\fR\fIfile2\fR\fB""\fR" 4
+.el .IP "\fB\-initrd ``\fR\fIfile1\fR \fBarg=foo,\fR\fIfile2\fR\fB''\fR" 4
+.IX Item "-initrd ""file1 arg=foo,file2"""
+This syntax is only available with multiboot.
+.Sp
+Use \fIfile1\fR and \fIfile2\fR as modules and pass arg=foo as parameter to the
+first module.
+.IP "\fB\-dtb\fR \fIfile\fR" 4
+.IX Item "-dtb file"
+Use \fIfile\fR as a device tree binary (dtb) image and pass it to the kernel
+on boot.
+.PP
+Debug/Expert options:
+.IP "\fB\-serial\fR \fIdev\fR" 4
+.IX Item "-serial dev"
+Redirect the virtual serial port to host character device
+\&\fIdev\fR. The default device is \f(CW\*(C`vc\*(C'\fR in graphical mode and
+\&\f(CW\*(C`stdio\*(C'\fR in non graphical mode.
+.Sp
+This option can be used several times to simulate up to 4 serial
+ports.
+.Sp
+Use \f(CW\*(C`\-serial none\*(C'\fR to disable all serial ports.
+.Sp
+Available character devices are:
+.RS 4
+.IP "\fBvc[:\fR\fIW\fR\fBx\fR\fIH\fR\fB]\fR" 4
+.IX Item "vc[:WxH]"
+Virtual console. Optionally, a width and height can be given in pixel with
+.Sp
+.Vb 1
+\&        vc:800x600
+.Ve
+.Sp
+It is also possible to specify width or height in characters:
+.Sp
+.Vb 1
+\&        vc:80Cx24C
+.Ve
+.IP "\fBpty\fR" 4
+.IX Item "pty"
+[Linux only] Pseudo \s-1TTY \s0(a new \s-1PTY\s0 is automatically allocated)
+.IP "\fBnone\fR" 4
+.IX Item "none"
+No device is allocated.
+.IP "\fBnull\fR" 4
+.IX Item "null"
+void device
+.IP "\fBchardev:\fR\fIid\fR" 4
+.IX Item "chardev:id"
+Use a named character device defined with the \f(CW\*(C`\-chardev\*(C'\fR option.
+.IP "\fB/dev/XXX\fR" 4
+.IX Item "/dev/XXX"
+[Linux only] Use host tty, e.g. \fI/dev/ttyS0\fR. The host serial port
+parameters are set according to the emulated ones.
+.IP "\fB/dev/parport\fR\fIN\fR" 4
+.IX Item "/dev/parportN"
+[Linux only, parallel port only] Use host parallel port
+\&\fIN\fR. Currently \s-1SPP\s0 and \s-1EPP\s0 parallel port features can be used.
+.IP "\fBfile:\fR\fIfilename\fR" 4
+.IX Item "file:filename"
+Write output to \fIfilename\fR. No character can be read.
+.IP "\fBstdio\fR" 4
+.IX Item "stdio"
+[Unix only] standard input/output
+.IP "\fBpipe:\fR\fIfilename\fR" 4
+.IX Item "pipe:filename"
+name pipe \fIfilename\fR
+.IP "\fB\s-1COM\s0\fR\fIn\fR" 4
+.IX Item "COMn"
+[Windows only] Use host serial port \fIn\fR
+.IP "\fBudp:[\fR\fIremote_host\fR\fB]:\fR\fIremote_port\fR\fB[@[\fR\fIsrc_ip\fR\fB]:\fR\fIsrc_port\fR\fB]\fR" 4
+.IX Item "udp:[remote_host]:remote_port[@[src_ip]:src_port]"
+This implements \s-1UDP\s0 Net Console.
+When \fIremote_host\fR or \fIsrc_ip\fR are not specified
+they default to \f(CW0.0.0.0\fR.
+When not using a specified \fIsrc_port\fR a random port is automatically chosen.
+.Sp
+If you just want a simple readonly console you can use \f(CW\*(C`netcat\*(C'\fR or
+\&\f(CW\*(C`nc\*(C'\fR, by starting \s-1QEMU\s0 with: \f(CW\*(C`\-serial udp::4555\*(C'\fR and nc as:
+\&\f(CW\*(C`nc \-u \-l \-p 4555\*(C'\fR. Any time \s-1QEMU\s0 writes something to that port it
+will appear in the netconsole session.
+.Sp
+If you plan to send characters back via netconsole or you want to stop
+and start \s-1QEMU\s0 a lot of times, you should have \s-1QEMU\s0 use the same
+source port each time by using something like \f(CW\*(C`\-serial
+udp::4555@4556\*(C'\fR to \s-1QEMU.\s0 Another approach is to use a patched
+version of netcat which can listen to a \s-1TCP\s0 port and send and receive
+characters via udp.  If you have a patched version of netcat which
+activates telnet remote echo and single char transfer, then you can
+use the following options to step up a netcat redirector to allow
+telnet on port 5555 to access the \s-1QEMU\s0 port.
+.RS 4
+.ie n .IP """QEMU Options:""" 4
+.el .IP "\f(CWQEMU Options:\fR" 4
+.IX Item "QEMU Options:"
+\&\-serial udp::4555@4556
+.ie n .IP """netcat options:""" 4
+.el .IP "\f(CWnetcat options:\fR" 4
+.IX Item "netcat options:"
+\&\-u \-P 4555 \-L 0.0.0.0:4556 \-t \-p 5555 \-I \-T
+.ie n .IP """telnet options:""" 4
+.el .IP "\f(CWtelnet options:\fR" 4
+.IX Item "telnet options:"
+localhost 5555
+.RE
+.RS 4
+.RE
+.IP "\fBtcp:[\fR\fIhost\fR\fB]:\fR\fIport\fR\fB[,\fR\fIserver\fR\fB][,nowait][,nodelay]\fR" 4
+.IX Item "tcp:[host]:port[,server][,nowait][,nodelay]"
+The \s-1TCP\s0 Net Console has two modes of operation.  It can send the serial
+I/O to a location or wait for a connection from a location.  By default
+the \s-1TCP\s0 Net Console is sent to \fIhost\fR at the \fIport\fR.  If you use
+the \fIserver\fR option \s-1QEMU\s0 will wait for a client socket application
+to connect to the port before continuing, unless the \f(CW\*(C`nowait\*(C'\fR
+option was specified.  The \f(CW\*(C`nodelay\*(C'\fR option disables the Nagle buffering
+algorithm.  If \fIhost\fR is omitted, 0.0.0.0 is assumed. Only
+one \s-1TCP\s0 connection at a time is accepted. You can use \f(CW\*(C`telnet\*(C'\fR to
+connect to the corresponding character device.
+.RS 4
+.ie n .IP """Example to send tcp console to 192.168.0.2 port 4444""" 4
+.el .IP "\f(CWExample to send tcp console to 192.168.0.2 port 4444\fR" 4
+.IX Item "Example to send tcp console to 192.168.0.2 port 4444"
+\&\-serial tcp:192.168.0.2:4444
+.ie n .IP """Example to listen and wait on port 4444 for connection""" 4
+.el .IP "\f(CWExample to listen and wait on port 4444 for connection\fR" 4
+.IX Item "Example to listen and wait on port 4444 for connection"
+\&\-serial tcp::4444,server
+.ie n .IP """Example to not wait and listen on ip 192.168.0.100 port 4444""" 4
+.el .IP "\f(CWExample to not wait and listen on ip 192.168.0.100 port 4444\fR" 4
+.IX Item "Example to not wait and listen on ip 192.168.0.100 port 4444"
+\&\-serial tcp:192.168.0.100:4444,server,nowait
+.RE
+.RS 4
+.RE
+.IP "\fBtelnet:\fR\fIhost\fR\fB:\fR\fIport\fR\fB[,server][,nowait][,nodelay]\fR" 4
+.IX Item "telnet:host:port[,server][,nowait][,nodelay]"
+The telnet protocol is used instead of raw tcp sockets.  The options
+work the same as if you had specified \f(CW\*(C`\-serial tcp\*(C'\fR.  The
+difference is that the port acts like a telnet server or client using
+telnet option negotiation.  This will also allow you to send the
+\&\s-1MAGIC_SYSRQ\s0 sequence if you use a telnet that supports sending the break
+sequence.  Typically in unix telnet you do it with Control\-] and then
+type \*(L"send break\*(R" followed by pressing the enter key.
+.IP "\fBunix:\fR\fIpath\fR\fB[,server][,nowait]\fR" 4
+.IX Item "unix:path[,server][,nowait]"
+A unix domain socket is used instead of a tcp socket.  The option works the
+same as if you had specified \f(CW\*(C`\-serial tcp\*(C'\fR except the unix domain socket
+\&\fIpath\fR is used for connections.
+.IP "\fBmon:\fR\fIdev_string\fR" 4
+.IX Item "mon:dev_string"
+This is a special option to allow the monitor to be multiplexed onto
+another serial port.  The monitor is accessed with key sequence of
+\&\fBControl-a\fR and then pressing \fBc\fR.
+\&\fIdev_string\fR should be any one of the serial devices specified
+above.  An example to multiplex the monitor onto a telnet server
+listening on port 4444 would be:
+.RS 4
+.ie n .IP """\-serial mon:telnet::4444,server,nowait""" 4
+.el .IP "\f(CW\-serial mon:telnet::4444,server,nowait\fR" 4
+.IX Item "-serial mon:telnet::4444,server,nowait"
+.RE
+.RS 4
+.Sp
+When the monitor is multiplexed to stdio in this way, Ctrl+C will not terminate
+\&\s-1QEMU\s0 any more but will be passed to the guest instead.
+.RE
+.IP "\fBbraille\fR" 4
+.IX Item "braille"
+Braille device.  This will use BrlAPI to display the braille output on a real
+or fake device.
+.IP "\fBmsmouse\fR" 4
+.IX Item "msmouse"
+Three button serial mouse. Configure the guest to use Microsoft protocol.
+.RE
+.RS 4
+.RE
+.IP "\fB\-parallel\fR \fIdev\fR" 4
+.IX Item "-parallel dev"
+Redirect the virtual parallel port to host device \fIdev\fR (same
+devices as the serial port). On Linux hosts, \fI/dev/parportN\fR can
+be used to use hardware devices connected on the corresponding host
+parallel port.
+.Sp
+This option can be used several times to simulate up to 3 parallel
+ports.
+.Sp
+Use \f(CW\*(C`\-parallel none\*(C'\fR to disable all parallel ports.
+.IP "\fB\-monitor\fR \fIdev\fR" 4
+.IX Item "-monitor dev"
+Redirect the monitor to host device \fIdev\fR (same devices as the
+serial port).
+The default device is \f(CW\*(C`vc\*(C'\fR in graphical mode and \f(CW\*(C`stdio\*(C'\fR in
+non graphical mode.
+Use \f(CW\*(C`\-monitor none\*(C'\fR to disable the default monitor.
+.IP "\fB\-qmp\fR \fIdev\fR" 4
+.IX Item "-qmp dev"
+Like \-monitor but opens in 'control' mode.
+.IP "\fB\-mon [chardev=]name[,mode=readline|control][,default]\fR" 4
+.IX Item "-mon [chardev=]name[,mode=readline|control][,default]"
+Setup monitor on chardev \fIname\fR.
+.IP "\fB\-debugcon\fR \fIdev\fR" 4
+.IX Item "-debugcon dev"
+Redirect the debug console to host device \fIdev\fR (same devices as the
+serial port).  The debug console is an I/O port which is typically port
+0xe9; writing to that I/O port sends output to this device.
+The default device is \f(CW\*(C`vc\*(C'\fR in graphical mode and \f(CW\*(C`stdio\*(C'\fR in
+non graphical mode.
+.IP "\fB\-pidfile\fR \fIfile\fR" 4
+.IX Item "-pidfile file"
+Store the \s-1QEMU\s0 process \s-1PID\s0 in \fIfile\fR. It is useful if you launch \s-1QEMU\s0
+from a script.
+.IP "\fB\-singlestep\fR" 4
+.IX Item "-singlestep"
+Run the emulation in single step mode.
+.IP "\fB\-S\fR" 4
+.IX Item "-S"
+Do not start \s-1CPU\s0 at startup (you must type 'c' in the monitor).
+.IP "\fB\-realtime mlock=on|off\fR" 4
+.IX Item "-realtime mlock=on|off"
+Run qemu with realtime features.
+mlocking qemu and guest memory can be enabled via \fBmlock=on\fR
+(enabled by default).
+.IP "\fB\-gdb\fR \fIdev\fR" 4
+.IX Item "-gdb dev"
+Wait for gdb connection on device \fIdev\fR. Typical
+connections will likely be TCP-based, but also \s-1UDP,\s0 pseudo \s-1TTY,\s0 or even
+stdio are reasonable use case. The latter is allowing to start \s-1QEMU\s0 from
+within gdb and establish the connection via a pipe:
+.Sp
+.Vb 1
+\&        (gdb) target remote | exec qemu\-system\-i386 \-gdb stdio ...
+.Ve
+.IP "\fB\-s\fR" 4
+.IX Item "-s"
+Shorthand for \-gdb tcp::1234, i.e. open a gdbserver on \s-1TCP\s0 port 1234.
+.IP "\fB\-d\fR \fIitem1\fR\fB[,...]\fR" 4
+.IX Item "-d item1[,...]"
+Enable logging of specified items. Use '\-d help' for a list of log items.
+.IP "\fB\-D\fR \fIlogfile\fR" 4
+.IX Item "-D logfile"
+Output log in \fIlogfile\fR instead of to stderr
+.IP "\fB\-L\fR  \fIpath\fR" 4
+.IX Item "-L path"
+Set the directory for the \s-1BIOS, VGA BIOS\s0 and keymaps.
+.IP "\fB\-bios\fR \fIfile\fR" 4
+.IX Item "-bios file"
+Set the filename for the \s-1BIOS.\s0
+.IP "\fB\-enable\-kvm\fR" 4
+.IX Item "-enable-kvm"
+Enable \s-1KVM\s0 full virtualization support. This option is only available
+if \s-1KVM\s0 support is enabled when compiling.
+.IP "\fB\-xen\-domid\fR \fIid\fR" 4
+.IX Item "-xen-domid id"
+Specify xen guest domain \fIid\fR (\s-1XEN\s0 only).
+.IP "\fB\-xen\-create\fR" 4
+.IX Item "-xen-create"
+Create domain using xen hypercalls, bypassing xend.
+Warning: should not be used when xend is in use (\s-1XEN\s0 only).
+.IP "\fB\-xen\-attach\fR" 4
+.IX Item "-xen-attach"
+Attach to existing xen domain.
+xend will use this when starting \s-1QEMU \s0(\s-1XEN\s0 only).
+.IP "\fB\-no\-reboot\fR" 4
+.IX Item "-no-reboot"
+Exit instead of rebooting.
+.IP "\fB\-no\-shutdown\fR" 4
+.IX Item "-no-shutdown"
+Don't exit \s-1QEMU\s0 on guest shutdown, but instead only stop the emulation.
+This allows for instance switching to monitor to commit changes to the
+disk image.
+.IP "\fB\-loadvm\fR \fIfile\fR" 4
+.IX Item "-loadvm file"
+Start right away with a saved state (\f(CW\*(C`loadvm\*(C'\fR in monitor)
+.IP "\fB\-daemonize\fR" 4
+.IX Item "-daemonize"
+Daemonize the \s-1QEMU\s0 process after initialization.  \s-1QEMU\s0 will not detach from
+standard \s-1IO\s0 until it is ready to receive connections on any of its devices.
+This option is a useful way for external programs to launch \s-1QEMU\s0 without having
+to cope with initialization race conditions.
+.IP "\fB\-option\-rom\fR \fIfile\fR" 4
+.IX Item "-option-rom file"
+Load the contents of \fIfile\fR as an option \s-1ROM.\s0
+This option is useful to load things like EtherBoot.
+.IP "\fB\-clock\fR \fImethod\fR" 4
+.IX Item "-clock method"
+Force the use of the given methods for timer alarm. To see what timers
+are available use \f(CW\*(C`\-clock help\*(C'\fR.
+.IP "\fB\-rtc [base=utc|localtime|\fR\fIdate\fR\fB][,clock=host|vm][,driftfix=none|slew]\fR" 4
+.IX Item "-rtc [base=utc|localtime|date][,clock=host|vm][,driftfix=none|slew]"
+Specify \fBbase\fR as \f(CW\*(C`utc\*(C'\fR or \f(CW\*(C`localtime\*(C'\fR to let the \s-1RTC\s0 start at the current
+\&\s-1UTC\s0 or local time, respectively. \f(CW\*(C`localtime\*(C'\fR is required for correct date in
+MS-DOS or Windows. To start at a specific point in time, provide \fIdate\fR in the
+format \f(CW\*(C`2006\-06\-17T16:01:21\*(C'\fR or \f(CW\*(C`2006\-06\-17\*(C'\fR. The default base is \s-1UTC.\s0
+.Sp
+By default the \s-1RTC\s0 is driven by the host system time. This allows using of the
+\&\s-1RTC\s0 as accurate reference clock inside the guest, specifically if the host
+time is smoothly following an accurate external reference clock, e.g. via \s-1NTP.\s0
+If you want to isolate the guest time from the host, you can set \fBclock\fR
+to \f(CW\*(C`rt\*(C'\fR instead.  To even prevent it from progressing during suspension,
+you can set it to \f(CW\*(C`vm\*(C'\fR.
+.Sp
+Enable \fBdriftfix\fR (i386 targets only) if you experience time drift problems,
+specifically with Windows' \s-1ACPI HAL.\s0 This option will try to figure out how
+many timer interrupts were not processed by the Windows guest and will
+re-inject them.
+.IP "\fB\-icount [\fR\fIN\fR\fB|auto]\fR" 4
+.IX Item "-icount [N|auto]"
+Enable virtual instruction counter.  The virtual cpu will execute one
+instruction every 2^\fIN\fR ns of virtual time.  If \f(CW\*(C`auto\*(C'\fR is specified
+then the virtual cpu speed will be automatically adjusted to keep virtual
+time within a few seconds of real time.
+.Sp
+Note that while this option can give deterministic behavior, it does not
+provide cycle accurate emulation.  Modern CPUs contain superscalar out of
+order cores with complex cache hierarchies.  The number of instructions
+executed often has little or no correlation with actual performance.
+.IP "\fB\-watchdog\fR \fImodel\fR" 4
+.IX Item "-watchdog model"
+Create a virtual hardware watchdog device.  Once enabled (by a guest
+action), the watchdog must be periodically polled by an agent inside
+the guest or else the guest will be restarted.
+.Sp
+The \fImodel\fR is the model of hardware watchdog to emulate.  Choices
+for model are: \f(CW\*(C`ib700\*(C'\fR (iBASE 700) which is a very simple \s-1ISA\s0
+watchdog with a single timer, or \f(CW\*(C`i6300esb\*(C'\fR (Intel 6300ESB I/O
+controller hub) which is a much more featureful PCI-based dual-timer
+watchdog.  Choose a model for which your guest has drivers.
+.Sp
+Use \f(CW\*(C`\-watchdog help\*(C'\fR to list available hardware models.  Only one
+watchdog can be enabled for a guest.
+.IP "\fB\-watchdog\-action\fR \fIaction\fR" 4
+.IX Item "-watchdog-action action"
+The \fIaction\fR controls what \s-1QEMU\s0 will do when the watchdog timer
+expires.
+The default is
+\&\f(CW\*(C`reset\*(C'\fR (forcefully reset the guest).
+Other possible actions are:
+\&\f(CW\*(C`shutdown\*(C'\fR (attempt to gracefully shutdown the guest),
+\&\f(CW\*(C`poweroff\*(C'\fR (forcefully poweroff the guest),
+\&\f(CW\*(C`pause\*(C'\fR (pause the guest),
+\&\f(CW\*(C`debug\*(C'\fR (print a debug message and continue), or
+\&\f(CW\*(C`none\*(C'\fR (do nothing).
+.Sp
+Note that the \f(CW\*(C`shutdown\*(C'\fR action requires that the guest responds
+to \s-1ACPI\s0 signals, which it may not be able to do in the sort of
+situations where the watchdog would have expired, and thus
+\&\f(CW\*(C`\-watchdog\-action shutdown\*(C'\fR is not recommended for production use.
+.Sp
+Examples:
+.RS 4
+.ie n .IP """\-watchdog i6300esb \-watchdog\-action pause""" 4
+.el .IP "\f(CW\-watchdog i6300esb \-watchdog\-action pause\fR" 4
+.IX Item "-watchdog i6300esb -watchdog-action pause"
+.PD 0
+.ie n .IP """\-watchdog ib700""" 4
+.el .IP "\f(CW\-watchdog ib700\fR" 4
+.IX Item "-watchdog ib700"
+.RE
+.RS 4
+.RE
+.IP "\fB\-echr\fR \fInumeric_ascii_value\fR" 4
+.IX Item "-echr numeric_ascii_value"
+.PD
+Change the escape character used for switching to the monitor when using
+monitor and serial sharing.  The default is \f(CW0x01\fR when using the
+\&\f(CW\*(C`\-nographic\*(C'\fR option.  \f(CW0x01\fR is equal to pressing
+\&\f(CW\*(C`Control\-a\*(C'\fR.  You can select a different character from the ascii
+control keys where 1 through 26 map to Control-a through Control-z.  For
+instance you could use the either of the following to change the escape
+character to Control-t.
+.RS 4
+.ie n .IP """\-echr 0x14""" 4
+.el .IP "\f(CW\-echr 0x14\fR" 4
+.IX Item "-echr 0x14"
+.PD 0
+.ie n .IP """\-echr 20""" 4
+.el .IP "\f(CW\-echr 20\fR" 4
+.IX Item "-echr 20"
+.RE
+.RS 4
+.RE
+.IP "\fB\-virtioconsole\fR \fIc\fR" 4
+.IX Item "-virtioconsole c"
+.PD
+Set virtio console.
+.Sp
+This option is maintained for backward compatibility.
+.Sp
+Please use \f(CW\*(C`\-device virtconsole\*(C'\fR for the new way of invocation.
+.IP "\fB\-show\-cursor\fR" 4
+.IX Item "-show-cursor"
+Show cursor.
+.IP "\fB\-tb\-size\fR \fIn\fR" 4
+.IX Item "-tb-size n"
+Set \s-1TB\s0 size.
+.IP "\fB\-incoming\fR \fIport\fR" 4
+.IX Item "-incoming port"
+Prepare for incoming migration, listen on \fIport\fR.
+.IP "\fB\-nodefaults\fR" 4
+.IX Item "-nodefaults"
+Don't create default devices. Normally, \s-1QEMU\s0 sets the default devices like serial
+port, parallel port, virtual console, monitor device, \s-1VGA\s0 adapter, floppy and
+CD-ROM drive and others. The \f(CW\*(C`\-nodefaults\*(C'\fR option will disable all those
+default devices.
+.IP "\fB\-chroot\fR \fIdir\fR" 4
+.IX Item "-chroot dir"
+Immediately before starting guest execution, chroot to the specified
+directory.  Especially useful in combination with \-runas.
+.IP "\fB\-runas\fR \fIuser\fR" 4
+.IX Item "-runas user"
+Immediately before starting guest execution, drop root privileges, switching
+to the specified user.
+.IP "\fB\-prom\-env\fR \fIvariable\fR\fB=\fR\fIvalue\fR" 4
+.IX Item "-prom-env variable=value"
+Set OpenBIOS nvram \fIvariable\fR to given \fIvalue\fR (\s-1PPC, SPARC\s0 only).
+.IP "\fB\-semihosting\fR" 4
+.IX Item "-semihosting"
+Semihosting mode (\s-1ARM, M68K,\s0 Xtensa only).
+.IP "\fB\-old\-param\fR" 4
+.IX Item "-old-param"
+Old param mode (\s-1ARM\s0 only).
+.IP "\fB\-sandbox\fR \fIarg\fR" 4
+.IX Item "-sandbox arg"
+Enable Seccomp mode 2 system call filter. 'on' will enable syscall filtering and 'off' will
+disable it.  The default is 'off'.
+.IP "\fB\-readconfig\fR \fIfile\fR" 4
+.IX Item "-readconfig file"
+Read device configuration from \fIfile\fR. This approach is useful when you want to spawn
+\&\s-1QEMU\s0 process with many command line options but you don't want to exceed the command line
+character limit.
+.IP "\fB\-writeconfig\fR \fIfile\fR" 4
+.IX Item "-writeconfig file"
+Write device configuration to \fIfile\fR. The \fIfile\fR can be either filename to save
+command line and device configuration into file or dash \f(CW\*(C`\-\*(C'\fR) character to print the
+output to stdout. This can be later used as input file for \f(CW\*(C`\-readconfig\*(C'\fR option.
+.IP "\fB\-nodefconfig\fR" 4
+.IX Item "-nodefconfig"
+Normally \s-1QEMU\s0 loads configuration files from \fIsysconfdir\fR and \fIdatadir\fR at startup.
+The \f(CW\*(C`\-nodefconfig\*(C'\fR option will prevent \s-1QEMU\s0 from loading any of those config files.
+.IP "\fB\-no\-user\-config\fR" 4
+.IX Item "-no-user-config"
+The \f(CW\*(C`\-no\-user\-config\*(C'\fR option makes \s-1QEMU\s0 not load any of the user-provided
+config files on \fIsysconfdir\fR, but won't make it skip the QEMU-provided config
+files from \fIdatadir\fR.
+.IP "\fB\-trace [events=\fR\fIfile\fR\fB][,file=\fR\fIfile\fR\fB]\fR" 4
+.IX Item "-trace [events=file][,file=file]"
+Specify tracing options.
+.RS 4
+.IP "\fBevents=\fR\fIfile\fR" 4
+.IX Item "events=file"
+Immediately enable events listed in \fIfile\fR.
+The file must contain one event name (as listed in the \fItrace-events\fR file)
+per line.
+This option is only available if \s-1QEMU\s0 has been compiled with
+either \fIsimple\fR or \fIstderr\fR tracing backend.
+.IP "\fBfile=\fR\fIfile\fR" 4
+.IX Item "file=file"
+Log output traces to \fIfile\fR.
+.Sp
+This option is only available if \s-1QEMU\s0 has been compiled with
+the \fIsimple\fR tracing backend.
+.RE
+.RS 4
+.RE
+.IP "\fB\-enable\-fips\fR" 4
+.IX Item "-enable-fips"
+Enable \s-1FIPS 140\-2\s0 compliance mode.
+.IP "\fB\-object\fR \fItypename\fR\fB[,\fR\fIprop1\fR\fB=\fR\fIvalue1\fR\fB,...]\fR" 4
+.IX Item "-object typename[,prop1=value1,...]"
+Create an new object of type \fItypename\fR setting properties
+in the order they are specified.  Note that the 'id'
+property must be set.  These objects are placed in the
+\&'/objects' path.
+.IP "\fB\-msg timestamp[=on|off]\fR" 4
+.IX Item "-msg timestamp[=on|off]"
+prepend a timestamp to each log message.(default:on)
+.IP "\fB\-dump\-vmstate\fR \fIfile\fR" 4
+.IX Item "-dump-vmstate file"
+Dump json-encoded vmstate information for current machine type to file
+in \fIfile\fR
+.PP
+During the graphical emulation, you can use special key combinations to change
+modes. The default key mappings are shown below, but if you use \f(CW\*(C`\-alt\-grab\*(C'\fR
+then the modifier is Ctrl-Alt-Shift (instead of Ctrl-Alt) and if you use
+\&\f(CW\*(C`\-ctrl\-grab\*(C'\fR then the modifier is the right Ctrl key (instead of Ctrl-Alt):
+.IP "\fBCtrl-Alt-f\fR" 4
+.IX Item "Ctrl-Alt-f"
+Toggle full screen
+.IP "\fBCtrl\-Alt\-+\fR" 4
+.IX Item "Ctrl-Alt-+"
+Enlarge the screen
+.IP "\fBCtrl\-Alt\*(--\fR" 4
+.IX Item "Ctrl-Alt"
+Shrink the screen
+.IP "\fBCtrl-Alt-u\fR" 4
+.IX Item "Ctrl-Alt-u"
+Restore the screen's un-scaled dimensions
+.IP "\fBCtrl-Alt-n\fR" 4
+.IX Item "Ctrl-Alt-n"
+Switch to virtual console 'n'. Standard console mappings are:
+.RS 4
+.IP "\fI1\fR" 4
+.IX Item "1"
+Target system display
+.IP "\fI2\fR" 4
+.IX Item "2"
+Monitor
+.IP "\fI3\fR" 4
+.IX Item "3"
+Serial port
+.RE
+.RS 4
+.RE
+.IP "\fBCtrl-Alt\fR" 4
+.IX Item "Ctrl-Alt"
+Toggle mouse and keyboard grab.
+.PP
+In the virtual consoles, you can use \fBCtrl-Up\fR, \fBCtrl-Down\fR,
+\&\fBCtrl-PageUp\fR and \fBCtrl-PageDown\fR to move in the back log.
+.PP
+During emulation, if you are using the \fB\-nographic\fR option, use
+\&\fBCtrl-a h\fR to get terminal commands:
+.IP "\fBCtrl-a h\fR" 4
+.IX Item "Ctrl-a h"
+.PD 0
+.IP "\fBCtrl-a ?\fR" 4
+.IX Item "Ctrl-a ?"
+.PD
+Print this help
+.IP "\fBCtrl-a x\fR" 4
+.IX Item "Ctrl-a x"
+Exit emulator
+.IP "\fBCtrl-a s\fR" 4
+.IX Item "Ctrl-a s"
+Save disk data back to file (if \-snapshot)
+.IP "\fBCtrl-a t\fR" 4
+.IX Item "Ctrl-a t"
+Toggle console timestamps
+.IP "\fBCtrl-a b\fR" 4
+.IX Item "Ctrl-a b"
+Send break (magic sysrq in Linux)
+.IP "\fBCtrl-a c\fR" 4
+.IX Item "Ctrl-a c"
+Switch between console and monitor
+.IP "\fBCtrl-a Ctrl-a\fR" 4
+.IX Item "Ctrl-a Ctrl-a"
+Send Ctrl-a
+.PP
+The following options are specific to the PowerPC emulation:
+.IP "\fB\-g\fR \fIW\fR\fBx\fR\fIH\fR\fB[x\fR\fI\s-1DEPTH\s0\fR\fB]\fR" 4
+.IX Item "-g WxH[xDEPTH]"
+Set the initial \s-1VGA\s0 graphic mode. The default is 800x600x32.
+.IP "\fB\-prom\-env\fR \fIstring\fR" 4
+.IX Item "-prom-env string"
+Set OpenBIOS variables in \s-1NVRAM,\s0 for example:
+.Sp
+.Vb 3
+\&        qemu\-system\-ppc \-prom\-env \*(Aqauto\-boot?=false\*(Aq \e
+\&         \-prom\-env \*(Aqboot\-device=hd:2,\eyaboot\*(Aq \e
+\&         \-prom\-env \*(Aqboot\-args=conf=hd:2,\eyaboot.conf\*(Aq
+.Ve
+.Sp
+These variables are not used by Open Hack'Ware.
+.PP
+The following options are specific to the Sparc32 emulation:
+.IP "\fB\-g\fR \fIW\fR\fBx\fR\fIH\fR\fBx[x\fR\fI\s-1DEPTH\s0\fR\fB]\fR" 4
+.IX Item "-g WxHx[xDEPTH]"
+Set the initial graphics mode. For \s-1TCX,\s0 the default is 1024x768x8 with the
+option of 1024x768x24. For cgthree, the default is 1024x768x8 with the option
+of 1152x900x8 for people who wish to use \s-1OBP.\s0
+.IP "\fB\-prom\-env\fR \fIstring\fR" 4
+.IX Item "-prom-env string"
+Set OpenBIOS variables in \s-1NVRAM,\s0 for example:
+.Sp
+.Vb 2
+\&        qemu\-system\-sparc \-prom\-env \*(Aqauto\-boot?=false\*(Aq \e
+\&         \-prom\-env \*(Aqboot\-device=sd(0,2,0):d\*(Aq \-prom\-env \*(Aqboot\-args=linux single\*(Aq
+.Ve
+.IP "\fB\-M [SS\-4|SS\-5|SS\-10|SS\-20|SS\-600MP|LX|Voyager|SPARCClassic] [|SPARCbook]\fR" 4
+.IX Item "-M [SS-4|SS-5|SS-10|SS-20|SS-600MP|LX|Voyager|SPARCClassic] [|SPARCbook]"
+Set the emulated machine type. Default is \s-1SS\-5.\s0
+.PP
+The following options are specific to the Sparc64 emulation:
+.IP "\fB\-prom\-env\fR \fIstring\fR" 4
+.IX Item "-prom-env string"
+Set OpenBIOS variables in \s-1NVRAM,\s0 for example:
+.Sp
+.Vb 1
+\&        qemu\-system\-sparc64 \-prom\-env \*(Aqauto\-boot?=false\*(Aq
+.Ve
+.IP "\fB\-M [sun4u|sun4v|Niagara]\fR" 4
+.IX Item "-M [sun4u|sun4v|Niagara]"
+Set the emulated machine type. The default is sun4u.
+.SH "SEE ALSO"
+.IX Header "SEE ALSO"
+The \s-1HTML\s0 documentation of \s-1QEMU\s0 for more precise information and Linux
+user mode emulator invocation.
+.SH "AUTHOR"
+.IX Header "AUTHOR"
+Fabrice Bellard
diff --git a/install/share/man/man8/qemu-nbd.8 b/install/share/man/man8/qemu-nbd.8
new file mode 100644
index 0000000..5d03251
--- /dev/null
+++ b/install/share/man/man8/qemu-nbd.8
@@ -0,0 +1,213 @@
+.\" Automatically generated by Pod::Man 2.27 (Pod::Simple 3.28)
+.\"
+.\" Standard preamble:
+.\" ========================================================================
+.de Sp \" Vertical space (when we can't use .PP)
+.if t .sp .5v
+.if n .sp
+..
+.de Vb \" Begin verbatim text
+.ft CW
+.nf
+.ne \\$1
+..
+.de Ve \" End verbatim text
+.ft R
+.fi
+..
+.\" Set up some character translations and predefined strings.  \*(-- will
+.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
+.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
+.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
+.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
+.\" nothing in troff, for use with C<>.
+.tr \(*W-
+.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
+.ie n \{\
+.    ds -- \(*W-
+.    ds PI pi
+.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
+.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
+.    ds L" ""
+.    ds R" ""
+.    ds C` ""
+.    ds C' ""
+'br\}
+.el\{\
+.    ds -- \|\(em\|
+.    ds PI \(*p
+.    ds L" ``
+.    ds R" ''
+.    ds C`
+.    ds C'
+'br\}
+.\"
+.\" Escape single quotes in literal strings from groff's Unicode transform.
+.ie \n(.g .ds Aq \(aq
+.el       .ds Aq '
+.\"
+.\" If the F register is turned on, we'll generate index entries on stderr for
+.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
+.\" entries marked with X<> in POD.  Of course, you'll have to process the
+.\" output yourself in some meaningful fashion.
+.\"
+.\" Avoid warning from groff about undefined register 'F'.
+.de IX
+..
+.nr rF 0
+.if \n(.g .if rF .nr rF 1
+.if (\n(rF:(\n(.g==0)) \{
+.    if \nF \{
+.        de IX
+.        tm Index:\\$1\t\\n%\t"\\$2"
+..
+.        if !\nF==2 \{
+.            nr % 0
+.            nr F 2
+.        \}
+.    \}
+.\}
+.rr rF
+.\" ========================================================================
+.\"
+.IX Title "QEMU-NBD 8"
+.TH QEMU-NBD 8 "2014-09-20" " " " "
+.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
+.\" way too many mistakes in technical documents.
+.if n .ad l
+.nh
+.SH "NAME"
+qemu\-nbd \- QEMU Disk Network Block Device Server
+.SH "SYNOPSIS"
+.IX Header "SYNOPSIS"
+usage: qemu-nbd [\s-1OPTION\s0]...  \fIfilename\fR
+.SH "DESCRIPTION"
+.IX Header "DESCRIPTION"
+Export \s-1QEMU\s0 disk image using \s-1NBD\s0 protocol.
+.SH "OPTIONS"
+.IX Header "OPTIONS"
+.IP "\fIfilename\fR" 4
+.IX Item "filename"
+.Vb 1
+\& is a disk image filename
+.Ve
+.IP "\fB\-p, \-\-port=\fR\fIport\fR" 4
+.IX Item "-p, --port=port"
+.Vb 1
+\&  port to listen on (default B<10809>)
+.Ve
+.IP "\fB\-o, \-\-offset=\fR\fIoffset\fR" 4
+.IX Item "-o, --offset=offset"
+.Vb 1
+\&  offset into the image
+.Ve
+.IP "\fB\-b, \-\-bind=\fR\fIiface\fR" 4
+.IX Item "-b, --bind=iface"
+.Vb 1
+\&  interface to bind to (default B<0.0.0.0>)
+.Ve
+.IP "\fB\-k, \-\-socket=\fR\fIpath\fR" 4
+.IX Item "-k, --socket=path"
+.Vb 1
+\&  Use a unix socket with path I<path>
+.Ve
+.IP "\fB\-f, \-\-format=\fR\fIformat\fR" 4
+.IX Item "-f, --format=format"
+.Vb 1
+\&  Set image format as I<format>
+.Ve
+.IP "\fB\-r, \-\-read\-only\fR" 4
+.IX Item "-r, --read-only"
+.Vb 1
+\&  export read\-only
+.Ve
+.IP "\fB\-P, \-\-partition=\fR\fInum\fR" 4
+.IX Item "-P, --partition=num"
+.Vb 1
+\&  only expose partition I<num>
+.Ve
+.IP "\fB\-s, \-\-snapshot\fR" 4
+.IX Item "-s, --snapshot"
+.Vb 3
+\&  use I<filename> as an external snapshot, create a temporary
+\&  file with backing_file=I<filename>, redirect the write to
+\&  the temporary one
+.Ve
+.IP "\fB\-l, \-\-load\-snapshot=\fR\fIsnapshot_param\fR" 4
+.IX Item "-l, --load-snapshot=snapshot_param"
+.Vb 3
+\&  load an internal snapshot inside I<filename> and export it
+\&  as an read\-only device, I<snapshot_param> format is
+\&  \*(Aqsnapshot.id=[ID],snapshot.name=[NAME]\*(Aq or \*(Aq[ID_OR_NAME]\*(Aq
+.Ve
+.IP "\fB\-n, \-\-nocache\fR" 4
+.IX Item "-n, --nocache"
+.PD 0
+.IP "\fB\-\-cache=\fR\fIcache\fR" 4
+.IX Item "--cache=cache"
+.PD
+.Vb 2
+\&  set cache mode to be used with the file.  See the documentation of
+\&  the emulator\*(Aqs C<\-drive cache=...> option for allowed values.
+.Ve
+.IP "\fB\-\-aio=\fR\fIaio\fR" 4
+.IX Item "--aio=aio"
+.Vb 2
+\&  choose asynchronous I/O mode between B<threads> (the default)
+\&  and B<native> (Linux only).
+.Ve
+.IP "\fB\-\-discard=\fR\fIdiscard\fR" 4
+.IX Item "--discard=discard"
+.Vb 3
+\&  toggles whether I<discard> (also known as I<trim> or I<unmap>)
+\&  requests are ignored or passed to the filesystem.  The default is no
+\&  (B<\-\-discard=ignore>).
+.Ve
+.IP "\fB\-c, \-\-connect=\fR\fIdev\fR" 4
+.IX Item "-c, --connect=dev"
+.Vb 1
+\&  connect I<filename> to NBD device I<dev>
+.Ve
+.IP "\fB\-d, \-\-disconnect\fR" 4
+.IX Item "-d, --disconnect"
+.Vb 1
+\&  disconnect the specified device
+.Ve
+.IP "\fB\-e, \-\-shared=\fR\fInum\fR" 4
+.IX Item "-e, --shared=num"
+.Vb 1
+\&  device can be shared by I<num> clients (default B<1>)
+.Ve
+.IP "\fB\-f, \-\-format=\fR\fIfmt\fR" 4
+.IX Item "-f, --format=fmt"
+.Vb 1
+\&  force block driver for format I<fmt> instead of auto\-detecting
+.Ve
+.IP "\fB\-t, \-\-persistent\fR" 4
+.IX Item "-t, --persistent"
+.Vb 1
+\&  don\*(Aqt exit on the last connection
+.Ve
+.IP "\fB\-v, \-\-verbose\fR" 4
+.IX Item "-v, --verbose"
+.Vb 1
+\&  display extra debugging information
+.Ve
+.IP "\fB\-h, \-\-help\fR" 4
+.IX Item "-h, --help"
+.Vb 1
+\&  display this help and exit
+.Ve
+.IP "\fB\-V, \-\-version\fR" 4
+.IX Item "-V, --version"
+.Vb 1
+\&  output version information and exit
+.Ve
+.SH "SEE ALSO"
+.IX Header "SEE ALSO"
+\&\fIqemu\-img\fR\|(1)
+.SH "AUTHOR"
+.IX Header "AUTHOR"
+Copyright (C) 2006 Anthony Liguori <anthony@codemonkey.ws>.
+This is free software; see the source for copying conditions.  There is \s-1NO\s0
+warranty; not even for \s-1MERCHANTABILITY\s0 or \s-1FITNESS FOR A PARTICULAR PURPOSE.\s0
diff --git a/install/share/qemu/QEMU,cgthree.bin b/install/share/qemu/QEMU,cgthree.bin
new file mode 100644
index 0000000..6fec946
Binary files /dev/null and b/install/share/qemu/QEMU,cgthree.bin differ
diff --git a/install/share/qemu/QEMU,tcx.bin b/install/share/qemu/QEMU,tcx.bin
new file mode 100644
index 0000000..eed108f
Binary files /dev/null and b/install/share/qemu/QEMU,tcx.bin differ
diff --git a/install/share/qemu/acpi-dsdt.aml b/install/share/qemu/acpi-dsdt.aml
new file mode 100644
index 0000000..558c10f
Binary files /dev/null and b/install/share/qemu/acpi-dsdt.aml differ
diff --git a/install/share/qemu/bamboo.dtb b/install/share/qemu/bamboo.dtb
new file mode 100644
index 0000000..d12e201
Binary files /dev/null and b/install/share/qemu/bamboo.dtb differ
diff --git a/install/share/qemu/bios-256k.bin b/install/share/qemu/bios-256k.bin
new file mode 100644
index 0000000..09686a3
Binary files /dev/null and b/install/share/qemu/bios-256k.bin differ
diff --git a/install/share/qemu/bios.bin b/install/share/qemu/bios.bin
new file mode 100644
index 0000000..2314027
Binary files /dev/null and b/install/share/qemu/bios.bin differ
diff --git a/install/share/qemu/efi-e1000.rom b/install/share/qemu/efi-e1000.rom
new file mode 100644
index 0000000..776e217
Binary files /dev/null and b/install/share/qemu/efi-e1000.rom differ
diff --git a/install/share/qemu/efi-eepro100.rom b/install/share/qemu/efi-eepro100.rom
new file mode 100644
index 0000000..677a8c3
Binary files /dev/null and b/install/share/qemu/efi-eepro100.rom differ
diff --git a/install/share/qemu/efi-ne2k_pci.rom b/install/share/qemu/efi-ne2k_pci.rom
new file mode 100644
index 0000000..9dd6d91
Binary files /dev/null and b/install/share/qemu/efi-ne2k_pci.rom differ
diff --git a/install/share/qemu/efi-pcnet.rom b/install/share/qemu/efi-pcnet.rom
new file mode 100644
index 0000000..cae3a85
Binary files /dev/null and b/install/share/qemu/efi-pcnet.rom differ
diff --git a/install/share/qemu/efi-rtl8139.rom b/install/share/qemu/efi-rtl8139.rom
new file mode 100644
index 0000000..477f9b9
Binary files /dev/null and b/install/share/qemu/efi-rtl8139.rom differ
diff --git a/install/share/qemu/efi-virtio.rom b/install/share/qemu/efi-virtio.rom
new file mode 100644
index 0000000..935c927
Binary files /dev/null and b/install/share/qemu/efi-virtio.rom differ
diff --git a/install/share/qemu/keymaps/ar b/install/share/qemu/keymaps/ar
new file mode 100644
index 0000000..c430c03
--- /dev/null
+++ b/install/share/qemu/keymaps/ar
@@ -0,0 +1,98 @@
+# generated from XKB map ar
+include common
+map 0x401
+exclam 0x02 shift
+at 0x03 shift
+numbersign 0x04 shift
+dollar 0x05 shift
+percent 0x06 shift
+asciicircum 0x07 shift
+ampersand 0x08 shift
+asterisk 0x09 shift
+parenleft 0x0a shift
+parenright 0x0b shift
+minus 0x0c
+underscore 0x0c shift
+equal 0x0d
+plus 0x0d shift
+Arabic_dad 0x10 altgr
+Arabic_fatha 0x10 shift altgr
+Arabic_sad 0x11 altgr
+Arabic_fathatan 0x11 shift altgr
+Arabic_theh 0x12 altgr
+Arabic_damma 0x12 shift altgr
+Arabic_qaf 0x13 altgr
+Arabic_dammatan 0x13 shift altgr
+Arabic_feh 0x14 altgr
+UFEF9 0x14 shift altgr
+Arabic_ghain 0x15 altgr
+Arabic_hamzaunderalef 0x15 shift altgr
+Arabic_ain 0x16 altgr
+grave 0x16 shift altgr
+Arabic_ha 0x17 altgr
+division 0x17 shift altgr
+Arabic_khah 0x18 altgr
+multiply 0x18 shift altgr
+Arabic_hah 0x19 altgr
+Arabic_semicolon 0x19 shift altgr
+bracketleft 0x1a
+braceleft 0x1a shift
+Arabic_jeem 0x1a altgr
+bracketright 0x1b
+braceright 0x1b shift
+Arabic_dal 0x1b altgr
+Arabic_sheen 0x1e altgr
+backslash 0x1e shift altgr
+Arabic_seen 0x1f altgr
+Arabic_yeh 0x20 altgr
+bracketleft 0x20 shift altgr
+Arabic_beh 0x21 altgr
+bracketright 0x21 shift altgr
+Arabic_lam 0x22 altgr
+UFEF7 0x22 shift altgr
+Arabic_alef 0x23 altgr
+Arabic_hamzaonalef 0x23 shift altgr
+Arabic_teh 0x24 altgr
+Arabic_tatweel 0x24 shift altgr
+Arabic_noon 0x25 altgr
+Arabic_comma 0x25 shift altgr
+Arabic_meem 0x26 altgr
+slash 0x26 shift altgr
+semicolon 0x27
+colon 0x27 shift
+Arabic_kaf 0x27 altgr
+apostrophe 0x28
+quotedbl 0x28 shift
+Arabic_tah 0x28 altgr
+grave 0x29
+asciitilde 0x29 shift
+Arabic_thal 0x29 altgr
+Arabic_shadda 0x29 shift altgr
+backslash 0x2b
+bar 0x2b shift
+less 0x2b altgr
+greater 0x2b shift altgr
+Arabic_hamzaonyeh 0x2c altgr
+asciitilde 0x2c shift altgr
+Arabic_hamza 0x2d altgr
+Arabic_sukun 0x2d shift altgr
+Arabic_hamzaonwaw 0x2e altgr
+Arabic_kasra 0x2e shift altgr
+Arabic_ra 0x2f altgr
+Arabic_kasratan 0x2f shift altgr
+UFEFB 0x30 altgr
+UFEF5 0x30 shift altgr
+Arabic_alefmaksura 0x31 altgr
+Arabic_maddaonalef 0x31 shift altgr
+Arabic_tehmarbuta 0x32 altgr
+apostrophe 0x32 shift altgr
+comma 0x33
+less 0x33 shift
+Arabic_waw 0x33 altgr
+period 0x34
+greater 0x34 shift
+Arabic_zain 0x34 altgr
+slash 0x35
+question 0x35 shift
+Arabic_zah 0x35 altgr
+Arabic_question_mark 0x35 shift altgr
diff --git a/install/share/qemu/keymaps/bepo b/install/share/qemu/keymaps/bepo
new file mode 100644
index 0000000..d40041a
--- /dev/null
+++ b/install/share/qemu/keymaps/bepo
@@ -0,0 +1,333 @@
+include common
+
+# Bépo : Improved ergonomic french keymap using Dvorak method.
+# Built by community on 'Dvorak Fr / Bépo' :
+# see http://www.clavier-dvorak.org/wiki/ to join and help.
+#
+# Bépo layout (1.0rc2 version) for a pc105 keyboard (french) :
+# ┌────┐
+# │ S A│   S = Shift,  A = AltGr + Shift
+# │ s a│   s = normal, a = AltGr
+# └────┘
+#
+# ┌─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┬─────┲━━━━━━━━━┓
+# │ # ¶ │ 1 „ │ 2 “ │ 3 ” │ 4 ≤ │ 5 ≥ │ 6   │ 7 ¬ │ 8 ¼ │ 9 ½ │ 0 ¾ │ ° ′ │ ` ″ ┃ ⌫ Retour┃
+# │ $ – │ " — │ « < │ » > │ ( [ │ ) ] │ @ ^ │ + ± │ - − │ / ÷ │ * × │ = ≠ │ % ‰ ┃  arrière┃
+# ┢━━━━━┷━┱───┴─┬───┴─┬───┴─┬───┴─┬───┴─┬───┴─┬───┴─┬───┴─┬───┴─┬───┴─┬───┴─┬───┺━┳━━━━━━━┫
+# ┃       ┃ B ¦ │ É ˝ │ P § │ O Œ │ È ` │ !   │ V   │ D Ð │ L   │ J Ĳ │ Z Ə │ W   ┃Entrée ┃
+# ┃Tab ↹  ┃ b | │ é ˊ │ p & │ o œ │ è ` │ ˆ ¡ │ v ˇ │ d ð │ l / │ j ĳ │ z ə │ w ̆ ┃   ⏎   ┃
+# ┣━━━━━━━┻┱────┴┬────┴┬────┴┬────┴┬────┴┬────┴┬────┴┬────┴┬────┴┬────┴┬────┴┬────┺┓      ┃
+# ┃        ┃ A Æ │ U Ù │ I ˙ │ E ¤ │ ; ̛ │ C ſ │ T Þ │ S ẞ │ R ™ │ N   │ M º │ Ç , ┃      ┃
+# ┃Maj ⇬   ┃ a æ │ u ù │ i ̈ │ e € │ , ’ │ c © │ t þ │ s ß │ r ® │ n ˜ │ m ¯ │ ç ¸ ┃      ┃
+# ┣━━━━━━━┳┹────┬┴────┬┴────┬┴────┬┴────┬┴────┬┴────┬┴────┬┴────┬┴────┬┴────┲┷━━━━━┻━━━━━━┫
+# ┃       ┃ Ê   │ À   │ Y ‘ │ X ’ │ : · │ K   │ ? ̉ │ Q ̣ │ G   │ H ‡ │ F ª ┃             ┃
+# ┃Shift ⇧┃ ê / │ à \ │ y { │ x } │ . … │ k ~ │ ' ¿ │ q ˚ │ g µ │ h † │ f ˛ ┃Shift ⇧      ┃
+# ┣━━━━━━━╋━━━━━┷━┳━━━┷━━━┱─┴─────┴─────┴─────┴─────┴─────┴───┲━┷━━━━━╈━━━━━┻━┳━━━━━━━┳━━━┛
+# ┃       ┃       ┃       ┃ Espace inséc.   Espace inséc. fin ┃       ┃       ┃       ┃
+# ┃Ctrl   ┃Meta   ┃Alt    ┃ ␣ (Espace)      _               ␣ ┃AltGr ⇮┃Menu   ┃Ctrl   ┃
+# ┗━━━━━━━┻━━━━━━━┻━━━━━━━┹───────────────────────────────────┺━━━━━━━┻━━━━━━━┻━━━━━━━┛
+
+
+# First row
+## keycode  41 = dollar numbersign       U+2013  U+00b6
+dollar        0x29
+numbersign    0x29  shift
+U2013         0x29        altgr
+U00b6         0x29  shift altgr
+
+## keycode   2 = +quotedbl +one          U+2014  U+201e
+quotedbl      0x2
+one           0x2  shift
+U2014         0x2        altgr
+U201e         0x2  shift altgr
+
+## keycode   3 = +guillemotleft  +two     less    U+201c
+guillemotleft  0x3
+two           0x3  shift
+less          0x3        altgr
+U201c         0x3  shift altgr
+
+## keycode   4 = +guillemotright +three  greater U+201d
+guillemotright  0x4
+three         0x4  shift
+greater       0x4        altgr
+U201d         0x4  shift altgr
+
+## keycode   5 = +parenleft +four        bracketleft  U+2264
+parenleft     0x5
+four          0x5  shift
+bracketleft   0x5        altgr
+U2264         0x5  shift altgr
+
+## keycode   6 = +parenright +five       bracketright  U+2265
+parenright    0x6
+five          0x6  shift
+bracketright  0x6        altgr
+U2265         0x6  shift altgr
+
+## keycode   7 = +at       +six          asciicircum
+at            0x7
+six           0x7  shift
+asciicircum   0x7        altgr
+
+## keycode   8 = +plus     +seven        U+00b1  U+00ac
+plus          0x8
+seven         0x8  shift
+U00b1         0x8        altgr
+U00ac         0x8  shift altgr
+
+## keycode   9 = +minus    +eight        U+2212  U+00bc
+minus         0x9
+eight         0x9  shift
+U2212         0x9        altgr
+U00bc         0x9  shift altgr
+
+## keycode  10 = +slash    +nine         U+00f7  U+00bd
+slash         0xa
+nine          0xa  shift
+U00f7         0xa        altgr
+U00bd         0xa  shift altgr
+
+## keycode  11 = +asterisk +zero         U+00d7  U+00be
+asterisk      0xb
+zero          0xb  shift
+U00d7         0xb        altgr
+U00be         0xb  shift altgr
+
+## keycode  12 = equal     U+00b0        U+2260  U+2032
+equal         0xc
+U00b0         0xc  shift
+U2260         0xc        altgr
+U2032         0xc  shift altgr
+
+## keycode  13 = percent   grave         U+2030  U+2033
+percent       0xd
+grave         0xd  shift
+U2030         0xd        altgr
+U2033         0xd  shift altgr
+
+
+# Second row
+
+# simplified letter definitions notation :
+## keycode 16 = b
+b             0x10  addupper
+## keycode 18 = p
+p             0x12  addupper
+## keycode 19 = o
+o             0x13  addupper
+## keycode 22 = v
+v             0x16  addupper
+## keycode 23 = d
+d             0x17  addupper
+## keycode 24 = l
+l             0x18  addupper
+## keycode 25 = j
+j             0x19  addupper
+## keycode 26 = z
+z             0x1a  addupper
+## keycode 27 = w
+w             0x1b  addupper
+
+# then, add specific definitions
+##                    AltGr keycode  16 = bar
+bar           0x10        altgr
+##              Shift AltGr keycode  16 = brokenbar
+brokenbar     0x10  shift altgr
+
+## keycode 17 = +eacute +Eacute dead_acute
+eacute        0x11
+Eacute        0x11  shift
+dead_acute    0x11        altgr
+
+##                    AltGr keycode  18 = ampersand
+ampersand     0x12        altgr
+##              Shift AltGr keycode  18 = U+00a7
+U00a7         0x12  shift altgr
+
+##                    AltGr keycode  19 = +U+0153
+U+0153        0x13        altgr
+##              Shift AltGr keycode  19 = +U+0152
+U+0152        0x13  shift altgr
+
+## keycode 20 = +egrave +Egrave dead_grave grave # no Meta !
+egrave        0x14
+Egrave        0x14  shift
+dead_grave    0x14        altgr
+
+## keycode 21 = dead_circumflex exclam exclamdown
+dead_circumflex  0x15
+exclam        0x15  shift
+exclamdown    0x15        altgr
+
+##                    AltGr keycode  22 = dead_caron
+dead_caron    0x16        altgr
+
+##                    AltGr keycode  23 = eth
+eth           0x17        altgr
+##              Shift AltGr keycode  23 = ETH
+ETH           0x17  shift altgr
+
+##                    AltGr keycode  25 = +U+0133
+U+0133        0x19        altgr
+##              Shift AltGr keycode  25 = +U+0132
+U+0132        0x19  shift altgr
+
+##                    AltGr keycode  26 = +U+0259
+U+0259        0x1a        altgr
+##              Shift AltGr keycode  26 = +U+018f
+U+018f        0x1a  shift altgr
+
+
+
+# Third row
+
+# simplified letter definitions notation :
+## keycode 30 = a
+a             0x1e  addupper
+## keycode 31 = u
+u             0x1f  addupper
+## keycode 32 = i
+i             0x20  addupper
+## keycode 33 = e
+e             0x21  addupper
+## keycode 35 = c
+c             0x23  addupper
+## keycode 36 = t
+t             0x24  addupper
+## keycode 37 = s
+s             0x25  addupper
+## keycode 38 = r
+r             0x26  addupper
+## keycode 39 = n
+n             0x27  addupper
+## keycode 40 = m
+m             0x28  addupper
+
+# then, add specific definitions
+##                    AltGr keycode  30 = +ae
+ae            0x1e        altgr
+##              Shift AltGr keycode  30 = +AE
+AE            0x1e  shift altgr
+
+##                    AltGr keycode  31 = +ugrave
+ugrave        0x1f        altgr
+##              Shift AltGr keycode  31 = +Ugrave
+Ugrave        0x1f  shift altgr
+
+##                    AltGr keycode  32 = dead_diaeresis
+dead_diaeresis  0x20        altgr
+
+
+##                    AltGr keycode  33 = U+20ac
+U20ac         0x21        altgr
+
+## keycode 34 = comma semicolon U+2019 +U+031b
+comma         0x22
+semicolon     0x22  shift
+U2019         0x22        altgr
+U+031b        0x22  shift altgr
+
+##                    AltGr keycode  35 = copyright
+copyright     0x23        altgr
+##              Shift AltGr keycode  35 = U+017f
+U017f         0x23  shift altgr
+
+##                    AltGr keycode  36 = +thorn
+thorn         0x24        altgr
+##              Shift AltGr keycode  36 = +THORN
+THORN         0x24  shift altgr
+
+##                    AltGr keycode  37 = +ssharp
+ssharp        0x25        altgr
+##              Shift AltGr keycode  37 = U+1e9e
+U1e9e         0x25  shift altgr
+
+##                    AltGr keycode  38 = registered
+registered    0x26        altgr
+##              Shift AltGr keycode  38 = U+2122
+U2122         0x26  shift altgr
+
+##                    AltGr keycode  39 = dead_tilde
+dead_tilde    0x27        altgr
+
+##              Shift AltGr keycode  40 = masculine
+masculine     0x28  shift altgr
+
+## keycode 43 = +ccedilla +Ccedilla dead_cedilla
+ccedilla      0x2b
+Ccedilla      0x2b  shift
+dead_cedilla  0x2b        altgr
+
+
+# Fourth row
+
+# simplified letter definitions notation :
+## keycode 45 = y
+y             0x2d  addupper
+## keycode 46 = x
+x             0x2e  addupper
+## keycode 48 = k
+k             0x30  addupper
+## keycode 50 = q
+q             0x32  addupper
+## keycode 51 = g
+g             0x33  addupper
+## keycode 52 = h
+h             0x34  addupper
+## keycode 53 = f
+f             0x35  addupper
+
+# then, add specific definitions
+## keycode 86 = +ecircumflex +Ecircumflex slash slash
+ecircumflex   0x56
+Ecircumflex   0x56  shift
+
+## keycode 44 = +agrave +Agrave backslash
+agrave        0x2c
+Agrave        0x2c  shift
+backslash     0x2c        altgr
+
+##                    AltGr keycode  45 = braceleft
+braceleft     0x2d        altgr
+##              Shift AltGr keycode  45 = U+2018
+U2018         0x2d  shift altgr
+
+##                    AltGr keycode  46 = braceright
+braceright    0x2e        altgr
+
+## keycode 47 = period colon U+2026 periodcentered
+period        0x2f
+colon         0x2f  shift
+U2026         0x2f        altgr
+periodcentered  0x2f  shift altgr
+
+##                    AltGr keycode  48 = asciitilde
+asciitilde    0x30        altgr
+##              Shift AltGr keycode  48 = U+2328
+U2328         0x30  shift altgr
+
+## keycode 49 = apostrophe question questiondown +U+0309
+apostrophe    0x31
+question      0x31  shift
+questiondown  0x31        altgr
+U+0309        0x31  shift altgr
+
+##                    AltGr keycode  51 = mu
+mu            0x33        altgr
+
+##                    AltGr keycode  52 = U+2020
+U2020         0x34        altgr
+##              Shift AltGr keycode  52 = U+2021
+U2021         0x34  shift altgr
+
+##              Shift AltGr keycode  53 = ordfeminine
+ordfeminine   0x35  shift altgr
+
+
+
+## keycode 57 = space nobreakspace underscore U+202f
+space         0x39
+nobreakspace  0x39  shift
+underscore    0x39        altgr
+U202f         0x39  shift altgr
diff --git a/install/share/qemu/keymaps/common b/install/share/qemu/keymaps/common
new file mode 100644
index 0000000..adc56c7
--- /dev/null
+++ b/install/share/qemu/keymaps/common
@@ -0,0 +1,157 @@
+include modifiers
+
+#
+# Top row
+#
+1 0x2
+2 0x3
+3 0x4
+4 0x5
+5 0x6
+6 0x7
+7 0x8
+8 0x9
+9 0xa
+0 0xb
+BackSpace 0xe
+
+#
+# QWERTY first row
+#
+Tab 0xf localstate
+ISO_Left_Tab 0xf shift
+q 0x10 addupper
+w 0x11 addupper
+e 0x12 addupper
+r 0x13 addupper
+t 0x14 addupper
+y 0x15 addupper
+u 0x16 addupper
+i 0x17 addupper
+o 0x18 addupper
+p 0x19 addupper
+
+#
+# QWERTY second row
+#
+a 0x1e addupper
+s 0x1f addupper
+d 0x20 addupper
+f 0x21 addupper
+g 0x22 addupper
+h 0x23 addupper
+j 0x24 addupper
+k 0x25 addupper
+l 0x26 addupper
+Return 0x1c localstate
+
+#
+# QWERTY third row
+#
+z 0x2c addupper
+x 0x2d addupper
+c 0x2e addupper
+v 0x2f addupper
+b 0x30 addupper
+n 0x31 addupper
+m 0x32 addupper
+
+space 0x39 localstate
+
+less 0x56
+greater 0x56 shift
+bar 0x56 altgr
+brokenbar 0x56 shift altgr
+
+#
+# Esc and Function keys
+#
+Escape 0x1 localstate
+F1 0x3b localstate
+F2 0x3c localstate
+F3 0x3d localstate
+F4 0x3e localstate
+F5 0x3f localstate
+F6 0x40 localstate
+F7 0x41 localstate
+F8 0x42 localstate
+F9 0x43 localstate
+F10 0x44 localstate
+F11 0x57 localstate
+F12 0x58 localstate
+
+# Printscreen, Scrollock and Pause
+# Printscreen really requires four scancodes (0xe0, 0x2a, 0xe0, 0x37),
+# but (0xe0, 0x37) seems to work.
+Print 0xb7 localstate
+Sys_Req 0xb7 localstate
+Execute 0xb7 localstate
+Scroll_Lock 0x46
+
+#
+# Insert - PgDown
+#
+Insert 0xd2 localstate
+Delete 0xd3 localstate
+Home 0xc7 localstate
+End 0xcf localstate
+Page_Up 0xc9 localstate
+Page_Down 0xd1 localstate
+
+#
+# Arrow keys
+#
+Left 0xcb localstate
+Up 0xc8 localstate
+Down 0xd0 localstate
+Right 0xcd localstate
+
+#
+# Numpad
+#
+Num_Lock 0x45
+KP_Divide 0xb5
+KP_Multiply 0x37
+KP_Subtract 0x4a
+KP_Add 0x4e
+KP_Enter 0x9c
+
+KP_Decimal 0x53 numlock
+KP_Separator 0x53 numlock
+KP_Delete 0x53
+
+KP_0 0x52 numlock
+KP_Insert 0x52
+
+KP_1 0x4f numlock
+KP_End 0x4f
+
+KP_2 0x50 numlock
+KP_Down 0x50
+
+KP_3 0x51 numlock
+KP_Next 0x51
+
+KP_4 0x4b numlock
+KP_Left 0x4b
+
+KP_5 0x4c numlock
+KP_Begin 0x4c
+
+KP_6 0x4d numlock
+KP_Right 0x4d
+
+KP_7 0x47 numlock
+KP_Home 0x47
+
+KP_8 0x48 numlock
+KP_Up 0x48
+
+KP_9 0x49 numlock
+KP_Prior 0x49
+
+Caps_Lock 0x3a
+#
+# Inhibited keys
+#
+Multi_key 0x0 inhibit
diff --git a/install/share/qemu/keymaps/cz b/install/share/qemu/keymaps/cz
new file mode 100644
index 0000000..6584bfb
--- /dev/null
+++ b/install/share/qemu/keymaps/cz
@@ -0,0 +1,94 @@
+include common
+
+# Czech qwertz layout
+# comments are czech descriptions of the characters
+
+# -----------
+#  First row
+# -----------
+
+# strednik, kolecko
+semicolon 0x29
+dead_abovering 0x29 shift
+
+# numbers
+plus 0x2
+1 0x2 shift
+ecaron 0x3
+2 0x3 shift
+scaron 0x4
+3 0x4 shift
+ccaron 0x5
+4 0x5 shift
+rcaron 0x6
+5 0x6 shift
+zcaron 0x7
+6 0x7 shift
+yacute 0x8
+7 0x8 shift
+aacute 0x9
+8 0x9 shift
+iacute 0xa
+9 0xa shift
+eacute 0xb
+0 0xb shift
+
+# rovnitko
+equal 0x0c
+percent 0x0c shift
+
+# carka, hacek
+dead_acute 0x0d
+dead_caron 0x0d shift
+
+# ------------
+#  Second row
+# ------------
+
+z 0x15 addupper
+
+# u s carkou, zpetne lomitko
+uacute 0x1a
+slash 0x1a shift
+
+# prava zavorka, leva zavorka
+parenright 0x1b
+parenleft 0x1b shift
+
+# -----------
+#  Third row
+# -----------
+
+# u s krouzkem, uvozovky
+uring 0x27
+quotedbl 0x27 shift
+
+# paragraf, vykricnik
+section 0x28
+exclam 0x28 shift
+
+# vodorovna dvojtecka, apostrof
+dead_diaeresis 0x2b
+apostrophe 0x2b shift
+
+# ------------
+#  Fourth row
+# ------------
+
+# zpetne lomitko, roura
+backslash 0x2b
+bar 0x2b shift
+
+y 0x2c addupper
+
+# carka, otaznik
+comma 0x33
+question 0x33 shift
+
+# tecka, dvojtecka
+period 0x34
+colon 0x34 shift
+
+# minus, podtrzitko
+minus 0x35
+underscore 0x35 shift
diff --git a/install/share/qemu/keymaps/da b/install/share/qemu/keymaps/da
new file mode 100644
index 0000000..3884dcf
--- /dev/null
+++ b/install/share/qemu/keymaps/da
@@ -0,0 +1,120 @@
+# generated from XKB map dk
+include common
+map 0x406
+exclam 0x02 shift
+exclamdown 0x02 altgr
+onesuperior 0x02 shift altgr
+quotedbl 0x03 shift
+at 0x03 altgr
+twosuperior 0x03 shift altgr
+numbersign 0x04 shift
+sterling 0x04 altgr
+threesuperior 0x04 shift altgr
+currency 0x05 shift
+dollar 0x05 altgr
+onequarter 0x05 shift altgr
+percent 0x06 shift
+onehalf 0x06 altgr
+cent 0x06 shift altgr
+ampersand 0x07 shift
+yen 0x07 altgr
+fiveeighths 0x07 shift altgr
+slash 0x08 shift
+braceleft 0x08 altgr
+division 0x08 shift altgr
+parenleft 0x09 shift
+bracketleft 0x09 altgr
+guillemotleft 0x09 shift altgr
+parenright 0x0a shift
+bracketright 0x0a altgr
+guillemotright 0x0a shift altgr
+equal 0x0b shift
+braceright 0x0b altgr
+degree 0x0b shift altgr
+plus 0x0c
+question 0x0c shift
+plusminus 0x0c altgr
+questiondown 0x0c shift altgr
+dead_acute 0x0d
+dead_grave 0x0d shift
+bar 0x0d altgr
+brokenbar 0x0d shift altgr
+Greek_OMEGA 0x10 shift altgr
+lstroke 0x11 altgr
+Lstroke 0x11 shift altgr
+EuroSign 0x12 altgr
+cent 0x12 shift altgr
+registered 0x13 altgr
+thorn 0x14 altgr
+THORN 0x14 shift altgr
+leftarrow 0x15 altgr
+yen 0x15 shift altgr
+downarrow 0x16 altgr
+uparrow 0x16 shift altgr
+rightarrow 0x17 altgr
+idotless 0x17 shift altgr
+oe 0x18 altgr
+OE 0x18 shift altgr
+thorn 0x19 altgr
+THORN 0x19 shift altgr
+aring 0x1a
+Aring 0x1a shift
+dead_diaeresis 0x1a altgr
+dead_abovering 0x1a shift altgr
+dead_diaeresis 0x1b
+dead_circumflex 0x1b shift
+dead_tilde 0x1b altgr
+dead_caron 0x1b shift altgr
+ordfeminine 0x1e altgr
+masculine 0x1e shift altgr
+ssharp 0x1f altgr
+section 0x1f shift altgr
+eth 0x20 altgr
+ETH 0x20 shift altgr
+dstroke 0x21 altgr
+ordfeminine 0x21 shift altgr
+eng 0x22 altgr
+ENG 0x22 shift altgr
+hstroke 0x23 altgr
+Hstroke 0x23 shift altgr
+kra 0x25 altgr
+lstroke 0x26 altgr
+Lstroke 0x26 shift altgr
+ae 0x27
+AE 0x27 shift
+oslash 0x28
+Ooblique 0x28 shift
+dead_caron 0x28 shift altgr
+onehalf 0x29
+section 0x29 shift
+threequarters 0x29 altgr
+paragraph 0x29 shift altgr
+apostrophe 0x2b
+asterisk 0x2b shift
+dead_doubleacute 0x2b altgr
+multiply 0x2b shift altgr
+guillemotleft 0x2c altgr
+guillemotright 0x2d altgr
+copyright 0x2e altgr
+leftdoublequotemark 0x2f altgr
+grave 0x2f shift altgr
+rightdoublequotemark 0x30 altgr
+mu 0x32 altgr
+masculine 0x32 shift altgr
+comma 0x33
+semicolon 0x33 shift
+dead_cedilla 0x33 altgr
+dead_ogonek 0x33 shift altgr
+period 0x34
+colon 0x34 shift
+periodcentered 0x34 altgr
+dead_abovedot 0x34 shift altgr
+minus 0x35
+underscore 0x35 shift
+hyphen 0x35 altgr
+macron 0x35 shift altgr
+nobreakspace 0x39 altgr
+less 0x56
+greater 0x56 shift
+backslash 0x56 altgr
+notsign 0x56 shift altgr
diff --git a/install/share/qemu/keymaps/de b/install/share/qemu/keymaps/de
new file mode 100644
index 0000000..ed929c7
--- /dev/null
+++ b/install/share/qemu/keymaps/de
@@ -0,0 +1,114 @@
+# generated from XKB map de
+include common
+map 0x407
+exclam 0x02 shift
+onesuperior 0x02 altgr
+exclamdown 0x02 shift altgr
+quotedbl 0x03 shift
+twosuperior 0x03 altgr
+oneeighth 0x03 shift altgr
+section 0x04 shift
+threesuperior 0x04 altgr
+sterling 0x04 shift altgr
+dollar 0x05 shift
+onequarter 0x05 altgr
+currency 0x05 shift altgr
+percent 0x06 shift
+onehalf 0x06 altgr
+threeeighths 0x06 shift altgr
+ampersand 0x07 shift
+threequarters 0x07 altgr
+fiveeighths 0x07 shift altgr
+slash 0x08 shift
+braceleft 0x08 altgr
+seveneighths 0x08 shift altgr
+parenleft 0x09 shift
+bracketleft 0x09 altgr
+trademark 0x09 shift altgr
+parenright 0x0a shift
+bracketright 0x0a altgr
+plusminus 0x0a shift altgr
+equal 0x0b shift
+braceright 0x0b altgr
+ssharp 0x0c
+question 0x0c shift
+backslash 0x0c altgr
+questiondown 0x0c shift altgr
+acute 0x0d
+dead_acute 0x0d
+grave 0x0d shift
+dead_grave 0x0d shift
+dead_cedilla 0x0d altgr
+dead_ogonek 0x0d shift altgr
+at 0x10 altgr
+Greek_OMEGA 0x10 shift altgr
+EuroSign 0x12 altgr
+paragraph 0x13 altgr
+registered 0x13 shift altgr
+tslash 0x14 altgr
+Tslash 0x14 shift altgr
+z 0x15 addupper
+leftarrow 0x15 altgr
+yen 0x15 shift altgr
+downarrow 0x16 altgr
+uparrow 0x16 shift altgr
+rightarrow 0x17 altgr
+idotless 0x17 shift altgr
+oslash 0x18 altgr
+Ooblique 0x18 shift altgr
+thorn 0x19 altgr
+THORN 0x19 shift altgr
+udiaeresis 0x1a
+Udiaeresis 0x1a shift
+dead_diaeresis 0x1a altgr
+dead_abovering 0x1a shift altgr
+plus 0x1b
+asterisk 0x1b shift
+asciitilde 0x1b altgr
+dead_tilde 0x1b altgr
+dead_macron 0x1b shift altgr
+ae 0x1e altgr
+AE 0x1e shift altgr
+eth 0x20 altgr
+ETH 0x20 shift altgr
+dstroke 0x21 altgr
+ordfeminine 0x21 shift altgr
+eng 0x22 altgr
+ENG 0x22 shift altgr
+hstroke 0x23 altgr
+Hstroke 0x23 shift altgr
+kra 0x25 altgr
+odiaeresis 0x27
+Odiaeresis 0x27 shift
+dead_doubleacute 0x27 altgr
+adiaeresis 0x28
+Adiaeresis 0x28 shift
+dead_caron 0x28 shift altgr
+asciicircum 0x29
+dead_circumflex 0x29
+degree 0x29 shift
+notsign 0x29 altgr
+numbersign 0x2b
+apostrophe 0x2b shift
+dead_breve 0x2b shift altgr
+y 0x2c addupper
+guillemotleft 0x2c altgr
+guillemotright 0x2d altgr
+cent 0x2e altgr
+copyright 0x2e shift altgr
+leftdoublequotemark 0x2f altgr
+rightdoublequotemark 0x30 altgr
+mu 0x32 altgr
+masculine 0x32 shift altgr
+comma 0x33
+semicolon 0x33 shift
+horizconnector 0x33 altgr
+multiply 0x33 shift altgr
+period 0x34
+colon 0x34 shift
+periodcentered 0x34 altgr
+division 0x34 shift altgr
+minus 0x35
+underscore 0x35 shift
+dead_belowdot 0x35 altgr
+dead_abovedot 0x35 shift altgr
diff --git a/install/share/qemu/keymaps/de-ch b/install/share/qemu/keymaps/de-ch
new file mode 100644
index 0000000..852f8b8
--- /dev/null
+++ b/install/share/qemu/keymaps/de-ch
@@ -0,0 +1,169 @@
+# rdesktop Swiss-German (de-ch) keymap file
+# 2003-06-03 by noldi@tristar.ch
+#
+include common
+map 0x00000807
+#
+# Scan Code 1
+section 0x29
+degree 0x29 shift
+notsign 0x29 altgr inhibit
+#
+# Scan Code 2
+plus 0x2 shift
+brokenbar 0x02 altgr
+#
+# Scan Code 3
+quotedbl 0x03 shift
+at 0x03 altgr
+#
+# Scan Code 4
+asterisk 0x04 shift
+numbersign 0x04 altgr
+#
+# Scan Code 5
+ccedilla 0x05 shift
+onequarter 0x05 altgr inhibit
+#
+# Scan Code 6
+percent 0x06 shift
+onehalf 0x06 altgr inhibit
+#
+# Scan Code 7
+ampersand 0x07 shift
+notsign 0x07 altgr
+#
+# Scan Code 8
+slash 0x08 shift
+bar 0x08 altgr
+#
+# Scan Code 9
+parenleft 0x09 shift
+cent 0x09 altgr
+#
+# Scan Code 10
+parenright 0x0a shift
+#
+# Scan Code 11
+equal 0x0b shift
+braceright 0x0b altgr inhibit
+#
+# Scan Code 12
+apostrophe 0x0c
+question 0x0c shift
+dead_acute 0x0c altgr
+#
+# Scan Code 13
+dead_circumflex 0x0d
+dead_grave 0x0d shift
+dead_tilde 0x0d altgr
+#
+# Scan Code 19
+EuroSign 0x12 altgr
+#
+# Scan Code 22
+z 0x15 addupper
+#
+# Scan Code 27
+udiaeresis 0x1a
+egrave 0x1a shift
+bracketleft 0x1a altgr
+#
+# Scan Code 28
+dead_diaeresis 0x1b
+exclam 0x1b shift
+bracketright 0x1b altgr
+#
+# Scan Code 40
+odiaeresis 0x27
+eacute 0x27 shift
+#
+# Scan Code 41
+adiaeresis 0x28
+agrave 0x28 shift
+braceleft 0x28 altgr
+#
+# Scan Code 42 (only on international keyboards)
+dollar 0x2b
+sterling 0x2b shift
+braceright 0x2b altgr
+#
+# Scan Code 45 (only on international keyboards)
+backslash 0x56 altgr
+#
+# Scan Code 46
+y 0x2c addupper
+#
+# Scan Code 53
+comma 0x33
+semicolon 0x33 shift
+#
+# Scan Code 54
+period 0x34
+colon 0x34 shift
+#
+# Scan Code 55
+minus 0x35
+underscore 0x35 shift
+#
+# Suppress Windows unsupported AltGr keys
+#
+# Scan Code 17
+paragraph 0x10 altgr inhibit
+#
+# Scan Code 21
+tslash 0x14 altgr inhibit
+#
+# Scan Code 22
+leftarrow 0x15 altgr inhibit
+#
+# Scan Code 23
+downarrow 0x16 altgr inhibit
+#
+# Scan Code 24
+rightarrow 0x17 altgr inhibit
+#
+# Scan Code 25
+oslash 0x18 altgr inhibit
+#
+# Scan Code 26
+thorn 0x19 altgr inhibit
+#
+# Scan Code 31
+ae 0x1e altgr inhibit
+#
+# Scan Code 32
+ssharp 0x1f altgr inhibit
+#
+# Scan Code 33
+eth 0x20 altgr inhibit
+#
+# Scan Code 34
+dstroke 0x21 altgr inhibit
+#
+# Scan Code 35
+eng 0x22 altgr inhibit
+#
+# Scan Code 36
+hstroke 0x23 altgr inhibit
+#
+# Scan Code 38
+kra 0x25 altgr inhibit
+#
+# Scan Code 39
+lstroke 0x26 altgr inhibit
+#
+# Scan Code 46
+guillemotleft 0x2c altgr inhibit
+#
+# Scan Code 47
+guillemotright 0x2d altgr inhibit
+#
+# Scan Code 49
+leftdoublequotemark 0x2f altgr inhibit
+#
+# Scan Code 50
+rightdoublequotemark 0x30 altgr inhibit
+#
+# Scan Code 52
+mu 0x32 altgr inhibit
diff --git a/install/share/qemu/keymaps/en-gb b/install/share/qemu/keymaps/en-gb
new file mode 100644
index 0000000..b45f06c
--- /dev/null
+++ b/install/share/qemu/keymaps/en-gb
@@ -0,0 +1,119 @@
+# generated from XKB map gb
+include common
+map 0x809
+exclam 0x02 shift
+onesuperior 0x02 altgr
+exclamdown 0x02 shift altgr
+quotedbl 0x03 shift
+twosuperior 0x03 altgr
+oneeighth 0x03 shift altgr
+sterling 0x04 shift
+threesuperior 0x04 altgr
+dollar 0x05 shift
+EuroSign 0x05 altgr
+percent 0x06 shift
+onehalf 0x06 altgr
+threeeighths 0x06 shift altgr
+asciicircum 0x07 shift
+threequarters 0x07 altgr
+fiveeighths 0x07 shift altgr
+ampersand 0x08 shift
+braceleft 0x08 altgr
+seveneighths 0x08 shift altgr
+asterisk 0x09 shift
+bracketleft 0x09 altgr
+trademark 0x09 shift altgr
+parenleft 0x0a shift
+bracketright 0x0a altgr
+plusminus 0x0a shift altgr
+parenright 0x0b shift
+braceright 0x0b altgr
+degree 0x0b shift altgr
+minus 0x0c
+underscore 0x0c shift
+backslash 0x0c altgr
+questiondown 0x0c shift altgr
+equal 0x0d
+plus 0x0d shift
+dead_cedilla 0x0d altgr
+dead_ogonek 0x0d shift altgr
+at 0x10 altgr
+Greek_OMEGA 0x10 shift altgr
+lstroke 0x11 altgr
+Lstroke 0x11 shift altgr
+paragraph 0x13 altgr
+registered 0x13 shift altgr
+tslash 0x14 altgr
+Tslash 0x14 shift altgr
+leftarrow 0x15 altgr
+yen 0x15 shift altgr
+downarrow 0x16 altgr
+uparrow 0x16 shift altgr
+rightarrow 0x17 altgr
+idotless 0x17 shift altgr
+oslash 0x18 altgr
+Ooblique 0x18 shift altgr
+thorn 0x19 altgr
+THORN 0x19 shift altgr
+bracketleft 0x1a
+braceleft 0x1a shift
+dead_diaeresis 0x1a altgr
+dead_abovering 0x1a shift altgr
+bracketright 0x1b
+braceright 0x1b shift
+dead_tilde 0x1b altgr
+dead_macron 0x1b shift altgr
+ae 0x1e altgr
+AE 0x1e shift altgr
+ssharp 0x1f altgr
+section 0x1f shift altgr
+eth 0x20 altgr
+ETH 0x20 shift altgr
+dstroke 0x21 altgr
+ordfeminine 0x21 shift altgr
+eng 0x22 altgr
+ENG 0x22 shift altgr
+hstroke 0x23 altgr
+Hstroke 0x23 shift altgr
+kra 0x25 altgr
+lstroke 0x26 altgr
+Lstroke 0x26 shift altgr
+semicolon 0x27
+colon 0x27 shift
+dead_acute 0x27 altgr
+dead_doubleacute 0x27 shift altgr
+apostrophe 0x28
+at 0x28 shift
+dead_circumflex 0x28 altgr
+dead_caron 0x28 shift altgr
+grave 0x29
+notsign 0x29 shift
+bar 0x29 altgr
+numbersign 0x2b
+asciitilde 0x2b shift
+dead_grave 0x2b altgr
+dead_breve 0x2b shift altgr
+guillemotleft 0x2c altgr
+less 0x2c shift altgr
+guillemotright 0x2d altgr
+greater 0x2d shift altgr
+cent 0x2e altgr
+copyright 0x2e shift altgr
+leftdoublequotemark 0x2f altgr
+rightdoublequotemark 0x30 altgr
+mu 0x32 altgr
+masculine 0x32 shift altgr
+comma 0x33
+less 0x33 shift
+horizconnector 0x33 altgr
+multiply 0x33 shift altgr
+period 0x34
+greater 0x34 shift
+periodcentered 0x34 altgr
+division 0x34 shift altgr
+slash 0x35
+question 0x35 shift
+dead_belowdot 0x35 altgr
+dead_abovedot 0x35 shift altgr
+backslash 0x56
+bar 0x56 shift
diff --git a/install/share/qemu/keymaps/en-us b/install/share/qemu/keymaps/en-us
new file mode 100644
index 0000000..f5784bb
--- /dev/null
+++ b/install/share/qemu/keymaps/en-us
@@ -0,0 +1,35 @@
+# generated from XKB map us
+include common
+map 0x409
+exclam 0x02 shift
+at 0x03 shift
+numbersign 0x04 shift
+dollar 0x05 shift
+percent 0x06 shift
+asciicircum 0x07 shift
+ampersand 0x08 shift
+asterisk 0x09 shift
+parenleft 0x0a shift
+parenright 0x0b shift
+minus 0x0c
+underscore 0x0c shift
+equal 0x0d
+plus 0x0d shift
+bracketleft 0x1a
+braceleft 0x1a shift
+bracketright 0x1b
+braceright 0x1b shift
+semicolon 0x27
+colon 0x27 shift
+apostrophe 0x28
+quotedbl 0x28 shift
+grave 0x29
+asciitilde 0x29 shift
+backslash 0x2b
+bar 0x2b shift
+comma 0x33
+less 0x33 shift
+period 0x34
+greater 0x34 shift
+slash 0x35
+question 0x35 shift
diff --git a/install/share/qemu/keymaps/es b/install/share/qemu/keymaps/es
new file mode 100644
index 0000000..0c29eec
--- /dev/null
+++ b/install/share/qemu/keymaps/es
@@ -0,0 +1,105 @@
+# generated from XKB map es
+include common
+map 0x40a
+exclam 0x02 shift
+bar 0x02 altgr
+quotedbl 0x03 shift
+at 0x03 altgr
+oneeighth 0x03 shift altgr
+periodcentered 0x04 shift
+numbersign 0x04 altgr
+sterling 0x04 shift altgr
+dollar 0x05 shift
+asciitilde 0x05 altgr
+percent 0x06 shift
+onehalf 0x06 altgr
+threeeighths 0x06 shift altgr
+ampersand 0x07 shift
+notsign 0x07 altgr
+fiveeighths 0x07 shift altgr
+slash 0x08 shift
+seveneighths 0x08 shift altgr
+parenleft 0x09 shift
+trademark 0x09 shift altgr
+parenright 0x0a shift
+plusminus 0x0a shift altgr
+equal 0x0b shift
+degree 0x0b shift altgr
+apostrophe 0x0c
+question 0x0c shift
+exclamdown 0x0d
+questiondown 0x0d shift
+Greek_OMEGA 0x10 shift altgr
+lstroke 0x11 altgr
+Lstroke 0x11 shift altgr
+EuroSign 0x12 altgr
+paragraph 0x13 altgr
+registered 0x13 shift altgr
+tslash 0x14 altgr
+Tslash 0x14 shift altgr
+leftarrow 0x15 altgr
+yen 0x15 shift altgr
+downarrow 0x16 altgr
+uparrow 0x16 shift altgr
+rightarrow 0x17 altgr
+idotless 0x17 shift altgr
+oslash 0x18 altgr
+Ooblique 0x18 shift altgr
+thorn 0x19 altgr
+THORN 0x19 shift altgr
+dead_grave 0x1a
+dead_circumflex 0x1a shift
+bracketleft 0x1a altgr
+dead_abovering 0x1a shift altgr
+plus 0x1b
+asterisk 0x1b shift
+bracketright 0x1b altgr
+dead_macron 0x1b shift altgr
+ae 0x1e altgr
+AE 0x1e shift altgr
+ssharp 0x1f altgr
+section 0x1f shift altgr
+eth 0x20 altgr
+ETH 0x20 shift altgr
+dstroke 0x21 altgr
+eng 0x22 altgr
+ENG 0x22 shift altgr
+hstroke 0x23 altgr
+Hstroke 0x23 shift altgr
+kra 0x25 altgr
+lstroke 0x26 altgr
+Lstroke 0x26 shift altgr
+ntilde 0x27
+Ntilde 0x27 shift
+dead_doubleacute 0x27 shift altgr
+dead_acute 0x28
+dead_diaeresis 0x28 shift
+braceleft 0x28 altgr
+masculine 0x29
+ordfeminine 0x29 shift
+backslash 0x29 altgr
+ccedilla 0x2b
+Ccedilla 0x2b shift
+braceright 0x2b altgr
+dead_breve 0x2b shift altgr
+guillemotleft 0x2c altgr
+less 0x56
+greater 0x56 shift
+guillemotright 0x2d altgr
+cent 0x2e altgr
+copyright 0x2e shift altgr
+leftdoublequotemark 0x2f altgr
+grave 0x2f shift altgr
+rightdoublequotemark 0x30 altgr
+mu 0x32 altgr
+comma 0x33
+semicolon 0x33 shift
+horizconnector 0x33 altgr
+multiply 0x33 shift altgr
+period 0x34
+colon 0x34 shift
+division 0x34 shift altgr
+minus 0x35
+underscore 0x35 shift
+dead_belowdot 0x35 altgr
+dead_abovedot 0x35 shift altgr
diff --git a/install/share/qemu/keymaps/et b/install/share/qemu/keymaps/et
new file mode 100644
index 0000000..85541a3
--- /dev/null
+++ b/install/share/qemu/keymaps/et
@@ -0,0 +1,85 @@
+map 0x00000425
+include common
+
+#
+# Top row
+#
+dead_caron 0x29
+dead_tilde 0x29 shift
+
+# 1
+exclam 0x2 shift
+
+# 2
+quotedbl 0x3 shift
+at 0x3 altgr
+
+# 3
+numbersign 0x4 shift
+sterling 0x4 altgr
+# 4
+currency 0x5 shift
+dollar 0x5 altgr
+# 5
+percent 0x6 shift
+# 6
+ampersand 0x7 shift
+# 7
+slash 0x8 shift
+braceleft 0x8 altgr
+# 8
+parenleft 0x9 shift
+bracketleft 0x9 altgr
+# 9
+parenright 0xa shift
+bracketright 0xa altgr
+# 0
+equal 0xb shift
+braceright 0xb altgr
+
+plus 0xc
+question 0xc shift
+backslash 0xc altgr
+
+acute 0xd
+dead_acute 0xd
+grave 0xd shift
+dead_grave 0xd shift
+
+#
+# QWERTY first row
+#
+EuroSign 0x12 altgr
+udiaeresis 0x1a
+Udiaeresis 0x1a shift
+otilde 0x1b
+Otilde 0x1b shift
+section 0x1b altgr
+
+#
+# QWERTY second row
+#
+scaron 0x1f altgr
+Scaron 0x1f altgr shift
+odiaeresis 0x27
+Odiaeresis 0x27 shift
+adiaeresis 0x28
+Adiaeresis 0x28 shift
+asciicircum 0x28 altgr
+apostrophe 0x2b
+asterisk 0x2b shift
+onehalf 0x2b altgr
+#
+# QWERTY third row
+#
+less 0x56
+greater 0x56 shift
+bar 0x56 altgr
+zcaron 0x2c altgr
+Zcaron 0x2c altgr shift
+comma 0x33
+semicolon 0x33 shift
+period 0x34
+colon 0x34 shift
+minus 0x35
+underscore 0x35 shift
diff --git a/install/share/qemu/keymaps/fi b/install/share/qemu/keymaps/fi
new file mode 100644
index 0000000..4be7586
--- /dev/null
+++ b/install/share/qemu/keymaps/fi
@@ -0,0 +1,122 @@
+# generated from XKB map se_FI
+include common
+map 0x40b
+exclam 0x02 shift
+exclamdown 0x02 altgr
+onesuperior 0x02 shift altgr
+quotedbl 0x03 shift
+at 0x03 altgr
+twosuperior 0x03 shift altgr
+numbersign 0x04 shift
+sterling 0x04 altgr
+threesuperior 0x04 shift altgr
+currency 0x05 shift
+dollar 0x05 altgr
+onequarter 0x05 shift altgr
+percent 0x06 shift
+onehalf 0x06 altgr
+cent 0x06 shift altgr
+ampersand 0x07 shift
+yen 0x07 altgr
+fiveeighths 0x07 shift altgr
+slash 0x08 shift
+braceleft 0x08 altgr
+division 0x08 shift altgr
+parenleft 0x09 shift
+bracketleft 0x09 altgr
+guillemotleft 0x09 shift altgr
+parenright 0x0a shift
+bracketright 0x0a altgr
+guillemotright 0x0a shift altgr
+equal 0x0b shift
+braceright 0x0b altgr
+degree 0x0b shift altgr
+plus 0x0c
+question 0x0c shift
+backslash 0x0c altgr
+questiondown 0x0c shift altgr
+dead_acute 0x0d
+dead_grave 0x0d shift
+plusminus 0x0d altgr
+notsign 0x0d shift altgr
+at 0x10 altgr
+Greek_OMEGA 0x10 shift altgr
+lstroke 0x11 altgr
+Lstroke 0x11 shift altgr
+EuroSign 0x12 altgr
+cent 0x12 shift altgr
+registered 0x13 altgr
+thorn 0x14 altgr
+THORN 0x14 shift altgr
+leftarrow 0x15 altgr
+yen 0x15 shift altgr
+downarrow 0x16 altgr
+uparrow 0x16 shift altgr
+rightarrow 0x17 altgr
+idotless 0x17 shift altgr
+oe 0x18 altgr
+OE 0x18 shift altgr
+thorn 0x19 altgr
+THORN 0x19 shift altgr
+aring 0x1a
+Aring 0x1a shift
+dead_diaeresis 0x1a altgr
+dead_abovering 0x1a shift altgr
+dead_diaeresis 0x1b
+dead_circumflex 0x1b shift
+dead_tilde 0x1b altgr
+dead_caron 0x1b shift altgr
+ordfeminine 0x1e altgr
+masculine 0x1e shift altgr
+ssharp 0x1f altgr
+section 0x1f shift altgr
+eth 0x20 altgr
+ETH 0x20 shift altgr
+dstroke 0x21 altgr
+ordfeminine 0x21 shift altgr
+eng 0x22 altgr
+ENG 0x22 shift altgr
+hstroke 0x23 altgr
+Hstroke 0x23 shift altgr
+kra 0x25 altgr
+ampersand 0x25 shift altgr
+lstroke 0x26 altgr
+Lstroke 0x26 shift altgr
+odiaeresis 0x27
+Odiaeresis 0x27 shift
+oslash 0x27 altgr
+Ooblique 0x27 shift altgr
+adiaeresis 0x28
+Adiaeresis 0x28 shift
+ae 0x28 altgr
+AE 0x28 shift altgr
+section 0x29
+onehalf 0x29 shift
+paragraph 0x29 altgr
+threequarters 0x29 shift altgr
+apostrophe 0x2b
+asterisk 0x2b shift
+acute 0x2b altgr
+multiply 0x2b shift altgr
+guillemotleft 0x2c altgr
+guillemotright 0x2d altgr
+copyright 0x2e altgr
+leftdoublequotemark 0x2f altgr
+grave 0x2f shift altgr
+rightdoublequotemark 0x30 altgr
+apostrophe 0x30 shift altgr
+mu 0x32 altgr
+masculine 0x32 shift altgr
+comma 0x33
+semicolon 0x33 shift
+dead_cedilla 0x33 altgr
+dead_ogonek 0x33 shift altgr
+period 0x34
+colon 0x34 shift
+periodcentered 0x34 altgr
+dead_abovedot 0x34 shift altgr
+minus 0x35
+underscore 0x35 shift
+hyphen 0x35 altgr
+macron 0x35 shift altgr
+nobreakspace 0x39 altgr
diff --git a/install/share/qemu/keymaps/fo b/install/share/qemu/keymaps/fo
new file mode 100644
index 0000000..c00d9d4
--- /dev/null
+++ b/install/share/qemu/keymaps/fo
@@ -0,0 +1,76 @@
+map 0x438
+include common
+
+#
+# Top row
+#
+onehalf 0x29
+section 0x29 shift
+
+# 1
+exclam 0x2 shift
+
+# 2
+quotedbl 0x3 shift
+at 0x3 altgr
+
+# 3
+numbersign 0x4 shift
+sterling 0x4 altgr
+# 4
+currency 0x5 shift
+dollar 0x5 altgr
+# 5
+percent 0x6 shift
+# 6
+ampersand 0x7 shift
+# 7
+slash 0x8 shift
+braceleft 0x8 altgr
+# 8
+parenleft 0x9 shift
+bracketleft 0x9 altgr
+# 9
+parenright 0xa shift
+bracketright 0xa altgr
+# 0
+equal 0xb shift
+braceright 0xb altgr
+
+plus 0xc
+question 0xc shift
+plusminus 0xc altgr
+
+bar 0xd altgr
+dead_acute 0xd
+
+#
+# QWERTY first row
+#
+EuroSign 0x12 altgr
+aring 0x1a
+Aring 0x1a shift
+eth 0x1b addupper
+asciitilde 0x1b altgr
+
+#
+# QWERTY second row
+#
+ae 0x27 addupper
+oslash 0x28
+Ooblique 0x28 shift
+apostrophe 0x2b
+asterisk 0x2b shift
+
+#
+# QWERTY third row
+#
+less 0x56
+greater 0x56 shift
+backslash 0x56 altgr
+comma 0x33
+semicolon 0x33 shift
+period 0x34
+colon 0x34 shift
+minus 0x35
+underscore 0x35 shift
diff --git a/install/share/qemu/keymaps/fr b/install/share/qemu/keymaps/fr
new file mode 100644
index 0000000..ba5a176
--- /dev/null
+++ b/install/share/qemu/keymaps/fr
@@ -0,0 +1,181 @@
+include common
+map 0x40c
+#
+# Top row
+#
+twosuperior 0x29
+notsign 0x29 altgr
+
+ampersand 0x02
+1 0x02 shift
+onesuperior 0x02 altgr
+exclamdown 0x02 shift altgr
+
+eacute 0x03
+2 0x03 shift
+asciitilde 0x03 altgr
+oneeighth 0x03 shift altgr
+
+quotedbl 0x04
+3 0x04 shift
+numbersign 0x04 altgr
+
+apostrophe 0x05
+4 0x05 shift
+braceleft 0x05 altgr
+
+parenleft 0x06
+5 0x06 shift
+bracketleft 0x06 altgr
+threeeighths 0x06 shift altgr
+
+minus 0x07
+6 0x07 shift
+bar 0x07 altgr
+fiveeighths 0x07 shift altgr
+
+egrave 0x08
+7 0x08 shift
+grave 0x08 altgr
+seveneighths 0x08 shift altgr
+
+underscore 0x09
+8 0x09 shift
+backslash 0x09 altgr
+trademark 0x09 shift altgr
+
+ccedilla 0x0a
+9 0x0a shift
+asciicircum 0x0a altgr
+plusminus 0x0a shift altgr
+
+agrave 0x0b
+0 0x0b shift
+at 0x0b altgr
+
+parenright 0x0c
+degree 0x0c shift
+bracketright 0x0c altgr
+questiondown 0x0c shift altgr
+
+equal 0x0d
+plus 0x0d shift
+braceright 0x0d altgr
+dead_ogonek 0x0d shift altgr
+
+#
+# AZERTY first row
+#
+
+a 0x10 addupper
+ae 0x10 altgr
+AE 0x10 shift altgr
+
+z 0x11 addupper
+guillemotleft 0x11 altgr
+
+EuroSign 0x12 altgr
+
+paragraph 0x13 altgr
+registered 0x13 shift altgr
+
+tslash 0x14 altgr
+Tslash 0x14 shift altgr
+
+leftarrow 0x15 altgr
+yen 0x15 shift altgr
+
+downarrow 0x16 altgr
+uparrow 0x16 shift altgr
+
+rightarrow 0x17 altgr
+idotless 0x17 shift altgr
+
+oslash 0x18 altgr
+Ooblique 0x18 shift altgr
+
+thorn 0x19 altgr
+THORN 0x19 shift altgr
+
+dead_circumflex 0x1a
+dead_diaeresis 0x1a shift
+dead_abovering 0x1a shift altgr
+
+dollar 0x1b
+sterling 0x1b shift
+currency 0x1b altgr
+dead_macron 0x1b shift altgr
+
+#
+# AZERTY second row
+#
+q 0x1e addupper
+Greek_OMEGA 0x1e shift altgr
+
+ssharp 0x1f altgr
+
+eth 0x20 altgr
+ETH 0x20 shift altgr
+
+dstroke 0x21 altgr
+ordfeminine 0x21 shift altgr
+
+eng 0x22 altgr
+ENG 0x22 shift altgr
+
+hstroke 0x23 altgr
+Hstroke 0x23 shift altgr
+
+kra 0x25 altgr
+
+lstroke 0x26 altgr
+Lstroke 0x26 shift altgr
+
+m 0x27 addupper
+masculine 0x27 shift altgr
+
+ugrave 0x28
+percent 0x28 shift
+dead_caron 0x28 shift altgr
+
+asterisk 0x2b
+mu 0x2b shift
+dead_grave 0x2b altgr
+dead_breve 0x2b shift altgr
+
+#
+# AZERTY third row
+#
+less 0x56
+greater 0x56 shift
+
+w 0x2c addupper
+
+guillemotright 0x2d altgr
+
+cent 0x2e altgr
+copyright 0x2e shift altgr
+
+leftdoublequotemark 0x2f altgr
+
+rightdoublequotemark 0x30 altgr
+
+comma 0x32
+question 0x32 shift
+dead_acute 0x32 altgr
+dead_doubleacute 0x32 shift altgr
+
+semicolon 0x33
+period 0x33 shift
+horizconnector 0x33 altgr
+multiply 0x33 shift altgr
+
+colon 0x34
+slash 0x34 shift
+periodcentered 0x34 altgr
+division 0x34 shift altgr
+
+exclam 0x35
+section 0x35 shift
+dead_belowdot 0x35 altgr
+dead_abovedot 0x35 shift altgr
diff --git a/install/share/qemu/keymaps/fr-be b/install/share/qemu/keymaps/fr-be
new file mode 100644
index 0000000..62f7128
--- /dev/null
+++ b/install/share/qemu/keymaps/fr-be
@@ -0,0 +1,134 @@
+# generated from XKB map be
+include common
+map 0x80c
+ampersand 0x02
+1 0x02 shift
+bar 0x02 altgr
+exclamdown 0x02 shift altgr
+eacute 0x03
+2 0x03 shift
+at 0x03 altgr
+oneeighth 0x03 shift altgr
+quotedbl 0x04
+3 0x04 shift
+numbersign 0x04 altgr
+sterling 0x04 shift altgr
+apostrophe 0x05
+4 0x05 shift
+onequarter 0x05 altgr
+dollar 0x05 shift altgr
+parenleft 0x06
+5 0x06 shift
+onehalf 0x06 altgr
+threeeighths 0x06 shift altgr
+section 0x07
+6 0x07 shift
+asciicircum 0x07 altgr
+fiveeighths 0x07 shift altgr
+egrave 0x08
+7 0x08 shift
+braceleft 0x08 altgr
+seveneighths 0x08 shift altgr
+exclam 0x09
+8 0x09 shift
+bracketleft 0x09 altgr
+trademark 0x09 shift altgr
+ccedilla 0x0a
+9 0x0a shift
+braceleft 0x0a altgr
+plusminus 0x0a shift altgr
+agrave 0x0b
+0 0x0b shift
+braceright 0x0b altgr
+degree 0x0b shift altgr
+parenright 0x0c
+degree 0x0c shift
+backslash 0x0c altgr
+questiondown 0x0c shift altgr
+minus 0x0d
+underscore 0x0d shift
+dead_cedilla 0x0d altgr
+dead_ogonek 0x0d shift altgr
+a 0x10 addupper
+Greek_OMEGA 0x10 shift altgr
+z 0x11 addupper
+lstroke 0x11 altgr
+Lstroke 0x11 shift altgr
+EuroSign 0x12 altgr
+cent 0x12 shift altgr
+paragraph 0x13 altgr
+registered 0x13 shift altgr
+tslash 0x14 altgr
+Tslash 0x14 shift altgr
+leftarrow 0x15 altgr
+yen 0x15 shift altgr
+downarrow 0x16 altgr
+uparrow 0x16 shift altgr
+rightarrow 0x17 altgr
+idotless 0x17 shift altgr
+oslash 0x18 altgr
+Ooblique 0x18 shift altgr
+thorn 0x19 altgr
+THORN 0x19 shift altgr
+dead_circumflex 0x1a
+dead_diaeresis 0x1a shift
+bracketleft 0x1a altgr
+dead_abovering 0x1a shift altgr
+dollar 0x1b
+asterisk 0x1b shift
+bracketright 0x1b altgr
+dead_macron 0x1b shift altgr
+q 0x1e addupper
+ae 0x1e altgr
+AE 0x1e shift altgr
+ssharp 0x1f altgr
+eth 0x20 altgr
+ETH 0x20 shift altgr
+dstroke 0x21 altgr
+ordfeminine 0x21 shift altgr
+eng 0x22 altgr
+ENG 0x22 shift altgr
+hstroke 0x23 altgr
+Hstroke 0x23 shift altgr
+kra 0x25 altgr
+lstroke 0x26 altgr
+Lstroke 0x26 shift altgr
+m 0x27 addupper
+dead_acute 0x27 altgr
+dead_doubleacute 0x27 shift altgr
+ugrave 0x28
+percent 0x28 shift
+dead_acute 0x28 altgr
+dead_caron 0x28 shift altgr
+twosuperior 0x29
+threesuperior 0x29 shift
+notsign 0x29 altgr
+mu 0x2b
+sterling 0x2b shift
+dead_grave 0x2b altgr
+dead_breve 0x2b shift altgr
+w 0x2c addupper
+guillemotleft 0x2c altgr
+guillemotright 0x2d altgr
+cent 0x2e altgr
+copyright 0x2e shift altgr
+leftdoublequotemark 0x2f altgr
+grave 0x2f shift altgr
+rightdoublequotemark 0x30 altgr
+comma 0x32
+question 0x32 shift
+dead_cedilla 0x32 altgr
+masculine 0x32 shift altgr
+semicolon 0x33
+period 0x33 shift
+horizconnector 0x33 altgr
+multiply 0x33 shift altgr
+colon 0x34
+slash 0x34 shift
+periodcentered 0x34 altgr
+division 0x34 shift altgr
+equal 0x35
+plus 0x35 shift
+dead_tilde 0x35 altgr
+dead_abovedot 0x35 shift altgr
+backslash 0x56 altgr
diff --git a/install/share/qemu/keymaps/fr-ca b/install/share/qemu/keymaps/fr-ca
new file mode 100644
index 0000000..b645208
--- /dev/null
+++ b/install/share/qemu/keymaps/fr-ca
@@ -0,0 +1,50 @@
+# Canadian French
+# By Simon Germain
+include common
+map 0xc0c
+
+backslash 0x29 altgr
+plusminus 0x2 altgr
+at 0x3 altgr
+sterling 0x4 altgr
+cent 0x5 altgr
+currency 0x6 altgr
+notsign 0x7 altgr
+bar 0x29 shift
+twosuperior 0x9 altgr
+threesuperior 0xa altgr
+onequarter 0xb altgr
+onehalf 0xc altgr
+threequarters 0xd altgr
+section 0x18 altgr
+paragraph 0x19 altgr
+bracketleft 0x1a altgr
+bracketright 0x1b altgr
+asciitilde 0x27 altgr
+braceleft 0x28 altgr
+braceright 0x2b altgr
+less 0x2b
+greater 0x2b shift
+guillemotleft 0x56
+guillemotright 0x56 shift
+degree 0x56 altgr
+mu 0x32 altgr
+eacute 0x35
+dead_acute 0x35 altgr
+dead_grave 0x28
+dead_circumflex 0x1a
+dead_circumflex 0x1a shift
+dead_cedilla 0x1b
+dead_diaeresis 0x1b shift
+exclam 0x2 shift
+quotedbl 0x3 shift
+slash 0x4 shift
+dollar 0x5 shift
+percent 0x6 shift
+question 0x7 shift
+ampersand 0x8 shift
+asterisk 0x9 shift
+parenleft 0xa shift
+parenright 0xb shift
+underscore 0xc shift
+plus 0xd shift
diff --git a/install/share/qemu/keymaps/fr-ch b/install/share/qemu/keymaps/fr-ch
new file mode 100644
index 0000000..4620d20
--- /dev/null
+++ b/install/share/qemu/keymaps/fr-ch
@@ -0,0 +1,114 @@
+# generated from XKB map fr_CH
+include common
+map 0x100c
+exclam 0x02 shift
+onesuperior 0x02 altgr
+exclamdown 0x02 shift altgr
+quotedbl 0x03 shift
+twosuperior 0x03 altgr
+oneeighth 0x03 shift altgr
+section 0x04 shift
+threesuperior 0x04 altgr
+sterling 0x04 shift altgr
+dollar 0x05 shift
+onequarter 0x05 altgr
+currency 0x05 shift altgr
+percent 0x06 shift
+onehalf 0x06 altgr
+threeeighths 0x06 shift altgr
+ampersand 0x07 shift
+threequarters 0x07 altgr
+fiveeighths 0x07 shift altgr
+slash 0x08 shift
+braceleft 0x08 altgr
+seveneighths 0x08 shift altgr
+parenleft 0x09 shift
+bracketleft 0x09 altgr
+trademark 0x09 shift altgr
+parenright 0x0a shift
+bracketright 0x0a altgr
+plusminus 0x0a shift altgr
+equal 0x0b shift
+braceright 0x0b altgr
+ssharp 0x0c
+question 0x0c shift
+backslash 0x0c altgr
+questiondown 0x0c shift altgr
+acute 0x0d
+dead_acute 0x0d
+grave 0x0d shift
+dead_grave 0x0d shift
+dead_cedilla 0x0d altgr
+dead_ogonek 0x0d shift altgr
+at 0x10 altgr
+Greek_OMEGA 0x10 shift altgr
+EuroSign 0x12 altgr
+paragraph 0x13 altgr
+registered 0x13 shift altgr
+tslash 0x14 altgr
+Tslash 0x14 shift altgr
+z 0x15 addupper
+leftarrow 0x15 altgr
+yen 0x15 shift altgr
+downarrow 0x16 altgr
+uparrow 0x16 shift altgr
+rightarrow 0x17 altgr
+idotless 0x17 shift altgr
+oslash 0x18 altgr
+Ooblique 0x18 shift altgr
+thorn 0x19 altgr
+THORN 0x19 shift altgr
+udiaeresis 0x1a
+Udiaeresis 0x1a shift
+dead_diaeresis 0x1a altgr
+dead_abovering 0x1a shift altgr
+plus 0x1b
+asterisk 0x1b shift
+asciitilde 0x1b altgr
+dead_tilde 0x1b altgr
+dead_macron 0x1b shift altgr
+ae 0x1e altgr
+AE 0x1e shift altgr
+eth 0x20 altgr
+ETH 0x20 shift altgr
+dstroke 0x21 altgr
+ordfeminine 0x21 shift altgr
+eng 0x22 altgr
+ENG 0x22 shift altgr
+hstroke 0x23 altgr
+Hstroke 0x23 shift altgr
+kra 0x25 altgr
+odiaeresis 0x27
+Odiaeresis 0x27 shift
+dead_doubleacute 0x27 altgr
+adiaeresis 0x28
+Adiaeresis 0x28 shift
+dead_caron 0x28 shift altgr
+asciicircum 0x29
+dead_circumflex 0x29
+degree 0x29 shift
+notsign 0x29 altgr
+numbersign 0x2b
+apostrophe 0x2b shift
+dead_breve 0x2b shift altgr
+y 0x2c addupper
+guillemotleft 0x2c altgr
+guillemotright 0x2d altgr
+cent 0x2e altgr
+copyright 0x2e shift altgr
+leftdoublequotemark 0x2f altgr
+rightdoublequotemark 0x30 altgr
+mu 0x32 altgr
+masculine 0x32 shift altgr
+comma 0x33
+semicolon 0x33 shift
+horizconnector 0x33 altgr
+multiply 0x33 shift altgr
+period 0x34
+colon 0x34 shift
+periodcentered 0x34 altgr
+division 0x34 shift altgr
+minus 0x35
+underscore 0x35 shift
+dead_belowdot 0x35 altgr
+dead_abovedot 0x35 shift altgr
diff --git a/install/share/qemu/keymaps/hr b/install/share/qemu/keymaps/hr
new file mode 100644
index 0000000..613aa69
--- /dev/null
+++ b/install/share/qemu/keymaps/hr
@@ -0,0 +1,125 @@
+# generated from XKB map hr
+include common
+map 0x41a
+exclam 0x02 shift
+asciitilde 0x02 altgr
+dead_tilde 0x02 shift altgr
+quotedbl 0x03 shift
+dead_caron 0x03 altgr
+caron 0x03 shift altgr
+numbersign 0x04 shift
+asciicircum 0x04 altgr
+dead_circumflex 0x04 shift altgr
+dollar 0x05 shift
+dead_breve 0x05 altgr
+breve 0x05 shift altgr
+percent 0x06 shift
+degree 0x06 altgr
+dead_abovering 0x06 shift altgr
+ampersand 0x07 shift
+dead_ogonek 0x07 altgr
+ogonek 0x07 shift altgr
+slash 0x08 shift
+grave 0x08 altgr
+dead_grave 0x08 shift altgr
+parenleft 0x09 shift
+dead_abovedot 0x09 altgr
+abovedot 0x09 shift altgr
+parenright 0x0a shift
+dead_acute 0x0a altgr
+apostrophe 0x0a shift altgr
+equal 0x0b shift
+dead_doubleacute 0x0b altgr
+doubleacute 0x0b shift altgr
+apostrophe 0x0c
+question 0x0c shift
+dead_diaeresis 0x0c altgr
+diaeresis 0x0c shift altgr
+plus 0x0d
+asterisk 0x0d shift
+dead_cedilla 0x0d altgr
+cedilla 0x0d shift altgr
+backslash 0x10 altgr
+Greek_OMEGA 0x10 shift altgr
+bar 0x11 altgr
+Lstroke 0x11 shift altgr
+EuroSign 0x12 altgr
+paragraph 0x13 altgr
+registered 0x13 shift altgr
+tslash 0x14 altgr
+Tslash 0x14 shift altgr
+z 0x15 addupper
+leftarrow 0x15 altgr
+yen 0x15 shift altgr
+downarrow 0x16 altgr
+uparrow 0x16 shift altgr
+rightarrow 0x17 altgr
+idotless 0x17 shift altgr
+oslash 0x18 altgr
+Ooblique 0x18 shift altgr
+thorn 0x19 altgr
+THORN 0x19 shift altgr
+scaron 0x1a
+Scaron 0x1a shift
+division 0x1a altgr
+dead_abovering 0x1a shift altgr
+dstroke 0x1b
+Dstroke 0x1b shift
+multiply 0x1b altgr
+dead_macron 0x1b shift altgr
+ae 0x1e altgr
+AE 0x1e shift altgr
+ssharp 0x1f altgr
+section 0x1f shift altgr
+eth 0x20 altgr
+ETH 0x20 shift altgr
+bracketleft 0x21 altgr
+ordfeminine 0x21 shift altgr
+bracketright 0x22 altgr
+ENG 0x22 shift altgr
+hstroke 0x23 altgr
+Hstroke 0x23 shift altgr
+lstroke 0x25 altgr
+ampersand 0x25 shift altgr
+Lstroke 0x26 altgr
+ccaron 0x27
+Ccaron 0x27 shift
+dead_acute 0x27 altgr
+dead_doubleacute 0x27 shift altgr
+cacute 0x28
+Cacute 0x28 shift
+ssharp 0x28 altgr
+dead_caron 0x28 shift altgr
+dead_cedilla 0x29
+dead_diaeresis 0x29 shift
+notsign 0x29 altgr
+zcaron 0x2b
+Zcaron 0x2b shift
+currency 0x2b altgr
+dead_breve 0x2b shift altgr
+y 0x2c addupper
+guillemotleft 0x2c altgr
+less 0x2c shift altgr
+guillemotright 0x2d altgr
+greater 0x2d shift altgr
+cent 0x2e altgr
+copyright 0x2e shift altgr
+at 0x2f altgr
+grave 0x2f shift altgr
+braceleft 0x30 altgr
+apostrophe 0x30 shift altgr
+braceright 0x31 altgr
+section 0x32 altgr
+masculine 0x32 shift altgr
+comma 0x33
+semicolon 0x33 shift
+horizconnector 0x33 altgr
+multiply 0x33 shift altgr
+period 0x34
+colon 0x34 shift
+periodcentered 0x34 altgr
+division 0x34 shift altgr
+minus 0x35
+underscore 0x35 shift
+dead_belowdot 0x35 altgr
+dead_abovedot 0x35 shift altgr
diff --git a/install/share/qemu/keymaps/hu b/install/share/qemu/keymaps/hu
new file mode 100644
index 0000000..8aba444
--- /dev/null
+++ b/install/share/qemu/keymaps/hu
@@ -0,0 +1,115 @@
+# Hungarian keyboard layout (QWERTZ)
+# Created by: The NeverGone <never@delfin.klte.hu>
+
+include common
+map 0x40e
+
+
+# AltGr keys:
+notsign 0x29 altgr
+asciitilde 0x02 altgr
+caron 0x03 altgr
+asciicircum 0x04 altgr
+breve 0x05 altgr
+degree 0x06 altgr
+ogonek 0x07 altgr
+grave 0x08 altgr
+abovedot 0x09 altgr
+acute 0x0a altgr
+doubleacute 0x0b altgr
+diaeresis 0x0c altgr
+cedilla 0x0d altgr
+backslash 0x10 altgr
+bar 0x11 altgr
+EuroSign 0x12 altgr
+Iacute 0x17 altgr
+division 0x1a altgr
+multiply 0x1b altgr
+dstroke 0x1f altgr
+Dstroke 0x20 altgr
+bracketleft 0x21 altgr
+bracketright 0x22 altgr
+iacute 0x24 altgr
+lstroke 0x25 altgr
+Lstroke 0x26 altgr
+dollar 0x27 altgr
+ssharp 0x28 altgr
+currency 0x2b altgr
+less 0x56 altgr
+greater 0x2c altgr
+numbersign 0x2d altgr
+ampersand 0x2e altgr
+at 0x2f altgr
+braceleft 0x30 altgr
+braceright 0x31 altgr
+semicolon 0x33 altgr
+asterisk 0x35 altgr
+
+
+# Shift keys:
+section 0x29 shift
+apostrophe 0x02 shift
+quotedbl 0x03 shift
+plus 0x04 shift
+exclam 0x05 shift
+percent 0x06 shift
+slash 0x07 shift
+equal 0x08 shift
+parenleft 0x09 shift
+parenright 0x0a shift
+Odiaeresis 0x0b shift
+Udiaeresis 0x0c shift
+Oacute 0x0d shift
+Z 0x15 shift
+Odoubleacute 0x1a shift
+Uacute 0x1b shift
+Eacute 0x27 shift
+Aacute 0x28 shift
+Udoubleacute 0x2b shift
+Y 0x2c shift
+question 0x33 shift
+colon 0x34 shift
+underscore 0x35 shift
+F13 0x3b shift
+F14 0x3c shift
+F15 0x3d shift
+F16 0x3e shift
+F17 0x3f shift
+F18 0x40 shift
+F19 0x41 shift
+F20 0x42 shift
+F21 0x43 shift
+F22 0x44 shift
+F23 0x57 shift
+F24 0x58 shift
+
+
+# Ctrl keys:
+F25 0x3b ctrl
+F26 0x3c ctrl
+F27 0x3d ctrl
+F28 0x3e ctrl
+F29 0x3f ctrl
+F30 0x40 ctrl
+F31 0x41 ctrl
+F32 0x42 ctrl
+F33 0x43 ctrl
+F34 0x44 ctrl
+F35 0x57 ctrl
+#NoSymbol 0x58 ctrl
+
+
+0 0x29
+odiaeresis 0x0b
+udiaeresis 0x0c
+oacute 0x0d
+z 0x15
+odoubleacute 0x1a
+uacute 0x1b
+eacute 0x27
+aacute 0x28
+udoubleacute 0x2b
+y 0x2c
+comma 0x33
+period 0x34
+minus 0x35
diff --git a/install/share/qemu/keymaps/is b/install/share/qemu/keymaps/is
new file mode 100644
index 0000000..935ac1d
--- /dev/null
+++ b/install/share/qemu/keymaps/is
@@ -0,0 +1,139 @@
+# 2004-03-16 Halldór Guðmundsson and Morten Lange
+# Keyboard definition file for the Icelandic keyboard
+# to be used in rdesktop 1.3.x ( See rdesktop.org)
+# generated from XKB map de, and changed manually
+# Location for example /usr/local/share/rdesktop/keymaps/is
+include common
+map 0x40f
+exclam 0x02 shift
+onesuperior 0x02 altgr
+exclamdown 0x02 shift altgr
+quotedbl 0x03 shift
+twosuperior 0x03 altgr
+oneeighth 0x03 shift altgr
+#section 0x04 shift
+numbersign 0x04 shift
+threesuperior 0x04 altgr
+sterling 0x04 shift altgr
+dollar 0x05 shift
+onequarter 0x05 altgr
+currency 0x05 shift altgr
+percent 0x06 shift
+onehalf 0x06 altgr
+threeeighths 0x06 shift altgr
+ampersand 0x07 shift
+threequarters 0x07 altgr
+fiveeighths 0x07 shift altgr
+slash 0x08 shift
+braceleft 0x08 altgr
+seveneighths 0x08 shift altgr
+parenleft 0x09 shift
+bracketleft 0x09 altgr
+trademark 0x09 shift altgr
+parenright 0x0a shift
+bracketright 0x0a altgr
+plusminus 0x0a shift altgr
+equal 0x0b shift
+braceright 0x0b altgr
+#ssharp 0x0c
+odiaeresis 0x0c
+#question 0x0c shift
+Odiaeresis 0x0c shift
+backslash 0x0c altgr
+questiondown 0x0c shift altgr
+#acute 0x0d
+minus  0x0d
+#dead_acute 0x0d
+#grave 0x0d shift
+#dead_grave 0x0d shift
+underscore 0x0d shift
+dead_cedilla 0x0d altgr
+dead_ogonek 0x0d shift altgr
+at 0x10 altgr
+Greek_OMEGA 0x10 shift altgr
+EuroSign 0x12 altgr
+paragraph 0x13 altgr
+registered 0x13 shift altgr
+tslash 0x14 altgr
+Tslash 0x14 shift altgr
+#z 0x15 addupper
+leftarrow 0x15 altgr
+yen 0x15 shift altgr
+downarrow 0x16 altgr
+uparrow 0x16 shift altgr
+rightarrow 0x17 altgr
+idotless 0x17 shift altgr
+oslash 0x18 altgr
+Ooblique 0x18 shift altgr
+#thorn 0x19 altgr
+#THORN 0x19 shift altgr
+#udiaeresis 0x1a
+#Udiaeresis 0x1a shift
+#dead_diaeresis 0x1a altgr
+#dead_abovering 0x1a shift altgr
+eth 0x1a
+ETH 0x1a shift
+apostrophe 0x1b
+question 0x1b shift
+#plus 0x1b
+#asterisk 0x1b shift
+asciitilde 0x1b altgr
+#grave 0x1b altgr
+#dead_tilde 0x1b altgr
+#dead_macron 0x1b shift altgr
+#ae 0x1e altgr
+#AE 0x1e shift altgr
+#eth 0x20 altgr
+#eth 0x20
+#ETH 0x20 shift altgr
+#ETH 0x20 shift
+dstroke 0x21 altgr
+ordfeminine 0x21 shift altgr
+eng 0x22 altgr
+ENG 0x22 shift altgr
+hstroke 0x23 altgr
+Hstroke 0x23 shift altgr
+kra 0x25 altgr
+#adiaeresis 0x27
+#Adiaeresis 0x27 shift
+ae 0x27
+AE 0x27 shift
+dead_doubleacute 0x27 altgr
+#adiaeresis 0x28
+#Adiaeresis 0x28 shift
+#dead_caron 0x28 shift altgr
+#asciicircum 0x29
+acute  0x28
+dead_acute 0x28
+#dead_circumflex 0x29
+#degree 0x29 shift
+#notsign 0x29 altgr
+plus 0x2b
+asterisk 0x2b shift
+grave 0x2b altgr
+#numbersign 0x2b
+#apostrophe 0x2b shift
+#dead_breve 0x2b shift altgr
+#y 0x2c addupper
+guillemotleft 0x2c altgr
+guillemotright 0x2d altgr
+cent 0x2e altgr
+copyright 0x2e shift altgr
+leftdoublequotemark 0x2f altgr
+rightdoublequotemark 0x30 altgr
+mu 0x32 altgr
+masculine 0x32 shift altgr
+comma 0x33
+semicolon 0x33 shift
+horizconnector 0x33 altgr
+multiply 0x33 shift altgr
+period 0x34
+colon 0x34 shift
+periodcentered 0x34 altgr
+division 0x34 shift altgr
+#minus 0x35
+#underscore 0x35 shift
+thorn 0x35
+THORN 0x35 shift
+dead_belowdot 0x35 altgr
+dead_abovedot 0x35 shift altgr
diff --git a/install/share/qemu/keymaps/it b/install/share/qemu/keymaps/it
new file mode 100644
index 0000000..00ca73a
--- /dev/null
+++ b/install/share/qemu/keymaps/it
@@ -0,0 +1,115 @@
+# generated from XKB map it
+include common
+map 0x410
+exclam 0x02 shift
+onesuperior 0x02 altgr
+exclamdown 0x02 shift altgr
+quotedbl 0x03 shift
+twosuperior 0x03 altgr
+oneeighth 0x03 shift altgr
+sterling 0x04 shift
+threesuperior 0x04 altgr
+dollar 0x05 shift
+onequarter 0x05 altgr
+percent 0x06 shift
+onehalf 0x06 altgr
+threeeighths 0x06 shift altgr
+ampersand 0x07 shift
+threequarters 0x07 altgr
+fiveeighths 0x07 shift altgr
+slash 0x08 shift
+braceleft 0x08 altgr
+seveneighths 0x08 shift altgr
+parenleft 0x09 shift
+trademark 0x09 shift altgr
+parenright 0x0a shift
+plusminus 0x0a shift altgr
+equal 0x0b shift
+braceright 0x0b altgr
+degree 0x0b shift altgr
+apostrophe 0x0c
+question 0x0c shift
+grave 0x0c altgr
+questiondown 0x0c shift altgr
+igrave 0x0d
+asciicircum 0x0d shift
+asciitilde 0x0d altgr
+dead_ogonek 0x0d shift altgr
+at 0x10 altgr
+Greek_OMEGA 0x10 shift altgr
+lstroke 0x11 altgr
+Lstroke 0x11 shift altgr
+EuroSign 0x12 altgr
+cent 0x12 shift altgr
+paragraph 0x13 altgr
+registered 0x13 shift altgr
+tslash 0x14 altgr
+Tslash 0x14 shift altgr
+leftarrow 0x15 altgr
+yen 0x15 shift altgr
+downarrow 0x16 altgr
+uparrow 0x16 shift altgr
+rightarrow 0x17 altgr
+idotless 0x17 shift altgr
+oslash 0x18 altgr
+Ooblique 0x18 shift altgr
+thorn 0x19 altgr
+THORN 0x19 shift altgr
+egrave 0x1a
+eacute 0x1a shift
+bracketleft 0x1a altgr
+dead_abovering 0x1a shift altgr
+plus 0x1b
+asterisk 0x1b shift
+bracketright 0x1b altgr
+dead_macron 0x1b shift altgr
+ae 0x1e altgr
+AE 0x1e shift altgr
+ssharp 0x1f altgr
+section 0x1f shift altgr
+eth 0x20 altgr
+ETH 0x20 shift altgr
+dstroke 0x21 altgr
+ordfeminine 0x21 shift altgr
+eng 0x22 altgr
+ENG 0x22 shift altgr
+hstroke 0x23 altgr
+Hstroke 0x23 shift altgr
+kra 0x25 altgr
+lstroke 0x26 altgr
+Lstroke 0x26 shift altgr
+ograve 0x27
+ccedilla 0x27 shift
+at 0x27 altgr
+dead_doubleacute 0x27 shift altgr
+agrave 0x28
+degree 0x28 shift
+numbersign 0x28 altgr
+backslash 0x29
+bar 0x29 shift
+notsign 0x29 altgr
+ugrave 0x2b
+section 0x2b shift
+dead_grave 0x2b altgr
+dead_breve 0x2b shift altgr
+guillemotleft 0x2c altgr
+guillemotright 0x2d altgr
+cent 0x2e altgr
+copyright 0x2e shift altgr
+leftdoublequotemark 0x2f altgr
+grave 0x2f shift altgr
+rightdoublequotemark 0x30 altgr
+mu 0x32 altgr
+masculine 0x32 shift altgr
+comma 0x33
+semicolon 0x33 shift
+horizconnector 0x33 altgr
+multiply 0x33 shift altgr
+period 0x34
+colon 0x34 shift
+periodcentered 0x34 altgr
+division 0x34 shift altgr
+minus 0x35
+underscore 0x35 shift
+dead_belowdot 0x35 altgr
+dead_abovedot 0x35 shift altgr
diff --git a/install/share/qemu/keymaps/ja b/install/share/qemu/keymaps/ja
new file mode 100644
index 0000000..9d90a78
--- /dev/null
+++ b/install/share/qemu/keymaps/ja
@@ -0,0 +1,109 @@
+# generated from XKB map jp106
+include common
+map 0x411
+exclam 0x02 shift
+kana_NU 0x02 altgr
+quotedbl 0x03 shift
+kana_FU 0x03 altgr
+numbersign 0x04 shift
+kana_A 0x04 altgr
+kana_a 0x04 shift altgr
+dollar 0x05 shift
+kana_U 0x05 altgr
+kana_u 0x05 shift altgr
+percent 0x06 shift
+kana_E 0x06 altgr
+kana_e 0x06 shift altgr
+ampersand 0x07 shift
+kana_O 0x07 altgr
+kana_o 0x07 shift altgr
+apostrophe 0x08 shift
+kana_YA 0x08 altgr
+kana_ya 0x08 shift altgr
+parenleft 0x09 shift
+kana_YU 0x09 altgr
+kana_yu 0x09 shift altgr
+parenright 0x0a shift
+kana_YO 0x0a altgr
+kana_yo 0x0a shift altgr
+asciitilde 0x0b shift
+kana_WA 0x0b altgr
+kana_WO 0x0b shift altgr
+minus 0x0c
+equal 0x0c shift
+kana_HO 0x0c altgr
+asciicircum 0x0d
+asciitilde 0x0d shift
+kana_HE 0x0d altgr
+kana_TA 0x10 altgr
+kana_TE 0x11 altgr
+kana_I 0x12 altgr
+kana_i 0x12 shift altgr
+kana_SU 0x13 altgr
+kana_KA 0x14 altgr
+kana_N 0x15 altgr
+kana_NA 0x16 altgr
+kana_NI 0x17 altgr
+kana_RA 0x18 altgr
+kana_SE 0x19 altgr
+at 0x1a
+grave 0x1a shift
+voicedsound 0x1a altgr
+bracketleft 0x1b
+braceleft 0x1b shift
+semivoicedsound 0x1b altgr
+kana_openingbracket 0x1b shift altgr
+kana_CHI 0x1e altgr
+kana_TO 0x1f altgr
+kana_SHI 0x20 altgr
+kana_HA 0x21 altgr
+kana_KI 0x22 altgr
+kana_KU 0x23 altgr
+kana_MA 0x24 altgr
+kana_NO 0x25 altgr
+kana_RI 0x26 altgr
+semicolon 0x27
+plus 0x27 shift
+kana_RE 0x27 altgr
+colon 0x28
+asterisk 0x28 shift
+kana_KE 0x28 altgr
+Zenkaku_Hankaku 0x29
+bracketright 0x2b
+braceright 0x2b shift
+kana_MU 0x2b altgr
+kana_closingbracket 0x2b shift altgr
+kana_TSU 0x2c altgr
+kana_tsu 0x2c shift altgr
+kana_SA 0x2d altgr
+kana_SO 0x2e altgr
+kana_HI 0x2f altgr
+kana_KO 0x30 altgr
+kana_MI 0x31 altgr
+kana_MO 0x32 altgr
+comma 0x33
+less 0x33 shift
+kana_NE 0x33 altgr
+kana_comma 0x33 shift altgr
+period 0x34
+greater 0x34 shift
+kana_RU 0x34 altgr
+kana_fullstop 0x34 shift altgr
+slash 0x35
+question 0x35 shift
+kana_ME 0x35 altgr
+kana_conjunctive 0x35 shift altgr
+Eisu_toggle 0x3a shift
+Execute 0x54 shift
+Kanji 0x70
+backslash 0x73
+yen 0x7d
+bar 0x7d shift
+underscore 0x73 shift
+Henkan_Mode 0x79
+Katakana_Real 0x70
+Katakana 0x70
+Muhenkan 0x7b
+Henkan_Mode_Real 0x79
+Henkan_Mode_Ultra 0x79
+backslash_ja 0x73
diff --git a/install/share/qemu/keymaps/lt b/install/share/qemu/keymaps/lt
new file mode 100644
index 0000000..3d9d619
--- /dev/null
+++ b/install/share/qemu/keymaps/lt
@@ -0,0 +1,57 @@
+# generated from XKB map lt
+include common
+map 0x427
+exclam 0x02 shift
+aogonek 0x02 altgr
+Aogonek 0x02 shift altgr
+at 0x03 shift
+ccaron 0x03 altgr
+Ccaron 0x03 shift altgr
+numbersign 0x04 shift
+eogonek 0x04 altgr
+Eogonek 0x04 shift altgr
+dollar 0x05 shift
+eabovedot 0x05 altgr
+Eabovedot 0x05 shift altgr
+percent 0x06 shift
+iogonek 0x06 altgr
+Iogonek 0x06 shift altgr
+asciicircum 0x07 shift
+scaron 0x07 altgr
+Scaron 0x07 shift altgr
+ampersand 0x08 shift
+uogonek 0x08 altgr
+Uogonek 0x08 shift altgr
+asterisk 0x09 shift
+umacron 0x09 altgr
+Umacron 0x09 shift altgr
+parenleft 0x0a shift
+doublelowquotemark 0x0a altgr
+parenright 0x0b shift
+leftdoublequotemark 0x0b altgr
+minus 0x0c
+underscore 0x0c shift
+equal 0x0d
+plus 0x0d shift
+zcaron 0x0d altgr
+Zcaron 0x0d shift altgr
+bracketleft 0x1a
+braceleft 0x1a shift
+bracketright 0x1b
+braceright 0x1b shift
+semicolon 0x27
+colon 0x27 shift
+apostrophe 0x28
+quotedbl 0x28 shift
+grave 0x29
+asciitilde 0x29 shift
+backslash 0x2b
+bar 0x2b shift
+comma 0x33
+less 0x33 shift
+period 0x34
+greater 0x34 shift
+slash 0x35
+question 0x35 shift
+endash 0x56
+EuroSign 0x56 shift
diff --git a/install/share/qemu/keymaps/lv b/install/share/qemu/keymaps/lv
new file mode 100644
index 0000000..1d91727
--- /dev/null
+++ b/install/share/qemu/keymaps/lv
@@ -0,0 +1,128 @@
+# generated from XKB map lv
+include common
+map 0x426
+exclam 0x02 shift
+onesuperior 0x02 altgr
+exclamdown 0x02 shift altgr
+at 0x03 shift
+twosuperior 0x03 altgr
+oneeighth 0x03 shift altgr
+numbersign 0x04 shift
+threesuperior 0x04 altgr
+sterling 0x04 shift altgr
+dollar 0x05 shift
+EuroSign 0x05 altgr
+cent 0x05 shift altgr
+percent 0x06 shift
+onehalf 0x06 altgr
+threeeighths 0x06 shift altgr
+asciicircum 0x07 shift
+threequarters 0x07 altgr
+fiveeighths 0x07 shift altgr
+ampersand 0x08 shift
+braceleft 0x08 altgr
+seveneighths 0x08 shift altgr
+asterisk 0x09 shift
+bracketleft 0x09 altgr
+trademark 0x09 shift altgr
+parenleft 0x0a shift
+bracketright 0x0a altgr
+plusminus 0x0a shift altgr
+parenright 0x0b shift
+braceright 0x0b altgr
+degree 0x0b shift altgr
+minus 0x0c
+underscore 0x0c shift
+backslash 0x0c altgr
+questiondown 0x0c shift altgr
+equal 0x0d
+plus 0x0d shift
+dead_cedilla 0x0d altgr
+dead_ogonek 0x0d shift altgr
+at 0x10 altgr
+Greek_OMEGA 0x10 shift altgr
+lstroke 0x11 altgr
+Lstroke 0x11 shift altgr
+emacron 0x12 altgr
+Emacron 0x12 shift altgr
+rcedilla 0x13 altgr
+Rcedilla 0x13 shift altgr
+tslash 0x14 altgr
+Tslash 0x14 shift altgr
+leftarrow 0x15 altgr
+yen 0x15 shift altgr
+umacron 0x16 altgr
+Umacron 0x16 shift altgr
+imacron 0x17 altgr
+Imacron 0x17 shift altgr
+omacron 0x18 altgr
+Omacron 0x18 shift altgr
+thorn 0x19 altgr
+THORN 0x19 shift altgr
+bracketleft 0x1a
+braceleft 0x1a shift
+dead_diaeresis 0x1a altgr
+dead_abovering 0x1a shift altgr
+bracketright 0x1b
+braceright 0x1b shift
+dead_tilde 0x1b altgr
+dead_macron 0x1b shift altgr
+ISO_Next_Group 0x1c shift
+amacron 0x1e altgr
+Amacron 0x1e shift altgr
+scaron 0x1f altgr
+Scaron 0x1f shift altgr
+eth 0x20 altgr
+ETH 0x20 shift altgr
+dstroke 0x21 altgr
+ordfeminine 0x21 shift altgr
+gcedilla 0x22 altgr
+Gcedilla 0x22 shift altgr
+hstroke 0x23 altgr
+Hstroke 0x23 shift altgr
+kcedilla 0x25 altgr
+Kcedilla 0x25 shift altgr
+lcedilla 0x26 altgr
+Lcedilla 0x26 shift altgr
+semicolon 0x27
+colon 0x27 shift
+dead_acute 0x27 altgr
+dead_doubleacute 0x27 shift altgr
+apostrophe 0x28
+quotedbl 0x28 shift
+leftdoublequotemark 0x28 altgr
+doublelowquotemark 0x28 shift altgr
+grave 0x29
+asciitilde 0x29 shift
+notsign 0x29 altgr
+backslash 0x2b
+bar 0x2b shift
+dead_grave 0x2b altgr
+dead_breve 0x2b shift altgr
+zcaron 0x2c altgr
+Zcaron 0x2c shift altgr
+guillemotright 0x2d altgr
+greater 0x2d shift altgr
+ccaron 0x2e altgr
+Ccaron 0x2e shift altgr
+leftdoublequotemark 0x2f altgr
+grave 0x2f shift altgr
+rightdoublequotemark 0x30 altgr
+apostrophe 0x30 shift altgr
+ncedilla 0x31 altgr
+Ncedilla 0x31 shift altgr
+mu 0x32 altgr
+masculine 0x32 shift altgr
+comma 0x33
+less 0x33 shift
+horizconnector 0x33 altgr
+multiply 0x33 shift altgr
+period 0x34
+greater 0x34 shift
+periodcentered 0x34 altgr
+division 0x34 shift altgr
+slash 0x35
+question 0x35 shift
+dead_belowdot 0x35 altgr
+dead_abovedot 0x35 shift altgr
+nobreakspace 0x39 altgr
diff --git a/install/share/qemu/keymaps/mk b/install/share/qemu/keymaps/mk
new file mode 100644
index 0000000..18c1504
--- /dev/null
+++ b/install/share/qemu/keymaps/mk
@@ -0,0 +1,101 @@
+# generated from XKB map mk
+include common
+map 0x42f
+exclam 0x02 shift
+at 0x03 shift
+doublelowquotemark 0x03 shift altgr
+numbersign 0x04 shift
+leftdoublequotemark 0x04 shift altgr
+dollar 0x05 shift
+percent 0x06 shift
+asciicircum 0x07 shift
+ampersand 0x08 shift
+asterisk 0x09 shift
+parenleft 0x0a shift
+parenright 0x0b shift
+minus 0x0c
+underscore 0x0c shift
+equal 0x0d
+plus 0x0d shift
+Cyrillic_lje 0x10 altgr
+Cyrillic_LJE 0x10 shift altgr
+Cyrillic_nje 0x11 altgr
+Cyrillic_NJE 0x11 shift altgr
+Cyrillic_ie 0x12 altgr
+Cyrillic_IE 0x12 shift altgr
+Cyrillic_er 0x13 altgr
+Cyrillic_ER 0x13 shift altgr
+Cyrillic_te 0x14 altgr
+Cyrillic_TE 0x14 shift altgr
+Macedonia_dse 0x15 altgr
+Macedonia_DSE 0x15 shift altgr
+Cyrillic_u 0x16 altgr
+Cyrillic_U 0x16 shift altgr
+Cyrillic_i 0x17 altgr
+Cyrillic_I 0x17 shift altgr
+Cyrillic_o 0x18 altgr
+Cyrillic_O 0x18 shift altgr
+Cyrillic_pe 0x19 altgr
+Cyrillic_PE 0x19 shift altgr
+bracketleft 0x1a
+braceleft 0x1a shift
+Cyrillic_sha 0x1a altgr
+Cyrillic_SHA 0x1a shift altgr
+bracketright 0x1b
+braceright 0x1b shift
+Macedonia_gje 0x1b altgr
+Macedonia_GJE 0x1b shift altgr
+Cyrillic_a 0x1e altgr
+Cyrillic_A 0x1e shift altgr
+Cyrillic_es 0x1f altgr
+Cyrillic_ES 0x1f shift altgr
+Cyrillic_de 0x20 altgr
+Cyrillic_DE 0x20 shift altgr
+Cyrillic_ef 0x21 altgr
+Cyrillic_EF 0x21 shift altgr
+Cyrillic_ghe 0x22 altgr
+Cyrillic_GHE 0x22 shift altgr
+Cyrillic_ha 0x23 altgr
+Cyrillic_HA 0x23 shift altgr
+Cyrillic_je 0x24 altgr
+Cyrillic_JE 0x24 shift altgr
+Cyrillic_ka 0x25 altgr
+Cyrillic_KA 0x25 shift altgr
+Cyrillic_el 0x26 altgr
+Cyrillic_EL 0x26 shift altgr
+semicolon 0x27
+colon 0x27 shift
+Cyrillic_che 0x27 altgr
+Cyrillic_CHE 0x27 shift altgr
+apostrophe 0x28
+quotedbl 0x28 shift
+Macedonia_kje 0x28 altgr
+Macedonia_KJE 0x28 shift altgr
+grave 0x29
+asciitilde 0x29 shift
+backslash 0x2b
+bar 0x2b shift
+Cyrillic_zhe 0x2b altgr
+Cyrillic_ZHE 0x2b shift altgr
+Cyrillic_ze 0x2c altgr
+Cyrillic_ZE 0x2c shift altgr
+Cyrillic_dzhe 0x2d altgr
+Cyrillic_DZHE 0x2d shift altgr
+Cyrillic_tse 0x2e altgr
+Cyrillic_TSE 0x2e shift altgr
+Cyrillic_ve 0x2f altgr
+Cyrillic_VE 0x2f shift altgr
+Cyrillic_be 0x30 altgr
+Cyrillic_BE 0x30 shift altgr
+Cyrillic_en 0x31 altgr
+Cyrillic_EN 0x31 shift altgr
+Cyrillic_em 0x32 altgr
+Cyrillic_EM 0x32 shift altgr
+comma 0x33
+less 0x33 shift
+semicolon 0x33 shift altgr
+period 0x34
+greater 0x34 shift
+colon 0x34 shift altgr
+slash 0x35
+question 0x35 shift
diff --git a/install/share/qemu/keymaps/modifiers b/install/share/qemu/keymaps/modifiers
new file mode 100644
index 0000000..d73b7a6
--- /dev/null
+++ b/install/share/qemu/keymaps/modifiers
@@ -0,0 +1,18 @@
+Shift_R 0x36
+Shift_L 0x2a
+
+Alt_R 0xb8
+Mode_switch 0xb8
+ISO_Level3_Shift 0xb8
+Alt_L 0x38
+
+Control_R 0x9d
+Control_L 0x1d
+
+# Translate Super to Windows keys.
+# This is hardcoded. See documentation for details.
+Super_R 0xdc
+Super_L 0xdb
+
+# Translate Menu to the Windows Application key.
+Menu 0xdd
diff --git a/install/share/qemu/keymaps/nl b/install/share/qemu/keymaps/nl
new file mode 100644
index 0000000..b4892f9
--- /dev/null
+++ b/install/share/qemu/keymaps/nl
@@ -0,0 +1,59 @@
+# Dutch (Netherlands)
+include common
+map 0x413
+
+exclam 0x02 shift
+onesuperior 0x02 altgr
+quotebl 0x03 shift
+twosuperior 0x03 altgr
+numbersign 0x04 shift
+threesuperior 0x04 altgr
+dollar 0x05 shift
+onequarter 0x05 altgr
+percent 0x06 shift
+onehalf 0x06 altgr
+ampersand 0x07 shift
+threequarters 0x07 altgr
+underscore 0x08 shift
+sterling 0x08 altgr
+parenleft 0x09 shift
+braceleft 0x09 altgr
+parenright 0x0a shift
+braceright 0x0a altgr
+apostrophe 0x0b shift
+slash 0x0c
+question 0x0c shift
+backslash 0x0c altgr
+degree 0x0d
+dead_tilde 0x0d shift
+dead_cedilla 0x0d altgr
+EuroSign 0x12 altgr
+paragraph 0x13 altgr
+dead_diaeresis 0x1a
+dead_circumflex 0x1a shift
+asterisk 0x1b
+bar 0x1b shift
+ssharp 0x1f altgr
+plus 0x27
+plusminus 0x27 shift
+dead_acute 0x28
+dead_grave 0x28 shift
+at 0x29
+section 0x29 shift
+notsign 0x29 altgr
+less 0x2b
+greater 0x2b shift
+guillemotleft 0x2c altgr
+guillemotright 0x2d altgr
+copyright 0x2e altgr
+mu 0x32 altgr
+comma 0x33
+semicolon 0x33 shift
+period 0x34
+colon 0x34 shift
+periodcentered 0x34 altgr
+hyphen 0x35
+equal 0x35 shift
+bracketright 0x56
+bracketleft 0x56 shift
+brokenbar 0x56 altgr
diff --git a/install/share/qemu/keymaps/nl-be b/install/share/qemu/keymaps/nl-be
new file mode 100644
index 0000000..34fc881
--- /dev/null
+++ b/install/share/qemu/keymaps/nl-be
@@ -0,0 +1,3 @@
+# Dutch (Belgium)
+map 0x813
+include common
diff --git a/install/share/qemu/keymaps/no b/install/share/qemu/keymaps/no
new file mode 100644
index 0000000..40a6479
--- /dev/null
+++ b/install/share/qemu/keymaps/no
@@ -0,0 +1,119 @@
+# generated from XKB map no
+include common
+map 0x414
+exclam 0x02 shift
+exclamdown 0x02 altgr
+onesuperior 0x02 shift altgr
+quotedbl 0x03 shift
+at 0x03 altgr
+twosuperior 0x03 shift altgr
+numbersign 0x04 shift
+sterling 0x04 altgr
+threesuperior 0x04 shift altgr
+currency 0x05 shift
+dollar 0x05 altgr
+onequarter 0x05 shift altgr
+percent 0x06 shift
+onehalf 0x06 altgr
+cent 0x06 shift altgr
+ampersand 0x07 shift
+yen 0x07 altgr
+fiveeighths 0x07 shift altgr
+slash 0x08 shift
+braceleft 0x08 altgr
+division 0x08 shift altgr
+parenleft 0x09 shift
+bracketleft 0x09 altgr
+guillemotleft 0x09 shift altgr
+parenright 0x0a shift
+bracketright 0x0a altgr
+guillemotright 0x0a shift altgr
+equal 0x0b shift
+braceright 0x0b altgr
+degree 0x0b shift altgr
+plus 0x0c
+question 0x0c shift
+plusminus 0x0c altgr
+questiondown 0x0c shift altgr
+backslash 0x0d
+dead_grave 0x0d shift
+dead_acute 0x0d altgr
+notsign 0x0d shift altgr
+Greek_OMEGA 0x10 shift altgr
+lstroke 0x11 altgr
+Lstroke 0x11 shift altgr
+EuroSign 0x12 altgr
+cent 0x12 shift altgr
+registered 0x13 altgr
+thorn 0x14 altgr
+THORN 0x14 shift altgr
+leftarrow 0x15 altgr
+yen 0x15 shift altgr
+downarrow 0x16 altgr
+uparrow 0x16 shift altgr
+rightarrow 0x17 altgr
+idotless 0x17 shift altgr
+oe 0x18 altgr
+OE 0x18 shift altgr
+thorn 0x19 altgr
+THORN 0x19 shift altgr
+aring 0x1a
+Aring 0x1a shift
+dead_diaeresis 0x1a altgr
+dead_abovering 0x1a shift altgr
+dead_diaeresis 0x1b
+dead_circumflex 0x1b shift
+asciicircum 0x01b shift
+dead_tilde 0x1b altgr
+asciitilde 0x1b altgr
+dead_caron 0x1b shift altgr
+ordfeminine 0x1e altgr
+masculine 0x1e shift altgr
+ssharp 0x1f altgr
+section 0x1f shift altgr
+eth 0x20 altgr
+ETH 0x20 shift altgr
+dstroke 0x21 altgr
+ordfeminine 0x21 shift altgr
+eng 0x22 altgr
+ENG 0x22 shift altgr
+hstroke 0x23 altgr
+Hstroke 0x23 shift altgr
+kra 0x25 altgr
+lstroke 0x26 altgr
+Lstroke 0x26 shift altgr
+oslash 0x27
+Ooblique 0x27 shift
+dead_doubleacute 0x27 shift altgr
+ae 0x28
+AE 0x28 shift
+dead_caron 0x28 shift altgr
+bar 0x29
+section 0x29 shift
+brokenbar 0x29 altgr
+paragraph 0x29 shift altgr
+apostrophe 0x2b
+asterisk 0x2b shift
+multiply 0x2b shift altgr
+guillemotleft 0x2c altgr
+guillemotright 0x2d altgr
+copyright 0x2e altgr
+leftdoublequotemark 0x2f altgr
+rightdoublequotemark 0x30 altgr
+mu 0x32 altgr
+masculine 0x32 shift altgr
+comma 0x33
+semicolon 0x33 shift
+dead_cedilla 0x33 altgr
+dead_ogonek 0x33 shift altgr
+period 0x34
+colon 0x34 shift
+periodcentered 0x34 altgr
+dead_abovedot 0x34 shift altgr
+minus 0x35
+underscore 0x35 shift
+hyphen 0x35 altgr
+macron 0x35 shift altgr
+nobreakspace 0x39 altgr
+onehalf 0x56 altgr
+threequarters 0x56 shift altgr
diff --git a/install/share/qemu/keymaps/pl b/install/share/qemu/keymaps/pl
new file mode 100644
index 0000000..09c600d
--- /dev/null
+++ b/install/share/qemu/keymaps/pl
@@ -0,0 +1,122 @@
+# generated from XKB map pl
+include common
+map 0x415
+exclam 0x02 shift
+onesuperior 0x02 altgr
+exclamdown 0x02 shift altgr
+at 0x03 shift
+twosuperior 0x03 altgr
+oneeighth 0x03 shift altgr
+numbersign 0x04 shift
+threesuperior 0x04 altgr
+sterling 0x04 shift altgr
+dollar 0x05 shift
+onequarter 0x05 altgr
+percent 0x06 shift
+onehalf 0x06 altgr
+threeeighths 0x06 shift altgr
+asciicircum 0x07 shift
+threequarters 0x07 altgr
+fiveeighths 0x07 shift altgr
+ampersand 0x08 shift
+braceleft 0x08 altgr
+seveneighths 0x08 shift altgr
+asterisk 0x09 shift
+bracketleft 0x09 altgr
+trademark 0x09 shift altgr
+parenleft 0x0a shift
+bracketright 0x0a altgr
+plusminus 0x0a shift altgr
+parenright 0x0b shift
+braceright 0x0b altgr
+degree 0x0b shift altgr
+minus 0x0c
+underscore 0x0c shift
+backslash 0x0c altgr
+questiondown 0x0c shift altgr
+equal 0x0d
+plus 0x0d shift
+dead_cedilla 0x0d altgr
+dead_ogonek 0x0d shift altgr
+Greek_OMEGA 0x10 shift altgr
+lstroke 0x11 altgr
+Lstroke 0x11 shift altgr
+eogonek 0x12 altgr
+Eogonek 0x12 shift altgr
+paragraph 0x13 altgr
+registered 0x13 shift altgr
+tslash 0x14 altgr
+Tslash 0x14 shift altgr
+leftarrow 0x15 altgr
+yen 0x15 shift altgr
+EuroSign 0x16 altgr
+uparrow 0x16 shift altgr
+rightarrow 0x17 altgr
+idotless 0x17 shift altgr
+oacute 0x18 altgr
+Oacute 0x18 shift altgr
+thorn 0x19 altgr
+THORN 0x19 shift altgr
+bracketleft 0x1a
+braceleft 0x1a shift
+dead_diaeresis 0x1a altgr
+dead_abovering 0x1a shift altgr
+bracketright 0x1b
+braceright 0x1b shift
+dead_tilde 0x1b altgr
+dead_macron 0x1b shift altgr
+aogonek 0x1e altgr
+Aogonek 0x1e shift altgr
+sacute 0x1f altgr
+Sacute 0x1f shift altgr
+eth 0x20 altgr
+ETH 0x20 shift altgr
+dstroke 0x21 altgr
+ordfeminine 0x21 shift altgr
+eng 0x22 altgr
+ENG 0x22 shift altgr
+hstroke 0x23 altgr
+Hstroke 0x23 shift altgr
+kra 0x25 altgr
+lstroke 0x26 altgr
+Lstroke 0x26 shift altgr
+semicolon 0x27
+colon 0x27 shift
+dead_acute 0x27 altgr
+dead_doubleacute 0x27 shift altgr
+apostrophe 0x28
+quotedbl 0x28 shift
+dead_circumflex 0x28 altgr
+dead_caron 0x28 shift altgr
+grave 0x29
+asciitilde 0x29 shift
+notsign 0x29 altgr
+backslash 0x2b
+bar 0x2b shift
+dead_grave 0x2b altgr
+dead_breve 0x2b shift altgr
+zabovedot 0x2c altgr
+Zabovedot 0x2c shift altgr
+zacute 0x2d altgr
+Zacute 0x2d shift altgr
+cacute 0x2e altgr
+Cacute 0x2e shift altgr
+leftdoublequotemark 0x2f altgr
+grave 0x2f shift altgr
+rightdoublequotemark 0x30 altgr
+nacute 0x31 altgr
+Nacute 0x31 shift altgr
+mu 0x32 altgr
+masculine 0x32 shift altgr
+comma 0x33
+less 0x33 shift
+horizconnector 0x33 altgr
+multiply 0x33 shift altgr
+period 0x34
+greater 0x34 shift
+periodcentered 0x34 altgr
+division 0x34 shift altgr
+slash 0x35
+question 0x35 shift
+dead_belowdot 0x35 altgr
+dead_abovedot 0x35 shift altgr
diff --git a/install/share/qemu/keymaps/pt b/install/share/qemu/keymaps/pt
new file mode 100644
index 0000000..c6941f6
--- /dev/null
+++ b/install/share/qemu/keymaps/pt
@@ -0,0 +1,113 @@
+# generated from XKB map pt
+include common
+map 0x816
+exclam 0x02 shift
+onesuperior 0x02 altgr
+exclamdown 0x02 shift altgr
+quotedbl 0x03 shift
+at 0x03 altgr
+oneeighth 0x03 shift altgr
+numbersign 0x04 shift
+sterling 0x04 altgr
+dollar 0x05 shift
+section 0x05 altgr
+percent 0x06 shift
+onehalf 0x06 altgr
+threeeighths 0x06 shift altgr
+ampersand 0x07 shift
+threequarters 0x07 altgr
+fiveeighths 0x07 shift altgr
+slash 0x08 shift
+braceleft 0x08 altgr
+seveneighths 0x08 shift altgr
+parenleft 0x09 shift
+bracketleft 0x09 altgr
+trademark 0x09 shift altgr
+parenright 0x0a shift
+bracketright 0x0a altgr
+plusminus 0x0a shift altgr
+equal 0x0b shift
+braceright 0x0b altgr
+degree 0x0b shift altgr
+apostrophe 0x0c
+question 0x0c shift
+backslash 0x0c altgr
+questiondown 0x0c shift altgr
+guillemotleft 0x0d
+guillemotright 0x0d shift
+dead_cedilla 0x0d altgr
+dead_ogonek 0x0d shift altgr
+Greek_OMEGA 0x10 shift altgr
+lstroke 0x11 altgr
+Lstroke 0x11 shift altgr
+EuroSign 0x12 altgr
+cent 0x12 shift altgr
+paragraph 0x13 altgr
+registered 0x13 shift altgr
+tslash 0x14 altgr
+Tslash 0x14 shift altgr
+leftarrow 0x15 altgr
+yen 0x15 shift altgr
+downarrow 0x16 altgr
+uparrow 0x16 shift altgr
+rightarrow 0x17 altgr
+idotless 0x17 shift altgr
+oslash 0x18 altgr
+Ooblique 0x18 shift altgr
+thorn 0x19 altgr
+THORN 0x19 shift altgr
+plus 0x1a
+asterisk 0x1a shift
+dead_diaeresis 0x1a altgr
+dead_abovering 0x1a shift altgr
+dead_acute 0x1b
+dead_grave 0x1b shift
+dead_tilde 0x1b altgr
+dead_macron 0x1b shift altgr
+ae 0x1e altgr
+AE 0x1e shift altgr
+ssharp 0x1f altgr
+eth 0x20 altgr
+ETH 0x20 shift altgr
+dstroke 0x21 altgr
+ordfeminine 0x21 shift altgr
+eng 0x22 altgr
+ENG 0x22 shift altgr
+hstroke 0x23 altgr
+Hstroke 0x23 shift altgr
+kra 0x25 altgr
+lstroke 0x26 altgr
+Lstroke 0x26 shift altgr
+ccedilla 0x27
+Ccedilla 0x27 shift
+dead_doubleacute 0x27 shift altgr
+masculine 0x28
+ordfeminine 0x28 shift
+dead_circumflex 0x28 altgr
+dead_caron 0x28 shift altgr
+backslash 0x29
+bar 0x29 shift
+notsign 0x29 altgr
+dead_tilde 0x2b
+dead_circumflex 0x2b shift
+dead_breve 0x2b shift altgr
+less 0x56
+greater 0x56 shift
+cent 0x2e altgr
+copyright 0x2e shift altgr
+leftdoublequotemark 0x2f altgr
+grave 0x2f shift altgr
+rightdoublequotemark 0x30 altgr
+mu 0x32 altgr
+comma 0x33
+semicolon 0x33 shift
+horizconnector 0x33 altgr
+multiply 0x33 shift altgr
+period 0x34
+colon 0x34 shift
+periodcentered 0x34 altgr
+division 0x34 shift altgr
+minus 0x35
+underscore 0x35 shift
+dead_belowdot 0x35 altgr
+dead_abovedot 0x35 shift altgr
diff --git a/install/share/qemu/keymaps/pt-br b/install/share/qemu/keymaps/pt-br
new file mode 100644
index 0000000..54bafc5
--- /dev/null
+++ b/install/share/qemu/keymaps/pt-br
@@ -0,0 +1,69 @@
+# generated from XKB map br
+include common
+map 0x416
+exclam 0x02 shift
+onesuperior 0x02 altgr
+exclamdown 0x02 shift altgr
+at 0x03 shift
+twosuperior 0x03 altgr
+onehalf 0x03 shift altgr
+numbersign 0x04 shift
+threesuperior 0x04 altgr
+threequarters 0x04 shift altgr
+dollar 0x05 shift
+sterling 0x05 altgr
+onequarter 0x05 shift altgr
+percent 0x06 shift
+cent 0x06 altgr
+dead_diaeresis 0x07 shift
+notsign 0x07 altgr
+diaeresis 0x07 shift altgr
+ampersand 0x08 shift
+braceleft 0x08 altgr
+asterisk 0x09 shift
+bracketleft 0x09 altgr
+parenleft 0x0a shift
+bracketright 0x0a altgr
+parenright 0x0b shift
+braceright 0x0b altgr
+minus 0x0c
+underscore 0x0c shift
+backslash 0x0c altgr
+equal 0x0d
+plus 0x0d shift
+section 0x0d altgr
+EuroSign 0x12 altgr
+registered 0x13 altgr
+dead_acute 0x1a
+dead_grave 0x1a shift
+acute 0x1a altgr
+grave 0x1a shift altgr
+bracketleft 0x1b
+braceleft 0x1b shift
+ordfeminine 0x1b altgr
+ccedilla 0x27
+Ccedilla 0x27 shift
+dead_tilde 0x28
+dead_circumflex 0x28 shift
+asciitilde 0x28 altgr
+asciicircum 0x28 shift altgr
+apostrophe 0x29
+quotedbl 0x29 shift
+bracketright 0x2b
+braceright 0x2b shift
+masculine 0x2b altgr
+copyright 0x2e altgr
+mu 0x32 altgr
+comma 0x33
+less 0x33 shift
+period 0x34
+greater 0x34 shift
+semicolon 0x35
+colon 0x35 shift
+comma 0x53 numlock
+backslash 0x56
+bar 0x56 shift
+slash 0x73
+question 0x73 shift
+degree 0x73 altgr
+KP_Decimal 0x34
diff --git a/install/share/qemu/keymaps/ru b/install/share/qemu/keymaps/ru
new file mode 100644
index 0000000..b3e7d24
--- /dev/null
+++ b/install/share/qemu/keymaps/ru
@@ -0,0 +1,109 @@
+# generated from XKB map ru
+include common
+map 0x419
+exclam 0x02 shift
+at 0x03 shift
+quotedbl 0x03 shift altgr
+numbersign 0x04 shift
+dollar 0x05 shift
+asterisk 0x05 shift altgr
+percent 0x06 shift
+colon 0x06 shift altgr
+asciicircum 0x07 shift
+comma 0x07 shift altgr
+ampersand 0x08 shift
+period 0x08 shift altgr
+asterisk 0x09 shift
+semicolon 0x09 shift altgr
+parenleft 0x0a shift
+parenright 0x0b shift
+minus 0x0c
+underscore 0x0c shift
+equal 0x0d
+plus 0x0d shift
+Cyrillic_shorti 0x10 altgr
+Cyrillic_SHORTI 0x10 shift altgr
+Cyrillic_tse 0x11 altgr
+Cyrillic_TSE 0x11 shift altgr
+Cyrillic_u 0x12 altgr
+Cyrillic_U 0x12 shift altgr
+Cyrillic_ka 0x13 altgr
+Cyrillic_KA 0x13 shift altgr
+Cyrillic_ie 0x14 altgr
+Cyrillic_IE 0x14 shift altgr
+Cyrillic_en 0x15 altgr
+Cyrillic_EN 0x15 shift altgr
+Cyrillic_ghe 0x16 altgr
+Cyrillic_GHE 0x16 shift altgr
+Cyrillic_sha 0x17 altgr
+Cyrillic_SHA 0x17 shift altgr
+Cyrillic_shcha 0x18 altgr
+Cyrillic_SHCHA 0x18 shift altgr
+Cyrillic_ze 0x19 altgr
+Cyrillic_ZE 0x19 shift altgr
+bracketleft 0x1a
+braceleft 0x1a shift
+Cyrillic_ha 0x1a altgr
+Cyrillic_HA 0x1a shift altgr
+bracketright 0x1b
+braceright 0x1b shift
+Cyrillic_hardsign 0x1b altgr
+Cyrillic_HARDSIGN 0x1b shift altgr
+Cyrillic_ef 0x1e altgr
+Cyrillic_EF 0x1e shift altgr
+Cyrillic_yeru 0x1f altgr
+Cyrillic_YERU 0x1f shift altgr
+Cyrillic_ve 0x20 altgr
+Cyrillic_VE 0x20 shift altgr
+Cyrillic_a 0x21 altgr
+Cyrillic_A 0x21 shift altgr
+Cyrillic_pe 0x22 altgr
+Cyrillic_PE 0x22 shift altgr
+Cyrillic_er 0x23 altgr
+Cyrillic_ER 0x23 shift altgr
+Cyrillic_o 0x24 altgr
+Cyrillic_O 0x24 shift altgr
+Cyrillic_el 0x25 altgr
+Cyrillic_EL 0x25 shift altgr
+Cyrillic_de 0x26 altgr
+Cyrillic_DE 0x26 shift altgr
+semicolon 0x27
+colon 0x27 shift
+Cyrillic_zhe 0x27 altgr
+Cyrillic_ZHE 0x27 shift altgr
+apostrophe 0x28
+quotedbl 0x28 shift
+Cyrillic_e 0x28 altgr
+Cyrillic_E 0x28 shift altgr
+grave 0x29
+asciitilde 0x29 shift
+Cyrillic_io 0x29 altgr
+Cyrillic_IO 0x29 shift altgr
+backslash 0x2b
+bar 0x2b shift
+Cyrillic_ya 0x2c altgr
+Cyrillic_YA 0x2c shift altgr
+Cyrillic_che 0x2d altgr
+Cyrillic_CHE 0x2d shift altgr
+Cyrillic_es 0x2e altgr
+Cyrillic_ES 0x2e shift altgr
+Cyrillic_em 0x2f altgr
+Cyrillic_EM 0x2f shift altgr
+Cyrillic_i 0x30 altgr
+Cyrillic_I 0x30 shift altgr
+Cyrillic_te 0x31 altgr
+Cyrillic_TE 0x31 shift altgr
+Cyrillic_softsign 0x32 altgr
+Cyrillic_SOFTSIGN 0x32 shift altgr
+comma 0x33
+less 0x33 shift
+Cyrillic_be 0x33 altgr
+Cyrillic_BE 0x33 shift altgr
+period 0x34
+greater 0x34 shift
+Cyrillic_yu 0x34 altgr
+Cyrillic_YU 0x34 shift altgr
+slash 0x35
+question 0x35 shift
+slash 0x56 altgr
+bar 0x56 shift altgr
diff --git a/install/share/qemu/keymaps/sl b/install/share/qemu/keymaps/sl
new file mode 100644
index 0000000..56835a9
--- /dev/null
+++ b/install/share/qemu/keymaps/sl
@@ -0,0 +1,110 @@
+# generated from XKB map sl
+include common
+map 0x424
+exclam 0x02 shift
+asciitilde 0x02 altgr
+dead_tilde 0x02 shift altgr
+quotedbl 0x03 shift
+dead_caron 0x03 altgr
+caron 0x03 shift altgr
+numbersign 0x04 shift
+asciicircum 0x04 altgr
+dead_circumflex 0x04 shift altgr
+dollar 0x05 shift
+dead_breve 0x05 altgr
+breve 0x05 shift altgr
+percent 0x06 shift
+degree 0x06 altgr
+dead_abovering 0x06 shift altgr
+ampersand 0x07 shift
+dead_ogonek 0x07 altgr
+ogonek 0x07 shift altgr
+slash 0x08 shift
+grave 0x08 altgr
+dead_grave 0x08 shift altgr
+parenleft 0x09 shift
+dead_abovedot 0x09 altgr
+abovedot 0x09 shift altgr
+parenright 0x0a shift
+dead_acute 0x0a altgr
+equal 0x0b shift
+dead_doubleacute 0x0b altgr
+doubleacute 0x0b shift altgr
+apostrophe 0x0c
+question 0x0c shift
+dead_diaeresis 0x0c altgr
+diaeresis 0x0c shift altgr
+plus 0x0d
+asterisk 0x0d shift
+dead_cedilla 0x0d altgr
+cedilla 0x0d shift altgr
+backslash 0x10 altgr
+Greek_OMEGA 0x10 shift altgr
+bar 0x11 altgr
+Lstroke 0x11 shift altgr
+EuroSign 0x12 altgr
+paragraph 0x13 altgr
+registered 0x13 shift altgr
+tslash 0x14 altgr
+Tslash 0x14 shift altgr
+z 0x15 addupper
+leftarrow 0x15 altgr
+yen 0x15 shift altgr
+downarrow 0x16 altgr
+uparrow 0x16 shift altgr
+rightarrow 0x17 altgr
+idotless 0x17 shift altgr
+oslash 0x18 altgr
+Ooblique 0x18 shift altgr
+thorn 0x19 altgr
+THORN 0x19 shift altgr
+scaron 0x1a
+Scaron 0x1a shift
+division 0x1a altgr
+dstroke 0x1b
+Dstroke 0x1b shift
+multiply 0x1b altgr
+dead_macron 0x1b shift altgr
+ae 0x1e altgr
+AE 0x1e shift altgr
+ssharp 0x1f altgr
+section 0x1f shift altgr
+eth 0x20 altgr
+ETH 0x20 shift altgr
+bracketleft 0x21 altgr
+ordfeminine 0x21 shift altgr
+bracketright 0x22 altgr
+ENG 0x22 shift altgr
+hstroke 0x23 altgr
+Hstroke 0x23 shift altgr
+lstroke 0x25 altgr
+Lstroke 0x26 altgr
+ccaron 0x27
+Ccaron 0x27 shift
+cacute 0x28
+Cacute 0x28 shift
+ssharp 0x28 altgr
+dead_cedilla 0x29
+notsign 0x29 altgr
+zcaron 0x2b
+Zcaron 0x2b shift
+currency 0x2b altgr
+y 0x2c addupper
+guillemotleft 0x2c altgr
+guillemotright 0x2d altgr
+cent 0x2e altgr
+copyright 0x2e shift altgr
+at 0x2f altgr
+braceleft 0x30 altgr
+braceright 0x31 altgr
+section 0x32 altgr
+masculine 0x32 shift altgr
+comma 0x33
+semicolon 0x33 shift
+horizconnector 0x33 altgr
+period 0x34
+colon 0x34 shift
+periodcentered 0x34 altgr
+minus 0x35
+underscore 0x35 shift
+dead_belowdot 0x35 altgr
diff --git a/install/share/qemu/keymaps/sv b/install/share/qemu/keymaps/sv
new file mode 100644
index 0000000..5d9080e
--- /dev/null
+++ b/install/share/qemu/keymaps/sv
@@ -0,0 +1,81 @@
+map 0x0000041d
+include common
+
+#
+# Top row
+#
+section 0x29
+onehalf 0x29 shift
+
+# 1
+exclam 0x2 shift
+
+# 2
+quotedbl 0x3 shift
+at 0x3 altgr
+
+# 3
+numbersign 0x4 shift
+sterling 0x4 altgr
+# 4
+currency 0x5 shift
+dollar 0x5 altgr
+# 5
+percent 0x6 shift
+# 6
+ampersand 0x7 shift
+# 7
+slash 0x8 shift
+braceleft 0x8 altgr
+# 8
+parenleft 0x9 shift
+bracketleft 0x9 altgr
+# 9
+parenright 0xa shift
+bracketright 0xa altgr
+# 0
+equal 0xb shift
+braceright 0xb altgr
+
+plus 0xc
+question 0xc shift
+backslash 0xc altgr
+
+acute 0xd
+dead_acute 0xd
+grave 0xd shift
+dead_grave 0xd shift
+
+#
+# QWERTY first row
+#
+EuroSign 0x12 altgr
+aring 0x1a
+Aring 0x1a shift
+dead_diaeresis 0x1b
+dead_circumflex 0x1b shift
+dead_tilde 0x1b altgr
+
+#
+# QWERTY second row
+#
+odiaeresis 0x27
+Odiaeresis 0x27 shift
+adiaeresis 0x28
+Adiaeresis 0x28 shift
+apostrophe 0x2b
+asterisk 0x2b shift
+
+#
+# QWERTY third row
+#
+less 0x56
+greater 0x56 shift
+bar 0x56 altgr
+mu 0x32 altgr
+comma 0x33
+semicolon 0x33 shift
+period 0x34
+colon 0x34 shift
+minus 0x35
+underscore 0x35 shift
diff --git a/install/share/qemu/keymaps/th b/install/share/qemu/keymaps/th
new file mode 100644
index 0000000..b65b6da
--- /dev/null
+++ b/install/share/qemu/keymaps/th
@@ -0,0 +1,131 @@
+# generated from XKB map th
+include common
+map 0x41e
+exclam 0x02 shift
+Thai_lakkhangyao 0x02 altgr
+plus 0x02 shift altgr
+at 0x03 shift
+slash 0x03 altgr
+Thai_leknung 0x03 shift altgr
+numbersign 0x04 shift
+minus 0x04 altgr
+Thai_leksong 0x04 shift altgr
+dollar 0x05 shift
+Thai_phosamphao 0x05 altgr
+Thai_leksam 0x05 shift altgr
+percent 0x06 shift
+Thai_thothung 0x06 altgr
+Thai_leksi 0x06 shift altgr
+asciicircum 0x07 shift
+Thai_sarau 0x07 altgr
+Thai_sarauu 0x07 shift altgr
+ampersand 0x08 shift
+Thai_saraue 0x08 altgr
+Thai_baht 0x08 shift altgr
+asterisk 0x09 shift
+Thai_khokhwai 0x09 altgr
+Thai_lekha 0x09 shift altgr
+parenleft 0x0a shift
+Thai_totao 0x0a altgr
+Thai_lekhok 0x0a shift altgr
+parenright 0x0b shift
+Thai_chochan 0x0b altgr
+Thai_lekchet 0x0b shift altgr
+minus 0x0c
+underscore 0x0c shift
+Thai_khokhai 0x0c altgr
+Thai_lekpaet 0x0c shift altgr
+equal 0x0d
+plus 0x0d shift
+Thai_chochang 0x0d altgr
+Thai_lekkao 0x0d shift altgr
+Thai_maiyamok 0x10 altgr
+Thai_leksun 0x10 shift altgr
+Thai_saraaimaimalai 0x11 altgr
+quotedbl 0x11 shift altgr
+Thai_saraam 0x12 altgr
+Thai_dochada 0x12 shift altgr
+Thai_phophan 0x13 altgr
+Thai_thonangmontho 0x13 shift altgr
+Thai_saraa 0x14 altgr
+Thai_thothong 0x14 shift altgr
+Thai_maihanakat 0x15 altgr
+Thai_nikhahit 0x15 shift altgr
+Thai_saraii 0x16 altgr
+Thai_maitri 0x16 shift altgr
+Thai_rorua 0x17 altgr
+Thai_nonen 0x17 shift altgr
+Thai_nonu 0x18 altgr
+Thai_paiyannoi 0x18 shift altgr
+Thai_yoyak 0x19 altgr
+Thai_yoying 0x19 shift altgr
+bracketleft 0x1a
+braceleft 0x1a shift
+Thai_bobaimai 0x1a altgr
+Thai_thothan 0x1a shift altgr
+bracketright 0x1b
+braceright 0x1b shift
+Thai_loling 0x1b altgr
+comma 0x1b shift altgr
+Thai_fofan 0x1e altgr
+Thai_ru 0x1e shift altgr
+Thai_hohip 0x1f altgr
+Thai_khorakhang 0x1f shift altgr
+Thai_kokai 0x20 altgr
+Thai_topatak 0x20 shift altgr
+Thai_dodek 0x21 altgr
+Thai_sarao 0x21 shift altgr
+Thai_sarae 0x22 altgr
+Thai_chochoe 0x22 shift altgr
+Thai_maitho 0x23 altgr
+Thai_maitaikhu 0x23 shift altgr
+Thai_maiek 0x24 altgr
+Thai_maichattawa 0x24 shift altgr
+Thai_saraaa 0x25 altgr
+Thai_sorusi 0x25 shift altgr
+Thai_sosua 0x26 altgr
+Thai_sosala 0x26 shift altgr
+semicolon 0x27
+colon 0x27 shift
+Thai_wowaen 0x27 altgr
+Thai_soso 0x27 shift altgr
+apostrophe 0x28
+quotedbl 0x28 shift
+Thai_ngongu 0x28 altgr
+period 0x28 shift altgr
+grave 0x29
+asciitilde 0x29 shift
+underscore 0x29 altgr
+percent 0x29 shift altgr
+ISO_First_Group 0x2a shift
+backslash 0x2b
+bar 0x2b shift
+Thai_khokhuat 0x2b altgr
+Thai_khokhon 0x2b shift altgr
+Thai_phophung 0x2c altgr
+parenleft 0x2c shift altgr
+Thai_popla 0x2d altgr
+parenright 0x2d shift altgr
+Thai_saraae 0x2e altgr
+Thai_choching 0x2e shift altgr
+Thai_oang 0x2f altgr
+Thai_honokhuk 0x2f shift altgr
+Thai_sarai 0x30 altgr
+Thai_phinthu 0x30 shift altgr
+Thai_sarauee 0x31 altgr
+Thai_thanthakhat 0x31 shift altgr
+Thai_thothahan 0x32 altgr
+question 0x32 shift altgr
+comma 0x33
+less 0x33 shift
+Thai_moma 0x33 altgr
+Thai_thophuthao 0x33 shift altgr
+period 0x34
+greater 0x34 shift
+Thai_saraaimaimuan 0x34 altgr
+Thai_lochula 0x34 shift altgr
+slash 0x35
+question 0x35 shift
+Thai_fofa 0x35 altgr
+Thai_lu 0x35 shift altgr
+ISO_Last_Group 0x36 shift
diff --git a/install/share/qemu/keymaps/tr b/install/share/qemu/keymaps/tr
new file mode 100644
index 0000000..5650e1e
--- /dev/null
+++ b/install/share/qemu/keymaps/tr
@@ -0,0 +1,123 @@
+# generated from XKB map tr
+include common
+map 0x41f
+exclam 0x02 shift
+onesuperior 0x02 altgr
+exclamdown 0x02 shift altgr
+apostrophe 0x03 shift
+at 0x03 altgr
+oneeighth 0x03 shift altgr
+dead_circumflex 0x04 shift
+numbersign 0x04 altgr
+sterling 0x04 shift altgr
+plus 0x05 shift
+dollar 0x05 altgr
+percent 0x06 shift
+onehalf 0x06 altgr
+threeeighths 0x06 shift altgr
+ampersand 0x07 shift
+asciicircum 0x07 altgr
+fiveeighths 0x07 shift altgr
+slash 0x08 shift
+braceleft 0x08 altgr
+seveneighths 0x08 shift altgr
+parenleft 0x09 shift
+bracketleft 0x09 altgr
+trademark 0x09 shift altgr
+parenright 0x0a shift
+bracketright 0x0a altgr
+plusminus 0x0a shift altgr
+equal 0x0b shift
+braceright 0x0b altgr
+degree 0x0b shift altgr
+asterisk 0x0c
+question 0x0c shift
+backslash 0x0c altgr
+questiondown 0x0c shift altgr
+minus 0x0d
+underscore 0x0d shift
+dead_cedilla 0x0d altgr
+dead_ogonek 0x0d shift altgr
+at 0x10 altgr
+Greek_OMEGA 0x10 shift altgr
+lstroke 0x11 altgr
+Lstroke 0x11 shift altgr
+EuroSign 0x12 altgr
+paragraph 0x13 altgr
+registered 0x13 shift altgr
+tslash 0x14 altgr
+Tslash 0x14 shift altgr
+leftarrow 0x15 altgr
+yen 0x15 shift altgr
+downarrow 0x16 altgr
+uparrow 0x16 shift altgr
+idotless 0x17
+I 0x17 shift
+rightarrow 0x17 altgr
+oslash 0x18 altgr
+Ooblique 0x18 shift altgr
+thorn 0x19 altgr
+THORN 0x19 shift altgr
+gbreve 0x1a
+Gbreve 0x1a shift
+dead_diaeresis 0x1a altgr
+dead_abovering 0x1a shift altgr
+udiaeresis 0x1b
+Udiaeresis 0x1b shift
+asciitilde 0x1b altgr
+dead_macron 0x1b shift altgr
+ae 0x1e altgr
+AE 0x1e shift altgr
+ssharp 0x1f altgr
+section 0x1f shift altgr
+eth 0x20 altgr
+ETH 0x20 shift altgr
+dstroke 0x21 altgr
+ordfeminine 0x21 shift altgr
+eng 0x22 altgr
+ENG 0x22 shift altgr
+hstroke 0x23 altgr
+Hstroke 0x23 shift altgr
+kra 0x25 altgr
+ampersand 0x25 shift altgr
+lstroke 0x26 altgr
+Lstroke 0x26 shift altgr
+scedilla 0x27
+Scedilla 0x27 shift
+dead_acute 0x27 altgr
+dead_doubleacute 0x27 shift altgr
+i 0x28
+Iabovedot 0x28 shift
+dead_circumflex 0x28 altgr
+dead_caron 0x28 shift altgr
+backslash 0x29
+quotedbl 0x29 shift
+asciitilde 0x29 altgr
+comma 0x2b
+semicolon 0x2b shift
+bar 0x2b altgr
+dead_breve 0x2b shift altgr
+guillemotleft 0x2c altgr
+less 0x2c shift altgr
+guillemotright 0x2d altgr
+greater 0x2d shift altgr
+cent 0x2e altgr
+copyright 0x2e shift altgr
+leftdoublequotemark 0x2f altgr
+grave 0x2f shift altgr
+rightdoublequotemark 0x30 altgr
+apostrophe 0x30 shift altgr
+mu 0x32 altgr
+masculine 0x32 shift altgr
+odiaeresis 0x33
+Odiaeresis 0x33 shift
+less 0x33 altgr
+multiply 0x33 shift altgr
+ccedilla 0x34
+Ccedilla 0x34 shift
+greater 0x34 altgr
+division 0x34 shift altgr
+period 0x35
+colon 0x35 shift
+dead_belowdot 0x35 altgr
+dead_abovedot 0x35 shift altgr
diff --git a/install/share/qemu/kvmvapic.bin b/install/share/qemu/kvmvapic.bin
new file mode 100644
index 0000000..045f5c2
Binary files /dev/null and b/install/share/qemu/kvmvapic.bin differ
diff --git a/install/share/qemu/linuxboot.bin b/install/share/qemu/linuxboot.bin
new file mode 100644
index 0000000..e7c3669
Binary files /dev/null and b/install/share/qemu/linuxboot.bin differ
diff --git a/install/share/qemu/multiboot.bin b/install/share/qemu/multiboot.bin
new file mode 100644
index 0000000..e772713
Binary files /dev/null and b/install/share/qemu/multiboot.bin differ
diff --git a/install/share/qemu/openbios-ppc b/install/share/qemu/openbios-ppc
new file mode 100644
index 0000000..0f2fc3a
Binary files /dev/null and b/install/share/qemu/openbios-ppc differ
diff --git a/install/share/qemu/openbios-sparc32 b/install/share/qemu/openbios-sparc32
new file mode 100644
index 0000000..8917b55
Binary files /dev/null and b/install/share/qemu/openbios-sparc32 differ
diff --git a/install/share/qemu/openbios-sparc64 b/install/share/qemu/openbios-sparc64
new file mode 100644
index 0000000..cf72a59
Binary files /dev/null and b/install/share/qemu/openbios-sparc64 differ
diff --git a/install/share/qemu/palcode-clipper b/install/share/qemu/palcode-clipper
new file mode 100644
index 0000000..9956340
Binary files /dev/null and b/install/share/qemu/palcode-clipper differ
diff --git a/install/share/qemu/petalogix-ml605.dtb b/install/share/qemu/petalogix-ml605.dtb
new file mode 100644
index 0000000..fbbd45f
Binary files /dev/null and b/install/share/qemu/petalogix-ml605.dtb differ
diff --git a/install/share/qemu/petalogix-s3adsp1800.dtb b/install/share/qemu/petalogix-s3adsp1800.dtb
new file mode 100644
index 0000000..93c5973
Binary files /dev/null and b/install/share/qemu/petalogix-s3adsp1800.dtb differ
diff --git a/install/share/qemu/ppc_rom.bin b/install/share/qemu/ppc_rom.bin
new file mode 100644
index 0000000..174a247
Binary files /dev/null and b/install/share/qemu/ppc_rom.bin differ
diff --git a/install/share/qemu/pxe-e1000.rom b/install/share/qemu/pxe-e1000.rom
new file mode 100644
index 0000000..2e5f8b2
Binary files /dev/null and b/install/share/qemu/pxe-e1000.rom differ
diff --git a/install/share/qemu/pxe-eepro100.rom b/install/share/qemu/pxe-eepro100.rom
new file mode 100644
index 0000000..d292e8f
Binary files /dev/null and b/install/share/qemu/pxe-eepro100.rom differ
diff --git a/install/share/qemu/pxe-ne2k_pci.rom b/install/share/qemu/pxe-ne2k_pci.rom
new file mode 100644
index 0000000..62010cb
Binary files /dev/null and b/install/share/qemu/pxe-ne2k_pci.rom differ
diff --git a/install/share/qemu/pxe-pcnet.rom b/install/share/qemu/pxe-pcnet.rom
new file mode 100644
index 0000000..512d6d4
Binary files /dev/null and b/install/share/qemu/pxe-pcnet.rom differ
diff --git a/install/share/qemu/pxe-rtl8139.rom b/install/share/qemu/pxe-rtl8139.rom
new file mode 100644
index 0000000..67c77fb
Binary files /dev/null and b/install/share/qemu/pxe-rtl8139.rom differ
diff --git a/install/share/qemu/pxe-virtio.rom b/install/share/qemu/pxe-virtio.rom
new file mode 100644
index 0000000..b1ec909
Binary files /dev/null and b/install/share/qemu/pxe-virtio.rom differ
diff --git a/install/share/qemu/q35-acpi-dsdt.aml b/install/share/qemu/q35-acpi-dsdt.aml
new file mode 100644
index 0000000..d71b3a3
Binary files /dev/null and b/install/share/qemu/q35-acpi-dsdt.aml differ
diff --git a/install/share/qemu/qemu-icon.bmp b/install/share/qemu/qemu-icon.bmp
new file mode 100644
index 0000000..72d9a2f
Binary files /dev/null and b/install/share/qemu/qemu-icon.bmp differ
diff --git a/install/share/qemu/qemu_logo_no_text.svg b/install/share/qemu/qemu_logo_no_text.svg
new file mode 100644
index 0000000..24ca23a
--- /dev/null
+++ b/install/share/qemu/qemu_logo_no_text.svg
@@ -0,0 +1,976 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no"?>
+<!-- Created with Inkscape (http://www.inkscape.org/) -->
+
+<svg
+   xmlns:dc="http://purl.org/dc/elements/1.1/"
+   xmlns:cc="http://creativecommons.org/ns#"
+   xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
+   xmlns:svg="http://www.w3.org/2000/svg"
+   xmlns="http://www.w3.org/2000/svg"
+   xmlns:xlink="http://www.w3.org/1999/xlink"
+   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
+   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
+   width="111.71874"
+   height="111.12498"
+   id="svg2"
+   version="1.1"
+   inkscape:version="0.48.2 r9819"
+   sodipodi:docname="qemu_logo_no_text.svg">
+  <defs
+     id="defs4">
+    <linearGradient
+       id="linearGradient4686">
+      <stop
+         style="stop-color:#000000;stop-opacity:1;"
+         offset="0"
+         id="stop4688" />
+      <stop
+         id="stop3956"
+         offset="0.75"
+         style="stop-color:#000000;stop-opacity:0.87843138;" />
+      <stop
+         style="stop-color:#ffffff;stop-opacity:0.43921569;"
+         offset="0.75"
+         id="stop3958" />
+      <stop
+         id="stop3960"
+         offset="0.88"
+         style="stop-color:#181818;stop-opacity:1;" />
+      <stop
+         style="stop-color:#242424;stop-opacity:1;"
+         offset="0.88"
+         id="stop3962" />
+      <stop
+         style="stop-color:#000000;stop-opacity:1;"
+         offset="1"
+         id="stop4690" />
+    </linearGradient>
+    <linearGradient
+       id="linearGradient4467">
+      <stop
+         style="stop-color:#000000;stop-opacity:1;"
+         offset="0"
+         id="stop4469" />
+      <stop
+         style="stop-color:#000000;stop-opacity:0.8974359;"
+         offset="1"
+         id="stop4471" />
+    </linearGradient>
+    <linearGradient
+       id="linearGradient4431">
+      <stop
+         style="stop-color:#ffffff;stop-opacity:1;"
+         offset="0"
+         id="stop4433" />
+      <stop
+         style="stop-color:#ffffff;stop-opacity:0;"
+         offset="1"
+         id="stop4435" />
+    </linearGradient>
+    <linearGradient
+       id="linearGradient4466">
+      <stop
+         style="stop-color:#ffffff;stop-opacity:1;"
+         offset="0"
+         id="stop4468" />
+      <stop
+         style="stop-color:#ffffff;stop-opacity:0;"
+         offset="1"
+         id="stop4470" />
+    </linearGradient>
+    <linearGradient
+       id="linearGradient4321">
+      <stop
+         style="stop-color:#ff6702;stop-opacity:1;"
+         offset="0"
+         id="stop4323" />
+      <stop
+         style="stop-color:#ff9a55;stop-opacity:1;"
+         offset="1"
+         id="stop4325" />
+    </linearGradient>
+    <linearGradient
+       id="linearGradient4283">
+      <stop
+         style="stop-color:#000000;stop-opacity:1;"
+         offset="0"
+         id="stop4285" />
+      <stop
+         style="stop-color:#000000;stop-opacity:0;"
+         offset="1"
+         id="stop4287" />
+    </linearGradient>
+    <linearGradient
+       id="linearGradient4251">
+      <stop
+         style="stop-color:#000000;stop-opacity:1;"
+         offset="0"
+         id="stop4253" />
+      <stop
+         style="stop-color:#000000;stop-opacity:0;"
+         offset="1"
+         id="stop4255" />
+    </linearGradient>
+    <linearGradient
+       id="linearGradient4007">
+      <stop
+         style="stop-color:#ff6600;stop-opacity:1;"
+         offset="0"
+         id="stop4009" />
+      <stop
+         style="stop-color:#ff9148;stop-opacity:1;"
+         offset="1"
+         id="stop4011" />
+    </linearGradient>
+    <linearGradient
+       id="linearGradient3999">
+      <stop
+         style="stop-color:#fff7f2;stop-opacity:1;"
+         offset="0"
+         id="stop4001" />
+      <stop
+         style="stop-color:#ffffff;stop-opacity:0;"
+         offset="1"
+         id="stop4003" />
+    </linearGradient>
+    <linearGradient
+       id="linearGradient3890">
+      <stop
+         style="stop-color:#ffffff;stop-opacity:1;"
+         offset="0"
+         id="stop3892" />
+      <stop
+         style="stop-color:#ffffff;stop-opacity:0;"
+         offset="1"
+         id="stop3894" />
+    </linearGradient>
+    <linearGradient
+       id="linearGradient3880">
+      <stop
+         style="stop-color:#eb7400;stop-opacity:1;"
+         offset="0"
+         id="stop3882" />
+      <stop
+         style="stop-color:#f7b06a;stop-opacity:1;"
+         offset="1"
+         id="stop3884" />
+    </linearGradient>
+    <linearGradient
+       id="linearGradient4011">
+      <stop
+         style="stop-color:#042dc8;stop-opacity:1;"
+         offset="0"
+         id="stop4013" />
+      <stop
+         style="stop-color:#4260d5;stop-opacity:1;"
+         offset="1"
+         id="stop4015" />
+    </linearGradient>
+    <linearGradient
+       id="linearGradient3879">
+      <stop
+         style="stop-color:#ffffff;stop-opacity:0.90598291;"
+         offset="0"
+         id="stop3881" />
+      <stop
+         style="stop-color:#ffffff;stop-opacity:0;"
+         offset="1"
+         id="stop3883" />
+    </linearGradient>
+    <linearGradient
+       id="linearGradient3869">
+      <stop
+         style="stop-color:#c95000;stop-opacity:1;"
+         offset="0"
+         id="stop3871" />
+      <stop
+         style="stop-color:#ff9e5e;stop-opacity:1;"
+         offset="1"
+         id="stop3873" />
+    </linearGradient>
+    <linearGradient
+       id="linearGradient3861">
+      <stop
+         style="stop-color:#f06000;stop-opacity:1;"
+         offset="0"
+         id="stop3863" />
+      <stop
+         style="stop-color:#ffccaa;stop-opacity:1;"
+         offset="1"
+         id="stop3865" />
+    </linearGradient>
+    <linearGradient
+       id="linearGradient3826">
+      <stop
+         style="stop-color:#ff6600;stop-opacity:1;"
+         offset="0"
+         id="stop3828" />
+      <stop
+         style="stop-color:#ff893b;stop-opacity:1;"
+         offset="1"
+         id="stop3830" />
+    </linearGradient>
+    <linearGradient
+       id="linearGradient3879-6">
+      <stop
+         style="stop-color:#ffffff;stop-opacity:0.90598291;"
+         offset="0"
+         id="stop3881-4" />
+      <stop
+         style="stop-color:#ffffff;stop-opacity:0;"
+         offset="1"
+         id="stop3883-7" />
+    </linearGradient>
+    <linearGradient
+       id="linearGradient3869-5">
+      <stop
+         style="stop-color:#c95000;stop-opacity:1;"
+         offset="0"
+         id="stop3871-9" />
+      <stop
+         style="stop-color:#ff9e5e;stop-opacity:1;"
+         offset="1"
+         id="stop3873-4" />
+    </linearGradient>
+    <linearGradient
+       inkscape:collect="always"
+       xlink:href="#linearGradient3879-4"
+       id="linearGradient3885-6"
+       x1="76.025352"
+       y1="124.8497"
+       x2="75.874107"
+       y2="143.03978"
+       gradientUnits="userSpaceOnUse" />
+    <linearGradient
+       id="linearGradient3879-4">
+      <stop
+         style="stop-color:#ffffff;stop-opacity:0.93162394;"
+         offset="0"
+         id="stop3881-6" />
+      <stop
+         style="stop-color:#ffffff;stop-opacity:0;"
+         offset="1"
+         id="stop3883-74" />
+    </linearGradient>
+    <linearGradient
+       id="linearGradient3869-2">
+      <stop
+         style="stop-color:#c95000;stop-opacity:1;"
+         offset="0"
+         id="stop3871-99" />
+      <stop
+         style="stop-color:#ff9e5e;stop-opacity:1;"
+         offset="1"
+         id="stop3873-6" />
+    </linearGradient>
+    <radialGradient
+       inkscape:collect="always"
+       xlink:href="#linearGradient4011"
+       id="radialGradient4017"
+       cx="66.639"
+       cy="93.096375"
+       fx="66.639"
+       fy="93.096375"
+       r="11.515625"
+       gradientTransform="matrix(0.23244854,1.600893,-1.0124495,0.14700695,145.40424,-26.300303)"
+       gradientUnits="userSpaceOnUse" />
+    <linearGradient
+       inkscape:collect="always"
+       xlink:href="#linearGradient3879-4-7"
+       id="linearGradient3885-6-2"
+       x1="76.025352"
+       y1="124.8497"
+       x2="75.874107"
+       y2="143.03978"
+       gradientUnits="userSpaceOnUse" />
+    <linearGradient
+       id="linearGradient3879-4-7">
+      <stop
+         style="stop-color:#ffffff;stop-opacity:0.93162394;"
+         offset="0"
+         id="stop3881-6-7" />
+      <stop
+         style="stop-color:#ffffff;stop-opacity:0;"
+         offset="1"
+         id="stop3883-74-6" />
+    </linearGradient>
+    <radialGradient
+       inkscape:collect="always"
+       xlink:href="#linearGradient4011-5"
+       id="radialGradient4017-7"
+       cx="66.639"
+       cy="93.096375"
+       fx="66.639"
+       fy="93.096375"
+       r="11.515625"
+       gradientTransform="matrix(0.99779178,6.8718773,-4.3459674,0.6310314,452.75975,-225.98471)"
+       gradientUnits="userSpaceOnUse" />
+    <linearGradient
+       id="linearGradient4011-5">
+      <stop
+         style="stop-color:#042dc8;stop-opacity:1;"
+         offset="0"
+         id="stop4013-1" />
+      <stop
+         style="stop-color:#4260d5;stop-opacity:1;"
+         offset="1"
+         id="stop4015-3" />
+    </linearGradient>
+    <linearGradient
+       inkscape:collect="always"
+       xlink:href="#linearGradient3879-4-75"
+       id="linearGradient3885-6-8"
+       x1="76.025352"
+       y1="124.8497"
+       x2="75.874107"
+       y2="143.03978"
+       gradientUnits="userSpaceOnUse" />
+    <linearGradient
+       id="linearGradient3879-4-75">
+      <stop
+         style="stop-color:#ffffff;stop-opacity:0.93162394;"
+         offset="0"
+         id="stop3881-6-1" />
+      <stop
+         style="stop-color:#ffffff;stop-opacity:0;"
+         offset="1"
+         id="stop3883-74-4" />
+    </linearGradient>
+    <radialGradient
+       inkscape:collect="always"
+       xlink:href="#linearGradient4011-0"
+       id="radialGradient4017-5"
+       cx="66.639"
+       cy="93.096375"
+       fx="66.639"
+       fy="93.096375"
+       r="11.515625"
+       gradientTransform="matrix(0.23244854,1.600893,-1.0124495,0.14700695,146.34996,53.681728)"
+       gradientUnits="userSpaceOnUse" />
+    <linearGradient
+       id="linearGradient4011-0">
+      <stop
+         style="stop-color:#042dc8;stop-opacity:1;"
+         offset="0"
+         id="stop4013-4" />
+      <stop
+         style="stop-color:#4260d5;stop-opacity:1;"
+         offset="1"
+         id="stop4015-0" />
+    </linearGradient>
+    <linearGradient
+       inkscape:collect="always"
+       xlink:href="#linearGradient4011-0"
+       id="linearGradient4117"
+       x1="107.03001"
+       y1="189.72537"
+       x2="107.18476"
+       y2="173.47537"
+       gradientUnits="userSpaceOnUse" />
+    <linearGradient
+       inkscape:collect="always"
+       xlink:href="#linearGradient3879-4-7-2"
+       id="linearGradient3885-6-2-8"
+       x1="76.025352"
+       y1="124.8497"
+       x2="75.874107"
+       y2="143.03978"
+       gradientUnits="userSpaceOnUse" />
+    <linearGradient
+       id="linearGradient3879-4-7-2">
+      <stop
+         style="stop-color:#ffffff;stop-opacity:0.93162394;"
+         offset="0"
+         id="stop3881-6-7-9" />
+      <stop
+         style="stop-color:#ffffff;stop-opacity:0;"
+         offset="1"
+         id="stop3883-74-6-9" />
+    </linearGradient>
+    <radialGradient
+       inkscape:collect="always"
+       xlink:href="#linearGradient4011-5-1"
+       id="radialGradient4017-7-9"
+       cx="66.639"
+       cy="93.096375"
+       fx="66.639"
+       fy="93.096375"
+       r="11.515625"
+       gradientTransform="matrix(0.99779178,6.8718773,-4.3459674,0.6310314,448.94742,-406.99277)"
+       gradientUnits="userSpaceOnUse" />
+    <linearGradient
+       id="linearGradient4011-5-1">
+      <stop
+         style="stop-color:#042dc8;stop-opacity:1;"
+         offset="0"
+         id="stop4013-1-9" />
+      <stop
+         style="stop-color:#4260d5;stop-opacity:1;"
+         offset="1"
+         id="stop4015-3-8" />
+    </linearGradient>
+    <linearGradient
+       inkscape:collect="always"
+       xlink:href="#linearGradient3879-4-7-2-7"
+       id="linearGradient3885-6-2-8-0"
+       x1="76.025352"
+       y1="124.8497"
+       x2="75.874107"
+       y2="143.03978"
+       gradientUnits="userSpaceOnUse" />
+    <linearGradient
+       id="linearGradient3879-4-7-2-7">
+      <stop
+         style="stop-color:#ffffff;stop-opacity:0.93162394;"
+         offset="0"
+         id="stop3881-6-7-9-3" />
+      <stop
+         style="stop-color:#ffffff;stop-opacity:0;"
+         offset="1"
+         id="stop3883-74-6-9-6" />
+    </linearGradient>
+    <radialGradient
+       inkscape:collect="always"
+       xlink:href="#linearGradient4011-5-1-5"
+       id="radialGradient4017-7-9-5"
+       cx="66.639"
+       cy="93.096375"
+       fx="66.639"
+       fy="93.096375"
+       r="11.515625"
+       gradientTransform="matrix(0.55965334,3.8543806,-2.4376181,0.3539404,454.75182,-145.44353)"
+       gradientUnits="userSpaceOnUse" />
+    <linearGradient
+       id="linearGradient4011-5-1-5">
+      <stop
+         style="stop-color:#042dc8;stop-opacity:1;"
+         offset="0"
+         id="stop4013-1-9-6" />
+      <stop
+         style="stop-color:#4260d5;stop-opacity:1;"
+         offset="1"
+         id="stop4015-3-8-9" />
+    </linearGradient>
+    <linearGradient
+       inkscape:collect="always"
+       xlink:href="#linearGradient3879-4-7-2-4"
+       id="linearGradient3885-6-2-8-4"
+       x1="76.025352"
+       y1="124.8497"
+       x2="75.874107"
+       y2="143.03978"
+       gradientUnits="userSpaceOnUse" />
+    <linearGradient
+       id="linearGradient3879-4-7-2-4">
+      <stop
+         style="stop-color:#ffffff;stop-opacity:0.93162394;"
+         offset="0"
+         id="stop3881-6-7-9-9" />
+      <stop
+         style="stop-color:#ffffff;stop-opacity:0;"
+         offset="1"
+         id="stop3883-74-6-9-3" />
+    </linearGradient>
+    <radialGradient
+       inkscape:collect="always"
+       xlink:href="#linearGradient4011-5-1-7"
+       id="radialGradient4017-7-9-7"
+       cx="66.639"
+       cy="93.096375"
+       fx="66.639"
+       fy="93.096375"
+       r="11.515625"
+       gradientTransform="matrix(0.26837158,1.8482981,-1.1689154,0.16972569,466.57614,26.180822)"
+       gradientUnits="userSpaceOnUse" />
+    <linearGradient
+       id="linearGradient4011-5-1-7">
+      <stop
+         style="stop-color:#042dc8;stop-opacity:1;"
+         offset="0"
+         id="stop4013-1-9-1" />
+      <stop
+         style="stop-color:#4260d5;stop-opacity:1;"
+         offset="1"
+         id="stop4015-3-8-5" />
+    </linearGradient>
+    <linearGradient
+       id="linearGradient3879-4-7-2-0">
+      <stop
+         style="stop-color:#ffffff;stop-opacity:0.93162394;"
+         offset="0"
+         id="stop3881-6-7-9-7" />
+      <stop
+         style="stop-color:#ffffff;stop-opacity:0;"
+         offset="1"
+         id="stop3883-74-6-9-8" />
+    </linearGradient>
+    <linearGradient
+       id="linearGradient4011-5-1-55">
+      <stop
+         style="stop-color:#000a30;stop-opacity:1;"
+         offset="0"
+         id="stop4013-1-9-8" />
+      <stop
+         style="stop-color:#4260d5;stop-opacity:1;"
+         offset="1"
+         id="stop4015-3-8-3" />
+    </linearGradient>
+    <linearGradient
+       id="linearGradient3890-9">
+      <stop
+         style="stop-color:#ffffff;stop-opacity:1;"
+         offset="0"
+         id="stop3892-0" />
+      <stop
+         style="stop-color:#ffffff;stop-opacity:0;"
+         offset="1"
+         id="stop3894-9" />
+    </linearGradient>
+    <linearGradient
+       id="linearGradient3880-4">
+      <stop
+         style="stop-color:#eb7400;stop-opacity:1;"
+         offset="0"
+         id="stop3882-5" />
+      <stop
+         style="stop-color:#f7b06a;stop-opacity:1;"
+         offset="1"
+         id="stop3884-1" />
+    </linearGradient>
+    <linearGradient
+       id="linearGradient3999-7">
+      <stop
+         style="stop-color:#fff7f2;stop-opacity:1;"
+         offset="0"
+         id="stop4001-9" />
+      <stop
+         style="stop-color:#ffffff;stop-opacity:0;"
+         offset="1"
+         id="stop4003-4" />
+    </linearGradient>
+    <linearGradient
+       id="linearGradient4007-9">
+      <stop
+         style="stop-color:#ff6600;stop-opacity:1;"
+         offset="0"
+         id="stop4009-1" />
+      <stop
+         style="stop-color:#ff9148;stop-opacity:1;"
+         offset="1"
+         id="stop4011-9" />
+    </linearGradient>
+    <linearGradient
+       id="linearGradient4007-9-5">
+      <stop
+         style="stop-color:#ff6600;stop-opacity:1;"
+         offset="0"
+         id="stop4009-1-9" />
+      <stop
+         style="stop-color:#ff9148;stop-opacity:1;"
+         offset="1"
+         id="stop4011-9-5" />
+    </linearGradient>
+    <linearGradient
+       id="linearGradient3999-7-1">
+      <stop
+         style="stop-color:#fff7f2;stop-opacity:1;"
+         offset="0"
+         id="stop4001-9-1" />
+      <stop
+         style="stop-color:#ffffff;stop-opacity:0;"
+         offset="1"
+         id="stop4003-4-4" />
+    </linearGradient>
+    <linearGradient
+       id="linearGradient4007-9-5-3">
+      <stop
+         style="stop-color:#ff6600;stop-opacity:1;"
+         offset="0"
+         id="stop4009-1-9-3" />
+      <stop
+         style="stop-color:#ff9148;stop-opacity:1;"
+         offset="1"
+         id="stop4011-9-5-9" />
+    </linearGradient>
+    <linearGradient
+       id="linearGradient3999-7-1-4">
+      <stop
+         style="stop-color:#fff7f2;stop-opacity:1;"
+         offset="0"
+         id="stop4001-9-1-4" />
+      <stop
+         style="stop-color:#ffffff;stop-opacity:0;"
+         offset="1"
+         id="stop4003-4-4-4" />
+    </linearGradient>
+    <linearGradient
+       id="linearGradient3879-4-7-2-3">
+      <stop
+         style="stop-color:#ffffff;stop-opacity:0.93162394;"
+         offset="0"
+         id="stop3881-6-7-9-1" />
+      <stop
+         style="stop-color:#ffffff;stop-opacity:0;"
+         offset="1"
+         id="stop3883-74-6-9-87" />
+    </linearGradient>
+    <linearGradient
+       id="linearGradient4011-5-1-1">
+      <stop
+         style="stop-color:#fde8a1;stop-opacity:1;"
+         offset="0"
+         id="stop4013-1-9-63" />
+      <stop
+         style="stop-color:#2947b9;stop-opacity:1;"
+         offset="1"
+         id="stop4015-3-8-8" />
+    </linearGradient>
+    <linearGradient
+       inkscape:collect="always"
+       xlink:href="#linearGradient4466"
+       id="linearGradient4472"
+       x1="161.7561"
+       y1="540.72662"
+       x2="161.7561"
+       y2="579.80206"
+       gradientUnits="userSpaceOnUse" />
+    <radialGradient
+       inkscape:collect="always"
+       xlink:href="#linearGradient4321"
+       id="radialGradient4474"
+       cx="130.8242"
+       cy="575.27838"
+       fx="130.8242"
+       fy="575.27838"
+       r="49.498173"
+       gradientTransform="matrix(0.95670828,0.96684666,-0.72623533,0.71862001,423.45109,35.05138)"
+       gradientUnits="userSpaceOnUse" />
+    <linearGradient
+       inkscape:collect="always"
+       xlink:href="#linearGradient4466-5"
+       id="linearGradient4472-9"
+       x1="161.7561"
+       y1="540.72662"
+       x2="161.7561"
+       y2="579.80206"
+       gradientUnits="userSpaceOnUse" />
+    <linearGradient
+       id="linearGradient4466-5">
+      <stop
+         style="stop-color:#ffffff;stop-opacity:1;"
+         offset="0"
+         id="stop4468-2" />
+      <stop
+         style="stop-color:#ffffff;stop-opacity:0;"
+         offset="1"
+         id="stop4470-3" />
+    </linearGradient>
+    <radialGradient
+       inkscape:collect="always"
+       xlink:href="#linearGradient4321-0"
+       id="radialGradient4474-6"
+       cx="130.8242"
+       cy="575.27838"
+       fx="130.8242"
+       fy="575.27838"
+       r="49.498173"
+       gradientTransform="matrix(0.95670828,0.96684666,-0.72623533,0.71862001,442.64399,170.9169)"
+       gradientUnits="userSpaceOnUse" />
+    <linearGradient
+       id="linearGradient4321-0">
+      <stop
+         style="stop-color:#ff6702;stop-opacity:1;"
+         offset="0"
+         id="stop4323-3" />
+      <stop
+         style="stop-color:#ff9a55;stop-opacity:1;"
+         offset="1"
+         id="stop4325-1" />
+    </linearGradient>
+    <linearGradient
+       id="linearGradient4466-5-5">
+      <stop
+         style="stop-color:#ffffff;stop-opacity:1;"
+         offset="0"
+         id="stop4468-2-9" />
+      <stop
+         style="stop-color:#ffffff;stop-opacity:0;"
+         offset="1"
+         id="stop4470-3-4" />
+    </linearGradient>
+    <linearGradient
+       id="linearGradient4321-0-0">
+      <stop
+         style="stop-color:#ff6702;stop-opacity:1;"
+         offset="0"
+         id="stop4323-3-9" />
+      <stop
+         style="stop-color:#ff9a55;stop-opacity:1;"
+         offset="1"
+         id="stop4325-1-1" />
+    </linearGradient>
+    <linearGradient
+       id="linearGradient4466-5-9">
+      <stop
+         style="stop-color:#ffffff;stop-opacity:1;"
+         offset="0"
+         id="stop4468-2-7" />
+      <stop
+         style="stop-color:#ffffff;stop-opacity:0;"
+         offset="1"
+         id="stop4470-3-7" />
+    </linearGradient>
+    <linearGradient
+       id="linearGradient4321-0-7">
+      <stop
+         style="stop-color:#ff6702;stop-opacity:1;"
+         offset="0"
+         id="stop4323-3-3" />
+      <stop
+         style="stop-color:#ff9a55;stop-opacity:1;"
+         offset="1"
+         id="stop4325-1-6" />
+    </linearGradient>
+    <linearGradient
+       inkscape:collect="always"
+       xlink:href="#linearGradient4431"
+       id="linearGradient4437"
+       x1="142.81854"
+       y1="831.52283"
+       x2="142.81854"
+       y2="878.90735"
+       gradientUnits="userSpaceOnUse" />
+    <radialGradient
+       inkscape:collect="always"
+       xlink:href="#linearGradient4467"
+       id="radialGradient4475"
+       cx="116.51958"
+       cy="98.282051"
+       fx="116.51958"
+       fy="98.282051"
+       r="55.859375"
+       gradientTransform="matrix(0.97442557,1.5088911,-0.83559154,0.53961599,79.641615,-130.28522)"
+       gradientUnits="userSpaceOnUse" />
+    <linearGradient
+       inkscape:collect="always"
+       xlink:href="#linearGradient4431-3"
+       id="linearGradient4437-6"
+       x1="142.81854"
+       y1="831.52283"
+       x2="142.81854"
+       y2="878.90735"
+       gradientUnits="userSpaceOnUse" />
+    <linearGradient
+       id="linearGradient4431-3">
+      <stop
+         style="stop-color:#ffffff;stop-opacity:1;"
+         offset="0"
+         id="stop4433-0" />
+      <stop
+         style="stop-color:#ffffff;stop-opacity:0;"
+         offset="1"
+         id="stop4435-2" />
+    </linearGradient>
+    <radialGradient
+       inkscape:collect="always"
+       xlink:href="#linearGradient4467-7"
+       id="radialGradient4475-0"
+       cx="116.51958"
+       cy="98.282051"
+       fx="116.51958"
+       fy="98.282051"
+       r="55.859375"
+       gradientTransform="matrix(0.97442557,1.5088911,-0.83559154,0.53961599,225.10358,63.664066)"
+       gradientUnits="userSpaceOnUse" />
+    <linearGradient
+       id="linearGradient4467-7">
+      <stop
+         style="stop-color:#000000;stop-opacity:1;"
+         offset="0"
+         id="stop4469-4" />
+      <stop
+         style="stop-color:#000000;stop-opacity:0.8974359;"
+         offset="1"
+         id="stop4471-7" />
+    </linearGradient>
+    <radialGradient
+       inkscape:collect="always"
+       xlink:href="#linearGradient4467"
+       id="radialGradient3262"
+       gradientUnits="userSpaceOnUse"
+       gradientTransform="matrix(0.97442557,1.5088911,-0.83559154,0.53961599,59.641615,-150.28522)"
+       cx="116.51958"
+       cy="98.282051"
+       fx="116.51958"
+       fy="98.282051"
+       r="55.859375" />
+    <linearGradient
+       inkscape:collect="always"
+       xlink:href="#linearGradient4431"
+       id="linearGradient3264"
+       gradientUnits="userSpaceOnUse"
+       x1="142.81854"
+       y1="831.52283"
+       x2="142.81854"
+       y2="878.90735" />
+  </defs>
+  <sodipodi:namedview
+     id="base"
+     pagecolor="#ffffff"
+     bordercolor="#666666"
+     borderopacity="1.0"
+     inkscape:pageopacity="0.0"
+     inkscape:pageshadow="2"
+     inkscape:zoom="5.6"
+     inkscape:cx="31.144191"
+     inkscape:cy="38.335716"
+     inkscape:document-units="px"
+     inkscape:current-layer="layer1"
+     showgrid="false"
+     showguides="false"
+     inkscape:guide-bbox="true"
+     inkscape:window-width="1920"
+     inkscape:window-height="1056"
+     inkscape:window-x="0"
+     inkscape:window-y="0"
+     inkscape:window-maximized="1"
+     fit-margin-top="0"
+     fit-margin-right="0"
+     fit-margin-bottom="0"
+     fit-margin-left="0">
+    <sodipodi:guide
+       orientation="0,1"
+       position="72.563745,37.346999"
+       id="guide2989" />
+    <sodipodi:guide
+       orientation="0,1"
+       position="74.584055,7.2949693"
+       id="guide2991" />
+    <sodipodi:guide
+       orientation="1,0"
+       position="71.048515,20.426949"
+       id="guide2993" />
+    <sodipodi:guide
+       orientation="1,0"
+       position="97.817565,20.174409"
+       id="guide2995" />
+    <sodipodi:guide
+       orientation="1,0"
+       position="71.048515,20.426949"
+       id="guide3017" />
+    <inkscape:grid
+       type="xygrid"
+       id="grid3019"
+       empspacing="5"
+       visible="true"
+       enabled="true"
+       snapvisiblegridlinesonly="true" />
+    <sodipodi:guide
+       orientation="1,0"
+       position="105.6589,-12.377861"
+       id="guide3021" />
+    <sodipodi:guide
+       orientation="1,0"
+       position="126.6589,-16.377861"
+       id="guide3023" />
+    <sodipodi:guide
+       orientation="0,1"
+       position="110.6589,-3.3778607"
+       id="guide3025" />
+    <sodipodi:guide
+       orientation="0,1"
+       position="110.6589,-27.377861"
+       id="guide3027" />
+    <sodipodi:guide
+       orientation="0,1"
+       position="19.658895,-35.37786"
+       id="guide3810" />
+    <sodipodi:guide
+       orientation="0,1"
+       position="21.658895,-70.377861"
+       id="guide3814" />
+    <sodipodi:guide
+       orientation="0,1"
+       position="2.301752,-9.4850007"
+       id="guide3856" />
+    <sodipodi:guide
+       orientation="0,1"
+       position="26.601806,-9.4850007"
+       id="guide3887" />
+    <sodipodi:guide
+       orientation="0,1"
+       position="44.658283,37.346999"
+       id="guide4019" />
+    <sodipodi:guide
+       orientation="0,1"
+       position="126.6589,-27.377861"
+       id="guide4481" />
+    <sodipodi:guide
+       orientation="0,1"
+       position="159.08747,-213.94929"
+       id="guide4483" />
+  </sodipodi:namedview>
+  <metadata
+     id="metadata7">
+    <rdf:RDF>
+      <cc:Work
+         rdf:about="">
+        <dc:format>image/svg+xml</dc:format>
+        <dc:type
+           rdf:resource="http://purl.org/dc/dcmitype/StillImage" />
+        <dc:title />
+      </cc:Work>
+    </rdf:RDF>
+  </metadata>
+  <g
+     inkscape:label="Layer 1"
+     inkscape:groupmode="layer"
+     id="layer1"
+     transform="translate(-42.341105,-35.859333)">
+    <path
+       inkscape:connector-curvature="0"
+       style="fill:url(#radialGradient3262);fill-opacity:1;stroke:none"
+       d="m 98.2161,35.859333 c -30.850815,0 -55.874995,24.87043 -55.874995,55.562497 0,30.69207 25.02418,55.56249 55.874995,55.56249 10.09496,0 19.54625,-2.6525 27.71875,-7.3125 l 2.90625,7.3125 2.40625,0 20,0 0.125,0 -8.8125,-21.78124 c 7.21537,-9.3622 11.5,-21.07236 11.5,-33.78125 0,-30.692067 -24.99293,-55.562497 -55.84375,-55.562497 z"
+       id="path3834-7-7-2-5-5-0-5-4" />
+    <path
+       sodipodi:type="arc"
+       style="fill:url(#linearGradient3264);fill-opacity:1;stroke:none"
+       id="path3661"
+       sodipodi:cx="142.5"
+       sodipodi:cy="856.29077"
+       sodipodi:rx="35.357143"
+       sodipodi:ry="24.642857"
+       d="m 177.85714,856.29077 c 0,13.60988 -15.82993,24.64286 -35.35714,24.64286 -19.52721,0 -35.35714,-11.03298 -35.35714,-24.64286 0,-13.60987 15.82993,-24.64286 35.35714,-24.64286 19.52721,0 35.35714,11.03299 35.35714,24.64286 z"
+       transform="matrix(1.0465082,0,0,1.2920463,-51.641235,-1036.8612)" />
+    <path
+       sodipodi:type="arc"
+       style="fill:#000000;fill-opacity:1;stroke:none"
+       id="path4442"
+       sodipodi:cx="115.66247"
+       sodipodi:cy="856.39258"
+       sodipodi:rx="6.5659914"
+       sodipodi:ry="6.5659914"
+       d="m 122.22846,856.39258 c 0,3.6263 -2.9397,6.56599 -6.56599,6.56599 -3.6263,0 -6.56599,-2.93969 -6.56599,-6.56599 0,-3.6263 2.93969,-6.56599 6.56599,-6.56599 3.62629,0 6.56599,2.93969 6.56599,6.56599 z"
+       transform="translate(-12.329975,-797.60351)" />
+    <rect
+       style="fill:#000000;fill-opacity:1;stroke:none"
+       id="rect4444"
+       width="37.643608"
+       height="5.5005069"
+       x="101.55376"
+       y="48.297417"
+       transform="matrix(0.98974903,0.14281759,-0.18972639,0.981837,0,0)" />
+    <rect
+       style="fill:#000000;fill-opacity:1;stroke:none"
+       id="rect4446"
+       width="6.5659914"
+       height="2.9041886"
+       x="124.92451"
+       y="69.016899" />
+    <path
+       style="fill:#ff6600;fill-opacity:1"
+       d="m 83.38797,45.010543 c -0.057,2.18531 -3.865755,0.28296 -4.031245,2.78125 -4.22387,-1.88052 0.32884,2.87188 -0.0937,3.3125 l -0.0312,0 -0.3125,-0.0312 c -0.20386,-0.0728 -0.49977,-0.19904 -0.9375,-0.46875 -2.9499,2.35025 -3.02157,7.23369 -6.0625,9.9375 -1.99467,4.30504 -2.47977,8.98337 -3.9375,13.46875 -0.71796,4.30292 -1.34881,8.597857 -0.28125,12.906247 0.32053,3.50159 -0.68919,8.25865 2.5,10.71875 4.72728,3.88304 8.65575,8.79543 12.624995,13.46875 6.21914,7.65333 11.72948,15.86251 16.59375,24.4375 0.32431,-2.11756 1.10954,4.26459 2.53125,4.6875 -0.49161,-3.19231 -1.13213,-8.26328 -1.4375,-12.1875 -1.5814,-10.2909 -6.65305,-19.64903 -8.5625,-29.84375 -0.0587,-0.43037 -0.12809,-0.87203 -0.1875,-1.3125 l 0,-1.28125 -0.15625,0 c -0.62551,-5.04297 -0.8504,-10.46546 2.8125,-14.40625 3.73968,-3.772097 9.30633,-4.722447 13.8125,-7.343747 1.00194,-0.59119 2.04921,-1.07174 3.125,-1.40625 0.009,-0.003 0.0228,0.003 0.0312,0 3.11701,-0.96341 6.44862,-0.93323 9.6875,-0.40625 0.0479,0.008 0.10841,0.0233 0.15625,0.0312 0.29455,0.0493 0.61389,0.099 0.90625,0.15625 2.37136,0.21133 7.14463,1.13687 8,-0.5 -3.27225,-2.78631 -7.98526,-2.59211 -11.96875,-3.6875 -0.63059,-0.11469 -1.41182,-0.24041 -2.1875,-0.3125 l -3.90625,-0.875 -0.96875,-0.25 0,0.0312 -13.96875,-2.71875 c -0.22212,-0.20226 -0.46434,-0.40933 -0.6875,-0.5625 l 13.625,1.6875 0,-0.0625 c 0.48011,0.10699 0.95576,0.19361 1.4375,0.25 l 0,0.0312 9.625,1.78125 c 1.66103,0.61952 3.4322,1.08374 5.09375,1.1875 2.74263,0.39907 6.22526,4.49092 7.125,4.6875 -0.44096,-4.307 -4.7422,-6.23586 -8.3125,-7.5 -4.1712,-2.02803 -10.4023,-1.95417 -11.0625,-7.5625 -0.1756,-0.39076 -0.34902,-0.78118 -0.5625,-1.15625 l -1.625,-2.15625 0.0625,-0.0312 c -2.21724,-2.61691 -5.34011,-4.52196 -8.65625,-5.25 -3.2914,-1.13611 -6.98773,-2.2671 -10.46875,-2.71875 -1.18132,3.47826 -2.5031,-2.75561 -5.34375,-0.90625 -2.48996,0.29488 -2.14614,0.95256 -4,-0.625 z m 17.90625,10.15625 c 0.90187,-0.0238 1.93277,0.14208 2.96875,0.5 2.76259,0.95447 4.56151,2.96523 4.03125,4.5 -0.53026,1.53477 -3.20616,1.98572 -5.96875,1.03125 -2.76259,-0.95447 -4.5615,-2.93398 -4.03125,-4.46875 0.33141,-0.95923 1.49689,-1.52281 3,-1.5625 z"
+       id="path3499-9-7"
+       inkscape:connector-curvature="0" />
+  </g>
+</svg>
diff --git a/install/share/qemu/s390-ccw.img b/install/share/qemu/s390-ccw.img
new file mode 100644
index 0000000..e3ea0d5
Binary files /dev/null and b/install/share/qemu/s390-ccw.img differ
diff --git a/install/share/qemu/s390-zipl.rom b/install/share/qemu/s390-zipl.rom
new file mode 100644
index 0000000..3115128
Binary files /dev/null and b/install/share/qemu/s390-zipl.rom differ
diff --git a/install/share/qemu/sgabios.bin b/install/share/qemu/sgabios.bin
new file mode 100644
index 0000000..c3da4c3
Binary files /dev/null and b/install/share/qemu/sgabios.bin differ
diff --git a/install/share/qemu/slof.bin b/install/share/qemu/slof.bin
new file mode 100644
index 0000000..69b0a5d
Binary files /dev/null and b/install/share/qemu/slof.bin differ
diff --git a/install/share/qemu/spapr-rtas.bin b/install/share/qemu/spapr-rtas.bin
new file mode 100644
index 0000000..fc24c8e
Binary files /dev/null and b/install/share/qemu/spapr-rtas.bin differ
diff --git a/install/share/qemu/u-boot.e500 b/install/share/qemu/u-boot.e500
new file mode 100644
index 0000000..bdb2a5e
Binary files /dev/null and b/install/share/qemu/u-boot.e500 differ
diff --git a/install/share/qemu/vgabios-cirrus.bin b/install/share/qemu/vgabios-cirrus.bin
new file mode 100644
index 0000000..57a5f95
Binary files /dev/null and b/install/share/qemu/vgabios-cirrus.bin differ
diff --git a/install/share/qemu/vgabios-qxl.bin b/install/share/qemu/vgabios-qxl.bin
new file mode 100644
index 0000000..ed79993
Binary files /dev/null and b/install/share/qemu/vgabios-qxl.bin differ
diff --git a/install/share/qemu/vgabios-stdvga.bin b/install/share/qemu/vgabios-stdvga.bin
new file mode 100644
index 0000000..d3579b4
Binary files /dev/null and b/install/share/qemu/vgabios-stdvga.bin differ
diff --git a/install/share/qemu/vgabios-vmware.bin b/install/share/qemu/vgabios-vmware.bin
new file mode 100644
index 0000000..f89845e
Binary files /dev/null and b/install/share/qemu/vgabios-vmware.bin differ
diff --git a/install/share/qemu/vgabios.bin b/install/share/qemu/vgabios.bin
new file mode 100644
index 0000000..d3038f4
Binary files /dev/null and b/install/share/qemu/vgabios.bin differ
diff --git a/linux-3.18.20/arch/x86/syscalls/syscall_64.tbl b/linux-3.18.20/arch/x86/syscalls/syscall_64.tbl
index 281150b..ea83ceb 100644
--- a/linux-3.18.20/arch/x86/syscalls/syscall_64.tbl
+++ b/linux-3.18.20/arch/x86/syscalls/syscall_64.tbl
@@ -187,7 +187,7 @@
 178	64	query_module
 179	common	quotactl		sys_quotactl
 180	64	nfsservctl
-181	common	getpmsg
+181	common	prinfo                  sys_prinfo 
 182	common	putpmsg
 183	common	afs_syscall
 184	common	tuxcall
diff --git a/linux-3.18.20/include/linux/prinfo.h b/linux-3.18.20/include/linux/prinfo.h
new file mode 100644
index 0000000..7c654e0
--- /dev/null
+++ b/linux-3.18.20/include/linux/prinfo.h
@@ -0,0 +1,25 @@
+#ifndef _LINUX_PRINFO_H
+#define _LINUX_PRINFO_H
+
+#include <linux/types.h>
+#include <linux/unistd.h>
+
+struct prinfo {
+	long state;                  /* current state of process */
+	pid_t pid;                   /* process id (input) */
+	pid_t parent_pid;            /* process id of parent */
+	pid_t youngest_child_pid;    /* process id of youngest child */
+	pid_t younger_sibling_pid;   /* pid of the oldest among younger siblings */
+	pid_t older_sibling_pid;     /* pid of the youngest among older siblings */
+	unsigned long start_time;    /* process start time */
+	unsigned long user_time;     /* CPU time spent in user mode */
+	unsigned long sys_time;      /* CPU time spent in system mode */
+	unsigned long cutime;        /* total user time of children */
+	unsigned long cstime;        /* total system time of children */
+	long uid;                    /* user id of process owner */
+	char comm[16];               /* name of program executed */
+	unsigned long signal;        /* The set of pending signals */
+	unsigned long num_open_fds;  /* Number of open file descriptors */
+};
+
+#endif /* _LINUX_PRINFO_H */
diff --git a/linux-3.18.20/include/linux/syscalls.h b/linux-3.18.20/include/linux/syscalls.h
index bda9b81..a191243 100644
--- a/linux-3.18.20/include/linux/syscalls.h
+++ b/linux-3.18.20/include/linux/syscalls.h
@@ -65,6 +65,7 @@ struct old_linux_dirent;
 struct perf_event_attr;
 struct file_handle;
 struct sigaltstack;
+struct prinfo;
 union bpf_attr;
 
 #include <linux/types.h>
@@ -877,4 +878,7 @@ asmlinkage long sys_seccomp(unsigned int op, unsigned int flags,
 asmlinkage long sys_getrandom(char __user *buf, size_t count,
 			      unsigned int flags);
 asmlinkage long sys_bpf(int cmd, union bpf_attr *attr, unsigned int size);
+
+asmlinkage long sys_prinfo(struct prinfo *info);
+
 #endif
diff --git a/linux-3.18.20/kernel/Makefile b/linux-3.18.20/kernel/Makefile
index 17ea6d4..ffdbcf8 100644
--- a/linux-3.18.20/kernel/Makefile
+++ b/linux-3.18.20/kernel/Makefile
@@ -9,7 +9,7 @@ obj-y     = fork.o exec_domain.o panic.o \
 	    extable.o params.o \
 	    kthread.o sys_ni.o nsproxy.o \
 	    notifier.o ksysfs.o cred.o reboot.o \
-	    async.o range.o groups.o smpboot.o
+	    async.o range.o groups.o smpboot.o prinfo.o
 
 ifdef CONFIG_FUNCTION_TRACER
 # Do not trace debug files and internal ftrace files
diff --git a/linux-3.18.20/kernel/prinfo.c b/linux-3.18.20/kernel/prinfo.c
new file mode 100644
index 0000000..4eb49da
--- /dev/null
+++ b/linux-3.18.20/kernel/prinfo.c
@@ -0,0 +1,257 @@
+/*
+ * Authors: Wolf Honore (whonore), Peter Finn (pfinn2)
+ * Assignment: MP 2 CSC 456 Fall 2015
+ *
+ * Description:
+ *   This program implements the prinfo system call. It contains the defintion
+ *   for the system call itself as well as several helper functions.
+ */
+
+#include <asm/cputime.h>
+#include <asm/signal.h>
+#include <linux/fdtable.h>
+#include <linux/kernel.h>
+#include <linux/list.h>
+#include <linux/prinfo.h>
+#include <linux/syscalls.h>
+#include <linux/signal.h>
+#include <linux/slab.h>
+#include <linux/string.h>
+#include <linux/types.h>
+
+static int count_open_files(struct fdtable *fdt);
+static void sum_children_time(struct task_struct *task, struct prinfo *info);
+static unsigned long get_pending(struct task_struct *task);
+static unsigned long sigset_to_long(sigset_t set);
+
+/*
+ * Function: prinfo()
+ *
+ * Description:
+ *   This function is a system call that returns information about a given
+ *   process. This information includes:
+ *     - The state of the process
+ *     - The PIDs of the parent, youngest child, oldest among the younger
+ *       siblings, and youngest among the older siblings processes
+ *     - The process start time
+ *     - The CPU time spent in user and system mode as well as the total child
+ *       user and system times
+ *     - The user id of the process owner
+ *     - The name of the program
+ *     - The set of pending signals
+ *     - The number of open files
+ *
+ * Inputs:
+ *   info - A pointer to a struct provided by the user with the pid field
+ *          already set. prinfo uses the pid field to compute the rest of the
+ *          fields and then returns info back to the user.
+ *
+ * Outputs:
+ *   info - The pointer to the struct that the user provided is filled with
+ *          information about the requested process and returned to the user.
+ *
+ * Return value:
+ *   0 - Success
+ *   -EINVAL - The info struct is NULL or the requested PID is invalid.
+ *   -EFAULT - The memory pointed to by info is invalid and cannot be copied
+ *             from.
+ */
+SYSCALL_DEFINE1(prinfo, struct prinfo *, info)
+{
+	struct prinfo *kinfo;
+	struct task_struct *task;
+	struct files_struct *files;
+	struct fdtable *files_table;
+	pid_t pid;
+
+	if (info == NULL)
+		return -EINVAL;
+
+	/* Copy struct from user space */
+	kinfo = (struct prinfo *) kmalloc(sizeof(struct prinfo), GFP_KERNEL);
+	if (copy_from_user(kinfo, info, sizeof(struct prinfo)))
+		return -EFAULT;
+
+	pid = kinfo->pid;
+
+	if ((task = pid_task(find_vpid(pid), PIDTYPE_PID)) == NULL)
+		return -EINVAL;
+
+	/* State */
+	kinfo->state = task->state;
+
+	/* PIDs of parent, youngest child, and older and younger siblings */
+	kinfo->parent_pid = task->parent->pid;
+
+	kinfo->youngest_child_pid = list_first_entry(&task->children, struct task_struct, sibling)->pid;
+
+	/* Set PID to -1 if child does not exist */
+	if (kinfo->youngest_child_pid == 0)
+		kinfo->youngest_child_pid = -1;
+
+	kinfo->older_sibling_pid = list_prev_entry(task, sibling)->pid;
+	kinfo->younger_sibling_pid = list_next_entry(task, sibling)->pid;
+
+	/* Set PID to -1 if sibling does not exist */
+	if (kinfo->older_sibling_pid == 0)
+		kinfo->older_sibling_pid = -1;
+	if (kinfo->younger_sibling_pid == 0)
+		kinfo->younger_sibling_pid = -1;
+
+	/* Time stats */
+	kinfo->start_time = (unsigned long) task->start_time;
+	kinfo->user_time = cputime_to_nsecs(task->utime);
+	kinfo->sys_time = cputime_to_nsecs(task->stime);
+	sum_children_time(task, kinfo);
+
+	/* User ID */
+	kinfo->uid = task->real_cred->uid.val;
+
+	/* Program name */
+	strncpy(kinfo->comm, task->comm, 15);
+	kinfo->comm[15] = '\0';
+
+	/* Signals */
+	kinfo->signal = get_pending(task);
+
+	/* Open file descriptors */
+	files = get_files_struct(task);
+	files_table = files_fdtable(files);
+	kinfo->num_open_fds = count_open_files(files_table);
+
+	/* Copy struct back to user space */
+	if (copy_to_user(info, kinfo, sizeof(struct prinfo)))
+		return -EFAULT;
+
+	return 0;
+}
+
+/*
+ * Function: count_open_files()
+ *
+ * Description:
+ *   This function uses the open_fds field of the fdtable struct to count a
+ *   process' number of open file descriptors.
+ *
+ * Inputs:
+ *   fdt - The struct containing information about a processes' open files.
+ *
+ * Outputs: None
+ *
+ * Return value:
+ *   The current number of open files (ranges from 0 to the maximum number of
+ *   open files).
+ */
+static int count_open_files(struct fdtable *fdt)
+{
+	int max = fdt->max_fds;
+	long open_fs = *(fdt->open_fds);
+	int count = 0;
+	int i;
+
+	/* The i-th bit in open_fs represents whether file i is open */
+	for (i = 0; i < max; i++)
+		count += ((open_fs >> i) & 0x01);
+
+	return count;
+}
+
+/*
+ * Function: sum_children_time()
+ *
+ * Description:
+ *   This function sums the total user and system time of each of a process'
+ *   children.
+ *
+ * Inputs:
+ *   task - The struct containing information about a process including the
+ *          list of child processes.
+ *
+ * Outputs:
+ *   info - The struct in which the total user and system time of a process'
+ *          children is stored.
+ *
+ * Return value: None
+ */
+static void sum_children_time(struct task_struct *task, struct prinfo *info)
+{
+	struct task_struct *child;
+	struct list_head *child_list;
+
+	info->cutime = 0;
+	info->cstime = 0;
+
+	/* Loop through the list of children */
+	list_for_each(child_list, &task->children) {
+		child = list_entry(child_list, struct task_struct, sibling);
+		info->cutime += child->utime;
+		info->cstime += child->stime;
+	}
+
+	info->cutime = cputime_to_nsecs(info->cutime);
+	info->cstime = cputime_to_nsecs(info->cstime);
+}
+
+/*
+ * Function: get_pending()
+ *
+ * Description:
+ *   This function checks a process' list of pending signals and returns an
+ *   unsigned long number representing this list. Much of the code is copied
+ *   from the do_sigpending() function in kernel/signal.c.
+ *
+ * Inputs:
+ *   task - The struct containing information about a process including the
+ *          list of pending signals.
+ *
+ * Ouputs: None
+ *
+ * Return value:
+ *   An unsigned long number where the i-th bit represents whether signal i+1
+ *   is pending.
+ */
+static unsigned long get_pending(struct task_struct *task)
+{
+	sigset_t pending_set;
+
+	/* Combine the pending and shared_pending lists */
+	spin_lock_irq(&task->sighand->siglock);
+	sigorsets(&pending_set, &task->pending.signal, &task->signal->shared_pending.signal);
+	spin_unlock_irq(&task->sighand->siglock);
+
+	/* Keep only the signals that are currently blocked */
+	sigandsets(&pending_set, &task->blocked, &pending_set);
+
+	return sigset_to_long(pending_set);
+}
+
+/*
+ * Function: sigset_to_long()
+ *
+ * Description:
+ *   This function converts a set of signals stored in a sigset_t type variable
+ *   to an unsigned long number representing the same set.
+ *
+ * Inputs:
+ *   set - This is some set of signals.
+ *
+ * Outputs: None
+ *
+ * Return value:
+ *   An unsigned long number where the i-th bit represents whether signal i+1
+ *   is in the set of signals.
+ */
+static unsigned long sigset_to_long(sigset_t set)
+{
+	unsigned long signals;
+	int sig;
+
+	/* If signal i is in the set, set the i-th bit of signals to 1 */
+	signals = 0;
+	for (sig = 1; sig < _NSIG; sig++)
+		if (sigismember(&set, sig))
+			signals |= sigmask(sig);
+
+	return signals;
+}
+
diff --git a/openwrt-15.05-x86-generic-combined-ext4.img b/openwrt-15.05-x86-generic-combined-ext4.img
new file mode 100644
index 0000000..b7c43b9
Binary files /dev/null and b/openwrt-15.05-x86-generic-combined-ext4.img differ
diff --git a/qemu-install.tar.gz b/qemu-install.tar.gz
new file mode 100644
index 0000000..140fff7
Binary files /dev/null and b/qemu-install.tar.gz differ
diff --git a/runqemu.sh b/runqemu.sh
index ba5d34e..2a959db 100755
--- a/runqemu.sh
+++ b/runqemu.sh
@@ -9,5 +9,5 @@ then
 	./install/bin/qemu-system-x86_64 -m 64M -L ./install/qemu/share/qemu/ -nographic -hda ./openwrt-15.05-x86-generic-combined-ext4.img -fda fat:floppy:`pwd`/floppy
 else
 	echo "Running QEMU with your kernel at $1"
-	./install/bin/qemu-system-x86_64 -m 64M -L ./install/qemu/share/qemu/ -nographic -kernel $1 -hda ./openwrt-15.05-x86-generic-combined-ext4.img -append "root=PARTUUID=076b2e55-02 rootfstype=ext4 rootwait console=tty0 console=ttyS0,38400n8 noinitrd" -fda fat:floppy:`pwd`/floppy
+	./install/bin/qemu-system-x86_64 -m 64M -L ./install/qemu/share/qemu/ -nographic -kernel $1 -hda ./openwrt-15.05-x86-generic-combined-ext4.img -append "root=PARTUUID=076b2e55-02 rootfstype=ext4 rootwait console=tty0 console=ttyS0,38400n8 noinitrd" -fda fat:floppy:`pwd`/floppy -hdb floppy/test
 fi
diff --git a/start.sh b/start.sh
new file mode 100755
index 0000000..85088ed
--- /dev/null
+++ b/start.sh
@@ -0,0 +1,3 @@
+#!/bin/sh
+
+./runqemu.sh linux-3.18.20/arch/x86_64/boot/bzImage
